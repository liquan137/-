{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-websocket.js","webpack:///webpack/bootstrap f1a7d7f2b7c4bc7c5558","webpack:///./src/index.js","webpack:///./~/socket.io-client/lib/index.js","webpack:///./~/socket.io-client/lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./~/debug/browser.js","webpack:///./~/debug/debug.js","webpack:///./~/ms/index.js","webpack:///./~/socket.io-parser/index.js","webpack:///./~/json3/lib/json3.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/socket.io-parser/~/component-emitter/index.js","webpack:///./~/socket.io-parser/binary.js","webpack:///./~/isarray/index.js","webpack:///./~/socket.io-parser/is-buffer.js","webpack:///./~/socket.io-client/lib/manager.js","webpack:///./~/engine.io-client/index.js","webpack:///./~/engine.io-client/lib/index.js","webpack:///./~/engine.io-client/lib/socket.js","webpack:///./~/engine.io-client/lib/transports/index.js","webpack:///./~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/has-cors/index.js","webpack:///./~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/engine.io-client/lib/transports/polling.js","webpack:///./~/engine.io-client/lib/transport.js","webpack:///./~/engine.io-parser/lib/browser.js","webpack:///./~/engine.io-parser/lib/keys.js","webpack:///./~/engine.io-parser/~/has-binary/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/wtf-8/wtf-8.js","webpack:///./~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/blob/index.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/engine.io-client/lib/transports/websocket.js","webpack:///./~/indexof/index.js","webpack:///./~/parsejson/index.js","webpack:///./~/socket.io-client/lib/socket.js","webpack:///./~/component-emitter/index.js","webpack:///./~/to-array/index.js","webpack:///./~/socket.io-client/lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/has-binary/index.js","webpack:///./~/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","concat","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","_socket","_socket2","install","Vue","connection","opts","_Vue$mixin","socket","$socket","addListeners","_this","$options","conf","namespace","options","events","prefix","keys","forEach","func","bind","on","__binded","removeListeners","_this2","disconnect","off","mixin","version","indexOf","lookup","uri","undefined","io","parsed","url","source","path","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","debug","Manager","query","encodeQueryString","str","push","encodeURIComponent","join","parser","managers","protocol","connect","Socket","global","loc","location","host","charAt","test","parseuri","port","ipv6","href","re","parts","src","e","substring","replace","length","exec","authority","ipv6uri","useColors","document","documentElement","style","window","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","arguments","humanize","diff","color","Array","index","lastC","splice","log","Function","save","namespaces","storage","removeItem","load","r","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable","selectColor","prevColor","disabled","enabled","self","curr","Date","ms","prevTime","prev","coerce","format","formatter","val","logFn","split","len","skips","substr","names","disable","name","Error","stack","message","parse","n","parseFloat","type","y","d","h","s","short","Math","round","long","plural","floor","ceil","Encoder","encodeAsString","nsp","BINARY_EVENT","BINARY_ACK","attachments","data","json","encodeAsBinary","callback","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","packet","buffers","unshift","removeBlobs","Decoder","reconstructor","decodeString","Number","types","error","buf","next","tryParse","BinaryReconstructor","reconPack","ERROR","Emitter","isBuf","CONNECT","DISCONNECT","EVENT","ACK","encode","encoding","add","emit","base64","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","__WEBPACK_AMD_DEFINE_RESULT__","runInContext","context","has","undef","isSupported","serialized","stringifySupported","isExtended","toJSON","String","getClass","parseSupported","SyntaxError","TypeError","nativeJSON","isProperty","objectProto","toString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","result","parent","object","Properties","size","valueOf","isFunction","isConstructor","hasProperty","objectTypes","Escapes","92","34","8","12","10","13","9","leadingZeroes","toPaddedString","width","unicodePrefix","quote","useCharIndex","symbols","charCode","charCodeAt","serialize","properties","whitespace","indentation","className","date","time","hours","minutes","seconds","milliseconds","results","element","pop","filter","Index","Source","fromCharCode","Unescapes","47","98","116","110","102","114","abort","lex","begin","position","isSigned","get","hasMembers","update","walk","isLoader","function","freeExports","nodeType","freeGlobal","previousJSON","isRestored","JSON3","noConflict","webpackPolyfill","deprecate","paths","children","__webpack_amd_options__","addEventListener","event","_callbacks","once","removeListener","removeAllListeners","removeEventListener","callbacks","cb","listeners","hasListeners","isArray","_deconstructPacket","placeholder","_placeholder","num","newData","packetData","_reconstructPacket","_removeBlobs","curKey","containingObject","Blob","File","pendingBlobs","fileReader","FileReader","onload","readAsArrayBuffer","arr","Buffer","isBuffer","ArrayBuffer","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","readyState","connecting","lastPing","packetBuffer","encoder","decoder","autoConnect","open","eio","emitAll","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","err","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","encodedPackets","write","processPacketQueue","shift","subsLength","sub","reset","onclose","reason","delay","duration","onreconnect","attempt","hostname","secure","agent","parseqs","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","o","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","sid","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","msg","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","to","onOpen","l","onHandshake","setPing","code","filterUpgrades","onHeartbeat","ping","sendPacket","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","hasCORS","XDomainRequest","empty","Polling","Request","method","async","isBinary","create","unloadHandler","requests","inherit","request","doWrite","req","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","status","requestsCount","onSuccess","fromError","contentType","getResponseHeader","response","Uint8Array","ui8Arr","dataArray","idx","attachEvent","hasXHR2","yeast","doOpen","poll","onPause","total","decodePayload","doClose","packets","callbackfn","encodePayload","schema","b64","description","decodePacket","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","byteLength","buffer","encodeBlobAsArrayBuffer","fr","encodePacket","encodeBlob","dontSendBlobs","blob","tryDecode","utf8","map","ary","each","done","after","eachWithIndex","el","base64encoder","hasBinary","sliceBuffer","isAndroid","isPhantomJS","pong","noop","packetslist","utf8encode","encoded","readAsDataURL","b64data","typed","basic","btoa","utf8decode","decodeBase64Packet","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","decodePayloadAsBinary","chr","ret","totalLength","reduce","acc","resultArray","bufferIndex","isString","ab","view","lenStr","binaryIdentifier","lengthAry","bufferTail","numberTooLong","tailArray","msgLength","_hasBinary","arraybuffer","start","end","bytes","abv","ii","count","err_cb","proxy","bail","ucs2decode","string","extra","output","counter","ucs2encode","array","stringFromCharCode","createByte","codePoint","encodeCodePoint","symbol","wtf8encode","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","wtf8decode","tmp","wtf8","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","qs","qry","pairs","pair","decodeURIComponent","alphabet","decoded","now","seed","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","complete","initIframe","html","iframeId","area","top","left","target","setAttribute","action","submit","WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","headers","ws","supports","addEventListeners","onmessage","ev","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","parserType","flags","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"vue-websocket.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueWebsocket\"] = factory();\n\telse\n\t\troot[\"VueWebsocket\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueWebsocket\"] = factory();\n\telse\n\t\troot[\"VueWebsocket\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _socket = __webpack_require__(1);\n\t\n\tvar _socket2 = _interopRequireDefault(_socket);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\texports.default = {\n\t\tinstall: function install(Vue, connection, opts) {\n\t\t\tvar _Vue$mixin;\n\t\n\t\t\tvar socket = void 0;\n\t\n\t\t\tif (connection != null && (typeof connection === \"undefined\" ? \"undefined\" : _typeof(connection)) === \"object\") socket = connection;else socket = (0, _socket2.default)(connection || \"\", opts);\n\t\n\t\t\tVue.prototype.$socket = socket;\n\t\n\t\t\tvar addListeners = function addListeners() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tif (this.$options[\"socket\"]) {\n\t\t\t\t\tvar conf = this.$options.socket;\n\t\t\t\t\tif (conf.namespace) {\n\t\t\t\t\t\tthis.$socket = (0, _socket2.default)(conf.namespace, conf.options);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (conf.events) {\n\t\t\t\t\t\tvar prefix = conf.prefix || \"\";\n\t\t\t\t\t\tObject.keys(conf.events).forEach(function (key) {\n\t\t\t\t\t\t\tvar func = conf.events[key].bind(_this);\n\t\t\t\t\t\t\t_this.$socket.on(prefix + key, func);\n\t\t\t\t\t\t\tconf.events[key].__binded = func;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar removeListeners = function removeListeners() {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (this.$options[\"socket\"]) {\n\t\t\t\t\tvar conf = this.$options.socket;\n\t\n\t\t\t\t\tif (conf.namespace) {\n\t\t\t\t\t\tthis.$socket.disconnect();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (conf.events) {\n\t\t\t\t\t\tvar prefix = conf.prefix || \"\";\n\t\t\t\t\t\tObject.keys(conf.events).forEach(function (key) {\n\t\t\t\t\t\t\t_this2.$socket.off(prefix + key, conf.events[key].__binded);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tVue.mixin((_Vue$mixin = {}, _defineProperty(_Vue$mixin, Vue.version.indexOf('2') === 0 ? 'beforeCreate' : 'beforeCompile', addListeners), _defineProperty(_Vue$mixin, \"beforeDestroy\", removeListeners), _Vue$mixin));\n\t\t}\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(2);\n\tvar parser = __webpack_require__(7);\n\tvar Manager = __webpack_require__(15);\n\tvar debug = __webpack_require__(4)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup (uri, opts) {\n\t  if (typeof uri === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] ||\n\t                      false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t    debug('ignoring socket cache for %s', source);\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t      debug('new io instance for %s', source);\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  } else if (opts && 'object' === typeof opts.query) {\n\t    opts.query = encodeQueryString(opts.query);\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t/**\n\t *  Helper method to parse query objects to string.\n\t * @param {object} query\n\t * @returns {string}\n\t */\n\tfunction encodeQueryString (obj) {\n\t  var str = [];\n\t  for (var p in obj) {\n\t    if (obj.hasOwnProperty(p)) {\n\t      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n\t    }\n\t  }\n\t  return str.join('&');\n\t}\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(15);\n\texports.Socket = __webpack_require__(42);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(3);\n\tvar debug = __webpack_require__(4)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url (uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t      debug('protocol-less url %s', uri);\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t    debug('parse %s', uri);\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\t\n\t  return obj;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Parses an URI\n\t *\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\n\t * @api private\n\t */\n\t\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tvar parts = [\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n\t];\n\t\n\tmodule.exports = function parseuri(str) {\n\t    var src = str,\n\t        b = str.indexOf('['),\n\t        e = str.indexOf(']');\n\t\n\t    if (b != -1 && e != -1) {\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n\t    }\n\t\n\t    var m = re.exec(str || ''),\n\t        uri = {},\n\t        i = 14;\n\t\n\t    while (i--) {\n\t        uri[parts[i]] = m[i] || '';\n\t    }\n\t\n\t    if (b != -1 && e != -1) {\n\t        uri.source = src;\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n\t        uri.ipv6uri = true;\n\t    }\n\t\n\t    return uri;\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(5);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(6);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(4)('socket.io-parser');\n\tvar json = __webpack_require__(8);\n\tvar Emitter = __webpack_require__(11);\n\tvar binary = __webpack_require__(12);\n\tvar isBuf = __webpack_require__(14);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t  debug('encoding packet %j', obj);\n\t\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  }\n\t  else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t  var str = '';\n\t  var nsp = false;\n\t\n\t  // first is type\n\t  str += obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    str += obj.attachments;\n\t    str += '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' != obj.nsp) {\n\t    nsp = true;\n\t    str += obj.nsp;\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    if (nsp) {\n\t      str += ',';\n\t      nsp = false;\n\t    }\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    if (nsp) str += ',';\n\t    str += json.stringify(obj.data);\n\t  }\n\t\n\t  debug('encoded %j as %s', obj, str);\n\t  return str;\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an ecoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if ('string' == typeof obj) {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  }\n\t  else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var p = {};\n\t  var i = 0;\n\t\n\t  // look up type\n\t  p.type = Number(str.charAt(0));\n\t  if (null == exports.types[p.type]) return error();\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) != '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) != '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' == str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' == c) break;\n\t      p.nsp += c;\n\t      if (i == str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    p = tryParse(p, str.substr(i));\n\t  }\n\t\n\t  debug('decoded %s as %j', str, p);\n\t  return p;\n\t}\n\t\n\tfunction tryParse(p, str) {\n\t  try {\n\t    p.data = json.parse(str);\n\t  } catch(e){\n\t    return error();\n\t  }\n\t  return p; \n\t};\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(data){\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error'\n\t  };\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\t;(function () {\n\t  // Detect the `define` function exposed by asynchronous module loaders. The\n\t  // strict `define` check is necessary for compatibility with `r.js`.\n\t  var isLoader = \"function\" === \"function\" && __webpack_require__(10);\n\t\n\t  // A set of types used to distinguish objects from primitives.\n\t  var objectTypes = {\n\t    \"function\": true,\n\t    \"object\": true\n\t  };\n\t\n\t  // Detect the `exports` object exposed by CommonJS implementations.\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  // Use the `global` object exposed by Node (including Browserify via\n\t  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n\t  // and the `window` object in browsers. Rhino exports a `global` function\n\t  // instead.\n\t  var root = objectTypes[typeof window] && window || this,\n\t      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\t\n\t  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  // Public: Initializes JSON 3 using the given `context` object, attaching the\n\t  // `stringify` and `parse` functions to the specified `exports` object.\n\t  function runInContext(context, exports) {\n\t    context || (context = root[\"Object\"]());\n\t    exports || (exports = root[\"Object\"]());\n\t\n\t    // Native constructor aliases.\n\t    var Number = context[\"Number\"] || root[\"Number\"],\n\t        String = context[\"String\"] || root[\"String\"],\n\t        Object = context[\"Object\"] || root[\"Object\"],\n\t        Date = context[\"Date\"] || root[\"Date\"],\n\t        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n\t        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n\t        Math = context[\"Math\"] || root[\"Math\"],\n\t        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\t\n\t    // Delegate to the native `stringify` and `parse` implementations.\n\t    if (typeof nativeJSON == \"object\" && nativeJSON) {\n\t      exports.stringify = nativeJSON.stringify;\n\t      exports.parse = nativeJSON.parse;\n\t    }\n\t\n\t    // Convenience aliases.\n\t    var objectProto = Object.prototype,\n\t        getClass = objectProto.toString,\n\t        isProperty, forEach, undef;\n\t\n\t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\t    var isExtended = new Date(-3509827334573292);\n\t    try {\n\t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n\t      // results for certain dates in Opera >= 10.53.\n\t      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n\t        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n\t        // but clips the values returned by the date methods to the range of\n\t        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n\t        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n\t    } catch (exception) {}\n\t\n\t    // Internal: Determines whether the native `JSON.stringify` and `parse`\n\t    // implementations are spec-compliant. Based on work by Ken Snyder.\n\t    function has(name) {\n\t      if (has[name] !== undef) {\n\t        // Return cached feature test result.\n\t        return has[name];\n\t      }\n\t      var isSupported;\n\t      if (name == \"bug-string-char-index\") {\n\t        // IE <= 7 doesn't support accessing string characters using square\n\t        // bracket notation. IE 8 only supports this for primitives.\n\t        isSupported = \"a\"[0] != \"a\";\n\t      } else if (name == \"json\") {\n\t        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n\t        // supported.\n\t        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n\t      } else {\n\t        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n\t        // Test `JSON.stringify`.\n\t        if (name == \"json-stringify\") {\n\t          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n\t          if (stringifySupported) {\n\t            // A test function object with a custom `toJSON` method.\n\t            (value = function () {\n\t              return 1;\n\t            }).toJSON = value;\n\t            try {\n\t              stringifySupported =\n\t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n\t                // primitives as object literals.\n\t                stringify(0) === \"0\" &&\n\t                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n\t                // literals.\n\t                stringify(new Number()) === \"0\" &&\n\t                stringify(new String()) == '\"\"' &&\n\t                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n\t                // does not define a canonical JSON representation (this applies to\n\t                // objects with `toJSON` properties as well, *unless* they are nested\n\t                // within an object or array).\n\t                stringify(getClass) === undef &&\n\t                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n\t                // FF 3.1b3 pass this test.\n\t                stringify(undef) === undef &&\n\t                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n\t                // respectively, if the value is omitted entirely.\n\t                stringify() === undef &&\n\t                // FF 3.1b1, 2 throw an error if the given value is not a number,\n\t                // string, array, object, Boolean, or `null` literal. This applies to\n\t                // objects with custom `toJSON` methods as well, unless they are nested\n\t                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n\t                // methods entirely.\n\t                stringify(value) === \"1\" &&\n\t                stringify([value]) == \"[1]\" &&\n\t                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n\t                // `\"[null]\"`.\n\t                stringify([undef]) == \"[null]\" &&\n\t                // YUI 3.0.0b1 fails to serialize `null` literals.\n\t                stringify(null) == \"null\" &&\n\t                // FF 3.1b1, 2 halts serialization if an array contains a function:\n\t                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n\t                // elides non-JSON values from objects and arrays, unless they\n\t                // define custom `toJSON` methods.\n\t                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n\t                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n\t                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n\t                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n\t                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n\t                stringify(null, value) === \"1\" &&\n\t                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n\t                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n\t                // serialize extended years.\n\t                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n\t                // The milliseconds are optional in ES 5, but required in 5.1.\n\t                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n\t                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n\t                // four-digit years instead of six-digit years. Credits: @Yaffle.\n\t                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n\t                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n\t                // values less than 1000. Credits: @Yaffle.\n\t                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n\t            } catch (exception) {\n\t              stringifySupported = false;\n\t            }\n\t          }\n\t          isSupported = stringifySupported;\n\t        }\n\t        // Test `JSON.parse`.\n\t        if (name == \"json-parse\") {\n\t          var parse = exports.parse;\n\t          if (typeof parse == \"function\") {\n\t            try {\n\t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n\t              // Conforming implementations should also coerce the initial argument to\n\t              // a string prior to parsing.\n\t              if (parse(\"0\") === 0 && !parse(false)) {\n\t                // Simple parsing test.\n\t                value = parse(serialized);\n\t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\t                if (parseSupported) {\n\t                  try {\n\t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n\t                    parseSupported = !parse('\"\\t\"');\n\t                  } catch (exception) {}\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n\t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n\t                      // certain octal literals.\n\t                      parseSupported = parse(\"01\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n\t                      // points. These environments, along with FF 3.1b1 and 2,\n\t                      // also allow trailing commas in JSON objects and arrays.\n\t                      parseSupported = parse(\"1.\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                }\n\t              }\n\t            } catch (exception) {\n\t              parseSupported = false;\n\t            }\n\t          }\n\t          isSupported = parseSupported;\n\t        }\n\t      }\n\t      return has[name] = !!isSupported;\n\t    }\n\t\n\t    if (!has(\"json\")) {\n\t      // Common `[[Class]]` name aliases.\n\t      var functionClass = \"[object Function]\",\n\t          dateClass = \"[object Date]\",\n\t          numberClass = \"[object Number]\",\n\t          stringClass = \"[object String]\",\n\t          arrayClass = \"[object Array]\",\n\t          booleanClass = \"[object Boolean]\";\n\t\n\t      // Detect incomplete support for accessing string characters by index.\n\t      var charIndexBuggy = has(\"bug-string-char-index\");\n\t\n\t      // Define additional utility methods if the `Date` methods are buggy.\n\t      if (!isExtended) {\n\t        var floor = Math.floor;\n\t        // A mapping between the months of the year and the number of days between\n\t        // January 1st and the first of the respective month.\n\t        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\t        // Internal: Calculates the number of days between the Unix epoch and the\n\t        // first day of the given month.\n\t        var getDay = function (year, month) {\n\t          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n\t        };\n\t      }\n\t\n\t      // Internal: Determines if a property is a direct property of the given\n\t      // object. Delegates to the native `Object#hasOwnProperty` method.\n\t      if (!(isProperty = objectProto.hasOwnProperty)) {\n\t        isProperty = function (property) {\n\t          var members = {}, constructor;\n\t          if ((members.__proto__ = null, members.__proto__ = {\n\t            // The *proto* property cannot be set multiple times in recent\n\t            // versions of Firefox and SeaMonkey.\n\t            \"toString\": 1\n\t          }, members).toString != getClass) {\n\t            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n\t            // supports the mutable *proto* property.\n\t            isProperty = function (property) {\n\t              // Capture and break the object's prototype chain (see section 8.6.2\n\t              // of the ES 5.1 spec). The parenthesized expression prevents an\n\t              // unsafe transformation by the Closure Compiler.\n\t              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n\t              // Restore the original prototype chain.\n\t              this.__proto__ = original;\n\t              return result;\n\t            };\n\t          } else {\n\t            // Capture a reference to the top-level `Object` constructor.\n\t            constructor = members.constructor;\n\t            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n\t            // other environments.\n\t            isProperty = function (property) {\n\t              var parent = (this.constructor || constructor).prototype;\n\t              return property in this && !(property in parent && this[property] === parent[property]);\n\t            };\n\t          }\n\t          members = null;\n\t          return isProperty.call(this, property);\n\t        };\n\t      }\n\t\n\t      // Internal: Normalizes the `for...in` iteration algorithm across\n\t      // environments. Each enumerated key is yielded to a `callback` function.\n\t      forEach = function (object, callback) {\n\t        var size = 0, Properties, members, property;\n\t\n\t        // Tests for bugs in the current environment's `for...in` algorithm. The\n\t        // `valueOf` property inherits the non-enumerable flag from\n\t        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\t        (Properties = function () {\n\t          this.valueOf = 0;\n\t        }).prototype.valueOf = 0;\n\t\n\t        // Iterate over a new instance of the `Properties` class.\n\t        members = new Properties();\n\t        for (property in members) {\n\t          // Ignore all properties inherited from `Object.prototype`.\n\t          if (isProperty.call(members, property)) {\n\t            size++;\n\t          }\n\t        }\n\t        Properties = members = null;\n\t\n\t        // Normalize the iteration algorithm.\n\t        if (!size) {\n\t          // A list of non-enumerable properties inherited from `Object.prototype`.\n\t          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n\t          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n\t          // properties.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, length;\n\t            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\t            for (property in object) {\n\t              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n\t              // certain conditions; IE does not.\n\t              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for each non-enumerable property.\n\t            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n\t          };\n\t        } else if (size == 2) {\n\t          // Safari <= 2.0.4 enumerates shadowed properties twice.\n\t          forEach = function (object, callback) {\n\t            // Create a set of iterated properties.\n\t            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n\t            for (property in object) {\n\t              // Store each property name to prevent double enumeration. The\n\t              // `prototype` property of functions is not enumerated due to cross-\n\t              // environment inconsistencies.\n\t              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t          };\n\t        } else {\n\t          // No bugs detected; use the standard `for...in` algorithm.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n\t            for (property in object) {\n\t              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for the `constructor` property due to\n\t            // cross-environment inconsistencies.\n\t            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n\t              callback(property);\n\t            }\n\t          };\n\t        }\n\t        return forEach(object, callback);\n\t      };\n\t\n\t      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n\t      // `filter` argument may specify either a function that alters how object and\n\t      // array members are serialized, or an array of strings and numbers that\n\t      // indicates which properties should be serialized. The optional `width`\n\t      // argument may be either a string or number that specifies the indentation\n\t      // level of the output.\n\t      if (!has(\"json-stringify\")) {\n\t        // Internal: A map of control characters and their escaped equivalents.\n\t        var Escapes = {\n\t          92: \"\\\\\\\\\",\n\t          34: '\\\\\"',\n\t          8: \"\\\\b\",\n\t          12: \"\\\\f\",\n\t          10: \"\\\\n\",\n\t          13: \"\\\\r\",\n\t          9: \"\\\\t\"\n\t        };\n\t\n\t        // Internal: Converts `value` into a zero-padded string such that its\n\t        // length is at least equal to `width`. The `width` must be <= 6.\n\t        var leadingZeroes = \"000000\";\n\t        var toPaddedString = function (width, value) {\n\t          // The `|| 0` expression is necessary to work around a bug in\n\t          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n\t          return (leadingZeroes + (value || 0)).slice(-width);\n\t        };\n\t\n\t        // Internal: Double-quotes a string `value`, replacing all ASCII control\n\t        // characters (characters with code unit values between 0 and 31) with\n\t        // their escaped equivalents. This is an implementation of the\n\t        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\t        var unicodePrefix = \"\\\\u00\";\n\t        var quote = function (value) {\n\t          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n\t          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\t          for (; index < length; index++) {\n\t            var charCode = value.charCodeAt(index);\n\t            // If the character is a control character, append its Unicode or\n\t            // shorthand escape sequence; otherwise, append the character as-is.\n\t            switch (charCode) {\n\t              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n\t                result += Escapes[charCode];\n\t                break;\n\t              default:\n\t                if (charCode < 32) {\n\t                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n\t                  break;\n\t                }\n\t                result += useCharIndex ? symbols[index] : value.charAt(index);\n\t            }\n\t          }\n\t          return result + '\"';\n\t        };\n\t\n\t        // Internal: Recursively serializes an object. Implements the\n\t        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n\t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\t          try {\n\t            // Necessary for host object support.\n\t            value = object[property];\n\t          } catch (exception) {}\n\t          if (typeof value == \"object\" && value) {\n\t            className = getClass.call(value);\n\t            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n\t              if (value > -1 / 0 && value < 1 / 0) {\n\t                // Dates are serialized according to the `Date#toJSON` method\n\t                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n\t                // for the ISO 8601 date time string format.\n\t                if (getDay) {\n\t                  // Manually compute the year, month, date, hours, minutes,\n\t                  // seconds, and milliseconds if the `getUTC*` methods are\n\t                  // buggy. Adapted from @Yaffle's `date-shim` project.\n\t                  date = floor(value / 864e5);\n\t                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\t                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\t                  date = 1 + date - getDay(year, month);\n\t                  // The `time` value specifies the time within the day (see ES\n\t                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n\t                  // to compute `A modulo B`, as the `%` operator does not\n\t                  // correspond to the `modulo` operation for negative numbers.\n\t                  time = (value % 864e5 + 864e5) % 864e5;\n\t                  // The hours, minutes, seconds, and milliseconds are obtained by\n\t                  // decomposing the time within the day. See section 15.9.1.10.\n\t                  hours = floor(time / 36e5) % 24;\n\t                  minutes = floor(time / 6e4) % 60;\n\t                  seconds = floor(time / 1e3) % 60;\n\t                  milliseconds = time % 1e3;\n\t                } else {\n\t                  year = value.getUTCFullYear();\n\t                  month = value.getUTCMonth();\n\t                  date = value.getUTCDate();\n\t                  hours = value.getUTCHours();\n\t                  minutes = value.getUTCMinutes();\n\t                  seconds = value.getUTCSeconds();\n\t                  milliseconds = value.getUTCMilliseconds();\n\t                }\n\t                // Serialize extended years correctly.\n\t                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n\t                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n\t                  // Months, dates, hours, minutes, and seconds should have two\n\t                  // digits; milliseconds should have three.\n\t                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n\t                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n\t                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n\t              } else {\n\t                value = null;\n\t              }\n\t            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n\t              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n\t              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n\t              // ignores all `toJSON` methods on these objects unless they are\n\t              // defined directly on an instance.\n\t              value = value.toJSON(property);\n\t            }\n\t          }\n\t          if (callback) {\n\t            // If a replacement function was provided, call it to obtain the value\n\t            // for serialization.\n\t            value = callback.call(object, property, value);\n\t          }\n\t          if (value === null) {\n\t            return \"null\";\n\t          }\n\t          className = getClass.call(value);\n\t          if (className == booleanClass) {\n\t            // Booleans are represented literally.\n\t            return \"\" + value;\n\t          } else if (className == numberClass) {\n\t            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n\t            // `\"null\"`.\n\t            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n\t          } else if (className == stringClass) {\n\t            // Strings are double-quoted and escaped.\n\t            return quote(\"\" + value);\n\t          }\n\t          // Recursively serialize objects and arrays.\n\t          if (typeof value == \"object\") {\n\t            // Check for cyclic structures. This is a linear search; performance\n\t            // is inversely proportional to the number of unique nested objects.\n\t            for (length = stack.length; length--;) {\n\t              if (stack[length] === value) {\n\t                // Cyclic structures cannot be serialized by `JSON.stringify`.\n\t                throw TypeError();\n\t              }\n\t            }\n\t            // Add the object to the stack of traversed objects.\n\t            stack.push(value);\n\t            results = [];\n\t            // Save the current indentation level and indent one additional level.\n\t            prefix = indentation;\n\t            indentation += whitespace;\n\t            if (className == arrayClass) {\n\t              // Recursively serialize array elements.\n\t              for (index = 0, length = value.length; index < length; index++) {\n\t                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n\t                results.push(element === undef ? \"null\" : element);\n\t              }\n\t              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n\t            } else {\n\t              // Recursively serialize object members. Members are selected from\n\t              // either a user-specified list of property names, or the object\n\t              // itself.\n\t              forEach(properties || value, function (property) {\n\t                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\t                if (element !== undef) {\n\t                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n\t                  // is not the empty string, let `member` {quote(property) + \":\"}\n\t                  // be the concatenation of `member` and the `space` character.\"\n\t                  // The \"`space` character\" refers to the literal space\n\t                  // character, not the `space` {width} argument provided to\n\t                  // `JSON.stringify`.\n\t                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n\t                }\n\t              });\n\t              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n\t            }\n\t            // Remove the object from the traversed object stack.\n\t            stack.pop();\n\t            return result;\n\t          }\n\t        };\n\t\n\t        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\t        exports.stringify = function (source, filter, width) {\n\t          var whitespace, callback, properties, className;\n\t          if (objectTypes[typeof filter] && filter) {\n\t            if ((className = getClass.call(filter)) == functionClass) {\n\t              callback = filter;\n\t            } else if (className == arrayClass) {\n\t              // Convert the property names array into a makeshift set.\n\t              properties = {};\n\t              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n\t            }\n\t          }\n\t          if (width) {\n\t            if ((className = getClass.call(width)) == numberClass) {\n\t              // Convert the `width` to an integer and create a string containing\n\t              // `width` number of space characters.\n\t              if ((width -= width % 1) > 0) {\n\t                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n\t              }\n\t            } else if (className == stringClass) {\n\t              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n\t            }\n\t          }\n\t          // Opera <= 7.54u2 discards the values associated with empty string keys\n\t          // (`\"\"`) only if they are used directly within an object member list\n\t          // (e.g., `!(\"\" in { \"\": 1})`).\n\t          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n\t        };\n\t      }\n\t\n\t      // Public: Parses a JSON source string.\n\t      if (!has(\"json-parse\")) {\n\t        var fromCharCode = String.fromCharCode;\n\t\n\t        // Internal: A map of escaped control characters and their unescaped\n\t        // equivalents.\n\t        var Unescapes = {\n\t          92: \"\\\\\",\n\t          34: '\"',\n\t          47: \"/\",\n\t          98: \"\\b\",\n\t          116: \"\\t\",\n\t          110: \"\\n\",\n\t          102: \"\\f\",\n\t          114: \"\\r\"\n\t        };\n\t\n\t        // Internal: Stores the parser state.\n\t        var Index, Source;\n\t\n\t        // Internal: Resets the parser state and throws a `SyntaxError`.\n\t        var abort = function () {\n\t          Index = Source = null;\n\t          throw SyntaxError();\n\t        };\n\t\n\t        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n\t        // the end of the source string. A token may be a string, number, `null`\n\t        // literal, or Boolean literal.\n\t        var lex = function () {\n\t          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n\t          while (Index < length) {\n\t            charCode = source.charCodeAt(Index);\n\t            switch (charCode) {\n\t              case 9: case 10: case 13: case 32:\n\t                // Skip whitespace tokens, including tabs, carriage returns, line\n\t                // feeds, and space characters.\n\t                Index++;\n\t                break;\n\t              case 123: case 125: case 91: case 93: case 58: case 44:\n\t                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n\t                // the current position.\n\t                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n\t                Index++;\n\t                return value;\n\t              case 34:\n\t                // `\"` delimits a JSON string; advance to the next character and\n\t                // begin parsing the string. String tokens are prefixed with the\n\t                // sentinel `@` character to distinguish them from punctuators and\n\t                // end-of-string tokens.\n\t                for (value = \"@\", Index++; Index < length;) {\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode < 32) {\n\t                    // Unescaped ASCII control characters (those with a code unit\n\t                    // less than the space character) are not permitted.\n\t                    abort();\n\t                  } else if (charCode == 92) {\n\t                    // A reverse solidus (`\\`) marks the beginning of an escaped\n\t                    // control character (including `\"`, `\\`, and `/`) or Unicode\n\t                    // escape sequence.\n\t                    charCode = source.charCodeAt(++Index);\n\t                    switch (charCode) {\n\t                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n\t                        // Revive escaped control characters.\n\t                        value += Unescapes[charCode];\n\t                        Index++;\n\t                        break;\n\t                      case 117:\n\t                        // `\\u` marks the beginning of a Unicode escape sequence.\n\t                        // Advance to the first character and validate the\n\t                        // four-digit code point.\n\t                        begin = ++Index;\n\t                        for (position = Index + 4; Index < position; Index++) {\n\t                          charCode = source.charCodeAt(Index);\n\t                          // A valid sequence comprises four hexdigits (case-\n\t                          // insensitive) that form a single hexadecimal value.\n\t                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n\t                            // Invalid Unicode escape sequence.\n\t                            abort();\n\t                          }\n\t                        }\n\t                        // Revive the escaped character.\n\t                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n\t                        break;\n\t                      default:\n\t                        // Invalid escape sequence.\n\t                        abort();\n\t                    }\n\t                  } else {\n\t                    if (charCode == 34) {\n\t                      // An unescaped double-quote character marks the end of the\n\t                      // string.\n\t                      break;\n\t                    }\n\t                    charCode = source.charCodeAt(Index);\n\t                    begin = Index;\n\t                    // Optimize for the common case where a string is valid.\n\t                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n\t                      charCode = source.charCodeAt(++Index);\n\t                    }\n\t                    // Append the string as-is.\n\t                    value += source.slice(begin, Index);\n\t                  }\n\t                }\n\t                if (source.charCodeAt(Index) == 34) {\n\t                  // Advance to the next character and return the revived string.\n\t                  Index++;\n\t                  return value;\n\t                }\n\t                // Unterminated string.\n\t                abort();\n\t              default:\n\t                // Parse numbers and literals.\n\t                begin = Index;\n\t                // Advance past the negative sign, if one is specified.\n\t                if (charCode == 45) {\n\t                  isSigned = true;\n\t                  charCode = source.charCodeAt(++Index);\n\t                }\n\t                // Parse an integer or floating-point value.\n\t                if (charCode >= 48 && charCode <= 57) {\n\t                  // Leading zeroes are interpreted as octal literals.\n\t                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n\t                    // Illegal octal literal.\n\t                    abort();\n\t                  }\n\t                  isSigned = false;\n\t                  // Parse the integer component.\n\t                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n\t                  // Floats cannot contain a leading decimal point; however, this\n\t                  // case is already accounted for by the parser.\n\t                  if (source.charCodeAt(Index) == 46) {\n\t                    position = ++Index;\n\t                    // Parse the decimal component.\n\t                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal trailing decimal.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Parse exponents. The `e` denoting the exponent is\n\t                  // case-insensitive.\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode == 101 || charCode == 69) {\n\t                    charCode = source.charCodeAt(++Index);\n\t                    // Skip past the sign following the exponent, if one is\n\t                    // specified.\n\t                    if (charCode == 43 || charCode == 45) {\n\t                      Index++;\n\t                    }\n\t                    // Parse the exponential component.\n\t                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal empty exponent.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Coerce the parsed value to a JavaScript number.\n\t                  return +source.slice(begin, Index);\n\t                }\n\t                // A negative sign may only precede numbers.\n\t                if (isSigned) {\n\t                  abort();\n\t                }\n\t                // `true`, `false`, and `null` literals.\n\t                if (source.slice(Index, Index + 4) == \"true\") {\n\t                  Index += 4;\n\t                  return true;\n\t                } else if (source.slice(Index, Index + 5) == \"false\") {\n\t                  Index += 5;\n\t                  return false;\n\t                } else if (source.slice(Index, Index + 4) == \"null\") {\n\t                  Index += 4;\n\t                  return null;\n\t                }\n\t                // Unrecognized token.\n\t                abort();\n\t            }\n\t          }\n\t          // Return the sentinel `$` character if the parser has reached the end\n\t          // of the source string.\n\t          return \"$\";\n\t        };\n\t\n\t        // Internal: Parses a JSON `value` token.\n\t        var get = function (value) {\n\t          var results, hasMembers;\n\t          if (value == \"$\") {\n\t            // Unexpected end of input.\n\t            abort();\n\t          }\n\t          if (typeof value == \"string\") {\n\t            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n\t              // Remove the sentinel `@` character.\n\t              return value.slice(1);\n\t            }\n\t            // Parse object and array literals.\n\t            if (value == \"[\") {\n\t              // Parses a JSON array, returning a new JavaScript array.\n\t              results = [];\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing square bracket marks the end of the array literal.\n\t                if (value == \"]\") {\n\t                  break;\n\t                }\n\t                // If the array literal contains elements, the current token\n\t                // should be a comma separating the previous element from the\n\t                // next.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"]\") {\n\t                      // Unexpected trailing `,` in array literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each array element.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Elisions and leading commas are not permitted.\n\t                if (value == \",\") {\n\t                  abort();\n\t                }\n\t                results.push(get(value));\n\t              }\n\t              return results;\n\t            } else if (value == \"{\") {\n\t              // Parses a JSON object, returning a new JavaScript object.\n\t              results = {};\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing curly brace marks the end of the object literal.\n\t                if (value == \"}\") {\n\t                  break;\n\t                }\n\t                // If the object literal contains members, the current token\n\t                // should be a comma separator.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"}\") {\n\t                      // Unexpected trailing `,` in object literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each object member.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Leading commas are not permitted, object property names must be\n\t                // double-quoted strings, and a `:` must separate each property\n\t                // name and value.\n\t                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n\t                  abort();\n\t                }\n\t                results[value.slice(1)] = get(lex());\n\t              }\n\t              return results;\n\t            }\n\t            // Unexpected token encountered.\n\t            abort();\n\t          }\n\t          return value;\n\t        };\n\t\n\t        // Internal: Updates a traversed object member.\n\t        var update = function (source, property, callback) {\n\t          var element = walk(source, property, callback);\n\t          if (element === undef) {\n\t            delete source[property];\n\t          } else {\n\t            source[property] = element;\n\t          }\n\t        };\n\t\n\t        // Internal: Recursively traverses a parsed JSON object, invoking the\n\t        // `callback` function for each value. This is an implementation of the\n\t        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\t        var walk = function (source, property, callback) {\n\t          var value = source[property], length;\n\t          if (typeof value == \"object\" && value) {\n\t            // `forEach` can't be used to traverse an array in Opera <= 8.54\n\t            // because its `Object#hasOwnProperty` implementation returns `false`\n\t            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n\t            if (getClass.call(value) == arrayClass) {\n\t              for (length = value.length; length--;) {\n\t                update(value, length, callback);\n\t              }\n\t            } else {\n\t              forEach(value, function (property) {\n\t                update(value, property, callback);\n\t              });\n\t            }\n\t          }\n\t          return callback.call(source, property, value);\n\t        };\n\t\n\t        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\t        exports.parse = function (source, callback) {\n\t          var result, value;\n\t          Index = 0;\n\t          Source = \"\" + source;\n\t          result = get(lex());\n\t          // If a JSON string contains multiple tokens, it is invalid.\n\t          if (lex() != \"$\") {\n\t            abort();\n\t          }\n\t          // Reset the parser state.\n\t          Index = Source = null;\n\t          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n\t        };\n\t      }\n\t    }\n\t\n\t    exports[\"runInContext\"] = runInContext;\n\t    return exports;\n\t  }\n\t\n\t  if (freeExports && !isLoader) {\n\t    // Export for CommonJS environments.\n\t    runInContext(root, freeExports);\n\t  } else {\n\t    // Export for web browsers and JavaScript engines.\n\t    var nativeJSON = root.JSON,\n\t        previousJSON = root[\"JSON3\"],\n\t        isRestored = false;\n\t\n\t    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n\t      // Public: Restores the original value of the global `JSON` object and\n\t      // returns a reference to the `JSON3` object.\n\t      \"noConflict\": function () {\n\t        if (!isRestored) {\n\t          isRestored = true;\n\t          root.JSON = nativeJSON;\n\t          root[\"JSON3\"] = previousJSON;\n\t          nativeJSON = previousJSON = null;\n\t        }\n\t        return JSON3;\n\t      }\n\t    }));\n\t\n\t    root.JSON = {\n\t      \"parse\": JSON3.parse,\n\t      \"stringify\": JSON3.stringify\n\t    };\n\t  }\n\t\n\t  // Export for asynchronous module loaders.\n\t  if (isLoader) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return JSON3;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}).call(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module), (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(13);\n\tvar isBuf = __webpack_require__(14);\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet){\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t\n\t  function _deconstructPacket(data) {\n\t    if (!data) return data;\n\t\n\t    if (isBuf(data)) {\n\t      var placeholder = { _placeholder: true, num: buffers.length };\n\t      buffers.push(data);\n\t      return placeholder;\n\t    } else if (isArray(data)) {\n\t      var newData = new Array(data.length);\n\t      for (var i = 0; i < data.length; i++) {\n\t        newData[i] = _deconstructPacket(data[i]);\n\t      }\n\t      return newData;\n\t    } else if ('object' == typeof data && !(data instanceof Date)) {\n\t      var newData = {};\n\t      for (var key in data) {\n\t        newData[key] = _deconstructPacket(data[key]);\n\t      }\n\t      return newData;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  var curPlaceHolder = 0;\n\t\n\t  function _reconstructPacket(data) {\n\t    if (data && data._placeholder) {\n\t      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t      return buf;\n\t    } else if (isArray(data)) {\n\t      for (var i = 0; i < data.length; i++) {\n\t        data[i] = _reconstructPacket(data[i]);\n\t      }\n\t      return data;\n\t    } else if (data && 'object' == typeof data) {\n\t      for (var key in data) {\n\t        data[key] = _reconstructPacket(data[key]);\n\t      }\n\t      return data;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  packet.data = _reconstructPacket(packet.data);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((global.Blob && obj instanceof Blob) ||\n\t        (global.File && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tmodule.exports = isBuf;\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(16);\n\tvar Socket = __webpack_require__(42);\n\tvar Emitter = __webpack_require__(43);\n\tvar parser = __webpack_require__(7);\n\tvar on = __webpack_require__(45);\n\tvar bind = __webpack_require__(46);\n\tvar debug = __webpack_require__(4)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(40);\n\tvar Backoff = __webpack_require__(48);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager (uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && ('object' === typeof uri)) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  this.encoder = new parser.Encoder();\n\t  this.decoder = new parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.engine.id;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open =\n\tManager.prototype.connect = function (fn, opts) {\n\t  debug('readyState %s', this.readyState);\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  debug('opening %s', this.uri);\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t    debug('connect_error');\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t    debug('connect attempt will timeout after %d', timeout);\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t      debug('connect attempt timed out after %d', timeout);\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t  debug('open');\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t  debug('error', err);\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.engine.id;\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting evnet is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting () {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t  debug('writing packet %j', packet);\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else { // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t  debug('cleanup');\n\t\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close =\n\tManager.prototype.disconnect = function () {\n\t  debug('disconnect');\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t  debug('onclose');\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t    debug('reconnect failed');\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t    debug('will wait %dms before reconnect attempt', delay);\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      debug('attempting reconnect');\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t          debug('reconnect attempt error');\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t          debug('reconnect success');\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(17);\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(18);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(25);\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(19);\n\tvar Emitter = __webpack_require__(33);\n\tvar debug = __webpack_require__(4)('engine.io-client:socket');\n\tvar index = __webpack_require__(40);\n\tvar parser = __webpack_require__(25);\n\tvar parseuri = __webpack_require__(3);\n\tvar parsejson = __webpack_require__(41);\n\tvar parseqs = __webpack_require__(34);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket (uri, opts) {\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' === typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure = null != opts.secure ? opts.secure\n\t    : (global.location && 'https:' === location.protocol);\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.agent = opts.agent || false;\n\t  this.hostname = opts.hostname ||\n\t    (global.location ? location.hostname : 'localhost');\n\t  this.port = opts.port || (global.location && location.port\n\t      ? location.port\n\t      : (this.secure ? 443 : 80));\n\t  this.query = opts.query || {};\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['polling', 'websocket'];\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.prevBufferLen = 0;\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\t\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n\t    this.perMessageDeflate.threshold = 1024;\n\t  }\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx || null;\n\t  this.key = opts.key || null;\n\t  this.passphrase = opts.passphrase || null;\n\t  this.cert = opts.cert || null;\n\t  this.ca = opts.ca || null;\n\t  this.ciphers = opts.ciphers || null;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  var freeGlobal = typeof global === 'object' && global;\n\t  if (freeGlobal.global === freeGlobal) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t  }\n\t\n\t  // set on handshake\n\t  this.id = null;\n\t  this.upgrades = null;\n\t  this.pingInterval = null;\n\t  this.pingTimeout = null;\n\t\n\t  // set on heartbeat\n\t  this.pingIntervalTimer = null;\n\t  this.pingTimeoutTimer = null;\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(24);\n\tSocket.transports = __webpack_require__(19);\n\tSocket.parser = __webpack_require__(25);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t  debug('creating transport \"%s\"', name);\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    agent: this.agent,\n\t    hostname: this.hostname,\n\t    port: this.port,\n\t    secure: this.secure,\n\t    path: this.path,\n\t    query: query,\n\t    forceJSONP: this.forceJSONP,\n\t    jsonp: this.jsonp,\n\t    forceBase64: this.forceBase64,\n\t    enablesXDR: this.enablesXDR,\n\t    timestampRequests: this.timestampRequests,\n\t    timestampParam: this.timestampParam,\n\t    policyPort: this.policyPort,\n\t    socket: this,\n\t    pfx: this.pfx,\n\t    key: this.key,\n\t    passphrase: this.passphrase,\n\t    cert: this.cert,\n\t    ca: this.ca,\n\t    ciphers: this.ciphers,\n\t    rejectUnauthorized: this.rejectUnauthorized,\n\t    perMessageDeflate: this.perMessageDeflate,\n\t    extraHeaders: this.extraHeaders\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function (transport) {\n\t  debug('setting transport %s', transport.name);\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t    debug('clearing existing transport %s', this.transport.name);\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t  .on('drain', function () {\n\t    self.onDrain();\n\t  })\n\t  .on('packet', function (packet) {\n\t    self.onPacket(packet);\n\t  })\n\t  .on('error', function (e) {\n\t    self.onError(e);\n\t  })\n\t  .on('close', function () {\n\t    self.onClose('transport close');\n\t  });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t  debug('probing transport \"%s\"', name);\n\t  var transport = this.createTransport(name, { probe: 1 });\n\t  var failed = false;\n\t  var self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen () {\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t    debug('probe transport \"%s\" opened', name);\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\n\t        debug('probe transport \"%s\" pong', name);\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\t\n\t        debug('pausing current transport \"%s\"', self.transport.name);\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' === self.readyState) return;\n\t          debug('changing transport and sending upgrade packet');\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t        debug('probe transport \"%s\" failed', name);\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport () {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  // Handle any error that happens while probing\n\t  function onerror (err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose () {\n\t    onerror('transport closed');\n\t  }\n\t\n\t  // When the socket is closed while we're probing\n\t  function onclose () {\n\t    onerror('socket closed');\n\t  }\n\t\n\t  // When the socket is upgraded while we're probing\n\t  function onupgrade (to) {\n\t    if (transport && to.name !== transport.name) {\n\t      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  // Remove all listeners on the transport and on self\n\t  function cleanup () {\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t  debug('socket open');\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n\t    debug('starting upgrade probes');\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState ||\n\t      'closing' === this.readyState) {\n\t    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\t\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(parsejson(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t    debug('packet received with socket readyState \"%s\"', this.readyState);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if ('closed' === this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' === self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t* Sends a ping packet.\n\t*\n\t* @api private\n\t*/\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function () {\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function () {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if ('closed' !== this.readyState && this.transport.writable &&\n\t    !this.upgrading && this.writeBuffer.length) {\n\t    debug('flushing %d packets in socket', this.writeBuffer.length);\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write =\n\tSocket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if ('function' === typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' === typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function () {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close () {\n\t    self.onClose('forced close');\n\t    debug('socket closing - telling transport to close');\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose () {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade () {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t  debug('socket error %j', err);\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n\t    debug('socket close with reason: \"%s\"', reason);\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(20);\n\tvar XHR = __webpack_require__(22);\n\tvar JSONP = __webpack_require__(37);\n\tvar websocket = __webpack_require__(38);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.polling = polling;\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction polling (opts) {\n\t  var xhr;\n\t  var xd = false;\n\t  var xs = false;\n\t  var jsonp = false !== opts.jsonp;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    xd = opts.hostname !== location.hostname || port !== opts.port;\n\t    xs = opts.secure !== isSSL;\n\t  }\n\t\n\t  opts.xdomain = xd;\n\t  opts.xscheme = xs;\n\t  xhr = new XMLHttpRequest(opts);\n\t\n\t  if ('open' in xhr && !opts.forceJSONP) {\n\t    return new XHR(opts);\n\t  } else {\n\t    if (!jsonp) throw new Error('JSONP disabled');\n\t    return new JSONP(opts);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\n\t\n\tvar hasCORS = __webpack_require__(21);\n\t\n\tmodule.exports = function (opts) {\n\t  var xdomain = opts.xdomain;\n\t\n\t  // scheme must be same when usign XDomainRequest\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t  var xscheme = opts.xscheme;\n\t\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n\t  // https://github.com/Automattic/engine.io-client/pull/217\n\t  var enablesXDR = opts.enablesXDR;\n\t\n\t  // XMLHttpRequest can be disabled on IE\n\t  try {\n\t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n\t      return new XMLHttpRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\n\t  // because loading bar keeps flashing when using jsonp-polling\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\t  try {\n\t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n\t      return new XDomainRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  if (!xdomain) {\n\t    try {\n\t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n\t    } catch (e) { }\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module requirements.\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(20);\n\tvar Polling = __webpack_require__(23);\n\tvar Emitter = __webpack_require__(33);\n\tvar inherit = __webpack_require__(35);\n\tvar debug = __webpack_require__(4)('engine.io-client:polling-xhr');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = XHR;\n\tmodule.exports.Request = Request;\n\t\n\t/**\n\t * Empty function\n\t */\n\t\n\tfunction empty () {}\n\t\n\t/**\n\t * XHR Polling constructor.\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction XHR (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    this.xd = opts.hostname !== global.location.hostname ||\n\t      port !== opts.port;\n\t    this.xs = opts.secure !== isSSL;\n\t  } else {\n\t    this.extraHeaders = opts.extraHeaders;\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(XHR, Polling);\n\t\n\t/**\n\t * XHR supports binary\n\t */\n\t\n\tXHR.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Creates a request.\n\t *\n\t * @param {String} method\n\t * @api private\n\t */\n\t\n\tXHR.prototype.request = function (opts) {\n\t  opts = opts || {};\n\t  opts.uri = this.uri();\n\t  opts.xd = this.xd;\n\t  opts.xs = this.xs;\n\t  opts.agent = this.agent || false;\n\t  opts.supportsBinary = this.supportsBinary;\n\t  opts.enablesXDR = this.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  opts.extraHeaders = this.extraHeaders;\n\t\n\t  return new Request(opts);\n\t};\n\t\n\t/**\n\t * Sends data.\n\t *\n\t * @param {String} data to send.\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doWrite = function (data, fn) {\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n\t  var self = this;\n\t  req.on('success', fn);\n\t  req.on('error', function (err) {\n\t    self.onError('xhr post error', err);\n\t  });\n\t  this.sendXhr = req;\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doPoll = function () {\n\t  debug('xhr poll');\n\t  var req = this.request();\n\t  var self = this;\n\t  req.on('data', function (data) {\n\t    self.onData(data);\n\t  });\n\t  req.on('error', function (err) {\n\t    self.onError('xhr poll error', err);\n\t  });\n\t  this.pollXhr = req;\n\t};\n\t\n\t/**\n\t * Request constructor\n\t *\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Request (opts) {\n\t  this.method = opts.method || 'GET';\n\t  this.uri = opts.uri;\n\t  this.xd = !!opts.xd;\n\t  this.xs = !!opts.xs;\n\t  this.async = false !== opts.async;\n\t  this.data = undefined !== opts.data ? opts.data : null;\n\t  this.agent = opts.agent;\n\t  this.isBinary = opts.isBinary;\n\t  this.supportsBinary = opts.supportsBinary;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  this.create();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Creates the XHR object and sends the request.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.create = function () {\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\n\t  var self = this;\n\t\n\t  try {\n\t    debug('xhr open %s: %s', this.method, this.uri);\n\t    xhr.open(this.method, this.uri, this.async);\n\t    try {\n\t      if (this.extraHeaders) {\n\t        xhr.setDisableHeaderCheck(true);\n\t        for (var i in this.extraHeaders) {\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\n\t          }\n\t        }\n\t      }\n\t    } catch (e) {}\n\t    if (this.supportsBinary) {\n\t      // This has to be done after open because Firefox is stupid\n\t      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n\t      xhr.responseType = 'arraybuffer';\n\t    }\n\t\n\t    if ('POST' === this.method) {\n\t      try {\n\t        if (this.isBinary) {\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n\t        } else {\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n\t        }\n\t      } catch (e) {}\n\t    }\n\t\n\t    try {\n\t      xhr.setRequestHeader('Accept', '*/*');\n\t    } catch (e) {}\n\t\n\t    // ie6 check\n\t    if ('withCredentials' in xhr) {\n\t      xhr.withCredentials = true;\n\t    }\n\t\n\t    if (this.hasXDR()) {\n\t      xhr.onload = function () {\n\t        self.onLoad();\n\t      };\n\t      xhr.onerror = function () {\n\t        self.onError(xhr.responseText);\n\t      };\n\t    } else {\n\t      xhr.onreadystatechange = function () {\n\t        if (4 !== xhr.readyState) return;\n\t        if (200 === xhr.status || 1223 === xhr.status) {\n\t          self.onLoad();\n\t        } else {\n\t          // make sure the `error` event handler that's user-set\n\t          // does not throw in the same tick and gets caught here\n\t          setTimeout(function () {\n\t            self.onError(xhr.status);\n\t          }, 0);\n\t        }\n\t      };\n\t    }\n\t\n\t    debug('xhr data %s', this.data);\n\t    xhr.send(this.data);\n\t  } catch (e) {\n\t    // Need to defer since .create() is called directly fhrom the constructor\n\t    // and thus the 'error' event can only be only bound *after* this exception\n\t    // occurs.  Therefore, also, we cannot throw here at all.\n\t    setTimeout(function () {\n\t      self.onError(e);\n\t    }, 0);\n\t    return;\n\t  }\n\t\n\t  if (global.document) {\n\t    this.index = Request.requestsCount++;\n\t    Request.requests[this.index] = this;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful response.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onSuccess = function () {\n\t  this.emit('success');\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Called if we have data.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onData = function (data) {\n\t  this.emit('data', data);\n\t  this.onSuccess();\n\t};\n\t\n\t/**\n\t * Called upon error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onError = function (err) {\n\t  this.emit('error', err);\n\t  this.cleanup(true);\n\t};\n\t\n\t/**\n\t * Cleans up house.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.cleanup = function (fromError) {\n\t  if ('undefined' === typeof this.xhr || null === this.xhr) {\n\t    return;\n\t  }\n\t  // xmlhttprequest\n\t  if (this.hasXDR()) {\n\t    this.xhr.onload = this.xhr.onerror = empty;\n\t  } else {\n\t    this.xhr.onreadystatechange = empty;\n\t  }\n\t\n\t  if (fromError) {\n\t    try {\n\t      this.xhr.abort();\n\t    } catch (e) {}\n\t  }\n\t\n\t  if (global.document) {\n\t    delete Request.requests[this.index];\n\t  }\n\t\n\t  this.xhr = null;\n\t};\n\t\n\t/**\n\t * Called upon load.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onLoad = function () {\n\t  var data;\n\t  try {\n\t    var contentType;\n\t    try {\n\t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n\t    } catch (e) {}\n\t    if (contentType === 'application/octet-stream') {\n\t      data = this.xhr.response || this.xhr.responseText;\n\t    } else {\n\t      if (!this.supportsBinary) {\n\t        data = this.xhr.responseText;\n\t      } else {\n\t        try {\n\t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n\t        } catch (e) {\n\t          var ui8Arr = new Uint8Array(this.xhr.response);\n\t          var dataArray = [];\n\t          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n\t            dataArray.push(ui8Arr[idx]);\n\t          }\n\t\n\t          data = String.fromCharCode.apply(null, dataArray);\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.onError(e);\n\t  }\n\t  if (null != data) {\n\t    this.onData(data);\n\t  }\n\t};\n\t\n\t/**\n\t * Check if it has XDomainRequest.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.hasXDR = function () {\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n\t};\n\t\n\t/**\n\t * Aborts the request.\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function () {\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Aborts pending requests when unloading the window. This is needed to prevent\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n\t * emitted.\n\t */\n\t\n\tRequest.requestsCount = 0;\n\tRequest.requests = {};\n\t\n\tif (global.document) {\n\t  if (global.attachEvent) {\n\t    global.attachEvent('onunload', unloadHandler);\n\t  } else if (global.addEventListener) {\n\t    global.addEventListener('beforeunload', unloadHandler, false);\n\t  }\n\t}\n\t\n\tfunction unloadHandler () {\n\t  for (var i in Request.requests) {\n\t    if (Request.requests.hasOwnProperty(i)) {\n\t      Request.requests[i].abort();\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(24);\n\tvar parseqs = __webpack_require__(34);\n\tvar parser = __webpack_require__(25);\n\tvar inherit = __webpack_require__(35);\n\tvar yeast = __webpack_require__(36);\n\tvar debug = __webpack_require__(4)('engine.io-client:polling');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Polling;\n\t\n\t/**\n\t * Is XHR2 supported?\n\t */\n\t\n\tvar hasXHR2 = (function () {\n\t  var XMLHttpRequest = __webpack_require__(20);\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\n\t  return null != xhr.responseType;\n\t})();\n\t\n\t/**\n\t * Polling interface.\n\t *\n\t * @param {Object} opts\n\t * @api private\n\t */\n\t\n\tfunction Polling (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (!hasXHR2 || forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(Polling, Transport);\n\t\n\t/**\n\t * Transport name.\n\t */\n\t\n\tPolling.prototype.name = 'polling';\n\t\n\t/**\n\t * Opens the socket (triggers polling). We write a PING message to determine\n\t * when the transport is open.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doOpen = function () {\n\t  this.poll();\n\t};\n\t\n\t/**\n\t * Pauses polling.\n\t *\n\t * @param {Function} callback upon buffers are flushed and transport is paused\n\t * @api private\n\t */\n\t\n\tPolling.prototype.pause = function (onPause) {\n\t  var self = this;\n\t\n\t  this.readyState = 'pausing';\n\t\n\t  function pause () {\n\t    debug('paused');\n\t    self.readyState = 'paused';\n\t    onPause();\n\t  }\n\t\n\t  if (this.polling || !this.writable) {\n\t    var total = 0;\n\t\n\t    if (this.polling) {\n\t      debug('we are currently polling - waiting to pause');\n\t      total++;\n\t      this.once('pollComplete', function () {\n\t        debug('pre-pause polling complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t\n\t    if (!this.writable) {\n\t      debug('we are currently writing - waiting to pause');\n\t      total++;\n\t      this.once('drain', function () {\n\t        debug('pre-pause writing complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t  } else {\n\t    pause();\n\t  }\n\t};\n\t\n\t/**\n\t * Starts polling cycle.\n\t *\n\t * @api public\n\t */\n\t\n\tPolling.prototype.poll = function () {\n\t  debug('polling');\n\t  this.polling = true;\n\t  this.doPoll();\n\t  this.emit('poll');\n\t};\n\t\n\t/**\n\t * Overloads onData to detect payloads.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.onData = function (data) {\n\t  var self = this;\n\t  debug('polling got data %s', data);\n\t  var callback = function (packet, index, total) {\n\t    // if its the first message we consider the transport open\n\t    if ('opening' === self.readyState) {\n\t      self.onOpen();\n\t    }\n\t\n\t    // if its a close packet, we close the ongoing requests\n\t    if ('close' === packet.type) {\n\t      self.onClose();\n\t      return false;\n\t    }\n\t\n\t    // otherwise bypass onData and handle the message\n\t    self.onPacket(packet);\n\t  };\n\t\n\t  // decode payload\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\n\t\n\t  // if an event did not trigger closing\n\t  if ('closed' !== this.readyState) {\n\t    // if we got data we're not polling\n\t    this.polling = false;\n\t    this.emit('pollComplete');\n\t\n\t    if ('open' === this.readyState) {\n\t      this.poll();\n\t    } else {\n\t      debug('ignoring poll - transport state \"%s\"', this.readyState);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * For polling, send a close packet.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doClose = function () {\n\t  var self = this;\n\t\n\t  function close () {\n\t    debug('writing close packet');\n\t    self.write([{ type: 'close' }]);\n\t  }\n\t\n\t  if ('open' === this.readyState) {\n\t    debug('transport open - closing');\n\t    close();\n\t  } else {\n\t    // in case we're trying to close while\n\t    // handshaking is in progress (GH-164)\n\t    debug('transport not open - deferring close');\n\t    this.once('open', close);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a packets payload.\n\t *\n\t * @param {Array} data packets\n\t * @param {Function} drain callback\n\t * @api private\n\t */\n\t\n\tPolling.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t  var callbackfn = function () {\n\t    self.writable = true;\n\t    self.emit('drain');\n\t  };\n\t\n\t  parser.encodePayload(packets, this.supportsBinary, function (data) {\n\t    self.doWrite(data, callbackfn);\n\t  });\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'https' : 'http';\n\t  var port = '';\n\t\n\t  // cache busting is forced\n\t  if (false !== this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  if (!this.supportsBinary && !query.sid) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('https' === schema && this.port !== 443) ||\n\t     ('http' === schema && this.port !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(25);\n\tvar Emitter = __webpack_require__(33);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport (opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = '';\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function (msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = 'TransportError';\n\t  err.description = desc;\n\t  this.emit('error', err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function () {\n\t  if ('closed' === this.readyState || '' === this.readyState) {\n\t    this.readyState = 'opening';\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function (packets) {\n\t  if ('open' === this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error('Transport not open');\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  this.writable = true;\n\t  this.emit('open');\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function (data) {\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function () {\n\t  this.readyState = 'closed';\n\t  this.emit('close');\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(26);\n\tvar hasBinary = __webpack_require__(27);\n\tvar sliceBuffer = __webpack_require__(28);\n\tvar after = __webpack_require__(29);\n\tvar utf8 = __webpack_require__(30);\n\t\n\tvar base64encoder;\n\tif (global && global.ArrayBuffer) {\n\t  base64encoder = __webpack_require__(31);\n\t}\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(32);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if ('function' == typeof supportsBinary) {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if ('function' == typeof utf8encode) {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (Blob && data instanceof global.Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    packet.data = fr.result;\n\t    exports.encodePacket(packet, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (Blob && packet.data instanceof global.Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += global.btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data == 'string') {\n\t    if (data.charAt(0) == 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data);\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!base64encoder) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary == 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data != 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data == '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = ''\n\t    , n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (':' != chr) {\n\t      length += chr;\n\t    } else {\n\t      if ('' == length || (length != (n = Number(length)))) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msg = data.substr(i + 1, n);\n\t\n\t      if (length != msg.length) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      if (msg.length) {\n\t        packet = exports.decodePacket(msg, binaryType, true);\n\t\n\t        if (err.type == packet.type && err.data == packet.data) {\n\t          // parser error in individual packet - ignoring payload\n\t          return callback(err, 0, 1);\n\t        }\n\t\n\t        var ret = callback(packet, i + n, l);\n\t        if (false === ret) return;\n\t      }\n\t\n\t      // advance cursor\n\t      i += n;\n\t      length = '';\n\t    }\n\t  }\n\t\n\t  if (length != '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  var numberTooLong = false;\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] == 255) break;\n\t\n\t      if (msgLength.length > 310) {\n\t        numberTooLong = true;\n\t        break;\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    if(numberTooLong) return callback(err, 0, 1);\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(13);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      if (obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction wtf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte.\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read the first byte.\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tvar byte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid WTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction wtf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar wtf8 = {\n\t\t\t'version': '1.0.0',\n\t\t\t'encode': wtf8encode,\n\t\t\t'decode': wtf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn wtf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = wtf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in wtf8) {\n\t\t\t\t\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.wtf8 = wtf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module), (function() { return this; }())))\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(){\n\t  \"use strict\";\n\t\n\t  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\n\t  // Use a lookup table to find the index.\n\t  var lookup = new Uint8Array(256);\n\t  for (var i = 0; i < chars.length; i++) {\n\t    lookup[chars.charCodeAt(i)] = i;\n\t  }\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = lookup[base64.charCodeAt(i)];\n\t      encoded2 = lookup[base64.charCodeAt(i+1)];\n\t      encoded3 = lookup[base64.charCodeAt(i+2)];\n\t      encoded4 = lookup[base64.charCodeAt(i+3)];\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})();\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Create a blob builder even when vendor prefixes exist\n\t */\n\t\n\tvar BlobBuilder = global.BlobBuilder\n\t  || global.WebKitBlobBuilder\n\t  || global.MSBlobBuilder\n\t  || global.MozBlobBuilder;\n\t\n\t/**\n\t * Check if Blob constructor is supported\n\t */\n\t\n\tvar blobSupported = (function() {\n\t  try {\n\t    var a = new Blob(['hi']);\n\t    return a.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if Blob constructor supports ArrayBufferViews\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\n\t */\n\t\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\n\t  try {\n\t    var b = new Blob([new Uint8Array([1,2])]);\n\t    return b.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if BlobBuilder is supported\n\t */\n\t\n\tvar blobBuilderSupported = BlobBuilder\n\t  && BlobBuilder.prototype.append\n\t  && BlobBuilder.prototype.getBlob;\n\t\n\t/**\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\n\t * Used by BlobBuilder constructor and old browsers that didn't\n\t * support it in the Blob constructor.\n\t */\n\t\n\tfunction mapArrayBufferViews(ary) {\n\t  for (var i = 0; i < ary.length; i++) {\n\t    var chunk = ary[i];\n\t    if (chunk.buffer instanceof ArrayBuffer) {\n\t      var buf = chunk.buffer;\n\t\n\t      // if this is a subarray, make a copy so we only\n\t      // include the subarray region from the underlying buffer\n\t      if (chunk.byteLength !== buf.byteLength) {\n\t        var copy = new Uint8Array(chunk.byteLength);\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n\t        buf = copy.buffer;\n\t      }\n\t\n\t      ary[i] = buf;\n\t    }\n\t  }\n\t}\n\t\n\tfunction BlobBuilderConstructor(ary, options) {\n\t  options = options || {};\n\t\n\t  var bb = new BlobBuilder();\n\t  mapArrayBufferViews(ary);\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    bb.append(ary[i]);\n\t  }\n\t\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n\t};\n\t\n\tfunction BlobConstructor(ary, options) {\n\t  mapArrayBufferViews(ary);\n\t  return new Blob(ary, options || {});\n\t};\n\t\n\tmodule.exports = (function() {\n\t  if (blobSupported) {\n\t    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n\t  } else if (blobBuilderSupported) {\n\t    return BlobBuilderConstructor;\n\t  } else {\n\t    return undefined;\n\t  }\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 33 */\n11,\n/* 34 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Compiles a querystring\n\t * Returns string representation of the object\n\t *\n\t * @param {Object}\n\t * @api private\n\t */\n\t\n\texports.encode = function (obj) {\n\t  var str = '';\n\t\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      if (str.length) str += '&';\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n\t    }\n\t  }\n\t\n\t  return str;\n\t};\n\t\n\t/**\n\t * Parses a simple querystring into an object\n\t *\n\t * @param {String} qs\n\t * @api private\n\t */\n\t\n\texports.decode = function(qs){\n\t  var qry = {};\n\t  var pairs = qs.split('&');\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\n\t    var pair = pairs[i].split('=');\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n\t  }\n\t  return qry;\n\t};\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module requirements.\n\t */\n\t\n\tvar Polling = __webpack_require__(23);\n\tvar inherit = __webpack_require__(35);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = JSONPPolling;\n\t\n\t/**\n\t * Cached regular expressions.\n\t */\n\t\n\tvar rNewline = /\\n/g;\n\tvar rEscapedNewline = /\\\\n/g;\n\t\n\t/**\n\t * Global JSONP callbacks.\n\t */\n\t\n\tvar callbacks;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction empty () { }\n\t\n\t/**\n\t * JSONP Polling constructor.\n\t *\n\t * @param {Object} opts.\n\t * @api public\n\t */\n\t\n\tfunction JSONPPolling (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  this.query = this.query || {};\n\t\n\t  // define global callbacks array if not present\n\t  // we do this here (lazily) to avoid unneeded global pollution\n\t  if (!callbacks) {\n\t    // we need to consider multiple engines in the same page\n\t    if (!global.___eio) global.___eio = [];\n\t    callbacks = global.___eio;\n\t  }\n\t\n\t  // callback identifier\n\t  this.index = callbacks.length;\n\t\n\t  // add callback to jsonp global\n\t  var self = this;\n\t  callbacks.push(function (msg) {\n\t    self.onData(msg);\n\t  });\n\t\n\t  // append to query string\n\t  this.query.j = this.index;\n\t\n\t  // prevent spurious errors from being emitted when the window is unloaded\n\t  if (global.document && global.addEventListener) {\n\t    global.addEventListener('beforeunload', function () {\n\t      if (self.script) self.script.onerror = empty;\n\t    }, false);\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(JSONPPolling, Polling);\n\t\n\t/*\n\t * JSONP only supports binary as base64 encoded strings\n\t */\n\t\n\tJSONPPolling.prototype.supportsBinary = false;\n\t\n\t/**\n\t * Closes the socket.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doClose = function () {\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  if (this.form) {\n\t    this.form.parentNode.removeChild(this.form);\n\t    this.form = null;\n\t    this.iframe = null;\n\t  }\n\t\n\t  Polling.prototype.doClose.call(this);\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doPoll = function () {\n\t  var self = this;\n\t  var script = document.createElement('script');\n\t\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  script.async = true;\n\t  script.src = this.uri();\n\t  script.onerror = function (e) {\n\t    self.onError('jsonp poll error', e);\n\t  };\n\t\n\t  var insertAt = document.getElementsByTagName('script')[0];\n\t  if (insertAt) {\n\t    insertAt.parentNode.insertBefore(script, insertAt);\n\t  } else {\n\t    (document.head || document.body).appendChild(script);\n\t  }\n\t  this.script = script;\n\t\n\t  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\t\n\t  if (isUAgecko) {\n\t    setTimeout(function () {\n\t      var iframe = document.createElement('iframe');\n\t      document.body.appendChild(iframe);\n\t      document.body.removeChild(iframe);\n\t    }, 100);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes with a hidden iframe.\n\t *\n\t * @param {String} data to send\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\n\t  var self = this;\n\t\n\t  if (!this.form) {\n\t    var form = document.createElement('form');\n\t    var area = document.createElement('textarea');\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\n\t    var iframe;\n\t\n\t    form.className = 'socketio';\n\t    form.style.position = 'absolute';\n\t    form.style.top = '-1000px';\n\t    form.style.left = '-1000px';\n\t    form.target = id;\n\t    form.method = 'POST';\n\t    form.setAttribute('accept-charset', 'utf-8');\n\t    area.name = 'd';\n\t    form.appendChild(area);\n\t    document.body.appendChild(form);\n\t\n\t    this.form = form;\n\t    this.area = area;\n\t  }\n\t\n\t  this.form.action = this.uri();\n\t\n\t  function complete () {\n\t    initIframe();\n\t    fn();\n\t  }\n\t\n\t  function initIframe () {\n\t    if (self.iframe) {\n\t      try {\n\t        self.form.removeChild(self.iframe);\n\t      } catch (e) {\n\t        self.onError('jsonp polling iframe removal error', e);\n\t      }\n\t    }\n\t\n\t    try {\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n\t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n\t      iframe = document.createElement(html);\n\t    } catch (e) {\n\t      iframe = document.createElement('iframe');\n\t      iframe.name = self.iframeId;\n\t      iframe.src = 'javascript:0';\n\t    }\n\t\n\t    iframe.id = self.iframeId;\n\t\n\t    self.form.appendChild(iframe);\n\t    self.iframe = iframe;\n\t  }\n\t\n\t  initIframe();\n\t\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\n\t  this.area.value = data.replace(rNewline, '\\\\n');\n\t\n\t  try {\n\t    this.form.submit();\n\t  } catch (e) {}\n\t\n\t  if (this.iframe.attachEvent) {\n\t    this.iframe.onreadystatechange = function () {\n\t      if (self.iframe.readyState === 'complete') {\n\t        complete();\n\t      }\n\t    };\n\t  } else {\n\t    this.iframe.onload = complete;\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(24);\n\tvar parser = __webpack_require__(25);\n\tvar parseqs = __webpack_require__(34);\n\tvar inherit = __webpack_require__(35);\n\tvar yeast = __webpack_require__(36);\n\tvar debug = __webpack_require__(4)('engine.io-client:websocket');\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocket = BrowserWebSocket;\n\tif (!WebSocket && typeof window === 'undefined') {\n\t  try {\n\t    WebSocket = __webpack_require__(39);\n\t  } catch (e) { }\n\t}\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function () {\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var uri = this.uri();\n\t  var protocols = void (0);\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t\n\t  try {\n\t    this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\t  } catch (err) {\n\t    return this.emit('error', err);\n\t  }\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'nodebuffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function () {\n\t  var self = this;\n\t\n\t  this.ws.onopen = function () {\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function () {\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function (ev) {\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function (e) {\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function (packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\n\t        if (!BrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Sometimes the websocket has already been closed but the browser didn't\n\t        // have a chance of informing us about it yet, in that case send will\n\t        // throw an error\n\t        try {\n\t          if (BrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e) {\n\t          debug('websocket closed before onclose event');\n\t        }\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done () {\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function () {\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function () {\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function () {\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('wss' === schema && this.port !== 443) ||\n\t    ('ws' === schema && this.port !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function () {\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * JSON parse.\n\t *\n\t * @see Based on jQuery#parseJSON (MIT) and JSON2\n\t * @api private\n\t */\n\t\n\tvar rvalidchars = /^[\\],:{}\\s]*$/;\n\tvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n\tvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\tvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n\tvar rtrimLeft = /^\\s+/;\n\tvar rtrimRight = /\\s+$/;\n\t\n\tmodule.exports = function parsejson(data) {\n\t  if ('string' != typeof data || !data) {\n\t    return null;\n\t  }\n\t\n\t  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\t\n\t  // Attempt to parse using the native JSON parser first\n\t  if (global.JSON && JSON.parse) {\n\t    return JSON.parse(data);\n\t  }\n\t\n\t  if (rvalidchars.test(data.replace(rvalidescape, '@')\n\t      .replace(rvalidtokens, ']')\n\t      .replace(rvalidbraces, ''))) {\n\t    return (new Function('return ' + data))();\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(7);\n\tvar Emitter = __webpack_require__(43);\n\tvar toArray = __webpack_require__(44);\n\tvar on = __webpack_require__(45);\n\tvar bind = __webpack_require__(46);\n\tvar debug = __webpack_require__(4)('socket.io-client:socket');\n\tvar hasBin = __webpack_require__(47);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket (io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [\n\t    on(io, 'open', bind(this, 'onopen')),\n\t    on(io, 'packet', bind(this, 'onpacket')),\n\t    on(io, 'close', bind(this, 'onclose'))\n\t  ];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open =\n\tSocket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' === this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var parserType = parser.EVENT; // default\n\t  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\t  var packet = { type: parserType, data: args };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' === typeof args[args.length - 1]) {\n\t    debug('emitting packet with ack id %d', this.ids);\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  delete this.flags;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t  debug('transport is open - connecting');\n\t\n\t  // write connect packet if necessary\n\t  if ('/' !== this.nsp) {\n\t    if (this.query) {\n\t      this.packet({type: parser.CONNECT, query: this.query});\n\t    } else {\n\t      this.packet({type: parser.CONNECT});\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t  debug('close (%s)', reason);\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  if (packet.nsp !== this.nsp) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t  debug('emitting event %j', args);\n\t\n\t  if (null != packet.id) {\n\t    debug('attaching ack callback to event');\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t    debug('sending ack %j', args);\n\t\n\t    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n\t    self.packet({\n\t      type: type,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if ('function' === typeof ack) {\n\t    debug('calling ack %s with %j', packet.id, packet.data);\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {\n\t    debug('bad ack %s', packet.id);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t  debug('server disconnect (%s)', this.nsp);\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close =\n\tSocket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t    debug('performing disconnect (%s)', this.nsp);\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags = this.flags || {};\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on (obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function () {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(13);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      // see: https://github.com/Automattic/has-binary/pull/4\n\t      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ }\n/******/ ])))\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** vue-websocket.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f1a7d7f2b7c4bc7c5558\n **/","import IO from \"socket.io-client\";\n\nexport default {\n\n\tinstall(Vue, connection, opts) {\n\n\t\tlet socket;\n\n\t\tif (connection != null && typeof connection === \"object\")\n\t\t\tsocket = connection;\n\t\telse\n\t\t\tsocket = IO(connection || \"\", opts);\n\n\t\tVue.prototype.$socket = socket;\n\n\t\tlet addListeners = function() {\n\t\t\tif (this.$options[\"socket\"]) {\n\t\t\t\tlet conf = this.$options.socket;\n\t\t\t\tif (conf.namespace) {\t\t\t\t\t\n\t\t\t\t\tthis.$socket = IO(conf.namespace, conf.options);\n\t\t\t\t}\n\n\t\t\t\tif (conf.events) {\n\t\t\t\t\tlet prefix = conf.prefix || \"\";\n\t\t\t\t\tObject.keys(conf.events).forEach((key) => {\n\t\t\t\t\t\tlet func = conf.events[key].bind(this);\n\t\t\t\t\t\tthis.$socket.on(prefix + key, func);\n\t\t\t\t\t\tconf.events[key].__binded = func;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet removeListeners = function() {\n\t\t\tif (this.$options[\"socket\"]) {\n\t\t\t\tlet conf = this.$options.socket;\n\n\t\t\t\tif (conf.namespace) {\n\t\t\t\t\tthis.$socket.disconnect();\n\t\t\t\t}\n\n\t\t\t\tif (conf.events) {\n\t\t\t\t\tlet prefix = conf.prefix || \"\";\n\t\t\t\t\tObject.keys(conf.events).forEach((key) => {\n\t\t\t\t\t\tthis.$socket.off(prefix + key, conf.events[key].__binded);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tVue.mixin({\n\t\t\t[Vue.version.indexOf('2') === 0 ? 'beforeCreate' : 'beforeCompile']: addListeners,\n\t\t\tbeforeDestroy: removeListeners\n\t\t});\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  } else if (opts && 'object' === typeof opts.query) {\n    opts.query = encodeQueryString(opts.query);\n  }\n  return io.socket(parsed.path, opts);\n}\n/**\n *  Helper method to parse query objects to string.\n * @param {object} query\n * @returns {string}\n */\nfunction encodeQueryString (obj) {\n  var str = [];\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n  return str.join('&');\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/index.js\n ** module id = 1\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/url.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/parseuri/index.js\n ** module id = 3\n ** module chunks = 0\n **/","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/browser.js\n ** module id = 4\n ** module chunks = 0\n **/","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/debug.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ms/index.js\n ** module id = 6\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = json.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n};\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-parser/index.js\n ** module id = 7\n ** module chunks = 0\n **/","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/json3/lib/json3.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 10\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-parser/~/component-emitter/index.js\n ** module id = 11\n ** module chunks = 0\n **/","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-parser/binary.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 13\n ** module chunks = 0\n **/","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-parser/is-buffer.js\n ** module id = 14\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/manager.js\n ** module id = 15\n ** module chunks = 0\n **/","\nmodule.exports = require('./lib/index');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/index.js\n ** module id = 16\n ** module chunks = 0\n **/","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/index.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/socket.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/transports/index.js\n ** module id = 19\n ** module chunks = 0\n **/","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/xmlhttprequest.js\n ** module id = 20\n ** module chunks = 0\n **/","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/has-cors/index.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/transports/polling-xhr.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && this.port !== 443) ||\n     ('http' === schema && this.port !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/transports/polling.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/transport.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('wtf-8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data == 'string') {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data);\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-parser/lib/browser.js\n ** module id = 25\n ** module chunks = 0\n **/","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-parser/lib/keys.js\n ** module id = 26\n ** module chunks = 0\n **/","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-parser/~/has-binary/index.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/arraybuffer.slice/index.js\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/after/index.js\n ** module id = 29\n ** module chunks = 0\n **/","/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction wtf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte.\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read the first byte.\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid WTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction wtf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar wtf8 = {\n\t\t'version': '1.0.0',\n\t\t'encode': wtf8encode,\n\t\t'decode': wtf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn wtf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = wtf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in wtf8) {\n\t\t\t\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.wtf8 = wtf8;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/wtf-8/wtf-8.js\n ** module id = 30\n ** module chunks = 0\n **/","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-arraybuffer/lib/base64-arraybuffer.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/blob/index.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/parseqs/index.js\n ** module id = 34\n ** module chunks = 0\n **/","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-inherit/index.js\n ** module id = 35\n ** module chunks = 0\n **/","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/yeast/index.js\n ** module id = 36\n ** module chunks = 0\n **/","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/transports/polling-jsonp.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  try {\n    WebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = void (0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  try {\n    this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && this.port !== 443) ||\n    ('ws' === schema && this.port !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/engine.io-client/lib/transports/websocket.js\n ** module id = 38\n ** module chunks = 0\n **/","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/indexof/index.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/parsejson/index.js\n ** module id = 41\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      this.packet({type: parser.CONNECT, query: this.query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/socket.js\n ** module id = 42\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-emitter/index.js\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/to-array/index.js\n ** module id = 44\n ** module chunks = 0\n **/","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/on.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-bind/index.js\n ** module id = 46\n ** module chunks = 0\n **/","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/has-binary/index.js\n ** module id = 47\n ** module chunks = 0\n **/","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/backo2/index.js\n ** module id = 48\n ** module chunks = 0\n **/"],"sourceRoot":""}