var __wxAppData = {};
var __wxRoute;
var __wxRouteBegin;
var __wxAppCode__ = {};
var global = {};
var __wxAppCurrentFile__;
if(typeof __WXML_GLOBAL__ !== 'undefined'){
  delete __WXML_GLOBAL__.ops_cached//remove ops_cached(v8 下会有 cache)
}
// var Component = Component || function() {};
// var definePlugin = definePlugin || function() {};
// var requirePlugin = requirePlugin || function() {};
// var Behavior = Behavior || function() {};
var $gwx;
  
/*v0.5vv_20190312_syb_scopedata*/global.__wcc_version__='v0.5vv_20190312_syb_scopedata';global.__wcc_version_info__={"customComponents":true,"fixZeroRpx":true,"propValueDeepCopy":false};
var $gwxc
var $gaic={}
$gwx=function(path,global){
if(typeof global === 'undefined') global={};if(typeof __WXML_GLOBAL__ === 'undefined') {__WXML_GLOBAL__={};
}__WXML_GLOBAL__.modules = __WXML_GLOBAL__.modules || {};
function _(a,b){if(typeof(b)!='undefined')a.children.push(b);}
function _v(k){if(typeof(k)!='undefined')return {tag:'virtual','wxKey':k,children:[]};return {tag:'virtual',children:[]};}
function _n(tag){$gwxc++;if($gwxc>=16000){throw 'Dom limit exceeded, please check if there\'s any mistake you\'ve made.'};return {tag:'wx-'+tag,attr:{},children:[],n:[],raw:{},generics:{}}}
function _p(a,b){b&&a.properities.push(b);}
function _s(scope,env,key){return typeof(scope[key])!='undefined'?scope[key]:env[key]}
function _wp(m){console.warn("WXMLRT_$gwx:"+m)}
function _wl(tname,prefix){_wp(prefix+':-1:-1:-1: Template `' + tname + '` is being called recursively, will be stop.')}
$gwn=console.warn;
$gwl=console.log;
function $gwh()
{
function x()
{
}
x.prototype = 
{
hn: function( obj, all )
{
if( typeof(obj) == 'object' )
{
var cnt=0;
var any1=false,any2=false;
for(var x in obj)
{
any1=any1|x==='__value__';
any2=any2|x==='__wxspec__';
cnt++;
if(cnt>2)break;
}
return cnt == 2 && any1 && any2 && ( all || obj.__wxspec__ !== 'm' || this.hn(obj.__value__) === 'h' ) ? "h" : "n";
}
return "n";
},
nh: function( obj, special )
{
return { __value__: obj, __wxspec__: special ? special : true }
},
rv: function( obj )
{
return this.hn(obj,true)==='n'?obj:this.rv(obj.__value__);
},
hm: function( obj )
{
if( typeof(obj) == 'object' )
{
var cnt=0;
var any1=false,any2=false;
for(var x in obj)
{
any1=any1|x==='__value__';
any2=any2|x==='__wxspec__';
cnt++;
if(cnt>2)break;
}
return cnt == 2 && any1 && any2 && (obj.__wxspec__ === 'm' || this.hm(obj.__value__) );
}
return false;
}
}
return new x;
}
wh=$gwh();
function $gstack(s){
var tmp=s.split('\n '+' '+' '+' ');
for(var i=0;i<tmp.length;++i){
if(0==i) continue;
if(")"===tmp[i][tmp[i].length-1])
tmp[i]=tmp[i].replace(/\s\(.*\)$/,"");
else
tmp[i]="at anonymous function";
}
return tmp.join('\n '+' '+' '+' ');
}
function $gwrt( should_pass_type_info )
{
function ArithmeticEv( ops, e, s, g, o )
{
var _f = false;
var rop = ops[0][1];
var _a,_b,_c,_d, _aa, _bb;
switch( rop )
{
case '?:':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && ( wh.hn(_a) === 'h' );
_d = wh.rv( _a ) ? rev( ops[2], e, s, g, o, _f ) : rev( ops[3], e, s, g, o, _f );
_d = _c && wh.hn( _d ) === 'n' ? wh.nh( _d, 'c' ) : _d;
return _d;
break;
case '&&':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && ( wh.hn(_a) === 'h' );
_d = wh.rv( _a ) ? rev( ops[2], e, s, g, o, _f ) : wh.rv( _a );
_d = _c && wh.hn( _d ) === 'n' ? wh.nh( _d, 'c' ) : _d;
return _d;
break;
case '||':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && ( wh.hn(_a) === 'h' );
_d = wh.rv( _a ) ? wh.rv(_a) : rev( ops[2], e, s, g, o, _f );
_d = _c && wh.hn( _d ) === 'n' ? wh.nh( _d, 'c' ) : _d;
return _d;
break;
case '+':
case '*':
case '/':
case '%':
case '|':
case '^':
case '&':
case '===':
case '==':
case '!=':
case '!==':
case '>=':
case '<=':
case '>':
case '<':
case '<<':
case '>>':
_a = rev( ops[1], e, s, g, o, _f );
_b = rev( ops[2], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) === 'h' || wh.hn( _b ) === 'h');
switch( rop )
{
case '+':
_d = wh.rv( _a ) + wh.rv( _b );
break;
case '*':
_d = wh.rv( _a ) * wh.rv( _b );
break;
case '/':
_d = wh.rv( _a ) / wh.rv( _b );
break;
case '%':
_d = wh.rv( _a ) % wh.rv( _b );
break;
case '|':
_d = wh.rv( _a ) | wh.rv( _b );
break;
case '^':
_d = wh.rv( _a ) ^ wh.rv( _b );
break;
case '&':
_d = wh.rv( _a ) & wh.rv( _b );
break;
case '===':
_d = wh.rv( _a ) === wh.rv( _b );
break;
case '==':
_d = wh.rv( _a ) == wh.rv( _b );
break;
case '!=':
_d = wh.rv( _a ) != wh.rv( _b );
break;
case '!==':
_d = wh.rv( _a ) !== wh.rv( _b );
break;
case '>=':
_d = wh.rv( _a ) >= wh.rv( _b );
break;
case '<=':
_d = wh.rv( _a ) <= wh.rv( _b );
break;
case '>':
_d = wh.rv( _a ) > wh.rv( _b );
break;
case '<':
_d = wh.rv( _a ) < wh.rv( _b );
break;
case '<<':
_d = wh.rv( _a ) << wh.rv( _b );
break;
case '>>':
_d = wh.rv( _a ) >> wh.rv( _b );
break;
default:
break;
}
return _c ? wh.nh( _d, "c" ) : _d;
break;
case '-':
_a = ops.length === 3 ? rev( ops[1], e, s, g, o, _f ) : 0;
_b = ops.length === 3 ? rev( ops[2], e, s, g, o, _f ) : rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) === 'h' || wh.hn( _b ) === 'h');
_d = _c ? wh.rv( _a ) - wh.rv( _b ) : _a - _b;
return _c ? wh.nh( _d, "c" ) : _d;
break;
case '!':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) == 'h');
_d = !wh.rv(_a);
return _c ? wh.nh( _d, "c" ) : _d;
case '~':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) == 'h');
_d = ~wh.rv(_a);
return _c ? wh.nh( _d, "c" ) : _d;
default:
$gwn('unrecognized op' + rop );
}
}
function rev( ops, e, s, g, o, newap )
{
var op = ops[0];
var _f = false;
if ( typeof newap !== "undefined" ) o.ap = newap;
if( typeof(op)==='object' )
{
var vop=op[0];
var _a, _aa, _b, _bb, _c, _d, _s, _e, _ta, _tb, _td;
switch(vop)
{
case 2:
return ArithmeticEv(ops,e,s,g,o);
break;
case 4: 
return rev( ops[1], e, s, g, o, _f );
break;
case 5: 
switch( ops.length )
{
case 2: 
_a = rev( ops[1],e,s,g,o,_f );
return should_pass_type_info?[_a]:[wh.rv(_a)];
return [_a];
break;
case 1: 
return [];
break;
default:
_a = rev( ops[1],e,s,g,o,_f );
_b = rev( ops[2],e,s,g,o,_f );
_a.push( 
should_pass_type_info ?
_b :
wh.rv( _b )
);
return _a;
break;
}
break;
case 6:
_a = rev(ops[1],e,s,g,o);
var ap = o.ap;
_ta = wh.hn(_a)==='h';
_aa = _ta ? wh.rv(_a) : _a;
o.is_affected |= _ta;
if( should_pass_type_info )
{
if( _aa===null || typeof(_aa) === 'undefined' )
{
return _ta ? wh.nh(undefined, 'e') : undefined;
}
_b = rev(ops[2],e,s,g,o,_f);
_tb = wh.hn(_b) === 'h';
_bb = _tb ? wh.rv(_b) : _b;
o.ap = ap;
o.is_affected |= _tb;
if( _bb===null || typeof(_bb) === 'undefined' || 
_bb === "__proto__" || _bb === "prototype" || _bb === "caller" ) 
{
return (_ta || _tb) ? wh.nh(undefined, 'e') : undefined;
}
_d = _aa[_bb];
if ( typeof _d === 'function' && !ap ) _d = undefined;
_td = wh.hn(_d)==='h';
o.is_affected |= _td;
return (_ta || _tb) ? (_td ? _d : wh.nh(_d, 'e')) : _d;
}
else
{
if( _aa===null || typeof(_aa) === 'undefined' )
{
return undefined;
}
_b = rev(ops[2],e,s,g,o,_f);
_tb = wh.hn(_b) === 'h';
_bb = _tb ? wh.rv(_b) : _b;
o.ap = ap;
o.is_affected |= _tb;
if( _bb===null || typeof(_bb) === 'undefined' || 
_bb === "__proto__" || _bb === "prototype" || _bb === "caller" ) 
{
return undefined;
}
_d = _aa[_bb];
if ( typeof _d === 'function' && !ap ) _d = undefined;
_td = wh.hn(_d)==='h';
o.is_affected |= _td;
return _td ? wh.rv(_d) : _d;
}
case 7: 
switch(ops[1][0])
{
case 11:
o.is_affected |= wh.hn(g)==='h';
return g;
case 3:
_s = wh.rv( s );
_e = wh.rv( e );
_b = ops[1][1];
if (g && g.f && g.f.hasOwnProperty(_b) )
{
_a = g.f;
o.ap = true;
}
else
{
_a = _s && _s.hasOwnProperty(_b) ? 
s : (_e && _e.hasOwnProperty(_b) ? e : undefined );
}
if( should_pass_type_info )
{
if( _a )
{
_ta = wh.hn(_a) === 'h';
_aa = _ta ? wh.rv( _a ) : _a;
_d = _aa[_b];
_td = wh.hn(_d) === 'h';
o.is_affected |= _ta || _td;
_d = _ta && !_td ? wh.nh(_d,'e') : _d;
return _d;
}
}
else
{
if( _a )
{
_ta = wh.hn(_a) === 'h';
_aa = _ta ? wh.rv( _a ) : _a;
_d = _aa[_b];
_td = wh.hn(_d) === 'h';
o.is_affected |= _ta || _td;
return wh.rv(_d);
}
}
return undefined;
}
break;
case 8: 
_a = {};
_a[ops[1]] = rev(ops[2],e,s,g,o,_f);
return _a;
break;
case 9: 
_a = rev(ops[1],e,s,g,o,_f);
_b = rev(ops[2],e,s,g,o,_f);
function merge( _a, _b, _ow )
{
var ka, _bbk;
_ta = wh.hn(_a)==='h';
_tb = wh.hn(_b)==='h';
_aa = wh.rv(_a);
_bb = wh.rv(_b);
for(var k in _bb)
{
if ( _ow || !_aa.hasOwnProperty(k) )
{
_aa[k] = should_pass_type_info ? (_tb ? wh.nh(_bb[k],'e') : _bb[k]) : wh.rv(_bb[k]);
}
}
return _a;
}
var _c = _a
var _ow = true
if ( typeof(ops[1][0]) === "object" && ops[1][0][0] === 10 ) {
_a = _b
_b = _c
_ow = false
}
if ( typeof(ops[1][0]) === "object" && ops[1][0][0] === 10 ) {
var _r = {}
return merge( merge( _r, _a, _ow ), _b, _ow );
}
else
return merge( _a, _b, _ow );
break;
case 10:
_a = rev(ops[1],e,s,g,o,_f);
_a = should_pass_type_info ? _a : wh.rv( _a );
return _a ;
break;
case 12:
var _r;
_a = rev(ops[1],e,s,g,o);
if ( !o.ap )
{
return should_pass_type_info && wh.hn(_a)==='h' ? wh.nh( _r, 'f' ) : _r;
}
var ap = o.ap;
_b = rev(ops[2],e,s,g,o,_f);
o.ap = ap;
_ta = wh.hn(_a)==='h';
_tb = _ca(_b);
_aa = wh.rv(_a);	
_bb = wh.rv(_b); snap_bb=$gdc(_bb,"nv_");
try{
_r = typeof _aa === "function" ? $gdc(_aa.apply(null, snap_bb)) : undefined;
} catch (e){
e.message = e.message.replace(/nv_/g,"");
e.stack = e.stack.substring(0,e.stack.indexOf("\n", e.stack.lastIndexOf("at nv_")));
e.stack = e.stack.replace(/\snv_/g," "); 
e.stack = $gstack(e.stack);	
if(g.debugInfo)
{
e.stack += "\n "+" "+" "+" at "+g.debugInfo[0]+":"+g.debugInfo[1]+":"+g.debugInfo[2];
console.error(e);
}
_r = undefined;
}
return should_pass_type_info && (_tb || _ta) ? wh.nh( _r, 'f' ) : _r;
}
}
else
{
if( op === 3 || op === 1) return ops[1];
else if( op === 11 ) 
{
var _a='';
for( var i = 1 ; i < ops.length ; i++ )
{
var xp = wh.rv(rev(ops[i],e,s,g,o,_f));
_a += typeof(xp) === 'undefined' ? '' : xp;
}
return _a;
}
}
}
function wrapper( ops, e, s, g, o, newap )
{
if( ops[0] == '11182016' )
{
g.debugInfo = ops[2];
return rev( ops[1], e, s, g, o, newap );
}
else
{
g.debugInfo = null;
return rev( ops, e, s, g, o, newap );
}
}
return wrapper;
}
gra=$gwrt(true); 
grb=$gwrt(false); 
function TestTest( expr, ops, e,s,g, expect_a, expect_b, expect_affected )
{
{
var o = {is_affected:false};
var a = gra( ops, e,s,g, o );
if( JSON.stringify(a) != JSON.stringify( expect_a )
|| o.is_affected != expect_affected )
{
console.warn( "A. " + expr + " get result " + JSON.stringify(a) + ", " + o.is_affected + ", but " + JSON.stringify( expect_a ) + ", " + expect_affected + " is expected" );
}
}
{
var o = {is_affected:false};
var a = grb( ops, e,s,g, o );
if( JSON.stringify(a) != JSON.stringify( expect_b )
|| o.is_affected != expect_affected )
{
console.warn( "B. " + expr + " get result " + JSON.stringify(a) + ", " + o.is_affected + ", but " + JSON.stringify( expect_b ) + ", " + expect_affected + " is expected" );
}
}
}

function wfor( to_iter, func, env, _s, global, father, itemname, indexname, keyname )
{
var _n = wh.hn( to_iter ) === 'n'; 
var scope = wh.rv( _s ); 
var has_old_item = scope.hasOwnProperty(itemname);
var has_old_index = scope.hasOwnProperty(indexname);
var old_item = scope[itemname];
var old_index = scope[indexname];
var full = Object.prototype.toString.call(wh.rv(to_iter));
var type = full[8]; 
if( type === 'N' && full[10] === 'l' ) type = 'X'; 
var _y;
if( _n )
{
if( type === 'A' ) 
{
var r_iter_item;
for( var i = 0 ; i < to_iter.length ; i++ )
{
scope[itemname] = to_iter[i];
scope[indexname] = _n ? i : wh.nh(i, 'h');
r_iter_item = wh.rv(to_iter[i]);
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y = _v(key);
_(father,_y);
func( env, scope, _y, global );
}
}
else if( type === 'O' ) 
{
var i = 0;
var r_iter_item;
for( var k in to_iter )
{
scope[itemname] = to_iter[k];
scope[indexname] = _n ? k : wh.nh(k, 'h');
r_iter_item = wh.rv(to_iter[k]);
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y = _v(key);
_(father,_y);
func( env,scope,_y,global );
i++;
}
}
else if( type === 'S' ) 
{
for( var i = 0 ; i < to_iter.length ; i++ )
{
scope[itemname] = to_iter[i];
scope[indexname] = _n ? i : wh.nh(i, 'h');
_y = _v( to_iter[i] + i );
_(father,_y);
func( env,scope,_y,global );
}
}
else if( type === 'N' ) 
{
for( var i = 0 ; i < to_iter ; i++ )
{
scope[itemname] = i;
scope[indexname] = _n ? i : wh.nh(i, 'h');
_y = _v( i );
_(father,_y);
func(env,scope,_y,global);
}
}
else
{
}
}
else
{
var r_to_iter = wh.rv(to_iter);
var r_iter_item, iter_item;
if( type === 'A' ) 
{
for( var i = 0 ; i < r_to_iter.length ; i++ )
{
iter_item = r_to_iter[i];
iter_item = wh.hn(iter_item)==='n' ? wh.nh(iter_item,'h') : iter_item;
r_iter_item = wh.rv( iter_item );
scope[itemname] = iter_item
scope[indexname] = _n ? i : wh.nh(i, 'h');
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y = _v(key);
_(father,_y);
func( env, scope, _y, global );
}
}
else if( type === 'O' ) 
{
var i=0;
for( var k in r_to_iter )
{
iter_item = r_to_iter[k];
iter_item = wh.hn(iter_item)==='n'? wh.nh(iter_item,'h') : iter_item;
r_iter_item = wh.rv( iter_item );
scope[itemname] = iter_item;
scope[indexname] = _n ? k : wh.nh(k, 'h');
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y=_v(key);
_(father,_y);
func( env, scope, _y, global );
i++
}
}
else if( type === 'S' ) 
{
for( var i = 0 ; i < r_to_iter.length ; i++ )
{
iter_item = wh.nh(r_to_iter[i],'h');
scope[itemname] = iter_item;
scope[indexname] = _n ? i : wh.nh(i, 'h');
_y = _v( to_iter[i] + i );
_(father,_y);
func( env, scope, _y, global );
}
}
else if( type === 'N' ) 
{
for( var i = 0 ; i < r_to_iter ; i++ )
{
iter_item = wh.nh(i,'h');
scope[itemname] = iter_item;
scope[indexname]= _n ? i : wh.nh(i,'h');
_y = _v( i );
_(father,_y);
func(env,scope,_y,global);
}
}
else
{
}
}
if(has_old_item)
{
scope[itemname]=old_item;
}
else
{
delete scope[itemname];
}
if(has_old_index)
{
scope[indexname]=old_index;
}
else
{
delete scope[indexname];
}
}

function _ca(o)
{ 
if ( wh.hn(o) == 'h' ) return true;
if ( typeof o !== "object" ) return false;
for(var i in o){ 
if ( o.hasOwnProperty(i) ){
if (_ca(o[i])) return true;
}
}
return false;
}
function _da( node, attrname, opindex, raw, o )
{
var isaffected = false;
var value = $gdc( raw, "", 2 );
if ( o.ap && value && value.constructor===Function ) 
{
attrname = "$wxs:" + attrname; 
node.attr["$gdc"] = $gdc;
}
if ( o.is_affected || _ca(raw) ) 
{
node.n.push( attrname );
node.raw[attrname] = raw;
}
node.attr[attrname] = value;
}
function _r( node, attrname, opindex, env, scope, global ) 
{
global.opindex=opindex;
var o = {}, _env;
var a = grb( z[opindex], env, scope, global, o );
_da( node, attrname, opindex, a, o );
}
function _rz( z, node, attrname, opindex, env, scope, global ) 
{
global.opindex=opindex;
var o = {}, _env;
var a = grb( z[opindex], env, scope, global, o );
_da( node, attrname, opindex, a, o );
}
function _o( opindex, env, scope, global )
{
global.opindex=opindex;
var nothing = {};
var r = grb( z[opindex], env, scope, global, nothing );
return (r&&r.constructor===Function) ? undefined : r;
}
function _oz( z, opindex, env, scope, global )
{
global.opindex=opindex;
var nothing = {};
var r = grb( z[opindex], env, scope, global, nothing );
return (r&&r.constructor===Function) ? undefined : r;
}
function _1( opindex, env, scope, global, o )
{
var o = o || {};
global.opindex=opindex;
return gra( z[opindex], env, scope, global, o );
}
function _1z( z, opindex, env, scope, global, o )
{
var o = o || {};
global.opindex=opindex;
return gra( z[opindex], env, scope, global, o );
}
function _2( opindex, func, env, scope, global, father, itemname, indexname, keyname )
{
var o = {};
var to_iter = _1( opindex, env, scope, global );
wfor( to_iter, func, env, scope, global, father, itemname, indexname, keyname );
}
function _2z( z, opindex, func, env, scope, global, father, itemname, indexname, keyname )
{
var o = {};
var to_iter = _1z( z, opindex, env, scope, global );
wfor( to_iter, func, env, scope, global, father, itemname, indexname, keyname );
}


function _m(tag,attrs,generics,env,scope,global)
{
var tmp=_n(tag);
var base=0;
for(var i = 0 ; i < attrs.length ; i+=2 )
{
if(base+attrs[i+1]<0)
{
tmp.attr[attrs[i]]=true;
}
else
{
_r(tmp,attrs[i],base+attrs[i+1],env,scope,global);
if(base===0)base=attrs[i+1];
}
}
for(var i=0;i<generics.length;i+=2)
{
if(base+generics[i+1]<0)
{
tmp.generics[generics[i]]="";
}
else
{
var $t=grb(z[base+generics[i+1]],env,scope,global);
if ($t!="") $t="wx-"+$t;
tmp.generics[generics[i]]=$t;
if(base===0)base=generics[i+1];
}
}
return tmp;
}
function _mz(z,tag,attrs,generics,env,scope,global)
{
var tmp=_n(tag);
var base=0;
for(var i = 0 ; i < attrs.length ; i+=2 )
{
if(base+attrs[i+1]<0)
{
tmp.attr[attrs[i]]=true;
}
else
{
_rz(z, tmp,attrs[i],base+attrs[i+1],env,scope,global);
if(base===0)base=attrs[i+1];
}
}
for(var i=0;i<generics.length;i+=2)
{
if(base+generics[i+1]<0)
{
tmp.generics[generics[i]]="";
}
else
{
var $t=grb(z[base+generics[i+1]],env,scope,global);
if ($t!="") $t="wx-"+$t;
tmp.generics[generics[i]]=$t;
if(base===0)base=generics[i+1];
}
}
return tmp;
}

var nf_init=function(){
if(typeof __WXML_GLOBAL__==="undefined"||undefined===__WXML_GLOBAL__.wxs_nf_init){
nf_init_Object();nf_init_Function();nf_init_Array();nf_init_String();nf_init_Boolean();nf_init_Number();nf_init_Math();nf_init_Date();nf_init_RegExp();
}
if(typeof __WXML_GLOBAL__!=="undefined") __WXML_GLOBAL__.wxs_nf_init=true;
};
var nf_init_Object=function(){
Object.defineProperty(Object.prototype,"nv_constructor",{writable:true,value:"Object"})
Object.defineProperty(Object.prototype,"nv_toString",{writable:true,value:function(){return "[object Object]"}})
}
var nf_init_Function=function(){
Object.defineProperty(Function.prototype,"nv_constructor",{writable:true,value:"Function"})
Object.defineProperty(Function.prototype,"nv_length",{get:function(){return this.length;},set:function(){}});
Object.defineProperty(Function.prototype,"nv_toString",{writable:true,value:function(){return "[function Function]"}})
}
var nf_init_Array=function(){
Object.defineProperty(Array.prototype,"nv_toString",{writable:true,value:function(){return this.nv_join();}})
Object.defineProperty(Array.prototype,"nv_join",{writable:true,value:function(s){
s=undefined==s?',':s;
var r="";
for(var i=0;i<this.length;++i){
if(0!=i) r+=s;
if(null==this[i]||undefined==this[i]) r+='';	
else if(typeof this[i]=='function') r+=this[i].nv_toString();
else if(typeof this[i]=='object'&&this[i].nv_constructor==="Array") r+=this[i].nv_join();
else r+=this[i].toString();
}
return r;
}})
Object.defineProperty(Array.prototype,"nv_constructor",{writable:true,value:"Array"})
Object.defineProperty(Array.prototype,"nv_concat",{writable:true,value:Array.prototype.concat})
Object.defineProperty(Array.prototype,"nv_pop",{writable:true,value:Array.prototype.pop})
Object.defineProperty(Array.prototype,"nv_push",{writable:true,value:Array.prototype.push})
Object.defineProperty(Array.prototype,"nv_reverse",{writable:true,value:Array.prototype.reverse})
Object.defineProperty(Array.prototype,"nv_shift",{writable:true,value:Array.prototype.shift})
Object.defineProperty(Array.prototype,"nv_slice",{writable:true,value:Array.prototype.slice})
Object.defineProperty(Array.prototype,"nv_sort",{writable:true,value:Array.prototype.sort})
Object.defineProperty(Array.prototype,"nv_splice",{writable:true,value:Array.prototype.splice})
Object.defineProperty(Array.prototype,"nv_unshift",{writable:true,value:Array.prototype.unshift})
Object.defineProperty(Array.prototype,"nv_indexOf",{writable:true,value:Array.prototype.indexOf})
Object.defineProperty(Array.prototype,"nv_lastIndexOf",{writable:true,value:Array.prototype.lastIndexOf})
Object.defineProperty(Array.prototype,"nv_every",{writable:true,value:Array.prototype.every})
Object.defineProperty(Array.prototype,"nv_some",{writable:true,value:Array.prototype.some})
Object.defineProperty(Array.prototype,"nv_forEach",{writable:true,value:Array.prototype.forEach})
Object.defineProperty(Array.prototype,"nv_map",{writable:true,value:Array.prototype.map})
Object.defineProperty(Array.prototype,"nv_filter",{writable:true,value:Array.prototype.filter})
Object.defineProperty(Array.prototype,"nv_reduce",{writable:true,value:Array.prototype.reduce})
Object.defineProperty(Array.prototype,"nv_reduceRight",{writable:true,value:Array.prototype.reduceRight})
Object.defineProperty(Array.prototype,"nv_length",{get:function(){return this.length;},set:function(value){this.length=value;}});
}
var nf_init_String=function(){
Object.defineProperty(String.prototype,"nv_constructor",{writable:true,value:"String"})
Object.defineProperty(String.prototype,"nv_toString",{writable:true,value:String.prototype.toString})
Object.defineProperty(String.prototype,"nv_valueOf",{writable:true,value:String.prototype.valueOf})
Object.defineProperty(String.prototype,"nv_charAt",{writable:true,value:String.prototype.charAt})
Object.defineProperty(String.prototype,"nv_charCodeAt",{writable:true,value:String.prototype.charCodeAt})
Object.defineProperty(String.prototype,"nv_concat",{writable:true,value:String.prototype.concat})
Object.defineProperty(String.prototype,"nv_indexOf",{writable:true,value:String.prototype.indexOf})
Object.defineProperty(String.prototype,"nv_lastIndexOf",{writable:true,value:String.prototype.lastIndexOf})
Object.defineProperty(String.prototype,"nv_localeCompare",{writable:true,value:String.prototype.localeCompare})
Object.defineProperty(String.prototype,"nv_match",{writable:true,value:String.prototype.match})
Object.defineProperty(String.prototype,"nv_replace",{writable:true,value:String.prototype.replace})
Object.defineProperty(String.prototype,"nv_search",{writable:true,value:String.prototype.search})
Object.defineProperty(String.prototype,"nv_slice",{writable:true,value:String.prototype.slice})
Object.defineProperty(String.prototype,"nv_split",{writable:true,value:String.prototype.split})
Object.defineProperty(String.prototype,"nv_substring",{writable:true,value:String.prototype.substring})
Object.defineProperty(String.prototype,"nv_toLowerCase",{writable:true,value:String.prototype.toLowerCase})
Object.defineProperty(String.prototype,"nv_toLocaleLowerCase",{writable:true,value:String.prototype.toLocaleLowerCase})
Object.defineProperty(String.prototype,"nv_toUpperCase",{writable:true,value:String.prototype.toUpperCase})
Object.defineProperty(String.prototype,"nv_toLocaleUpperCase",{writable:true,value:String.prototype.toLocaleUpperCase})
Object.defineProperty(String.prototype,"nv_trim",{writable:true,value:String.prototype.trim})
Object.defineProperty(String.prototype,"nv_length",{get:function(){return this.length;},set:function(value){this.length=value;}});
}
var nf_init_Boolean=function(){
Object.defineProperty(Boolean.prototype,"nv_constructor",{writable:true,value:"Boolean"})
Object.defineProperty(Boolean.prototype,"nv_toString",{writable:true,value:Boolean.prototype.toString})
Object.defineProperty(Boolean.prototype,"nv_valueOf",{writable:true,value:Boolean.prototype.valueOf})
}
var nf_init_Number=function(){
Object.defineProperty(Number,"nv_MAX_VALUE",{writable:false,value:Number.MAX_VALUE})
Object.defineProperty(Number,"nv_MIN_VALUE",{writable:false,value:Number.MIN_VALUE})
Object.defineProperty(Number,"nv_NEGATIVE_INFINITY",{writable:false,value:Number.NEGATIVE_INFINITY})
Object.defineProperty(Number,"nv_POSITIVE_INFINITY",{writable:false,value:Number.POSITIVE_INFINITY})
Object.defineProperty(Number.prototype,"nv_constructor",{writable:true,value:"Number"})
Object.defineProperty(Number.prototype,"nv_toString",{writable:true,value:Number.prototype.toString})
Object.defineProperty(Number.prototype,"nv_toLocaleString",{writable:true,value:Number.prototype.toLocaleString})
Object.defineProperty(Number.prototype,"nv_valueOf",{writable:true,value:Number.prototype.valueOf})
Object.defineProperty(Number.prototype,"nv_toFixed",{writable:true,value:Number.prototype.toFixed})
Object.defineProperty(Number.prototype,"nv_toExponential",{writable:true,value:Number.prototype.toExponential})
Object.defineProperty(Number.prototype,"nv_toPrecision",{writable:true,value:Number.prototype.toPrecision})
}
var nf_init_Math=function(){
Object.defineProperty(Math,"nv_E",{writable:false,value:Math.E})
Object.defineProperty(Math,"nv_LN10",{writable:false,value:Math.LN10})
Object.defineProperty(Math,"nv_LN2",{writable:false,value:Math.LN2})
Object.defineProperty(Math,"nv_LOG2E",{writable:false,value:Math.LOG2E})
Object.defineProperty(Math,"nv_LOG10E",{writable:false,value:Math.LOG10E})
Object.defineProperty(Math,"nv_PI",{writable:false,value:Math.PI})
Object.defineProperty(Math,"nv_SQRT1_2",{writable:false,value:Math.SQRT1_2})
Object.defineProperty(Math,"nv_SQRT2",{writable:false,value:Math.SQRT2})
Object.defineProperty(Math,"nv_abs",{writable:false,value:Math.abs})
Object.defineProperty(Math,"nv_acos",{writable:false,value:Math.acos})
Object.defineProperty(Math,"nv_asin",{writable:false,value:Math.asin})
Object.defineProperty(Math,"nv_atan",{writable:false,value:Math.atan})
Object.defineProperty(Math,"nv_atan2",{writable:false,value:Math.atan2})
Object.defineProperty(Math,"nv_ceil",{writable:false,value:Math.ceil})
Object.defineProperty(Math,"nv_cos",{writable:false,value:Math.cos})
Object.defineProperty(Math,"nv_exp",{writable:false,value:Math.exp})
Object.defineProperty(Math,"nv_floor",{writable:false,value:Math.floor})
Object.defineProperty(Math,"nv_log",{writable:false,value:Math.log})
Object.defineProperty(Math,"nv_max",{writable:false,value:Math.max})
Object.defineProperty(Math,"nv_min",{writable:false,value:Math.min})
Object.defineProperty(Math,"nv_pow",{writable:false,value:Math.pow})
Object.defineProperty(Math,"nv_random",{writable:false,value:Math.random})
Object.defineProperty(Math,"nv_round",{writable:false,value:Math.round})
Object.defineProperty(Math,"nv_sin",{writable:false,value:Math.sin})
Object.defineProperty(Math,"nv_sqrt",{writable:false,value:Math.sqrt})
Object.defineProperty(Math,"nv_tan",{writable:false,value:Math.tan})
}
var nf_init_Date=function(){
Object.defineProperty(Date.prototype,"nv_constructor",{writable:true,value:"Date"})
Object.defineProperty(Date,"nv_parse",{writable:true,value:Date.parse})
Object.defineProperty(Date,"nv_UTC",{writable:true,value:Date.UTC})
Object.defineProperty(Date,"nv_now",{writable:true,value:Date.now})
Object.defineProperty(Date.prototype,"nv_toString",{writable:true,value:Date.prototype.toString})
Object.defineProperty(Date.prototype,"nv_toDateString",{writable:true,value:Date.prototype.toDateString})
Object.defineProperty(Date.prototype,"nv_toTimeString",{writable:true,value:Date.prototype.toTimeString})
Object.defineProperty(Date.prototype,"nv_toLocaleString",{writable:true,value:Date.prototype.toLocaleString})
Object.defineProperty(Date.prototype,"nv_toLocaleDateString",{writable:true,value:Date.prototype.toLocaleDateString})
Object.defineProperty(Date.prototype,"nv_toLocaleTimeString",{writable:true,value:Date.prototype.toLocaleTimeString})
Object.defineProperty(Date.prototype,"nv_valueOf",{writable:true,value:Date.prototype.valueOf})
Object.defineProperty(Date.prototype,"nv_getTime",{writable:true,value:Date.prototype.getTime})
Object.defineProperty(Date.prototype,"nv_getFullYear",{writable:true,value:Date.prototype.getFullYear})
Object.defineProperty(Date.prototype,"nv_getUTCFullYear",{writable:true,value:Date.prototype.getUTCFullYear})
Object.defineProperty(Date.prototype,"nv_getMonth",{writable:true,value:Date.prototype.getMonth})
Object.defineProperty(Date.prototype,"nv_getUTCMonth",{writable:true,value:Date.prototype.getUTCMonth})
Object.defineProperty(Date.prototype,"nv_getDate",{writable:true,value:Date.prototype.getDate})
Object.defineProperty(Date.prototype,"nv_getUTCDate",{writable:true,value:Date.prototype.getUTCDate})
Object.defineProperty(Date.prototype,"nv_getDay",{writable:true,value:Date.prototype.getDay})
Object.defineProperty(Date.prototype,"nv_getUTCDay",{writable:true,value:Date.prototype.getUTCDay})
Object.defineProperty(Date.prototype,"nv_getHours",{writable:true,value:Date.prototype.getHours})
Object.defineProperty(Date.prototype,"nv_getUTCHours",{writable:true,value:Date.prototype.getUTCHours})
Object.defineProperty(Date.prototype,"nv_getMinutes",{writable:true,value:Date.prototype.getMinutes})
Object.defineProperty(Date.prototype,"nv_getUTCMinutes",{writable:true,value:Date.prototype.getUTCMinutes})
Object.defineProperty(Date.prototype,"nv_getSeconds",{writable:true,value:Date.prototype.getSeconds})
Object.defineProperty(Date.prototype,"nv_getUTCSeconds",{writable:true,value:Date.prototype.getUTCSeconds})
Object.defineProperty(Date.prototype,"nv_getMilliseconds",{writable:true,value:Date.prototype.getMilliseconds})
Object.defineProperty(Date.prototype,"nv_getUTCMilliseconds",{writable:true,value:Date.prototype.getUTCMilliseconds})
Object.defineProperty(Date.prototype,"nv_getTimezoneOffset",{writable:true,value:Date.prototype.getTimezoneOffset})
Object.defineProperty(Date.prototype,"nv_setTime",{writable:true,value:Date.prototype.setTime})
Object.defineProperty(Date.prototype,"nv_setMilliseconds",{writable:true,value:Date.prototype.setMilliseconds})
Object.defineProperty(Date.prototype,"nv_setUTCMilliseconds",{writable:true,value:Date.prototype.setUTCMilliseconds})
Object.defineProperty(Date.prototype,"nv_setSeconds",{writable:true,value:Date.prototype.setSeconds})
Object.defineProperty(Date.prototype,"nv_setUTCSeconds",{writable:true,value:Date.prototype.setUTCSeconds})
Object.defineProperty(Date.prototype,"nv_setMinutes",{writable:true,value:Date.prototype.setMinutes})
Object.defineProperty(Date.prototype,"nv_setUTCMinutes",{writable:true,value:Date.prototype.setUTCMinutes})
Object.defineProperty(Date.prototype,"nv_setHours",{writable:true,value:Date.prototype.setHours})
Object.defineProperty(Date.prototype,"nv_setUTCHours",{writable:true,value:Date.prototype.setUTCHours})
Object.defineProperty(Date.prototype,"nv_setDate",{writable:true,value:Date.prototype.setDate})
Object.defineProperty(Date.prototype,"nv_setUTCDate",{writable:true,value:Date.prototype.setUTCDate})
Object.defineProperty(Date.prototype,"nv_setMonth",{writable:true,value:Date.prototype.setMonth})
Object.defineProperty(Date.prototype,"nv_setUTCMonth",{writable:true,value:Date.prototype.setUTCMonth})
Object.defineProperty(Date.prototype,"nv_setFullYear",{writable:true,value:Date.prototype.setFullYear})
Object.defineProperty(Date.prototype,"nv_setUTCFullYear",{writable:true,value:Date.prototype.setUTCFullYear})
Object.defineProperty(Date.prototype,"nv_toUTCString",{writable:true,value:Date.prototype.toUTCString})
Object.defineProperty(Date.prototype,"nv_toISOString",{writable:true,value:Date.prototype.toISOString})
Object.defineProperty(Date.prototype,"nv_toJSON",{writable:true,value:Date.prototype.toJSON})
}
var nf_init_RegExp=function(){
Object.defineProperty(RegExp.prototype,"nv_constructor",{writable:true,value:"RegExp"})
Object.defineProperty(RegExp.prototype,"nv_exec",{writable:true,value:RegExp.prototype.exec})
Object.defineProperty(RegExp.prototype,"nv_test",{writable:true,value:RegExp.prototype.test})
Object.defineProperty(RegExp.prototype,"nv_toString",{writable:true,value:RegExp.prototype.toString})
Object.defineProperty(RegExp.prototype,"nv_source",{get:function(){return this.source;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_global",{get:function(){return this.global;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_ignoreCase",{get:function(){return this.ignoreCase;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_multiline",{get:function(){return this.multiline;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_lastIndex",{get:function(){return this.lastIndex;},set:function(v){this.lastIndex=v;}});
}
nf_init();
var nv_getDate=function(){var args=Array.prototype.slice.call(arguments);args.unshift(Date);return new(Function.prototype.bind.apply(Date, args));}
var nv_getRegExp=function(){var args=Array.prototype.slice.call(arguments);args.unshift(RegExp);return new(Function.prototype.bind.apply(RegExp, args));}
var nv_console={}
nv_console.nv_log=function(){var res="WXSRT:";for(var i=0;i<arguments.length;++i)res+=arguments[i]+" ";console.log(res);}
var nv_parseInt = parseInt, nv_parseFloat = parseFloat, nv_isNaN = isNaN, nv_isFinite = isFinite, nv_decodeURI = decodeURI, nv_decodeURIComponent = decodeURIComponent, nv_encodeURI = encodeURI, nv_encodeURIComponent = encodeURIComponent;
function $gdc(o,p,r) {
o=wh.rv(o);
if(o===null||o===undefined) return o;
if(o.constructor===String||o.constructor===Boolean||o.constructor===Number) return o;
if(o.constructor===Object){
var copy={};
for(var k in o)
if(o.hasOwnProperty(k))
if(undefined===p) copy[k.substring(3)]=$gdc(o[k],p,r);
else copy[p+k]=$gdc(o[k],p,r);
return copy;
}
if(o.constructor===Array){
var copy=[];
for(var i=0;i<o.length;i++) copy.push($gdc(o[i],p,r));
return copy;
}
if(o.constructor===Date){
var copy=new Date();
copy.setTime(o.getTime());
return copy;
}
if(o.constructor===RegExp){
var f="";
if(o.global) f+="g";
if(o.ignoreCase) f+="i";
if(o.multiline) f+="m";
return (new RegExp(o.source,f));
}
if(r&&o.constructor===Function){
if ( r == 1 ) return $gdc(o(),undefined, 2);
if ( r == 2 ) return o;
}
return null;
}
var nv_JSON={}
nv_JSON.nv_stringify=function(o){
JSON.stringify(o);
return JSON.stringify($gdc(o));
}
nv_JSON.nv_parse=function(o){
if(o===undefined) return undefined;
var t=JSON.parse(o);
return $gdc(t,'nv_');
}

function _af(p, a, c){
p.extraAttr = {"t_action": a, "t_cid": c};
}

function _ai(i,p,e,me,r,c){var x=_grp(p,e,me);if(x)i.push(x);else{i.push('');_wp(me+':import:'+r+':'+c+': Path `'+p+'` not found from `'+me+'`.')}}
function _grp(p,e,me){if(p[0]!='/'){var mepart=me.split('/');mepart.pop();var ppart=p.split('/');for(var i=0;i<ppart.length;i++){if( ppart[i]=='..')mepart.pop();else if(!ppart[i]||ppart[i]=='.')continue;else mepart.push(ppart[i]);}p=mepart.join('/');}if(me[0]=='.'&&p[0]=='/')p='.'+p;if(e[p])return p;if(e[p+'.wxml'])return p+'.wxml';}
function _gd(p,c,e,d){if(!c)return;if(d[p][c])return d[p][c];for(var x=e[p].i.length-1;x>=0;x--){if(e[p].i[x]&&d[e[p].i[x]][c])return d[e[p].i[x]][c]};for(var x=e[p].ti.length-1;x>=0;x--){var q=_grp(e[p].ti[x],e,p);if(q&&d[q][c])return d[q][c]}var ii=_gapi(e,p);for(var x=0;x<ii.length;x++){if(ii[x]&&d[ii[x]][c])return d[ii[x]][c]}for(var k=e[p].j.length-1;k>=0;k--)if(e[p].j[k]){for(var q=e[e[p].j[k]].ti.length-1;q>=0;q--){var pp=_grp(e[e[p].j[k]].ti[q],e,p);if(pp&&d[pp][c]){return d[pp][c]}}}}
function _gapi(e,p){if(!p)return [];if($gaic[p]){return $gaic[p]};var ret=[],q=[],h=0,t=0,put={},visited={};q.push(p);visited[p]=true;t++;while(h<t){var a=q[h++];for(var i=0;i<e[a].ic.length;i++){var nd=e[a].ic[i];var np=_grp(nd,e,a);if(np&&!visited[np]){visited[np]=true;q.push(np);t++;}}for(var i=0;a!=p&&i<e[a].ti.length;i++){var ni=e[a].ti[i];var nm=_grp(ni,e,a);if(nm&&!put[nm]){put[nm]=true;ret.push(nm);}}}$gaic[p]=ret;return ret;}
var $ixc={};function _ic(p,ent,me,e,s,r,gg){var x=_grp(p,ent,me);ent[me].j.push(x);if(x){if($ixc[x]){_wp('-1:include:-1:-1: `'+p+'` is being included in a loop, will be stop.');return;}$ixc[x]=true;try{ent[x].f(e,s,r,gg)}catch(e){}$ixc[x]=false;}else{_wp(me+':include:-1:-1: Included path `'+p+'` not found from `'+me+'`.')}}
function _w(tn,f,line,c){_wp(f+':template:'+line+':'+c+': Template `'+tn+'` not found.');}function _ev(dom){var changed=false;delete dom.properities;delete dom.n;if(dom.children){do{changed=false;var newch = [];for(var i=0;i<dom.children.length;i++){var ch=dom.children[i];if( ch.tag=='virtual'){changed=true;for(var j=0;ch.children&&j<ch.children.length;j++){newch.push(ch.children[j]);}}else { newch.push(ch); } } dom.children = newch; }while(changed);for(var i=0;i<dom.children.length;i++){_ev(dom.children[i]);}} return dom; }
function _tsd( root )
{
if( root.tag == "wx-wx-scope" ) 
{
root.tag = "virtual";
root.wxCkey = "11";
root['wxScopeData'] = root.attr['wx:scope-data'];
delete root.n;
delete root.raw;
delete root.generics;
delete root.attr;
}
for( var i = 0 ; root.children && i < root.children.length ; i++ )
{
_tsd( root.children[i] );
}
return root;
}

var e_={}
if(typeof(global.entrys)==='undefined')global.entrys={};e_=global.entrys;
var d_={}
if(typeof(global.defines)==='undefined')global.defines={};d_=global.defines;
var f_={}
if(typeof(global.modules)==='undefined')global.modules={};f_=global.modules || {};
var p_={}
__WXML_GLOBAL__.ops_cached = __WXML_GLOBAL__.ops_cached || {}
__WXML_GLOBAL__.ops_set = __WXML_GLOBAL__.ops_set || {};
__WXML_GLOBAL__.ops_init = __WXML_GLOBAL__.ops_init || {};
var z=__WXML_GLOBAL__.ops_set.$gwx || [];
function gz$gwx_1(){
if( __WXML_GLOBAL__.ops_cached.$gwx_1)return __WXML_GLOBAL__.ops_cached.$gwx_1
__WXML_GLOBAL__.ops_cached.$gwx_1=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
Z([[4],[[5],[[5],[[5],[[5],[[5],[1,'HMmessages']],[[2,'?:'],[[7],[3,'isShow']],[1,'show'],[1,'hide']]],[[2,'?:'],[[7],[3,'isStatus']],[1,'status'],[1,'']]],[[2,'?:'],[[7],[3,'isTransparent']],[1,'transparent'],[1,'']]],[[2,'?:'],[[7],[3,'isTransparentH5']],[1,'transparentH5'],[1,'']]]])
Z([[2,'+'],[[2,'+'],[1,'background-color:'],[[7],[3,'background']]],[1,';']])
Z([[2,'!='],[[7],[3,'icon']],[1,'none']])
Z([[7],[3,'closeButton']])
})(__WXML_GLOBAL__.ops_cached.$gwx_1);return __WXML_GLOBAL__.ops_cached.$gwx_1
}
function gz$gwx_2(){
if( __WXML_GLOBAL__.ops_cached.$gwx_2)return __WXML_GLOBAL__.ops_cached.$gwx_2
__WXML_GLOBAL__.ops_cached.$gwx_2=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
Z([3,'__l'])
Z([3,'__e'])
Z(z[1])
Z([3,'vue-ref'])
Z([[4],[[5],[[5],[[4],[[5],[[5],[1,'^complete']],[[4],[[5],[[4],[[5],[1,'e0']]]]]]]],[[4],[[5],[[5],[1,'^clickMessage']],[[4],[[5],[[4],[[5],[1,'clickMessage']]]]]]]]])
Z([3,'HMmessages'])
Z([3,'1'])
})(__WXML_GLOBAL__.ops_cached.$gwx_2);return __WXML_GLOBAL__.ops_cached.$gwx_2
}
__WXML_GLOBAL__.ops_set.$gwx=z;
__WXML_GLOBAL__.ops_init.$gwx=true;
var nv_require=function(){var nnm={};var nom={};return function(n){return function(){if(!nnm[n]) return undefined;try{if(!nom[n])nom[n]=nnm[n]();return nom[n];}catch(e){e.message=e.message.replace(/nv_/g,'');var tmp = e.stack.substring(0,e.stack.lastIndexOf(n));e.stack = tmp.substring(0,tmp.lastIndexOf('\n'));e.stack = e.stack.replace(/\snv_/g,' ');e.stack = $gstack(e.stack);e.stack += '\n    at ' + n.substring(2);console.error(e);}
}}}()
var x=['./components/HM-messages/HM-messages.wxml','./pages/index/index.wxml'];d_[x[0]]={}
var m0=function(e,s,r,gg){
var z=gz$gwx_1()
var oB=_mz(z,'view',['class',0,'style',1],[],e,s,gg)
var xC=_v()
_(oB,xC)
if(_oz(z,2,e,s,gg)){xC.wxVkey=1
}
var oD=_v()
_(oB,oD)
if(_oz(z,3,e,s,gg)){oD.wxVkey=1
}
xC.wxXCkey=1
oD.wxXCkey=1
_(r,oB)
return r
}
e_[x[0]]={f:m0,j:[],i:[],ti:[],ic:[]}
d_[x[1]]={}
var m1=function(e,s,r,gg){
var z=gz$gwx_2()
var cF=_mz(z,'h-mmessages',['bind:__l',0,'bind:clickMessage',1,'bind:complete',1,'class',2,'data-event-opts',3,'data-ref',4,'vueId',5],[],e,s,gg)
_(r,cF)
return r
}
e_[x[1]]={f:m1,j:[],i:[],ti:[],ic:[]}
if(path&&e_[path]){
return function(env,dd,global){$gwxc=0;var root={"tag":"wx-page"};root.children=[]
var main=e_[path].f
if (typeof global==="undefined")global={};global.f=$gdc(f_[path],"",1);
try{
main(env,{},root,global);
_tsd(root)
}catch(err){
console.log(err)
}
return root;
}
}
}



__wxAppCode__['app.json']={"pages":["pages/index/index"],"subPackages":[],"window":{"navigationBarTextStyle":"black","navigationBarTitleText":"uni-app","navigationBarBackgroundColor":"#F8F8F8","backgroundColor":"#F8F8F8"},"nvueCompiler":"weex","splashscreen":{"alwaysShowBeforeRender":true,"autoclose":false},"appname":"物联网","compilerVersion":"2.0.1","usingComponents":{}};
__wxAppCode__['app.wxml']=$gwx('./app.wxml');

__wxAppCode__['components/HM-messages/HM-messages.json']={"usingComponents":{},"component":true};
__wxAppCode__['components/HM-messages/HM-messages.wxml']=$gwx('./components/HM-messages/HM-messages.wxml');

__wxAppCode__['pages/index/index.json']={"navigationBarTitleText":"登录","navigationBarBackgroundColor":"crimson","navigationBarTextStyle":"white","usingComponents":{"h-mmessages":"/components/HM-messages/HM-messages"}};
__wxAppCode__['pages/index/index.wxml']=$gwx('./pages/index/index.wxml');



define('common/main.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/main"],{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\App.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/App.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default =
{
  onLaunch: function onLaunch() {
    console.log('App Launch', " at App.vue:4");
  },
  onShow: function onShow() {
    console.log('App Show', " at App.vue:7");
  },
  onHide: function onHide() {
    console.log('App Hide', " at App.vue:10");
  } };exports.default = _default;

/***/ }),

/***/ "F:\\app\\物联网\\App.vue":
/*!**************************!*\
  !*** F:/app/物联网/App.vue ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ "F:\\app\\物联网\\App.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");
var render, staticRenderFns




/* normalize component */

var component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(
  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"],
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "F:/app/物联网/App.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "F:\\app\\物联网\\App.vue?vue&type=script&lang=js&":
/*!***************************************************!*\
  !*** F:/app/物联网/App.vue?vue&type=script&lang=js& ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./App.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\App.vue?vue&type=script&lang=js&");
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ })

},[["F:\\app\\物联网\\main.js","common/runtime","common/vendor"]]]);
});
define('common/runtime.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /******/(function (modules) {// webpackBootstrap
  /******/ // install a JSONP callback for chunk loading
  /******/function webpackJsonpCallback(data) {
    /******/var chunkIds = data[0];
    /******/var moreModules = data[1];
    /******/var executeModules = data[2];
    /******/
    /******/ // add "moreModules" to the modules object,
    /******/ // then flag all "chunkIds" as loaded and fire callback
    /******/var moduleId,chunkId,i = 0,resolves = [];
    /******/for (; i < chunkIds.length; i++) {
      /******/chunkId = chunkIds[i];
      /******/if (installedChunks[chunkId]) {
        /******/resolves.push(installedChunks[chunkId][0]);
        /******/}
      /******/installedChunks[chunkId] = 0;
      /******/}
    /******/for (moduleId in moreModules) {
      /******/if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
        /******/modules[moduleId] = moreModules[moduleId];
        /******/}
      /******/}
    /******/if (parentJsonpFunction) parentJsonpFunction(data);
    /******/
    /******/while (resolves.length) {
      /******/resolves.shift()();
      /******/}
    /******/
    /******/ // add entry modules from loaded chunk to deferred list
    /******/deferredModules.push.apply(deferredModules, executeModules || []);
    /******/
    /******/ // run deferred modules when all chunks ready
    /******/return checkDeferredModules();
    /******/};
  /******/function checkDeferredModules() {
    /******/var result;
    /******/for (var i = 0; i < deferredModules.length; i++) {
      /******/var deferredModule = deferredModules[i];
      /******/var fulfilled = true;
      /******/for (var j = 1; j < deferredModule.length; j++) {
        /******/var depId = deferredModule[j];
        /******/if (installedChunks[depId] !== 0) fulfilled = false;
        /******/}
      /******/if (fulfilled) {
        /******/deferredModules.splice(i--, 1);
        /******/result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
        /******/}
      /******/}
    /******/return result;
    /******/}
  /******/
  /******/ // The module cache
  /******/var installedModules = {};
  /******/
  /******/ // object to store loaded CSS chunks
  /******/var installedCssChunks = {
    /******/"common/runtime": 0
    /******/
    /******/
    /******/ // object to store loaded and loading chunks
    /******/ // undefined = chunk not loaded, null = chunk preloaded/prefetched
    /******/ // Promise = chunk loading, 0 = chunk loaded
    /******/ };var installedChunks = {
    /******/"common/runtime": 0
    /******/ };
  /******/
  /******/var deferredModules = [];
  /******/
  /******/ // script path function
  /******/function jsonpScriptSrc(chunkId) {
    /******/return __webpack_require__.p + "" + chunkId + ".js";
    /******/}
  /******/
  /******/ // The require function
  /******/function __webpack_require__(moduleId) {
    /******/
    /******/ // Check if module is in cache
    /******/if (installedModules[moduleId]) {
      /******/return installedModules[moduleId].exports;
      /******/}
    /******/ // Create a new module (and put it into the cache)
    /******/var module = installedModules[moduleId] = {
      /******/i: moduleId,
      /******/l: false,
      /******/exports: {}
      /******/ };
    /******/
    /******/ // Execute the module function
    /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    /******/
    /******/ // Flag the module as loaded
    /******/module.l = true;
    /******/
    /******/ // Return the exports of the module
    /******/return module.exports;
    /******/}
  /******/
  /******/ // This file contains only the entry chunk.
  /******/ // The chunk loading function for additional chunks
  /******/__webpack_require__.e = function requireEnsure(chunkId) {
    /******/var promises = [];
    /******/
    /******/
    /******/ // mini-css-extract-plugin CSS loading
    /******/var cssChunks = { "components/HM-messages/HM-messages": 1 };
    /******/if (installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);
    /******/else if (installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {
        /******/promises.push(installedCssChunks[chunkId] = new Promise(function (resolve, reject) {
          /******/var href = "" + ({ "components/HM-messages/HM-messages": "components/HM-messages/HM-messages" }[chunkId] || chunkId) + ".wxss";
          /******/var fullhref = __webpack_require__.p + href;
          /******/var existingLinkTags = document.getElementsByTagName("link");
          /******/for (var i = 0; i < existingLinkTags.length; i++) {
            /******/var tag = existingLinkTags[i];
            /******/var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
            /******/if (tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return resolve();
            /******/}
          /******/var existingStyleTags = document.getElementsByTagName("style");
          /******/for (var i = 0; i < existingStyleTags.length; i++) {
            /******/var tag = existingStyleTags[i];
            /******/var dataHref = tag.getAttribute("data-href");
            /******/if (dataHref === href || dataHref === fullhref) return resolve();
            /******/}
          /******/var linkTag = document.createElement("link");
          /******/linkTag.rel = "stylesheet";
          /******/linkTag.type = "text/css";
          /******/linkTag.onload = resolve;
          /******/linkTag.onerror = function (event) {
            /******/var request = event && event.target && event.target.src || fullhref;
            /******/var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + request + ")");
            /******/err.request = request;
            /******/delete installedCssChunks[chunkId];
            /******/linkTag.parentNode.removeChild(linkTag);
            /******/reject(err);
            /******/};
          /******/linkTag.href = fullhref;
          /******/
          /******/var head = document.getElementsByTagName("head")[0];
          /******/head.appendChild(linkTag);
          /******/}).then(function () {
          /******/installedCssChunks[chunkId] = 0;
          /******/}));
        /******/}
    /******/
    /******/ // JSONP chunk loading for javascript
    /******/
    /******/var installedChunkData = installedChunks[chunkId];
    /******/if (installedChunkData !== 0) {// 0 means "already installed".
      /******/
      /******/ // a Promise means "currently loading".
      /******/if (installedChunkData) {
        /******/promises.push(installedChunkData[2]);
        /******/} else {
        /******/ // setup Promise in chunk cache
        /******/var promise = new Promise(function (resolve, reject) {
          /******/installedChunkData = installedChunks[chunkId] = [resolve, reject];
          /******/});
        /******/promises.push(installedChunkData[2] = promise);
        /******/
        /******/ // start chunk loading
        /******/var script = document.createElement('script');
        /******/var onScriptComplete;
        /******/
        /******/script.charset = 'utf-8';
        /******/script.timeout = 120;
        /******/if (__webpack_require__.nc) {
          /******/script.setAttribute("nonce", __webpack_require__.nc);
          /******/}
        /******/script.src = jsonpScriptSrc(chunkId);
        /******/
        /******/onScriptComplete = function onScriptComplete(event) {
          /******/ // avoid mem leaks in IE.
          /******/script.onerror = script.onload = null;
          /******/clearTimeout(timeout);
          /******/var chunk = installedChunks[chunkId];
          /******/if (chunk !== 0) {
            /******/if (chunk) {
              /******/var errorType = event && (event.type === 'load' ? 'missing' : event.type);
              /******/var realSrc = event && event.target && event.target.src;
              /******/var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
              /******/error.type = errorType;
              /******/error.request = realSrc;
              /******/chunk[1](error);
              /******/}
            /******/installedChunks[chunkId] = undefined;
            /******/}
          /******/};
        /******/var timeout = setTimeout(function () {
          /******/onScriptComplete({ type: 'timeout', target: script });
          /******/}, 120000);
        /******/script.onerror = script.onload = onScriptComplete;
        /******/document.head.appendChild(script);
        /******/}
      /******/}
    /******/return Promise.all(promises);
    /******/};
  /******/
  /******/ // expose the modules object (__webpack_modules__)
  /******/__webpack_require__.m = modules;
  /******/
  /******/ // expose the module cache
  /******/__webpack_require__.c = installedModules;
  /******/
  /******/ // define getter function for harmony exports
  /******/__webpack_require__.d = function (exports, name, getter) {
    /******/if (!__webpack_require__.o(exports, name)) {
      /******/Object.defineProperty(exports, name, { enumerable: true, get: getter });
      /******/}
    /******/};
  /******/
  /******/ // define __esModule on exports
  /******/__webpack_require__.r = function (exports) {
    /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
      /******/Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
      /******/}
    /******/Object.defineProperty(exports, '__esModule', { value: true });
    /******/};
  /******/
  /******/ // create a fake namespace object
  /******/ // mode & 1: value is a module id, require it
  /******/ // mode & 2: merge all properties of value into the ns
  /******/ // mode & 4: return value when already ns object
  /******/ // mode & 8|1: behave like require
  /******/__webpack_require__.t = function (value, mode) {
    /******/if (mode & 1) value = __webpack_require__(value);
    /******/if (mode & 8) return value;
    /******/if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;
    /******/var ns = Object.create(null);
    /******/__webpack_require__.r(ns);
    /******/Object.defineProperty(ns, 'default', { enumerable: true, value: value });
    /******/if (mode & 2 && typeof value != 'string') for (var key in value) {__webpack_require__.d(ns, key, function (key) {return value[key];}.bind(null, key));}
    /******/return ns;
    /******/};
  /******/
  /******/ // getDefaultExport function for compatibility with non-harmony modules
  /******/__webpack_require__.n = function (module) {
    /******/var getter = module && module.__esModule ?
    /******/function getDefault() {return module['default'];} :
    /******/function getModuleExports() {return module;};
    /******/__webpack_require__.d(getter, 'a', getter);
    /******/return getter;
    /******/};
  /******/
  /******/ // Object.prototype.hasOwnProperty.call
  /******/__webpack_require__.o = function (object, property) {return Object.prototype.hasOwnProperty.call(object, property);};
  /******/
  /******/ // __webpack_public_path__
  /******/__webpack_require__.p = "/";
  /******/
  /******/ // on error function for async loading
  /******/__webpack_require__.oe = function (err) {console.error(err);throw err;};
  /******/
  /******/var jsonpArray = global["webpackJsonp"] = global["webpackJsonp"] || [];
  /******/var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
  /******/jsonpArray.push = webpackJsonpCallback;
  /******/jsonpArray = jsonpArray.slice();
  /******/for (var i = 0; i < jsonpArray.length; i++) {webpackJsonpCallback(jsonpArray[i]);}
  /******/var parentJsonpFunction = oldJsonpFunction;
  /******/
  /******/
  /******/ // run deferred modules from other chunks
  /******/checkDeferredModules();
  /******/})(
/************************************************************************/
/******/[]);
});
define('common/vendor.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ "./node_modules/@dcloudio/uni-app-plus/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createPage = createPage;exports.createComponent = createComponent;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ "./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var SYNC_API_RE = /^\$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;

var CONTEXT_API_RE = /^create|Manager$/;

var CALLBACK_API_RE = /^on/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name);
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name);
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name);
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {params[_key - 1] = arguments[_key];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return api.apply(void 0, [options].concat(params));
    }
    return handlePromise(new Promise(function (resolve, reject) {
      api.apply(void 0, [Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
      /* eslint-disable no-extend-native */
      if (!Promise.prototype.finally) {
        Promise.prototype.finally = function (callback) {
          var promise = this.constructor;
          return this.then(
          function (value) {return promise.resolve(callback()).then(function () {return value;});},
          function (reason) {return promise.resolve(callback()).then(function () {
              throw reason;
            });});

        };
      }
    }));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      return 1;
    } else {
      return 0.5;
    }
  }
  return number < 0 ? -result : result;
}

var protocols = {};
var todos = [];
var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("app-plus ".concat(methodName, "\u6682\u4E0D\u652F\u6301").concat(key));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("app-plus \u6682\u4E0D\u652F\u6301".concat(methodName));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      var returnValue = wx[options.name || methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail:\u6682\u4E0D\u652F\u6301 ").concat(name, " \u65B9\u6CD5") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var getEmitter = function () {
  if (typeof getUniEmitter === 'function') {
    /* eslint-disable no-undef */
    return getUniEmitter;
  }
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}



var eventApi = /*#__PURE__*/Object.freeze({
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


function wrapper$1(webview) {
  webview.$processed = true;

  webview.postMessage = function (data) {
    plus.webview.postMessageToUniNView({
      type: 'UniAppSubNVue',
      data: data },
    webview.id);
  };
  var callbacks = [];
  webview.onMessage = function (callback) {
    callbacks.push(callback);
  };
  webview.$consumeMessage = function (e) {
    callbacks.forEach(function (callback) {return callback(e);});
  };

  if (!webview.__uniapp_mask_id) {
    return;
  }
  var maskColor = webview.__uniapp_mask;
  var maskWebview = plus.webview.getWebviewById(webview.__uniapp_mask_id);
  maskWebview = maskWebview.parent() || maskWebview; // 再次检测父
  var oldShow = webview.show;
  var oldHide = webview.hide;
  var oldClose = webview.close;

  var showMask = function showMask() {
    maskWebview.setStyle({
      mask: maskColor });

  };
  var closeMask = function closeMask() {
    maskWebview.setStyle({
      mask: 'none' });

  };
  webview.show = function () {
    showMask();for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {args[_key2] = arguments[_key2];}
    return oldShow.apply(webview, args);
  };
  webview.hide = function () {
    closeMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}
    return oldHide.apply(webview, args);
  };
  webview.close = function () {
    closeMask();
    callbacks = [];for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
    return oldClose.apply(webview, args);
  };
}

function getSubNVueById(id) {
  var webview = plus.webview.getWebviewById(id);
  if (webview && !webview.$processed) {
    wrapper$1(webview);
  }
  return webview;
}

function requireNativePlugin(pluginName) {
  /* eslint-disable no-undef */
  if (typeof weex !== 'undefined') {
    return weex.requireModule(pluginName);
  }
  /* eslint-disable no-undef */
  return __requireNativePlugin__(pluginName);
}

var api = /*#__PURE__*/Object.freeze({
  requireNativePlugin: requireNativePlugin,
  getSubNVueById: getSubNVueById });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {args[_key5 - 1] = arguments[_key5];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {args[_key6] = arguments[_key6];}
      return oldHook.apply(this, args);
    };
  }
}

Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('onLoad', options);
  return MPPage(options);
};

Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('created', options);
  return MPComponent(options);
};

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function initHooks(mpOptions, hooks) {
  hooks.forEach(function (hook) {
    mpOptions[hook] = function (args) {
      return this.$vm && this.$vm.__call_hook(hook, args);
    };
  });
}

function initVueComponent(Vue$$1, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
    vueOptions = VueComponent.extendOptions;
  } else {
    VueComponent = Vue$$1.extend(vueOptions);
  }
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"VUE_APP_PLATFORM":"app-plus","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions['behaviors'];
  var vueExtends = vueOptions['extends'];
  var vueMixins = vueOptions['mixins'];

  var vueProps = vueOptions['props'];

  if (!vueProps) {
    vueOptions['props'] = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps['name'] = String;
          vueProps['value'] = null;
        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts['default'];
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type, value, file);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts, null, file);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$2(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                                  *[
                                                  *    ['data.items', 'data.id', item.data.id],
                                                  *    ['metas', 'id', meta.id]
                                                  *],
                                                  *[
                                                  *    ['data.items', 'data.id', item.data.id],
                                                  *    ['metas', 'id', meta.id]
                                                  *],
                                                  *'test'
                                                  */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function handleEvent(event) {var _this = this;
  event = wrapper$2(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var eventOpts = (event.currentTarget || event.target).dataset.eventOpts;
  if (!eventOpts) {
    return console.warn("\u4E8B\u4EF6\u4FE1\u606F\u4E0D\u5B58\u5728");
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;
  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (
          handlerCtx.$options.generic &&
          handlerCtx.$parent &&
          handlerCtx.$parent.$parent)
          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = handlerCtx.$parent.$parent;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          handler.apply(handlerCtx, processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName));

        }
      });
    }
  });
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound'];


function parseBaseApp(vm, _ref2)


{var mocks = _ref2.mocks,initRefs = _ref2.initRefs;
  _vue.default.prototype.mpHost = "app-plus";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;

      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属
  var parentVm = $children.find(function (childVm) {return childVm.$scope._$vueId === vuePid;});
  if (parentVm) {
    return parentVm;
  }
  // 反向递归查找
  for (var i = $children.length - 1; i >= 0; i--) {
    parentVm = findVmByVueId($children[i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      var components = mpInstance.selectAllComponents('.vue-ref');
      components.forEach(function (component) {
        var ref = component.dataset.ref;
        $refs[ref] = component.$vm || component;
      });
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref3 =



  event.detail || event.value,vuePid = _ref3.vuePid,vueOptions = _ref3.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

var hooks$1 = [
'onUniNViewMessage'];


function parseApp$1(vm) {
  var appOptions = parseApp(vm);

  initHooks(appOptions, hooks$1);

  return appOptions;
}

function createApp(vm) {
  App(parseApp$1(vm));
  return vm;
}

function parseBaseComponent(vueComponentOptions)


{var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage$$1 = _ref4.isPage,initRelation$$1 = _ref4.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var componentOptions = {
    options: {
      multipleSlots: true,
      addGlobalClass: true },

    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage$$1.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation$$1.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };



  if (isPage$$1) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function parseComponent$1(vueComponentOptions) {
  var componentOptions = parseComponent(vueComponentOptions);

  componentOptions.methods.$getAppWebview = function () {
    return plus.webview.getWebviewById("".concat(this.__wxWebviewId__));
  };
  return componentOptions;
}

var hooks$2 = [
'onShow',
'onHide',
'onUnload'];


hooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref5)


{var isPage = _ref5.isPage,initRelation = _ref5.initRelation;
  var pageOptions = parseComponent$1(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });


  initHooks(pageOptions.methods, hooks$2);

  pageOptions.methods.onLoad = function (args) {
    this.$vm.$mp.query = args; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', args);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$3 = [
'onBackPress',
'onNavigationBarButtonTap',
'onNavigationBarSearchInputChanged',
'onNavigationBarSearchInputConfirmed',
'onNavigationBarSearchInputClicked'];


function parsePage$1(vuePageOptions) {
  var pageOptions = parsePage(vuePageOptions);

  initHooks(pageOptions.methods, hooks$3);

  return pageOptions;
}

function createPage(vuePageOptions) {
  {
    return Component(parsePage$1(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent$1(vueOptions));
  }
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (name === 'upx2px') {
        return upx2px;
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    } });

} else {
  uni.upx2px = upx2px;

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

{
  if (typeof global !== 'undefined') {
    global.UniEmitter = eventApi;
  }
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.10
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    {
      if(vm.$scope && vm.$scope.is){
        return vm.$scope.is
      }
    }
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
Dep.target = null;
var targetStack = [];

function pushTarget (target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget () {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Techinically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a speical value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack becaues all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(vm._getFormData || (vm.$parent && vm.$parent.__next_tick_pending)){
              return
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props
    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.10';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue != pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"VUE_APP_PLATFORM":"app-plus","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"VUE_APP_PLATFORM":"app-plus","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"VUE_APP_PLATFORM":"app-plus","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
    // 确保当前 vm 所有数据被同步
    var dataKeys = [].concat(
        Object.keys(vm._data || {}),
        Object.keys(vm._computedWatchers || {}));

    var ret = dataKeys.reduce(function(ret, key) {
        ret[key] = vm[key];
        return ret
    }, Object.create(null));
    //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
    Object.assign(ret, vm.$mp.data || {});
    if (
        Array.isArray(vm.$options.behaviors) &&
        vm.$options.behaviors.indexOf('uni://form-field') !== -1
    ) { //form-field
        ret['name'] = vm.name;
        ret['value'] = vm.value;
    }
    return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
    var this$1 = this;

    if (vnode === null) { //destroy
        return
    }
    if (this.mpType === 'page' || this.mpType === 'component') {
        var mpInstance = this.$scope;
        var data = cloneWithData(this);
        data.__webviewId__ = mpInstance.data.__webviewId__;
        var mpData = Object.create(null);
        Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
            mpData[key] = mpInstance.data[key];
        });
        var diffData = diff(data, mpData);
        if (Object.keys(diffData).length) {
            if (Object({"VUE_APP_PLATFORM":"app-plus","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
                console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
                    ']差量更新',
                    JSON.stringify(diffData));
            }
            this.__next_tick_pending = true;
            mpInstance.setData(diffData, function () {
                this$1.__next_tick_pending = false;
                flushCallbacks$1(this$1);
            });
        } else {
            flushCallbacks$1(this);
        }
    }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
    var parts = path.split('.');
    var key = parts[0];
    if (key.indexOf('__$n') === 0) { //number index
        key = parseInt(key.replace('__$n', ''));
    }
    if (parts.length === 1) {
        return obj[key]
    }
    return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

    var oldEmit = Vue.prototype.$emit;

    Vue.prototype.$emit = function(event) {
        if (this.$scope && event) {
            this.$scope['triggerEvent'](event, {
                __args__: toArray(arguments, 1)
            });
        }
        return oldEmit.apply(this, arguments)
    };
    
    Vue.prototype.$nextTick = function (fn) {
      return nextTick$1(this, fn)
    };

    MP_METHODS.forEach(function (method) {
        Vue.prototype[method] = function(args) {
            if (this.$scope) {
                return this.$scope[method](args)
            }
        };
    });

    Vue.prototype.__init_provide = initProvide;

    Vue.prototype.__init_injections = initInjections;

    Vue.prototype.__call_hook = function(hook, args) {
        var vm = this;
        // #7573 disable dep collection when invoking lifecycle hooks
        pushTarget();
        var handlers = vm.$options[hook];
        var info = hook + " hook";
        var ret;
        if (handlers) {
            for (var i = 0, j = handlers.length; i < j; i++) {
                ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
            }
        }
        if (vm._hasHookEvent) {
            vm.$emit('hook:' + hook);
        }
        popTarget();
        return ret
    };

    Vue.prototype.__set_model = function(target, key, value, modifiers) {
        if (Array.isArray(modifiers)) {
            if (modifiers.indexOf('trim') !== -1) {
                value = value.trim();
            }
            if (modifiers.indexOf('number') !== -1) {
                value = this._n(value);
            }
        }
        if(!target){
            target = this;
        }
        target[key] = value;
    };

    Vue.prototype.__set_sync = function(target, key, value) {
        if(!target){
            target = this;
        }
        target[key] = value;
    };

    Vue.prototype.__get_orig = function(item) {
        if (isPlainObject(item)) {
            return item['$orig'] || item
        }
        return item
    };

    Vue.prototype.__get_value = function(dataPath, target) {
        return getTarget(target || this, dataPath)
    };


    Vue.prototype.__get_class = function(dynamicClass, staticClass) {
        return renderClass(staticClass, dynamicClass)
    };

    Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
        if (!dynamicStyle && !staticStyle) {
            return ''
        }
        var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
        var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
        return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
    };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onError',
    //Page
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "F:\\app\\物联网\\jsencrypt\\bin\\jsencrypt.js":
/*!*********************************************!*\
  !*** F:/app/物联网/jsencrypt/bin/jsencrypt.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
(function (global, factory) {
   true ? factory(exports) :
  undefined;
})(void 0, function (exports) {'use strict';

  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  function int2char(n) {
    return BI_RM.charAt(n);
  }
  //#region BIT_OPERATIONS
  // (public) this & a
  function op_and(x, y) {
    return x & y;
  }
  // (public) this | a
  function op_or(x, y) {
    return x | y;
  }
  // (public) this ^ a
  function op_xor(x, y) {
    return x ^ y;
  }
  // (public) this & ~a
  function op_andnot(x, y) {
    return x & ~y;
  }
  // return index of lowest 1-bit in x, x < 2^31
  function lbit(x) {
    if (x == 0) {
      return -1;
    }
    var r = 0;
    if ((x & 0xffff) == 0) {
      x >>= 16;
      r += 16;
    }
    if ((x & 0xff) == 0) {
      x >>= 8;
      r += 8;
    }
    if ((x & 0xf) == 0) {
      x >>= 4;
      r += 4;
    }
    if ((x & 3) == 0) {
      x >>= 2;
      r += 2;
    }
    if ((x & 1) == 0) {
      ++r;
    }
    return r;
  }
  // return number of 1 bits in x
  function cbit(x) {
    var r = 0;
    while (x != 0) {
      x &= x - 1;
      ++r;
    }
    return r;
  }
  //#endregion BIT_OPERATIONS

  var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  var b64pad = "=";
  function hex2b64(h) {
    var i;
    var c;
    var ret = "";
    for (i = 0; i + 3 <= h.length; i += 3) {
      c = parseInt(h.substring(i, i + 3), 16);
      ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);
    }
    if (i + 1 == h.length) {
      c = parseInt(h.substring(i, i + 1), 16);
      ret += b64map.charAt(c << 2);
    } else
    if (i + 2 == h.length) {
      c = parseInt(h.substring(i, i + 2), 16);
      ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);
    }
    while ((ret.length & 3) > 0) {
      ret += b64pad;
    }
    return ret;
  }
  // convert a base64 string to hex
  function b64tohex(s) {
    var ret = "";
    var i;
    var k = 0; // b64 state, 0-3
    var slop = 0;
    for (i = 0; i < s.length; ++i) {
      if (s.charAt(i) == b64pad) {
        break;
      }
      var v = b64map.indexOf(s.charAt(i));
      if (v < 0) {
        continue;
      }
      if (k == 0) {
        ret += int2char(v >> 2);
        slop = v & 3;
        k = 1;
      } else
      if (k == 1) {
        ret += int2char(slop << 2 | v >> 4);
        slop = v & 0xf;
        k = 2;
      } else
      if (k == 2) {
        ret += int2char(slop);
        ret += int2char(v >> 2);
        slop = v & 3;
        k = 3;
      } else
      {
        ret += int2char(slop << 2 | v >> 4);
        ret += int2char(v & 0xf);
        k = 0;
      }
    }
    if (k == 1) {
      ret += int2char(slop << 2);
    }
    return ret;
  }

  /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0
    
    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.
    
    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
  /* global Reflect, Promise */

  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf ||
    { __proto__: [] } instanceof Array && function (d, b) {d.__proto__ = b;} ||
    function (d, b) {for (var p in b) {if (b.hasOwnProperty(p)) d[p] = b[p];}};
    return _extendStatics(d, b);
  };

  function __extends(d, b) {
    _extendStatics(d, b);
    function __() {this.constructor = d;}
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }

  // Hex JavaScript decoder
  // Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var decoder;
  var Hex = {
    decode: function decode(a) {
      var i;
      if (decoder === undefined) {
        var hex = "0123456789ABCDEF";
        var ignore = " \f\n\r\t\xA0\u2028\u2029";
        decoder = {};
        for (i = 0; i < 16; ++i) {
          decoder[hex.charAt(i)] = i;
        }
        hex = hex.toLowerCase();
        for (i = 10; i < 16; ++i) {
          decoder[hex.charAt(i)] = i;
        }
        for (i = 0; i < ignore.length; ++i) {
          decoder[ignore.charAt(i)] = -1;
        }
      }
      var out = [];
      var bits = 0;
      var char_count = 0;
      for (i = 0; i < a.length; ++i) {
        var c = a.charAt(i);
        if (c == "=") {
          break;
        }
        c = decoder[c];
        if (c == -1) {
          continue;
        }
        if (c === undefined) {
          throw new Error("Illegal character at offset " + i);
        }
        bits |= c;
        if (++char_count >= 2) {
          out[out.length] = bits;
          bits = 0;
          char_count = 0;
        } else
        {
          bits <<= 4;
        }
      }
      if (char_count) {
        throw new Error("Hex encoding incomplete: 4 bits missing");
      }
      return out;
    } };


  // Base64 JavaScript decoder
  // Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var decoder$1;
  var Base64 = {
    decode: function decode(a) {
      var i;
      if (decoder$1 === undefined) {
        var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var ignore = "= \f\n\r\t\xA0\u2028\u2029";
        decoder$1 = Object.create(null);
        for (i = 0; i < 64; ++i) {
          decoder$1[b64.charAt(i)] = i;
        }
        for (i = 0; i < ignore.length; ++i) {
          decoder$1[ignore.charAt(i)] = -1;
        }
      }
      var out = [];
      var bits = 0;
      var char_count = 0;
      for (i = 0; i < a.length; ++i) {
        var c = a.charAt(i);
        if (c == "=") {
          break;
        }
        c = decoder$1[c];
        if (c == -1) {
          continue;
        }
        if (c === undefined) {
          throw new Error("Illegal character at offset " + i);
        }
        bits |= c;
        if (++char_count >= 4) {
          out[out.length] = bits >> 16;
          out[out.length] = bits >> 8 & 0xFF;
          out[out.length] = bits & 0xFF;
          bits = 0;
          char_count = 0;
        } else
        {
          bits <<= 6;
        }
      }
      switch (char_count) {
        case 1:
          throw new Error("Base64 encoding incomplete: at least 2 bits missing");
        case 2:
          out[out.length] = bits >> 10;
          break;
        case 3:
          out[out.length] = bits >> 16;
          out[out.length] = bits >> 8 & 0xFF;
          break;}

      return out;
    },
    re: /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,
    unarmor: function unarmor(a) {
      var m = Base64.re.exec(a);
      if (m) {
        if (m[1]) {
          a = m[1];
        } else
        if (m[2]) {
          a = m[2];
        } else
        {
          throw new Error("RegExp out of sync");
        }
      }
      return Base64.decode(a);
    } };


  // Big integer base-10 printing library
  // Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256
  var Int10 = /** @class */function () {
    function Int10(value) {
      this.buf = [+value || 0];
    }
    Int10.prototype.mulAdd = function (m, c) {
      // assert(m <= 256)
      var b = this.buf;
      var l = b.length;
      var i;
      var t;
      for (i = 0; i < l; ++i) {
        t = b[i] * m + c;
        if (t < max) {
          c = 0;
        } else
        {
          c = 0 | t / max;
          t -= c * max;
        }
        b[i] = t;
      }
      if (c > 0) {
        b[i] = c;
      }
    };
    Int10.prototype.sub = function (c) {
      // assert(m <= 256)
      var b = this.buf;
      var l = b.length;
      var i;
      var t;
      for (i = 0; i < l; ++i) {
        t = b[i] - c;
        if (t < 0) {
          t += max;
          c = 1;
        } else
        {
          c = 0;
        }
        b[i] = t;
      }
      while (b[b.length - 1] === 0) {
        b.pop();
      }
    };
    Int10.prototype.toString = function (base) {
      if ((base || 10) != 10) {
        throw new Error("only base 10 is supported");
      }
      var b = this.buf;
      var s = b[b.length - 1].toString();
      for (var i = b.length - 2; i >= 0; --i) {
        s += (max + b[i]).toString().substring(1);
      }
      return s;
    };
    Int10.prototype.valueOf = function () {
      var b = this.buf;
      var v = 0;
      for (var i = b.length - 1; i >= 0; --i) {
        v = v * max + b[i];
      }
      return v;
    };
    Int10.prototype.simplify = function () {
      var b = this.buf;
      return b.length == 1 ? b[0] : this;
    };
    return Int10;
  }();

  // ASN.1 JavaScript decoder
  var ellipsis = "\u2026";
  var reTimeS = /^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
  var reTimeL = /^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
  function stringCut(str, len) {
    if (str.length > len) {
      str = str.substring(0, len) + ellipsis;
    }
    return str;
  }
  var Stream = /** @class */function () {
    function Stream(enc, pos) {
      this.hexDigits = "0123456789ABCDEF";
      if (enc instanceof Stream) {
        this.enc = enc.enc;
        this.pos = enc.pos;
      } else
      {
        // enc should be an array or a binary string
        this.enc = enc;
        this.pos = pos;
      }
    }
    Stream.prototype.get = function (pos) {
      if (pos === undefined) {
        pos = this.pos++;
      }
      if (pos >= this.enc.length) {
        throw new Error("Requesting byte offset " + pos + " on a stream of length " + this.enc.length);
      }
      return "string" === typeof this.enc ? this.enc.charCodeAt(pos) : this.enc[pos];
    };
    Stream.prototype.hexByte = function (b) {
      return this.hexDigits.charAt(b >> 4 & 0xF) + this.hexDigits.charAt(b & 0xF);
    };
    Stream.prototype.hexDump = function (start, end, raw) {
      var s = "";
      for (var i = start; i < end; ++i) {
        s += this.hexByte(this.get(i));
        if (raw !== true) {
          switch (i & 0xF) {
            case 0x7:
              s += "  ";
              break;
            case 0xF:
              s += "\n";
              break;
            default:
              s += " ";}

        }
      }
      return s;
    };
    Stream.prototype.isASCII = function (start, end) {
      for (var i = start; i < end; ++i) {
        var c = this.get(i);
        if (c < 32 || c > 176) {
          return false;
        }
      }
      return true;
    };
    Stream.prototype.parseStringISO = function (start, end) {
      var s = "";
      for (var i = start; i < end; ++i) {
        s += String.fromCharCode(this.get(i));
      }
      return s;
    };
    Stream.prototype.parseStringUTF = function (start, end) {
      var s = "";
      for (var i = start; i < end;) {
        var c = this.get(i++);
        if (c < 128) {
          s += String.fromCharCode(c);
        } else
        if (c > 191 && c < 224) {
          s += String.fromCharCode((c & 0x1F) << 6 | this.get(i++) & 0x3F);
        } else
        {
          s += String.fromCharCode((c & 0x0F) << 12 | (this.get(i++) & 0x3F) << 6 | this.get(i++) & 0x3F);
        }
      }
      return s;
    };
    Stream.prototype.parseStringBMP = function (start, end) {
      var str = "";
      var hi;
      var lo;
      for (var i = start; i < end;) {
        hi = this.get(i++);
        lo = this.get(i++);
        str += String.fromCharCode(hi << 8 | lo);
      }
      return str;
    };
    Stream.prototype.parseTime = function (start, end, shortYear) {
      var s = this.parseStringISO(start, end);
      var m = (shortYear ? reTimeS : reTimeL).exec(s);
      if (!m) {
        return "Unrecognized time: " + s;
      }
      if (shortYear) {
        // to avoid querying the timer, use the fixed range [1970, 2069]
        // it will conform with ITU X.400 [-10, +40] sliding window until 2030
        m[1] = +m[1];
        m[1] += +m[1] < 70 ? 2000 : 1900;
      }
      s = m[1] + "-" + m[2] + "-" + m[3] + " " + m[4];
      if (m[5]) {
        s += ":" + m[5];
        if (m[6]) {
          s += ":" + m[6];
          if (m[7]) {
            s += "." + m[7];
          }
        }
      }
      if (m[8]) {
        s += " UTC";
        if (m[8] != "Z") {
          s += m[8];
          if (m[9]) {
            s += ":" + m[9];
          }
        }
      }
      return s;
    };
    Stream.prototype.parseInteger = function (start, end) {
      var v = this.get(start);
      var neg = v > 127;
      var pad = neg ? 255 : 0;
      var len;
      var s = "";
      // skip unuseful bits (not allowed in DER)
      while (v == pad && ++start < end) {
        v = this.get(start);
      }
      len = end - start;
      if (len === 0) {
        return neg ? -1 : 0;
      }
      // show bit length of huge integers
      if (len > 4) {
        s = v;
        len <<= 3;
        while (((+s ^ pad) & 0x80) == 0) {
          s = +s << 1;
          --len;
        }
        s = "(" + len + " bit)\n";
      }
      // decode the integer
      if (neg) {
        v = v - 256;
      }
      var n = new Int10(v);
      for (var i = start + 1; i < end; ++i) {
        n.mulAdd(256, this.get(i));
      }
      return s + n.toString();
    };
    Stream.prototype.parseBitString = function (start, end, maxLength) {
      var unusedBit = this.get(start);
      var lenBit = (end - start - 1 << 3) - unusedBit;
      var intro = "(" + lenBit + " bit)\n";
      var s = "";
      for (var i = start + 1; i < end; ++i) {
        var b = this.get(i);
        var skip = i == end - 1 ? unusedBit : 0;
        for (var j = 7; j >= skip; --j) {
          s += b >> j & 1 ? "1" : "0";
        }
        if (s.length > maxLength) {
          return intro + stringCut(s, maxLength);
        }
      }
      return intro + s;
    };
    Stream.prototype.parseOctetString = function (start, end, maxLength) {
      if (this.isASCII(start, end)) {
        return stringCut(this.parseStringISO(start, end), maxLength);
      }
      var len = end - start;
      var s = "(" + len + " byte)\n";
      maxLength /= 2; // we work in bytes
      if (len > maxLength) {
        end = start + maxLength;
      }
      for (var i = start; i < end; ++i) {
        s += this.hexByte(this.get(i));
      }
      if (len > maxLength) {
        s += ellipsis;
      }
      return s;
    };
    Stream.prototype.parseOID = function (start, end, maxLength) {
      var s = "";
      var n = new Int10();
      var bits = 0;
      for (var i = start; i < end; ++i) {
        var v = this.get(i);
        n.mulAdd(128, v & 0x7F);
        bits += 7;
        if (!(v & 0x80)) {// finished
          if (s === "") {
            n = n.simplify();
            if (n instanceof Int10) {
              n.sub(80);
              s = "2." + n.toString();
            } else
            {
              var m = n < 80 ? n < 40 ? 0 : 1 : 2;
              s = m + "." + (n - m * 40);
            }
          } else
          {
            s += "." + n.toString();
          }
          if (s.length > maxLength) {
            return stringCut(s, maxLength);
          }
          n = new Int10();
          bits = 0;
        }
      }
      if (bits > 0) {
        s += ".incomplete";
      }
      return s;
    };
    return Stream;
  }();
  var ASN1 = /** @class */function () {
    function ASN1(stream, header, length, tag, sub) {
      if (!(tag instanceof ASN1Tag)) {
        throw new Error("Invalid tag value.");
      }
      this.stream = stream;
      this.header = header;
      this.length = length;
      this.tag = tag;
      this.sub = sub;
    }
    ASN1.prototype.typeName = function () {
      switch (this.tag.tagClass) {
        case 0: // universal
          switch (this.tag.tagNumber) {
            case 0x00:
              return "EOC";
            case 0x01:
              return "BOOLEAN";
            case 0x02:
              return "INTEGER";
            case 0x03:
              return "BIT_STRING";
            case 0x04:
              return "OCTET_STRING";
            case 0x05:
              return "NULL";
            case 0x06:
              return "OBJECT_IDENTIFIER";
            case 0x07:
              return "ObjectDescriptor";
            case 0x08:
              return "EXTERNAL";
            case 0x09:
              return "REAL";
            case 0x0A:
              return "ENUMERATED";
            case 0x0B:
              return "EMBEDDED_PDV";
            case 0x0C:
              return "UTF8String";
            case 0x10:
              return "SEQUENCE";
            case 0x11:
              return "SET";
            case 0x12:
              return "NumericString";
            case 0x13:
              return "PrintableString"; // ASCII subset
            case 0x14:
              return "TeletexString"; // aka T61String
            case 0x15:
              return "VideotexString";
            case 0x16:
              return "IA5String"; // ASCII
            case 0x17:
              return "UTCTime";
            case 0x18:
              return "GeneralizedTime";
            case 0x19:
              return "GraphicString";
            case 0x1A:
              return "VisibleString"; // ASCII subset
            case 0x1B:
              return "GeneralString";
            case 0x1C:
              return "UniversalString";
            case 0x1E:
              return "BMPString";}

          return "Universal_" + this.tag.tagNumber.toString();
        case 1:
          return "Application_" + this.tag.tagNumber.toString();
        case 2:
          return "[" + this.tag.tagNumber.toString() + "]"; // Context
        case 3:
          return "Private_" + this.tag.tagNumber.toString();}

    };
    ASN1.prototype.content = function (maxLength) {
      if (this.tag === undefined) {
        return null;
      }
      if (maxLength === undefined) {
        maxLength = Infinity;
      }
      var content = this.posContent();
      var len = Math.abs(this.length);
      if (!this.tag.isUniversal()) {
        if (this.sub !== null) {
          return "(" + this.sub.length + " elem)";
        }
        return this.stream.parseOctetString(content, content + len, maxLength);
      }
      switch (this.tag.tagNumber) {
        case 0x01: // BOOLEAN
          return this.stream.get(content) === 0 ? "false" : "true";
        case 0x02: // INTEGER
          return this.stream.parseInteger(content, content + len);
        case 0x03: // BIT_STRING
          return this.sub ? "(" + this.sub.length + " elem)" :
          this.stream.parseBitString(content, content + len, maxLength);
        case 0x04: // OCTET_STRING
          return this.sub ? "(" + this.sub.length + " elem)" :
          this.stream.parseOctetString(content, content + len, maxLength);
        // case 0x05: // NULL
        case 0x06: // OBJECT_IDENTIFIER
          return this.stream.parseOID(content, content + len, maxLength);
        // case 0x07: // ObjectDescriptor
        // case 0x08: // EXTERNAL
        // case 0x09: // REAL
        // case 0x0A: // ENUMERATED
        // case 0x0B: // EMBEDDED_PDV
        case 0x10: // SEQUENCE
        case 0x11: // SET
          if (this.sub !== null) {
            return "(" + this.sub.length + " elem)";
          } else
          {
            return "(no elem)";
          }
        case 0x0C: // UTF8String
          return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);
        case 0x12: // NumericString
        case 0x13: // PrintableString
        case 0x14: // TeletexString
        case 0x15: // VideotexString
        case 0x16: // IA5String
        // case 0x19: // GraphicString
        case 0x1A: // VisibleString
          // case 0x1B: // GeneralString
          // case 0x1C: // UniversalString
          return stringCut(this.stream.parseStringISO(content, content + len), maxLength);
        case 0x1E: // BMPString
          return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);
        case 0x17: // UTCTime
        case 0x18: // GeneralizedTime
          return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);}

      return null;
    };
    ASN1.prototype.toString = function () {
      return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + (this.sub === null ? "null" : this.sub.length) + "]";
    };
    ASN1.prototype.toPrettyString = function (indent) {
      if (indent === undefined) {
        indent = "";
      }
      var s = indent + this.typeName() + " @" + this.stream.pos;
      if (this.length >= 0) {
        s += "+";
      }
      s += this.length;
      if (this.tag.tagConstructed) {
        s += " (constructed)";
      } else
      if (this.tag.isUniversal() && (this.tag.tagNumber == 0x03 || this.tag.tagNumber == 0x04) && this.sub !== null) {
        s += " (encapsulates)";
      }
      s += "\n";
      if (this.sub !== null) {
        indent += "  ";
        for (var i = 0, max = this.sub.length; i < max; ++i) {
          s += this.sub[i].toPrettyString(indent);
        }
      }
      return s;
    };
    ASN1.prototype.posStart = function () {
      return this.stream.pos;
    };
    ASN1.prototype.posContent = function () {
      return this.stream.pos + this.header;
    };
    ASN1.prototype.posEnd = function () {
      return this.stream.pos + this.header + Math.abs(this.length);
    };
    ASN1.prototype.toHexString = function () {
      return this.stream.hexDump(this.posStart(), this.posEnd(), true);
    };
    ASN1.decodeLength = function (stream) {
      var buf = stream.get();
      var len = buf & 0x7F;
      if (len == buf) {
        return len;
      }
      // no reason to use Int10, as it would be a huge buffer anyways
      if (len > 6) {
        throw new Error("Length over 48 bits not supported at position " + (stream.pos - 1));
      }
      if (len === 0) {
        return null;
      } // undefined
      buf = 0;
      for (var i = 0; i < len; ++i) {
        buf = buf * 256 + stream.get();
      }
      return buf;
    };
    /**
        * Retrieve the hexadecimal value (as a string) of the current ASN.1 element
        * @returns {string}
        * @public
        */
    ASN1.prototype.getHexStringValue = function () {
      var hexString = this.toHexString();
      var offset = this.header * 2;
      var length = this.length * 2;
      return hexString.substr(offset, length);
    };
    ASN1.decode = function (str) {
      var stream;
      if (!(str instanceof Stream)) {
        stream = new Stream(str, 0);
      } else
      {
        stream = str;
      }
      var streamStart = new Stream(stream);
      var tag = new ASN1Tag(stream);
      var len = ASN1.decodeLength(stream);
      var start = stream.pos;
      var header = start - streamStart.pos;
      var sub = null;
      var getSub = function getSub() {
        var ret = [];
        if (len !== null) {
          // definite length
          var end = start + len;
          while (stream.pos < end) {
            ret[ret.length] = ASN1.decode(stream);
          }
          if (stream.pos != end) {
            throw new Error("Content size is not correct for container starting at offset " + start);
          }
        } else
        {
          // undefined length
          try {
            for (;;) {
              var s = ASN1.decode(stream);
              if (s.tag.isEOC()) {
                break;
              }
              ret[ret.length] = s;
            }
            len = start - stream.pos; // undefined lengths are represented as negative values
          }
          catch (e) {
            throw new Error("Exception while decoding undefined length content: " + e);
          }
        }
        return ret;
      };
      if (tag.tagConstructed) {
        // must have valid content
        sub = getSub();
      } else
      if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {
        // sometimes BitString and OctetString are used to encapsulate ASN.1
        try {
          if (tag.tagNumber == 0x03) {
            if (stream.get() != 0) {
              throw new Error("BIT STRINGs with unused bits cannot encapsulate.");
            }
          }
          sub = getSub();
          for (var i = 0; i < sub.length; ++i) {
            if (sub[i].tag.isEOC()) {
              throw new Error("EOC is not supposed to be actual content.");
            }
          }
        }
        catch (e) {
          // but silently ignore when they don't
          sub = null;
        }
      }
      if (sub === null) {
        if (len === null) {
          throw new Error("We can't skip over an invalid tag with undefined length at offset " + start);
        }
        stream.pos = start + Math.abs(len);
      }
      return new ASN1(streamStart, header, len, tag, sub);
    };
    return ASN1;
  }();
  var ASN1Tag = /** @class */function () {
    function ASN1Tag(stream) {
      var buf = stream.get();
      this.tagClass = buf >> 6;
      this.tagConstructed = (buf & 0x20) !== 0;
      this.tagNumber = buf & 0x1F;
      if (this.tagNumber == 0x1F) {// long tag
        var n = new Int10();
        do {
          buf = stream.get();
          n.mulAdd(128, buf & 0x7F);
        } while (buf & 0x80);
        this.tagNumber = n.simplify();
      }
    }
    ASN1Tag.prototype.isUniversal = function () {
      return this.tagClass === 0x00;
    };
    ASN1Tag.prototype.isEOC = function () {
      return this.tagClass === 0x00 && this.tagNumber === 0x00;
    };
    return ASN1Tag;
  }();

  // Copyright (c) 2005  Tom Wu
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = (canary & 0xffffff) == 0xefcafe;
  //#region
  var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];
  var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
  //#endregion
  // (public) Constructor
  var BigInteger = /** @class */function () {
    function BigInteger(a, b, c) {
      if (a != null) {
        if ("number" == typeof a) {
          this.fromNumber(a, b, c);
        } else
        if (b == null && "string" != typeof a) {
          this.fromString(a, 256);
        } else
        {
          this.fromString(a, b);
        }
      }
    }
    //#region PUBLIC
    // BigInteger.prototype.toString = bnToString;
    // (public) return string representation in given radix
    BigInteger.prototype.toString = function (b) {
      if (this.s < 0) {
        return "-" + this.negate().toString(b);
      }
      var k;
      if (b == 16) {
        k = 4;
      } else
      if (b == 8) {
        k = 3;
      } else
      if (b == 2) {
        k = 1;
      } else
      if (b == 32) {
        k = 5;
      } else
      if (b == 4) {
        k = 2;
      } else
      {
        return this.toRadix(b);
      }
      var km = (1 << k) - 1;
      var d;
      var m = false;
      var r = "";
      var i = this.t;
      var p = this.DB - i * this.DB % k;
      if (i-- > 0) {
        if (p < this.DB && (d = this[i] >> p) > 0) {
          m = true;
          r = int2char(d);
        }
        while (i >= 0) {
          if (p < k) {
            d = (this[i] & (1 << p) - 1) << k - p;
            d |= this[--i] >> (p += this.DB - k);
          } else
          {
            d = this[i] >> (p -= k) & km;
            if (p <= 0) {
              p += this.DB;
              --i;
            }
          }
          if (d > 0) {
            m = true;
          }
          if (m) {
            r += int2char(d);
          }
        }
      }
      return m ? r : "0";
    };
    // BigInteger.prototype.negate = bnNegate;
    // (public) -this
    BigInteger.prototype.negate = function () {
      var r = nbi();
      BigInteger.ZERO.subTo(this, r);
      return r;
    };
    // BigInteger.prototype.abs = bnAbs;
    // (public) |this|
    BigInteger.prototype.abs = function () {
      return this.s < 0 ? this.negate() : this;
    };
    // BigInteger.prototype.compareTo = bnCompareTo;
    // (public) return + if this > a, - if this < a, 0 if equal
    BigInteger.prototype.compareTo = function (a) {
      var r = this.s - a.s;
      if (r != 0) {
        return r;
      }
      var i = this.t;
      r = i - a.t;
      if (r != 0) {
        return this.s < 0 ? -r : r;
      }
      while (--i >= 0) {
        if ((r = this[i] - a[i]) != 0) {
          return r;
        }
      }
      return 0;
    };
    // BigInteger.prototype.bitLength = bnBitLength;
    // (public) return the number of bits in "this"
    BigInteger.prototype.bitLength = function () {
      if (this.t <= 0) {
        return 0;
      }
      return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
    };
    // BigInteger.prototype.mod = bnMod;
    // (public) this mod a
    BigInteger.prototype.mod = function (a) {
      var r = nbi();
      this.abs().divRemTo(a, null, r);
      if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
        a.subTo(r, r);
      }
      return r;
    };
    // BigInteger.prototype.modPowInt = bnModPowInt;
    // (public) this^e % m, 0 <= e < 2^32
    BigInteger.prototype.modPowInt = function (e, m) {
      var z;
      if (e < 256 || m.isEven()) {
        z = new Classic(m);
      } else
      {
        z = new Montgomery(m);
      }
      return this.exp(e, z);
    };
    // BigInteger.prototype.clone = bnClone;
    // (public)
    BigInteger.prototype.clone = function () {
      var r = nbi();
      this.copyTo(r);
      return r;
    };
    // BigInteger.prototype.intValue = bnIntValue;
    // (public) return value as integer
    BigInteger.prototype.intValue = function () {
      if (this.s < 0) {
        if (this.t == 1) {
          return this[0] - this.DV;
        } else
        if (this.t == 0) {
          return -1;
        }
      } else
      if (this.t == 1) {
        return this[0];
      } else
      if (this.t == 0) {
        return 0;
      }
      // assumes 16 < DB < 32
      return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
    };
    // BigInteger.prototype.byteValue = bnByteValue;
    // (public) return value as byte
    BigInteger.prototype.byteValue = function () {
      return this.t == 0 ? this.s : this[0] << 24 >> 24;
    };
    // BigInteger.prototype.shortValue = bnShortValue;
    // (public) return value as short (assumes DB>=16)
    BigInteger.prototype.shortValue = function () {
      return this.t == 0 ? this.s : this[0] << 16 >> 16;
    };
    // BigInteger.prototype.signum = bnSigNum;
    // (public) 0 if this == 0, 1 if this > 0
    BigInteger.prototype.signum = function () {
      if (this.s < 0) {
        return -1;
      } else
      if (this.t <= 0 || this.t == 1 && this[0] <= 0) {
        return 0;
      } else
      {
        return 1;
      }
    };
    // BigInteger.prototype.toByteArray = bnToByteArray;
    // (public) convert to bigendian byte array
    BigInteger.prototype.toByteArray = function () {
      var i = this.t;
      var r = [];
      r[0] = this.s;
      var p = this.DB - i * this.DB % 8;
      var d;
      var k = 0;
      if (i-- > 0) {
        if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {
          r[k++] = d | this.s << this.DB - p;
        }
        while (i >= 0) {
          if (p < 8) {
            d = (this[i] & (1 << p) - 1) << 8 - p;
            d |= this[--i] >> (p += this.DB - 8);
          } else
          {
            d = this[i] >> (p -= 8) & 0xff;
            if (p <= 0) {
              p += this.DB;
              --i;
            }
          }
          if ((d & 0x80) != 0) {
            d |= -256;
          }
          if (k == 0 && (this.s & 0x80) != (d & 0x80)) {
            ++k;
          }
          if (k > 0 || d != this.s) {
            r[k++] = d;
          }
        }
      }
      return r;
    };
    // BigInteger.prototype.equals = bnEquals;
    BigInteger.prototype.equals = function (a) {
      return this.compareTo(a) == 0;
    };
    // BigInteger.prototype.min = bnMin;
    BigInteger.prototype.min = function (a) {
      return this.compareTo(a) < 0 ? this : a;
    };
    // BigInteger.prototype.max = bnMax;
    BigInteger.prototype.max = function (a) {
      return this.compareTo(a) > 0 ? this : a;
    };
    // BigInteger.prototype.and = bnAnd;
    BigInteger.prototype.and = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_and, r);
      return r;
    };
    // BigInteger.prototype.or = bnOr;
    BigInteger.prototype.or = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_or, r);
      return r;
    };
    // BigInteger.prototype.xor = bnXor;
    BigInteger.prototype.xor = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_xor, r);
      return r;
    };
    // BigInteger.prototype.andNot = bnAndNot;
    BigInteger.prototype.andNot = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_andnot, r);
      return r;
    };
    // BigInteger.prototype.not = bnNot;
    // (public) ~this
    BigInteger.prototype.not = function () {
      var r = nbi();
      for (var i = 0; i < this.t; ++i) {
        r[i] = this.DM & ~this[i];
      }
      r.t = this.t;
      r.s = ~this.s;
      return r;
    };
    // BigInteger.prototype.shiftLeft = bnShiftLeft;
    // (public) this << n
    BigInteger.prototype.shiftLeft = function (n) {
      var r = nbi();
      if (n < 0) {
        this.rShiftTo(-n, r);
      } else
      {
        this.lShiftTo(n, r);
      }
      return r;
    };
    // BigInteger.prototype.shiftRight = bnShiftRight;
    // (public) this >> n
    BigInteger.prototype.shiftRight = function (n) {
      var r = nbi();
      if (n < 0) {
        this.lShiftTo(-n, r);
      } else
      {
        this.rShiftTo(n, r);
      }
      return r;
    };
    // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
    // (public) returns index of lowest 1-bit (or -1 if none)
    BigInteger.prototype.getLowestSetBit = function () {
      for (var i = 0; i < this.t; ++i) {
        if (this[i] != 0) {
          return i * this.DB + lbit(this[i]);
        }
      }
      if (this.s < 0) {
        return this.t * this.DB;
      }
      return -1;
    };
    // BigInteger.prototype.bitCount = bnBitCount;
    // (public) return number of set bits
    BigInteger.prototype.bitCount = function () {
      var r = 0;
      var x = this.s & this.DM;
      for (var i = 0; i < this.t; ++i) {
        r += cbit(this[i] ^ x);
      }
      return r;
    };
    // BigInteger.prototype.testBit = bnTestBit;
    // (public) true iff nth bit is set
    BigInteger.prototype.testBit = function (n) {
      var j = Math.floor(n / this.DB);
      if (j >= this.t) {
        return this.s != 0;
      }
      return (this[j] & 1 << n % this.DB) != 0;
    };
    // BigInteger.prototype.setBit = bnSetBit;
    // (public) this | (1<<n)
    BigInteger.prototype.setBit = function (n) {
      return this.changeBit(n, op_or);
    };
    // BigInteger.prototype.clearBit = bnClearBit;
    // (public) this & ~(1<<n)
    BigInteger.prototype.clearBit = function (n) {
      return this.changeBit(n, op_andnot);
    };
    // BigInteger.prototype.flipBit = bnFlipBit;
    // (public) this ^ (1<<n)
    BigInteger.prototype.flipBit = function (n) {
      return this.changeBit(n, op_xor);
    };
    // BigInteger.prototype.add = bnAdd;
    // (public) this + a
    BigInteger.prototype.add = function (a) {
      var r = nbi();
      this.addTo(a, r);
      return r;
    };
    // BigInteger.prototype.subtract = bnSubtract;
    // (public) this - a
    BigInteger.prototype.subtract = function (a) {
      var r = nbi();
      this.subTo(a, r);
      return r;
    };
    // BigInteger.prototype.multiply = bnMultiply;
    // (public) this * a
    BigInteger.prototype.multiply = function (a) {
      var r = nbi();
      this.multiplyTo(a, r);
      return r;
    };
    // BigInteger.prototype.divide = bnDivide;
    // (public) this / a
    BigInteger.prototype.divide = function (a) {
      var r = nbi();
      this.divRemTo(a, r, null);
      return r;
    };
    // BigInteger.prototype.remainder = bnRemainder;
    // (public) this % a
    BigInteger.prototype.remainder = function (a) {
      var r = nbi();
      this.divRemTo(a, null, r);
      return r;
    };
    // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
    // (public) [this/a,this%a]
    BigInteger.prototype.divideAndRemainder = function (a) {
      var q = nbi();
      var r = nbi();
      this.divRemTo(a, q, r);
      return [q, r];
    };
    // BigInteger.prototype.modPow = bnModPow;
    // (public) this^e % m (HAC 14.85)
    BigInteger.prototype.modPow = function (e, m) {
      var i = e.bitLength();
      var k;
      var r = nbv(1);
      var z;
      if (i <= 0) {
        return r;
      } else
      if (i < 18) {
        k = 1;
      } else
      if (i < 48) {
        k = 3;
      } else
      if (i < 144) {
        k = 4;
      } else
      if (i < 768) {
        k = 5;
      } else
      {
        k = 6;
      }
      if (i < 8) {
        z = new Classic(m);
      } else
      if (m.isEven()) {
        z = new Barrett(m);
      } else
      {
        z = new Montgomery(m);
      }
      // precomputation
      var g = [];
      var n = 3;
      var k1 = k - 1;
      var km = (1 << k) - 1;
      g[1] = z.convert(this);
      if (k > 1) {
        var g2 = nbi();
        z.sqrTo(g[1], g2);
        while (n <= km) {
          g[n] = nbi();
          z.mulTo(g2, g[n - 2], g[n]);
          n += 2;
        }
      }
      var j = e.t - 1;
      var w;
      var is1 = true;
      var r2 = nbi();
      var t;
      i = nbits(e[j]) - 1;
      while (j >= 0) {
        if (i >= k1) {
          w = e[j] >> i - k1 & km;
        } else
        {
          w = (e[j] & (1 << i + 1) - 1) << k1 - i;
          if (j > 0) {
            w |= e[j - 1] >> this.DB + i - k1;
          }
        }
        n = k;
        while ((w & 1) == 0) {
          w >>= 1;
          --n;
        }
        if ((i -= n) < 0) {
          i += this.DB;
          --j;
        }
        if (is1) {// ret == 1, don't bother squaring or multiplying it
          g[w].copyTo(r);
          is1 = false;
        } else
        {
          while (n > 1) {
            z.sqrTo(r, r2);
            z.sqrTo(r2, r);
            n -= 2;
          }
          if (n > 0) {
            z.sqrTo(r, r2);
          } else
          {
            t = r;
            r = r2;
            r2 = t;
          }
          z.mulTo(r2, g[w], r);
        }
        while (j >= 0 && (e[j] & 1 << i) == 0) {
          z.sqrTo(r, r2);
          t = r;
          r = r2;
          r2 = t;
          if (--i < 0) {
            i = this.DB - 1;
            --j;
          }
        }
      }
      return z.revert(r);
    };
    // BigInteger.prototype.modInverse = bnModInverse;
    // (public) 1/this % m (HAC 14.61)
    BigInteger.prototype.modInverse = function (m) {
      var ac = m.isEven();
      if (this.isEven() && ac || m.signum() == 0) {
        return BigInteger.ZERO;
      }
      var u = m.clone();
      var v = this.clone();
      var a = nbv(1);
      var b = nbv(0);
      var c = nbv(0);
      var d = nbv(1);
      while (u.signum() != 0) {
        while (u.isEven()) {
          u.rShiftTo(1, u);
          if (ac) {
            if (!a.isEven() || !b.isEven()) {
              a.addTo(this, a);
              b.subTo(m, b);
            }
            a.rShiftTo(1, a);
          } else
          if (!b.isEven()) {
            b.subTo(m, b);
          }
          b.rShiftTo(1, b);
        }
        while (v.isEven()) {
          v.rShiftTo(1, v);
          if (ac) {
            if (!c.isEven() || !d.isEven()) {
              c.addTo(this, c);
              d.subTo(m, d);
            }
            c.rShiftTo(1, c);
          } else
          if (!d.isEven()) {
            d.subTo(m, d);
          }
          d.rShiftTo(1, d);
        }
        if (u.compareTo(v) >= 0) {
          u.subTo(v, u);
          if (ac) {
            a.subTo(c, a);
          }
          b.subTo(d, b);
        } else
        {
          v.subTo(u, v);
          if (ac) {
            c.subTo(a, c);
          }
          d.subTo(b, d);
        }
      }
      if (v.compareTo(BigInteger.ONE) != 0) {
        return BigInteger.ZERO;
      }
      if (d.compareTo(m) >= 0) {
        return d.subtract(m);
      }
      if (d.signum() < 0) {
        d.addTo(m, d);
      } else
      {
        return d;
      }
      if (d.signum() < 0) {
        return d.add(m);
      } else
      {
        return d;
      }
    };
    // BigInteger.prototype.pow = bnPow;
    // (public) this^e
    BigInteger.prototype.pow = function (e) {
      return this.exp(e, new NullExp());
    };
    // BigInteger.prototype.gcd = bnGCD;
    // (public) gcd(this,a) (HAC 14.54)
    BigInteger.prototype.gcd = function (a) {
      var x = this.s < 0 ? this.negate() : this.clone();
      var y = a.s < 0 ? a.negate() : a.clone();
      if (x.compareTo(y) < 0) {
        var t = x;
        x = y;
        y = t;
      }
      var i = x.getLowestSetBit();
      var g = y.getLowestSetBit();
      if (g < 0) {
        return x;
      }
      if (i < g) {
        g = i;
      }
      if (g > 0) {
        x.rShiftTo(g, x);
        y.rShiftTo(g, y);
      }
      while (x.signum() > 0) {
        if ((i = x.getLowestSetBit()) > 0) {
          x.rShiftTo(i, x);
        }
        if ((i = y.getLowestSetBit()) > 0) {
          y.rShiftTo(i, y);
        }
        if (x.compareTo(y) >= 0) {
          x.subTo(y, x);
          x.rShiftTo(1, x);
        } else
        {
          y.subTo(x, y);
          y.rShiftTo(1, y);
        }
      }
      if (g > 0) {
        y.lShiftTo(g, y);
      }
      return y;
    };
    // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;
    // (public) test primality with certainty >= 1-.5^t
    BigInteger.prototype.isProbablePrime = function (t) {
      var i;
      var x = this.abs();
      if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
        for (i = 0; i < lowprimes.length; ++i) {
          if (x[0] == lowprimes[i]) {
            return true;
          }
        }
        return false;
      }
      if (x.isEven()) {
        return false;
      }
      i = 1;
      while (i < lowprimes.length) {
        var m = lowprimes[i];
        var j = i + 1;
        while (j < lowprimes.length && m < lplim) {
          m *= lowprimes[j++];
        }
        m = x.modInt(m);
        while (i < j) {
          if (m % lowprimes[i++] == 0) {
            return false;
          }
        }
      }
      return x.millerRabin(t);
    };
    //#endregion PUBLIC
    //#region PROTECTED
    // BigInteger.prototype.copyTo = bnpCopyTo;
    // (protected) copy this to r
    BigInteger.prototype.copyTo = function (r) {
      for (var i = this.t - 1; i >= 0; --i) {
        r[i] = this[i];
      }
      r.t = this.t;
      r.s = this.s;
    };
    // BigInteger.prototype.fromInt = bnpFromInt;
    // (protected) set from integer value x, -DV <= x < DV
    BigInteger.prototype.fromInt = function (x) {
      this.t = 1;
      this.s = x < 0 ? -1 : 0;
      if (x > 0) {
        this[0] = x;
      } else
      if (x < -1) {
        this[0] = x + this.DV;
      } else
      {
        this.t = 0;
      }
    };
    // BigInteger.prototype.fromString = bnpFromString;
    // (protected) set from string and radix
    BigInteger.prototype.fromString = function (s, b) {
      var k;
      if (b == 16) {
        k = 4;
      } else
      if (b == 8) {
        k = 3;
      } else
      if (b == 256) {
        k = 8;
        /* byte array */
      } else
      if (b == 2) {
        k = 1;
      } else
      if (b == 32) {
        k = 5;
      } else
      if (b == 4) {
        k = 2;
      } else
      {
        this.fromRadix(s, b);
        return;
      }
      this.t = 0;
      this.s = 0;
      var i = s.length;
      var mi = false;
      var sh = 0;
      while (--i >= 0) {
        var x = k == 8 ? +s[i] & 0xff : intAt(s, i);
        if (x < 0) {
          if (s.charAt(i) == "-") {
            mi = true;
          }
          continue;
        }
        mi = false;
        if (sh == 0) {
          this[this.t++] = x;
        } else
        if (sh + k > this.DB) {
          this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
          this[this.t++] = x >> this.DB - sh;
        } else
        {
          this[this.t - 1] |= x << sh;
        }
        sh += k;
        if (sh >= this.DB) {
          sh -= this.DB;
        }
      }
      if (k == 8 && (+s[0] & 0x80) != 0) {
        this.s = -1;
        if (sh > 0) {
          this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
        }
      }
      this.clamp();
      if (mi) {
        BigInteger.ZERO.subTo(this, this);
      }
    };
    // BigInteger.prototype.clamp = bnpClamp;
    // (protected) clamp off excess high words
    BigInteger.prototype.clamp = function () {
      var c = this.s & this.DM;
      while (this.t > 0 && this[this.t - 1] == c) {
        --this.t;
      }
    };
    // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    // (protected) r = this << n*DB
    BigInteger.prototype.dlShiftTo = function (n, r) {
      var i;
      for (i = this.t - 1; i >= 0; --i) {
        r[i + n] = this[i];
      }
      for (i = n - 1; i >= 0; --i) {
        r[i] = 0;
      }
      r.t = this.t + n;
      r.s = this.s;
    };
    // BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    // (protected) r = this >> n*DB
    BigInteger.prototype.drShiftTo = function (n, r) {
      for (var i = n; i < this.t; ++i) {
        r[i - n] = this[i];
      }
      r.t = Math.max(this.t - n, 0);
      r.s = this.s;
    };
    // BigInteger.prototype.lShiftTo = bnpLShiftTo;
    // (protected) r = this << n
    BigInteger.prototype.lShiftTo = function (n, r) {
      var bs = n % this.DB;
      var cbs = this.DB - bs;
      var bm = (1 << cbs) - 1;
      var ds = Math.floor(n / this.DB);
      var c = this.s << bs & this.DM;
      for (var i = this.t - 1; i >= 0; --i) {
        r[i + ds + 1] = this[i] >> cbs | c;
        c = (this[i] & bm) << bs;
      }
      for (var i = ds - 1; i >= 0; --i) {
        r[i] = 0;
      }
      r[ds] = c;
      r.t = this.t + ds + 1;
      r.s = this.s;
      r.clamp();
    };
    // BigInteger.prototype.rShiftTo = bnpRShiftTo;
    // (protected) r = this >> n
    BigInteger.prototype.rShiftTo = function (n, r) {
      r.s = this.s;
      var ds = Math.floor(n / this.DB);
      if (ds >= this.t) {
        r.t = 0;
        return;
      }
      var bs = n % this.DB;
      var cbs = this.DB - bs;
      var bm = (1 << bs) - 1;
      r[0] = this[ds] >> bs;
      for (var i = ds + 1; i < this.t; ++i) {
        r[i - ds - 1] |= (this[i] & bm) << cbs;
        r[i - ds] = this[i] >> bs;
      }
      if (bs > 0) {
        r[this.t - ds - 1] |= (this.s & bm) << cbs;
      }
      r.t = this.t - ds;
      r.clamp();
    };
    // BigInteger.prototype.subTo = bnpSubTo;
    // (protected) r = this - a
    BigInteger.prototype.subTo = function (a, r) {
      var i = 0;
      var c = 0;
      var m = Math.min(a.t, this.t);
      while (i < m) {
        c += this[i] - a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      if (a.t < this.t) {
        c -= a.s;
        while (i < this.t) {
          c += this[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += this.s;
      } else
      {
        c += this.s;
        while (i < a.t) {
          c -= a[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c -= a.s;
      }
      r.s = c < 0 ? -1 : 0;
      if (c < -1) {
        r[i++] = this.DV + c;
      } else
      if (c > 0) {
        r[i++] = c;
      }
      r.t = i;
      r.clamp();
    };
    // BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    // (protected) r = this * a, r != this,a (HAC 14.12)
    // "this" should be the larger one if appropriate.
    BigInteger.prototype.multiplyTo = function (a, r) {
      var x = this.abs();
      var y = a.abs();
      var i = x.t;
      r.t = i + y.t;
      while (--i >= 0) {
        r[i] = 0;
      }
      for (i = 0; i < y.t; ++i) {
        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
      }
      r.s = 0;
      r.clamp();
      if (this.s != a.s) {
        BigInteger.ZERO.subTo(r, r);
      }
    };
    // BigInteger.prototype.squareTo = bnpSquareTo;
    // (protected) r = this^2, r != this (HAC 14.16)
    BigInteger.prototype.squareTo = function (r) {
      var x = this.abs();
      var i = r.t = 2 * x.t;
      while (--i >= 0) {
        r[i] = 0;
      }
      for (i = 0; i < x.t - 1; ++i) {
        var c = x.am(i, x[i], r, 2 * i, 0, 1);
        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
          r[i + x.t] -= x.DV;
          r[i + x.t + 1] = 1;
        }
      }
      if (r.t > 0) {
        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
      }
      r.s = 0;
      r.clamp();
    };
    // BigInteger.prototype.divRemTo = bnpDivRemTo;
    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
    // r != q, this != m.  q or r may be null.
    BigInteger.prototype.divRemTo = function (m, q, r) {
      var pm = m.abs();
      if (pm.t <= 0) {
        return;
      }
      var pt = this.abs();
      if (pt.t < pm.t) {
        if (q != null) {
          q.fromInt(0);
        }
        if (r != null) {
          this.copyTo(r);
        }
        return;
      }
      if (r == null) {
        r = nbi();
      }
      var y = nbi();
      var ts = this.s;
      var ms = m.s;
      var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus
      if (nsh > 0) {
        pm.lShiftTo(nsh, y);
        pt.lShiftTo(nsh, r);
      } else
      {
        pm.copyTo(y);
        pt.copyTo(r);
      }
      var ys = y.t;
      var y0 = y[ys - 1];
      if (y0 == 0) {
        return;
      }
      var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
      var d1 = this.FV / yt;
      var d2 = (1 << this.F1) / yt;
      var e = 1 << this.F2;
      var i = r.t;
      var j = i - ys;
      var t = q == null ? nbi() : q;
      y.dlShiftTo(j, t);
      if (r.compareTo(t) >= 0) {
        r[r.t++] = 1;
        r.subTo(t, r);
      }
      BigInteger.ONE.dlShiftTo(ys, t);
      t.subTo(y, y); // "negative" y so we can replace sub with am later
      while (y.t < ys) {
        y[y.t++] = 0;
      }
      while (--j >= 0) {
        // Estimate quotient digit
        var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {// Try it out
          y.dlShiftTo(j, t);
          r.subTo(t, r);
          while (r[i] < --qd) {
            r.subTo(t, r);
          }
        }
      }
      if (q != null) {
        r.drShiftTo(ys, q);
        if (ts != ms) {
          BigInteger.ZERO.subTo(q, q);
        }
      }
      r.t = ys;
      r.clamp();
      if (nsh > 0) {
        r.rShiftTo(nsh, r);
      } // Denormalize remainder
      if (ts < 0) {
        BigInteger.ZERO.subTo(r, r);
      }
    };
    // BigInteger.prototype.invDigit = bnpInvDigit;
    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
    // justification:
    //         xy == 1 (mod m)
    //         xy =  1+km
    //   xy(2-xy) = (1+km)(1-km)
    // x[y(2-xy)] = 1-k^2m^2
    // x[y(2-xy)] == 1 (mod m^2)
    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
    // JS multiply "overflows" differently from C/C++, so care is needed here.
    BigInteger.prototype.invDigit = function () {
      if (this.t < 1) {
        return 0;
      }
      var x = this[0];
      if ((x & 1) == 0) {
        return 0;
      }
      var y = x & 3; // y == 1/x mod 2^2
      y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4
      y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8
      y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16
      // last step - calculate inverse mod DV directly;
      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
      y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits
      // we really want the negative inverse, and -DV < y < DV
      return y > 0 ? this.DV - y : -y;
    };
    // BigInteger.prototype.isEven = bnpIsEven;
    // (protected) true iff this is even
    BigInteger.prototype.isEven = function () {
      return (this.t > 0 ? this[0] & 1 : this.s) == 0;
    };
    // BigInteger.prototype.exp = bnpExp;
    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
    BigInteger.prototype.exp = function (e, z) {
      if (e > 0xffffffff || e < 1) {
        return BigInteger.ONE;
      }
      var r = nbi();
      var r2 = nbi();
      var g = z.convert(this);
      var i = nbits(e) - 1;
      g.copyTo(r);
      while (--i >= 0) {
        z.sqrTo(r, r2);
        if ((e & 1 << i) > 0) {
          z.mulTo(r2, g, r);
        } else
        {
          var t = r;
          r = r2;
          r2 = t;
        }
      }
      return z.revert(r);
    };
    // BigInteger.prototype.chunkSize = bnpChunkSize;
    // (protected) return x s.t. r^x < DV
    BigInteger.prototype.chunkSize = function (r) {
      return Math.floor(Math.LN2 * this.DB / Math.log(r));
    };
    // BigInteger.prototype.toRadix = bnpToRadix;
    // (protected) convert to radix string
    BigInteger.prototype.toRadix = function (b) {
      if (b == null) {
        b = 10;
      }
      if (this.signum() == 0 || b < 2 || b > 36) {
        return "0";
      }
      var cs = this.chunkSize(b);
      var a = Math.pow(b, cs);
      var d = nbv(a);
      var y = nbi();
      var z = nbi();
      var r = "";
      this.divRemTo(d, y, z);
      while (y.signum() > 0) {
        r = (a + z.intValue()).toString(b).substr(1) + r;
        y.divRemTo(d, y, z);
      }
      return z.intValue().toString(b) + r;
    };
    // BigInteger.prototype.fromRadix = bnpFromRadix;
    // (protected) convert from radix string
    BigInteger.prototype.fromRadix = function (s, b) {
      this.fromInt(0);
      if (b == null) {
        b = 10;
      }
      var cs = this.chunkSize(b);
      var d = Math.pow(b, cs);
      var mi = false;
      var j = 0;
      var w = 0;
      for (var i = 0; i < s.length; ++i) {
        var x = intAt(s, i);
        if (x < 0) {
          if (s.charAt(i) == "-" && this.signum() == 0) {
            mi = true;
          }
          continue;
        }
        w = b * w + x;
        if (++j >= cs) {
          this.dMultiply(d);
          this.dAddOffset(w, 0);
          j = 0;
          w = 0;
        }
      }
      if (j > 0) {
        this.dMultiply(Math.pow(b, j));
        this.dAddOffset(w, 0);
      }
      if (mi) {
        BigInteger.ZERO.subTo(this, this);
      }
    };
    // BigInteger.prototype.fromNumber = bnpFromNumber;
    // (protected) alternate constructor
    BigInteger.prototype.fromNumber = function (a, b, c) {
      if ("number" == typeof b) {
        // new BigInteger(int,int,RNG)
        if (a < 2) {
          this.fromInt(1);
        } else
        {
          this.fromNumber(a, c);
          if (!this.testBit(a - 1)) {
            // force MSB set
            this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
          }
          if (this.isEven()) {
            this.dAddOffset(1, 0);
          } // force odd
          while (!this.isProbablePrime(b)) {
            this.dAddOffset(2, 0);
            if (this.bitLength() > a) {
              this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
            }
          }
        }
      } else
      {
        // new BigInteger(int,RNG)
        var x = [];
        var t = a & 7;
        x.length = (a >> 3) + 1;
        b.nextBytes(x);
        if (t > 0) {
          x[0] &= (1 << t) - 1;
        } else
        {
          x[0] = 0;
        }
        this.fromString(x, 256);
      }
    };
    // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
    // (protected) r = this op a (bitwise)
    BigInteger.prototype.bitwiseTo = function (a, op, r) {
      var i;
      var f;
      var m = Math.min(a.t, this.t);
      for (i = 0; i < m; ++i) {
        r[i] = op(this[i], a[i]);
      }
      if (a.t < this.t) {
        f = a.s & this.DM;
        for (i = m; i < this.t; ++i) {
          r[i] = op(this[i], f);
        }
        r.t = this.t;
      } else
      {
        f = this.s & this.DM;
        for (i = m; i < a.t; ++i) {
          r[i] = op(f, a[i]);
        }
        r.t = a.t;
      }
      r.s = op(this.s, a.s);
      r.clamp();
    };
    // BigInteger.prototype.changeBit = bnpChangeBit;
    // (protected) this op (1<<n)
    BigInteger.prototype.changeBit = function (n, op) {
      var r = BigInteger.ONE.shiftLeft(n);
      this.bitwiseTo(r, op, r);
      return r;
    };
    // BigInteger.prototype.addTo = bnpAddTo;
    // (protected) r = this + a
    BigInteger.prototype.addTo = function (a, r) {
      var i = 0;
      var c = 0;
      var m = Math.min(a.t, this.t);
      while (i < m) {
        c += this[i] + a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      if (a.t < this.t) {
        c += a.s;
        while (i < this.t) {
          c += this[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += this.s;
      } else
      {
        c += this.s;
        while (i < a.t) {
          c += a[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += a.s;
      }
      r.s = c < 0 ? -1 : 0;
      if (c > 0) {
        r[i++] = c;
      } else
      if (c < -1) {
        r[i++] = this.DV + c;
      }
      r.t = i;
      r.clamp();
    };
    // BigInteger.prototype.dMultiply = bnpDMultiply;
    // (protected) this *= n, this >= 0, 1 < n < DV
    BigInteger.prototype.dMultiply = function (n) {
      this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
      ++this.t;
      this.clamp();
    };
    // BigInteger.prototype.dAddOffset = bnpDAddOffset;
    // (protected) this += n << w words, this >= 0
    BigInteger.prototype.dAddOffset = function (n, w) {
      if (n == 0) {
        return;
      }
      while (this.t <= w) {
        this[this.t++] = 0;
      }
      this[w] += n;
      while (this[w] >= this.DV) {
        this[w] -= this.DV;
        if (++w >= this.t) {
          this[this.t++] = 0;
        }
        ++this[w];
      }
    };
    // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
    // (protected) r = lower n words of "this * a", a.t <= n
    // "this" should be the larger one if appropriate.
    BigInteger.prototype.multiplyLowerTo = function (a, n, r) {
      var i = Math.min(this.t + a.t, n);
      r.s = 0; // assumes a,this >= 0
      r.t = i;
      while (i > 0) {
        r[--i] = 0;
      }
      for (var j = r.t - this.t; i < j; ++i) {
        r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
      }
      for (var j = Math.min(a.t, n); i < j; ++i) {
        this.am(0, a[i], r, i, 0, n - i);
      }
      r.clamp();
    };
    // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
    // (protected) r = "this * a" without lower n words, n > 0
    // "this" should be the larger one if appropriate.
    BigInteger.prototype.multiplyUpperTo = function (a, n, r) {
      --n;
      var i = r.t = this.t + a.t - n;
      r.s = 0; // assumes a,this >= 0
      while (--i >= 0) {
        r[i] = 0;
      }
      for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
        r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
      }
      r.clamp();
      r.drShiftTo(1, r);
    };
    // BigInteger.prototype.modInt = bnpModInt;
    // (protected) this % n, n < 2^26
    BigInteger.prototype.modInt = function (n) {
      if (n <= 0) {
        return 0;
      }
      var d = this.DV % n;
      var r = this.s < 0 ? n - 1 : 0;
      if (this.t > 0) {
        if (d == 0) {
          r = this[0] % n;
        } else
        {
          for (var i = this.t - 1; i >= 0; --i) {
            r = (d * r + this[i]) % n;
          }
        }
      }
      return r;
    };
    // BigInteger.prototype.millerRabin = bnpMillerRabin;
    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
    BigInteger.prototype.millerRabin = function (t) {
      var n1 = this.subtract(BigInteger.ONE);
      var k = n1.getLowestSetBit();
      if (k <= 0) {
        return false;
      }
      var r = n1.shiftRight(k);
      t = t + 1 >> 1;
      if (t > lowprimes.length) {
        t = lowprimes.length;
      }
      var a = nbi();
      for (var i = 0; i < t; ++i) {
        // Pick bases at random, instead of starting at 2
        a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
        var y = a.modPow(r, this);
        if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
          var j = 1;
          while (j++ < k && y.compareTo(n1) != 0) {
            y = y.modPowInt(2, this);
            if (y.compareTo(BigInteger.ONE) == 0) {
              return false;
            }
          }
          if (y.compareTo(n1) != 0) {
            return false;
          }
        }
      }
      return true;
    };
    // BigInteger.prototype.square = bnSquare;
    // (public) this^2
    BigInteger.prototype.square = function () {
      var r = nbi();
      this.squareTo(r);
      return r;
    };
    //#region ASYNC
    // Public API method
    BigInteger.prototype.gcda = function (a, callback) {
      var x = this.s < 0 ? this.negate() : this.clone();
      var y = a.s < 0 ? a.negate() : a.clone();
      if (x.compareTo(y) < 0) {
        var t = x;
        x = y;
        y = t;
      }
      var i = x.getLowestSetBit();
      var g = y.getLowestSetBit();
      if (g < 0) {
        callback(x);
        return;
      }
      if (i < g) {
        g = i;
      }
      if (g > 0) {
        x.rShiftTo(g, x);
        y.rShiftTo(g, y);
      }
      // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.
      var gcda1 = function gcda1() {
        if ((i = x.getLowestSetBit()) > 0) {
          x.rShiftTo(i, x);
        }
        if ((i = y.getLowestSetBit()) > 0) {
          y.rShiftTo(i, y);
        }
        if (x.compareTo(y) >= 0) {
          x.subTo(y, x);
          x.rShiftTo(1, x);
        } else
        {
          y.subTo(x, y);
          y.rShiftTo(1, y);
        }
        if (!(x.signum() > 0)) {
          if (g > 0) {
            y.lShiftTo(g, y);
          }
          setTimeout(function () {callback(y);}, 0); // escape
        } else
        {
          setTimeout(gcda1, 0);
        }
      };
      setTimeout(gcda1, 10);
    };
    // (protected) alternate constructor
    BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {
      if ("number" == typeof b) {
        if (a < 2) {
          this.fromInt(1);
        } else
        {
          this.fromNumber(a, c);
          if (!this.testBit(a - 1)) {
            this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
          }
          if (this.isEven()) {
            this.dAddOffset(1, 0);
          }
          var bnp_1 = this;
          var bnpfn1_1 = function bnpfn1_1() {
            bnp_1.dAddOffset(2, 0);
            if (bnp_1.bitLength() > a) {
              bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);
            }
            if (bnp_1.isProbablePrime(b)) {
              setTimeout(function () {callback();}, 0); // escape
            } else
            {
              setTimeout(bnpfn1_1, 0);
            }
          };
          setTimeout(bnpfn1_1, 0);
        }
      } else
      {
        var x = [];
        var t = a & 7;
        x.length = (a >> 3) + 1;
        b.nextBytes(x);
        if (t > 0) {
          x[0] &= (1 << t) - 1;
        } else
        {
          x[0] = 0;
        }
        this.fromString(x, 256);
      }
    };
    return BigInteger;
  }();
  //#region REDUCERS
  //#region NullExp
  var NullExp = /** @class */function () {
    function NullExp() {
    }
    // NullExp.prototype.convert = nNop;
    NullExp.prototype.convert = function (x) {
      return x;
    };
    // NullExp.prototype.revert = nNop;
    NullExp.prototype.revert = function (x) {
      return x;
    };
    // NullExp.prototype.mulTo = nMulTo;
    NullExp.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
    };
    // NullExp.prototype.sqrTo = nSqrTo;
    NullExp.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
    };
    return NullExp;
  }();
  // Modular reduction using "classic" algorithm
  var Classic = /** @class */function () {
    function Classic(m) {
      this.m = m;
    }
    // Classic.prototype.convert = cConvert;
    Classic.prototype.convert = function (x) {
      if (x.s < 0 || x.compareTo(this.m) >= 0) {
        return x.mod(this.m);
      } else
      {
        return x;
      }
    };
    // Classic.prototype.revert = cRevert;
    Classic.prototype.revert = function (x) {
      return x;
    };
    // Classic.prototype.reduce = cReduce;
    Classic.prototype.reduce = function (x) {
      x.divRemTo(this.m, null, x);
    };
    // Classic.prototype.mulTo = cMulTo;
    Classic.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    };
    // Classic.prototype.sqrTo = cSqrTo;
    Classic.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
      this.reduce(r);
    };
    return Classic;
  }();
  //#endregion
  //#region Montgomery
  // Montgomery reduction
  var Montgomery = /** @class */function () {
    function Montgomery(m) {
      this.m = m;
      this.mp = m.invDigit();
      this.mpl = this.mp & 0x7fff;
      this.mph = this.mp >> 15;
      this.um = (1 << m.DB - 15) - 1;
      this.mt2 = 2 * m.t;
    }
    // Montgomery.prototype.convert = montConvert;
    // xR mod m
    Montgomery.prototype.convert = function (x) {
      var r = nbi();
      x.abs().dlShiftTo(this.m.t, r);
      r.divRemTo(this.m, null, r);
      if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
        this.m.subTo(r, r);
      }
      return r;
    };
    // Montgomery.prototype.revert = montRevert;
    // x/R mod m
    Montgomery.prototype.revert = function (x) {
      var r = nbi();
      x.copyTo(r);
      this.reduce(r);
      return r;
    };
    // Montgomery.prototype.reduce = montReduce;
    // x = x/R mod m (HAC 14.32)
    Montgomery.prototype.reduce = function (x) {
      while (x.t <= this.mt2) {
        // pad x so am has enough room later
        x[x.t++] = 0;
      }
      for (var i = 0; i < this.m.t; ++i) {
        // faster way of calculating u0 = x[i]*mp mod DV
        var j = x[i] & 0x7fff;
        var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
        // use am to combine the multiply-shift-add into one call
        j = i + this.m.t;
        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
        // propagate carry
        while (x[j] >= x.DV) {
          x[j] -= x.DV;
          x[++j]++;
        }
      }
      x.clamp();
      x.drShiftTo(this.m.t, x);
      if (x.compareTo(this.m) >= 0) {
        x.subTo(this.m, x);
      }
    };
    // Montgomery.prototype.mulTo = montMulTo;
    // r = "xy/R mod m"; x,y != r
    Montgomery.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    };
    // Montgomery.prototype.sqrTo = montSqrTo;
    // r = "x^2/R mod m"; x != r
    Montgomery.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
      this.reduce(r);
    };
    return Montgomery;
  }();
  //#endregion Montgomery
  //#region Barrett
  // Barrett modular reduction
  var Barrett = /** @class */function () {
    function Barrett(m) {
      this.m = m;
      // setup Barrett
      this.r2 = nbi();
      this.q3 = nbi();
      BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
      this.mu = this.r2.divide(m);
    }
    // Barrett.prototype.convert = barrettConvert;
    Barrett.prototype.convert = function (x) {
      if (x.s < 0 || x.t > 2 * this.m.t) {
        return x.mod(this.m);
      } else
      if (x.compareTo(this.m) < 0) {
        return x;
      } else
      {
        var r = nbi();
        x.copyTo(r);
        this.reduce(r);
        return r;
      }
    };
    // Barrett.prototype.revert = barrettRevert;
    Barrett.prototype.revert = function (x) {
      return x;
    };
    // Barrett.prototype.reduce = barrettReduce;
    // x = x mod m (HAC 14.42)
    Barrett.prototype.reduce = function (x) {
      x.drShiftTo(this.m.t - 1, this.r2);
      if (x.t > this.m.t + 1) {
        x.t = this.m.t + 1;
        x.clamp();
      }
      this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
      this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
      while (x.compareTo(this.r2) < 0) {
        x.dAddOffset(1, this.m.t + 1);
      }
      x.subTo(this.r2, x);
      while (x.compareTo(this.m) >= 0) {
        x.subTo(this.m, x);
      }
    };
    // Barrett.prototype.mulTo = barrettMulTo;
    // r = x*y mod m; x,y != r
    Barrett.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    };
    // Barrett.prototype.sqrTo = barrettSqrTo;
    // r = x^2 mod m; x != r
    Barrett.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
      this.reduce(r);
    };
    return Barrett;
  }();
  //#endregion
  //#endregion REDUCERS
  // return new, unset BigInteger
  function nbi() {return new BigInteger(null);}
  function parseBigInt(str, r) {
    return new BigInteger(str, r);
  }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i, x, w, j, c, n) {
    while (--n >= 0) {
      var v = x * this[i++] + w[j] + c;
      c = Math.floor(v / 0x4000000);
      w[j++] = v & 0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i, x, w, j, c, n) {
    var xl = x & 0x7fff;
    var xh = x >> 15;
    while (--n >= 0) {
      var l = this[i] & 0x7fff;
      var h = this[i++] >> 15;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
      w[j++] = l & 0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i, x, w, j, c, n) {
    var xl = x & 0x3fff;
    var xh = x >> 14;
    while (--n >= 0) {
      var l = this[i] & 0x3fff;
      var h = this[i++] >> 14;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
      c = (l >> 28) + (m >> 14) + xh * h;
      w[j++] = l & 0xfffffff;
    }
    return c;
  }
  if (j_lm && navigator.appName == "Microsoft Internet Explorer") {
    BigInteger.prototype.am = am2;
    dbits = 30;
  } else
  if (j_lm && navigator.appName != "Netscape") {
    BigInteger.prototype.am = am1;
    dbits = 26;
  } else
  {// Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = (1 << dbits) - 1;
  BigInteger.prototype.DV = 1 << dbits;
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2, BI_FP);
  BigInteger.prototype.F1 = BI_FP - dbits;
  BigInteger.prototype.F2 = 2 * dbits - BI_FP;
  // Digit conversions
  var BI_RC = [];
  var rr;
  var vv;
  rr = "0".charCodeAt(0);
  for (vv = 0; vv <= 9; ++vv) {
    BI_RC[rr++] = vv;
  }
  rr = "a".charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }
  rr = "A".charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }
  function intAt(s, i) {
    var c = BI_RC[s.charCodeAt(i)];
    return c == null ? -1 : c;
  }
  // return bigint initialized to value
  function nbv(i) {
    var r = nbi();
    r.fromInt(i);
    return r;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1;
    var t;
    if ((t = x >>> 16) != 0) {
      x = t;
      r += 16;
    }
    if ((t = x >> 8) != 0) {
      x = t;
      r += 8;
    }
    if ((t = x >> 4) != 0) {
      x = t;
      r += 4;
    }
    if ((t = x >> 2) != 0) {
      x = t;
      r += 2;
    }
    if ((t = x >> 1) != 0) {
      x = t;
      r += 1;
    }
    return r;
  }
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // prng4.js - uses Arcfour as a PRNG
  var Arcfour = /** @class */function () {
    function Arcfour() {
      this.i = 0;
      this.j = 0;
      this.S = [];
    }
    // Arcfour.prototype.init = ARC4init;
    // Initialize arcfour context from key, an array of ints, each from [0..255]
    Arcfour.prototype.init = function (key) {
      var i;
      var j;
      var t;
      for (i = 0; i < 256; ++i) {
        this.S[i] = i;
      }
      j = 0;
      for (i = 0; i < 256; ++i) {
        j = j + this.S[i] + key[i % key.length] & 255;
        t = this.S[i];
        this.S[i] = this.S[j];
        this.S[j] = t;
      }
      this.i = 0;
      this.j = 0;
    };
    // Arcfour.prototype.next = ARC4next;
    Arcfour.prototype.next = function () {
      var t;
      this.i = this.i + 1 & 255;
      this.j = this.j + this.S[this.i] & 255;
      t = this.S[this.i];
      this.S[this.i] = this.S[this.j];
      this.S[this.j] = t;
      return this.S[t + this.S[this.i] & 255];
    };
    return Arcfour;
  }();
  // Plug in your RNG constructor here
  function prng_newstate() {
    return new Arcfour();
  }
  // Pool size must be a multiple of 4 and greater than 32.
  // An array of bytes the size of the pool will be passed to init()
  var rng_psize = 256;

  // Random number generator - requires a PRNG backend, e.g. prng4.js
  var rng_state;
  var rng_pool = null;
  var rng_pptr;
  // Initialize the pool with junk if needed.
  if (rng_pool == null) {
    rng_pool = [];
    rng_pptr = 0;
    var t = void 0;
    if (window.crypto && window.crypto.getRandomValues) {
      // Extract entropy (2048 bits) from RNG if available
      var z = new Uint32Array(256);
      window.crypto.getRandomValues(z);
      for (t = 0; t < z.length; ++t) {
        rng_pool[rng_pptr++] = z[t] & 255;
      }
    }
    // Use mouse events for entropy, if we do not have enough entropy by the time
    // we need it, entropy will be generated by Math.random.
    var onMouseMoveListener_1 = function onMouseMoveListener_1(ev) {
      this.count = this.count || 0;
      if (this.count >= 256 || rng_pptr >= rng_psize) {
        if (window.removeEventListener) {
          window.removeEventListener("mousemove", onMouseMoveListener_1, false);
        } else
        if (window.detachEvent) {
          window.detachEvent("onmousemove", onMouseMoveListener_1);
        }
        return;
      }
      try {
        var mouseCoordinates = ev.x + ev.y;
        rng_pool[rng_pptr++] = mouseCoordinates & 255;
        this.count += 1;
      }
      catch (e) {
        // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.
      }
    };
    if (window.addEventListener) {
      window.addEventListener("mousemove", onMouseMoveListener_1, false);
    } else
    if (window.attachEvent) {
      window.attachEvent("onmousemove", onMouseMoveListener_1);
    }
  }
  function rng_get_byte() {
    if (rng_state == null) {
      rng_state = prng_newstate();
      // At this point, we may not have collected enough entropy.  If not, fall back to Math.random
      while (rng_pptr < rng_psize) {
        var random = Math.floor(65536 * Math.random());
        rng_pool[rng_pptr++] = random & 255;
      }
      rng_state.init(rng_pool);
      for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
        rng_pool[rng_pptr] = 0;
      }
      rng_pptr = 0;
    }
    // TODO: allow reseeding after first request
    return rng_state.next();
  }
  var SecureRandom = /** @class */function () {
    function SecureRandom() {
    }
    SecureRandom.prototype.nextBytes = function (ba) {
      for (var i = 0; i < ba.length; ++i) {
        ba[i] = rng_get_byte();
      }
    };
    return SecureRandom;
  }();

  // Depends on jsbn.js and rng.js
  // function linebrk(s,n) {
  //   var ret = "";
  //   var i = 0;
  //   while(i + n < s.length) {
  //     ret += s.substring(i,i+n) + "\n";
  //     i += n;
  //   }
  //   return ret + s.substring(i,s.length);
  // }
  // function byte2Hex(b) {
  //   if(b < 0x10)
  //     return "0" + b.toString(16);
  //   else
  //     return b.toString(16);
  // }
  function pkcs1pad1(s, n) {
    if (n < s.length + 22) {
      console.error("Message too long for RSA", " at jsencrypt\\bin\\jsencrypt.js:2837");
      return null;
    }
    var len = n - s.length - 6;
    var filler = "";
    for (var f = 0; f < len; f += 2) {
      filler += "ff";
    }
    var m = "0001" + filler + "00" + s;
    return parseBigInt(m, 16);
  }
  // PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint
  function pkcs1pad2(s, n) {
    if (n < s.length + 11) {// TODO: fix for utf-8
      console.error("Message too long for RSA", " at jsencrypt\\bin\\jsencrypt.js:2851");
      return null;
    }
    var ba = [];
    var i = s.length - 1;
    while (i >= 0 && n > 0) {
      var c = s.charCodeAt(i--);
      if (c < 128) {// encode using utf-8
        ba[--n] = c;
      } else
      if (c > 127 && c < 2048) {
        ba[--n] = c & 63 | 128;
        ba[--n] = c >> 6 | 192;
      } else
      {
        ba[--n] = c & 63 | 128;
        ba[--n] = c >> 6 & 63 | 128;
        ba[--n] = c >> 12 | 224;
      }
    }
    ba[--n] = 0;
    var rng = new SecureRandom();
    var x = [];
    while (n > 2) {// random non-zero pad
      x[0] = 0;
      while (x[0] == 0) {
        rng.nextBytes(x);
      }
      ba[--n] = x[0];
    }
    ba[--n] = 2;
    ba[--n] = 0;
    return new BigInteger(ba);
  }
  // "empty" RSA key constructor
  var RSAKey = /** @class */function () {
    function RSAKey() {
      this.n = null;
      this.e = 0;
      this.d = null;
      this.p = null;
      this.q = null;
      this.dmp1 = null;
      this.dmq1 = null;
      this.coeff = null;
    }
    //#region PROTECTED
    // protected
    // RSAKey.prototype.doPublic = RSADoPublic;
    // Perform raw public operation on "x": return x^e (mod n)
    RSAKey.prototype.doPublic = function (x) {
      return x.modPowInt(this.e, this.n);
    };
    // RSAKey.prototype.doPrivate = RSADoPrivate;
    // Perform raw private operation on "x": return x^d (mod n)
    RSAKey.prototype.doPrivate = function (x) {
      if (this.p == null || this.q == null) {
        return x.modPow(this.d, this.n);
      }
      // TODO: re-calculate any missing CRT params
      var xp = x.mod(this.p).modPow(this.dmp1, this.p);
      var xq = x.mod(this.q).modPow(this.dmq1, this.q);
      while (xp.compareTo(xq) < 0) {
        xp = xp.add(this.p);
      }
      return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);
    };
    //#endregion PROTECTED
    //#region PUBLIC
    // RSAKey.prototype.setPublic = RSASetPublic;
    // Set the public key fields N and e from hex strings
    RSAKey.prototype.setPublic = function (N, E) {
      if (N != null && E != null && N.length > 0 && E.length > 0) {
        this.n = parseBigInt(N, 16);
        this.e = parseInt(E, 16);
      } else
      {
        console.error("Invalid RSA public key", " at jsencrypt\\bin\\jsencrypt.js:2928");
      }
    };
    // RSAKey.prototype.encrypt = RSAEncrypt;
    // Return the PKCS#1 RSA encryption of "text" as an even-length hex string
    RSAKey.prototype.encrypt = function (text) {
      var m = pkcs1pad2(text, this.n.bitLength() + 7 >> 3);
      if (m == null) {
        return null;
      }
      var c = this.doPublic(m);
      if (c == null) {
        return null;
      }
      var h = c.toString(16);
      if ((h.length & 1) == 0) {
        return h;
      } else
      {
        return "0" + h;
      }
    };
    // RSAKey.prototype.setPrivate = RSASetPrivate;
    // Set the private key fields N, e, and d from hex strings
    RSAKey.prototype.setPrivate = function (N, E, D) {
      if (N != null && E != null && N.length > 0 && E.length > 0) {
        this.n = parseBigInt(N, 16);
        this.e = parseInt(E, 16);
        this.d = parseBigInt(D, 16);
      } else
      {
        console.error("Invalid RSA private key", " at jsencrypt\\bin\\jsencrypt.js:2959");
      }
    };
    // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;
    // Set the private key fields N, e, d and CRT params from hex strings
    RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {
      if (N != null && E != null && N.length > 0 && E.length > 0) {
        this.n = parseBigInt(N, 16);
        this.e = parseInt(E, 16);
        this.d = parseBigInt(D, 16);
        this.p = parseBigInt(P, 16);
        this.q = parseBigInt(Q, 16);
        this.dmp1 = parseBigInt(DP, 16);
        this.dmq1 = parseBigInt(DQ, 16);
        this.coeff = parseBigInt(C, 16);
      } else
      {
        console.error("Invalid RSA private key", " at jsencrypt\\bin\\jsencrypt.js:2976");
      }
    };
    // RSAKey.prototype.generate = RSAGenerate;
    // Generate a new random private key B bits long, using public expt E
    RSAKey.prototype.generate = function (B, E) {
      var rng = new SecureRandom();
      var qs = B >> 1;
      this.e = parseInt(E, 16);
      var ee = new BigInteger(E, 16);
      for (;;) {
        for (;;) {
          this.p = new BigInteger(B - qs, 1, rng);
          if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {
            break;
          }
        }
        for (;;) {
          this.q = new BigInteger(qs, 1, rng);
          if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {
            break;
          }
        }
        if (this.p.compareTo(this.q) <= 0) {
          var t = this.p;
          this.p = this.q;
          this.q = t;
        }
        var p1 = this.p.subtract(BigInteger.ONE);
        var q1 = this.q.subtract(BigInteger.ONE);
        var phi = p1.multiply(q1);
        if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {
          this.n = this.p.multiply(this.q);
          this.d = ee.modInverse(phi);
          this.dmp1 = this.d.mod(p1);
          this.dmq1 = this.d.mod(q1);
          this.coeff = this.q.modInverse(this.p);
          break;
        }
      }
    };
    // RSAKey.prototype.decrypt = RSADecrypt;
    // Return the PKCS#1 RSA decryption of "ctext".
    // "ctext" is an even-length hex string and the output is a plain string.
    RSAKey.prototype.decrypt = function (ctext) {
      var c = parseBigInt(ctext, 16);
      var m = this.doPrivate(c);
      if (m == null) {
        return null;
      }
      return pkcs1unpad2(m, this.n.bitLength() + 7 >> 3);
    };
    // Generate a new random private key B bits long, using public expt E
    RSAKey.prototype.generateAsync = function (B, E, callback) {
      var rng = new SecureRandom();
      var qs = B >> 1;
      this.e = parseInt(E, 16);
      var ee = new BigInteger(E, 16);
      var rsa = this;
      // These functions have non-descript names because they were originally for(;;) loops.
      // I don't know about cryptography to give them better names than loop1-4.
      var loop1 = function loop1() {
        var loop4 = function loop4() {
          if (rsa.p.compareTo(rsa.q) <= 0) {
            var t = rsa.p;
            rsa.p = rsa.q;
            rsa.q = t;
          }
          var p1 = rsa.p.subtract(BigInteger.ONE);
          var q1 = rsa.q.subtract(BigInteger.ONE);
          var phi = p1.multiply(q1);
          if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {
            rsa.n = rsa.p.multiply(rsa.q);
            rsa.d = ee.modInverse(phi);
            rsa.dmp1 = rsa.d.mod(p1);
            rsa.dmq1 = rsa.d.mod(q1);
            rsa.coeff = rsa.q.modInverse(rsa.p);
            setTimeout(function () {callback();}, 0); // escape
          } else
          {
            setTimeout(loop1, 0);
          }
        };
        var loop3 = function loop3() {
          rsa.q = nbi();
          rsa.q.fromNumberAsync(qs, 1, rng, function () {
            rsa.q.subtract(BigInteger.ONE).gcda(ee, function (r) {
              if (r.compareTo(BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {
                setTimeout(loop4, 0);
              } else
              {
                setTimeout(loop3, 0);
              }
            });
          });
        };
        var loop2 = function loop2() {
          rsa.p = nbi();
          rsa.p.fromNumberAsync(B - qs, 1, rng, function () {
            rsa.p.subtract(BigInteger.ONE).gcda(ee, function (r) {
              if (r.compareTo(BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {
                setTimeout(loop3, 0);
              } else
              {
                setTimeout(loop2, 0);
              }
            });
          });
        };
        setTimeout(loop2, 0);
      };
      setTimeout(loop1, 0);
    };
    RSAKey.prototype.sign = function (text, digestMethod, digestName) {
      var header = getDigestHeader(digestName);
      var digest = header + digestMethod(text).toString();
      var m = pkcs1pad1(digest, this.n.bitLength() / 4);
      if (m == null) {
        return null;
      }
      var c = this.doPrivate(m);
      if (c == null) {
        return null;
      }
      var h = c.toString(16);
      if ((h.length & 1) == 0) {
        return h;
      } else
      {
        return "0" + h;
      }
    };
    RSAKey.prototype.verify = function (text, signature, digestMethod) {
      var c = parseBigInt(signature, 16);
      var m = this.doPublic(c);
      if (m == null) {
        return null;
      }
      var unpadded = m.toString(16).replace(/^1f+00/, "");
      var digest = removeDigestHeader(unpadded);
      return digest == digestMethod(text).toString();
    };
    return RSAKey;
  }();
  // Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext
  function pkcs1unpad2(d, n) {
    var b = d.toByteArray();
    var i = 0;
    while (i < b.length && b[i] == 0) {
      ++i;
    }
    if (b.length - i != n - 1 || b[i] != 2) {
      return null;
    }
    ++i;
    while (b[i] != 0) {
      if (++i >= b.length) {
        return null;
      }
    }
    var ret = "";
    while (++i < b.length) {
      var c = b[i] & 255;
      if (c < 128) {// utf-8 decode
        ret += String.fromCharCode(c);
      } else
      if (c > 191 && c < 224) {
        ret += String.fromCharCode((c & 31) << 6 | b[i + 1] & 63);
        ++i;
      } else
      {
        ret += String.fromCharCode((c & 15) << 12 | (b[i + 1] & 63) << 6 | b[i + 2] & 63);
        i += 2;
      }
    }
    return ret;
  }
  // https://tools.ietf.org/html/rfc3447#page-43
  var DIGEST_HEADERS = {
    md2: "3020300c06082a864886f70d020205000410",
    md5: "3020300c06082a864886f70d020505000410",
    sha1: "3021300906052b0e03021a05000414",
    sha224: "302d300d06096086480165030402040500041c",
    sha256: "3031300d060960864801650304020105000420",
    sha384: "3041300d060960864801650304020205000430",
    sha512: "3051300d060960864801650304020305000440",
    ripemd160: "3021300906052b2403020105000414" };

  function getDigestHeader(name) {
    return DIGEST_HEADERS[name] || "";
  }
  function removeDigestHeader(str) {
    for (var name_1 in DIGEST_HEADERS) {
      if (DIGEST_HEADERS.hasOwnProperty(name_1)) {
        var header = DIGEST_HEADERS[name_1];
        var len = header.length;
        if (str.substr(0, len) == header) {
          return str.substr(len);
        }
      }
    }
    return str;
  }
  // Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
  // function RSAEncryptB64(text) {
  //  var h = this.encrypt(text);
  //  if(h) return hex2b64(h); else return null;
  // }
  // public
  // RSAKey.prototype.encrypt_b64 = RSAEncryptB64;

  /*!
  Copyright (c) 2011, Yahoo! Inc. All rights reserved.
  Code licensed under the BSD License:
  http://developer.yahoo.com/yui/license.html
  version: 2.9.0
  */
  var YAHOO = {};
  YAHOO.lang = {
    /**
                  * Utility to set up the prototype, constructor and superclass properties to
                  * support an inheritance strategy that can chain constructors and methods.
                  * Static members will not be inherited.
                  *
                  * @method extend
                  * @static
                  * @param {Function} subc   the object to modify
                  * @param {Function} superc the object to inherit
                  * @param {Object} overrides  additional properties/methods to add to the
                  *                              subclass prototype.  These will override the
                  *                              matching items obtained from the superclass
                  *                              if present.
                  */
    extend: function extend(subc, superc, overrides) {
      if (!superc || !subc) {
        throw new Error("YAHOO.lang.extend failed, please check that " +
        "all dependencies are included.");
      }

      var F = function F() {};
      F.prototype = superc.prototype;
      subc.prototype = new F();
      subc.prototype.constructor = subc;
      subc.superclass = superc.prototype;

      if (superc.prototype.constructor == Object.prototype.constructor) {
        superc.prototype.constructor = superc;
      }

      if (overrides) {
        var i;
        for (i in overrides) {
          subc.prototype[i] = overrides[i];
        }

        /*
           * IE will not enumerate native functions in a derived object even if the
           * function was overridden.  This is a workaround for specific functions
           * we care about on the Object prototype.
           * @property _IEEnumFix
           * @param {Function} r  the object to receive the augmentation
           * @param {Function} s  the object that supplies the properties to augment
           * @static
           * @private
           */
        var _IEEnumFix = function _IEEnumFix() {},
        ADD = ["toString", "valueOf"];
        try {
          if (/MSIE/.test(navigator.userAgent)) {
            _IEEnumFix = function _IEEnumFix(r, s) {
              for (i = 0; i < ADD.length; i = i + 1) {
                var fname = ADD[i],f = s[fname];
                if (typeof f === 'function' && f != Object.prototype[fname]) {
                  r[fname] = f;
                }
              }
            };
          }
        } catch (ex) {}_IEEnumFix(subc.prototype, overrides);
      }
    } };


  /* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license
          */

  /**
              * @fileOverview
              * @name asn1-1.0.js
              * @author Kenji Urushima kenji.urushima@gmail.com
              * @version asn1 1.0.13 (2017-Jun-02)
              * @since jsrsasign 2.1
              * @license <a href="https://kjur.github.io/jsrsasign/license/">MIT License</a>
              */

  /**
                  * kjur's class library name space
                  * <p>
                  * This name space provides following name spaces:
                  * <ul>
                  * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>
                  * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>
                  * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature
                  * class and utilities</li>
                  * </ul>
                  * </p>
                  * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.
                  * @name KJUR
                  * @namespace kjur's class library name space
                  */
  var KJUR = {};

  /**
                  * kjur's ASN.1 class library name space
                  * <p>
                  * This is ITU-T X.690 ASN.1 DER encoder class library and
                  * class structure and methods is very similar to
                  * org.bouncycastle.asn1 package of
                  * well known BouncyCaslte Cryptography Library.
                  * <h4>PROVIDING ASN.1 PRIMITIVES</h4>
                  * Here are ASN.1 DER primitive classes.
                  * <ul>
                  * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>
                  * <li>0x02 {@link KJUR.asn1.DERInteger}</li>
                  * <li>0x03 {@link KJUR.asn1.DERBitString}</li>
                  * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>
                  * <li>0x05 {@link KJUR.asn1.DERNull}</li>
                  * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>
                  * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>
                  * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>
                  * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>
                  * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>
                  * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>
                  * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>
                  * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>
                  * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>
                  * <li>0x30 {@link KJUR.asn1.DERSequence}</li>
                  * <li>0x31 {@link KJUR.asn1.DERSet}</li>
                  * </ul>
                  * <h4>OTHER ASN.1 CLASSES</h4>
                  * <ul>
                  * <li>{@link KJUR.asn1.ASN1Object}</li>
                  * <li>{@link KJUR.asn1.DERAbstractString}</li>
                  * <li>{@link KJUR.asn1.DERAbstractTime}</li>
                  * <li>{@link KJUR.asn1.DERAbstractStructured}</li>
                  * <li>{@link KJUR.asn1.DERTaggedObject}</li>
                  * </ul>
                  * <h4>SUB NAME SPACES</h4>
                  * <ul>
                  * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>
                  * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>
                  * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>
                  * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>
                  * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>
                  * </ul>
                  * </p>
                  * NOTE: Please ignore method summary and document of this namespace.
                  * This caused by a bug of jsdoc2.
                  * @name KJUR.asn1
                  * @namespace
                  */
  if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) KJUR.asn1 = {};

  /**
                                                                      * ASN1 utilities class
                                                                      * @name KJUR.asn1.ASN1Util
                                                                      * @class ASN1 utilities class
                                                                      * @since asn1 1.0.2
                                                                      */
  KJUR.asn1.ASN1Util = new function () {
    this.integerToByteHex = function (i) {
      var h = i.toString(16);
      if (h.length % 2 == 1) h = '0' + h;
      return h;
    };
    this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {
      var h = bigIntegerValue.toString(16);
      if (h.substr(0, 1) != '-') {
        if (h.length % 2 == 1) {
          h = '0' + h;
        } else {
          if (!h.match(/^[0-7]/)) {
            h = '00' + h;
          }
        }
      } else {
        var hPos = h.substr(1);
        var xorLen = hPos.length;
        if (xorLen % 2 == 1) {
          xorLen += 1;
        } else {
          if (!h.match(/^[0-7]/)) {
            xorLen += 2;
          }
        }
        var hMask = '';
        for (var i = 0; i < xorLen; i++) {
          hMask += 'f';
        }
        var biMask = new BigInteger(hMask, 16);
        var biNeg = biMask.xor(bigIntegerValue).add(BigInteger.ONE);
        h = biNeg.toString(16).replace(/^-/, '');
      }
      return h;
    };
    /**
        * get PEM string from hexadecimal data and header string
        * @name getPEMStringFromHex
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {String} dataHex hexadecimal string of PEM body
        * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')
        * @return {String} PEM formatted string of input data
        * @description
        * This method converts a hexadecimal string to a PEM string with
        * a specified header. Its line break will be CRLF("\r\n").
        * @example
        * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');
        * // value of pem will be:
        * -----BEGIN PRIVATE KEY-----
        * YWFh
        * -----END PRIVATE KEY-----
        */
    this.getPEMStringFromHex = function (dataHex, pemHeader) {
      return hextopem(dataHex, pemHeader);
    };

    /**
        * generate ASN1Object specifed by JSON parameters
        * @name newObject
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {Array} param JSON parameter to generate ASN1Object
        * @return {KJUR.asn1.ASN1Object} generated object
        * @since asn1 1.0.3
        * @description
        * generate any ASN1Object specified by JSON param
        * including ASN.1 primitive or structured.
        * Generally 'param' can be described as follows:
        * <blockquote>
        * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}
        * </blockquote>
        * 'TYPE-OF-ASN1OBJ' can be one of following symbols:
        * <ul>
        * <li>'bool' - DERBoolean</li>
        * <li>'int' - DERInteger</li>
        * <li>'bitstr' - DERBitString</li>
        * <li>'octstr' - DEROctetString</li>
        * <li>'null' - DERNull</li>
        * <li>'oid' - DERObjectIdentifier</li>
        * <li>'enum' - DEREnumerated</li>
        * <li>'utf8str' - DERUTF8String</li>
        * <li>'numstr' - DERNumericString</li>
        * <li>'prnstr' - DERPrintableString</li>
        * <li>'telstr' - DERTeletexString</li>
        * <li>'ia5str' - DERIA5String</li>
        * <li>'utctime' - DERUTCTime</li>
        * <li>'gentime' - DERGeneralizedTime</li>
        * <li>'seq' - DERSequence</li>
        * <li>'set' - DERSet</li>
        * <li>'tag' - DERTaggedObject</li>
        * </ul>
        * @example
        * newObject({'prnstr': 'aaa'});
        * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})
        * // ASN.1 Tagged Object
        * newObject({'tag': {'tag': 'a1',
        *                    'explicit': true,
        *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});
        * // more simple representation of ASN.1 Tagged Object
        * newObject({'tag': ['a1',
        *                    true,
        *                    {'seq': [
        *                      {'int': 3},
        *                      {'prnstr': 'aaa'}]}
        *                   ]});
        */
    this.newObject = function (param) {
      var _KJUR = KJUR,
      _KJUR_asn1 = _KJUR.asn1,
      _DERBoolean = _KJUR_asn1.DERBoolean,
      _DERInteger = _KJUR_asn1.DERInteger,
      _DERBitString = _KJUR_asn1.DERBitString,
      _DEROctetString = _KJUR_asn1.DEROctetString,
      _DERNull = _KJUR_asn1.DERNull,
      _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier,
      _DEREnumerated = _KJUR_asn1.DEREnumerated,
      _DERUTF8String = _KJUR_asn1.DERUTF8String,
      _DERNumericString = _KJUR_asn1.DERNumericString,
      _DERPrintableString = _KJUR_asn1.DERPrintableString,
      _DERTeletexString = _KJUR_asn1.DERTeletexString,
      _DERIA5String = _KJUR_asn1.DERIA5String,
      _DERUTCTime = _KJUR_asn1.DERUTCTime,
      _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime,
      _DERSequence = _KJUR_asn1.DERSequence,
      _DERSet = _KJUR_asn1.DERSet,
      _DERTaggedObject = _KJUR_asn1.DERTaggedObject,
      _newObject = _KJUR_asn1.ASN1Util.newObject;

      var keys = Object.keys(param);
      if (keys.length != 1)
      throw "key of param shall be only one.";
      var key = keys[0];

      if (":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":" + key + ":") == -1)
      throw "undefined key: " + key;

      if (key == "bool") return new _DERBoolean(param[key]);
      if (key == "int") return new _DERInteger(param[key]);
      if (key == "bitstr") return new _DERBitString(param[key]);
      if (key == "octstr") return new _DEROctetString(param[key]);
      if (key == "null") return new _DERNull(param[key]);
      if (key == "oid") return new _DERObjectIdentifier(param[key]);
      if (key == "enum") return new _DEREnumerated(param[key]);
      if (key == "utf8str") return new _DERUTF8String(param[key]);
      if (key == "numstr") return new _DERNumericString(param[key]);
      if (key == "prnstr") return new _DERPrintableString(param[key]);
      if (key == "telstr") return new _DERTeletexString(param[key]);
      if (key == "ia5str") return new _DERIA5String(param[key]);
      if (key == "utctime") return new _DERUTCTime(param[key]);
      if (key == "gentime") return new _DERGeneralizedTime(param[key]);

      if (key == "seq") {
        var paramList = param[key];
        var a = [];
        for (var i = 0; i < paramList.length; i++) {
          var asn1Obj = _newObject(paramList[i]);
          a.push(asn1Obj);
        }
        return new _DERSequence({ 'array': a });
      }

      if (key == "set") {
        var paramList = param[key];
        var a = [];
        for (var i = 0; i < paramList.length; i++) {
          var asn1Obj = _newObject(paramList[i]);
          a.push(asn1Obj);
        }
        return new _DERSet({ 'array': a });
      }

      if (key == "tag") {
        var tagParam = param[key];
        if (Object.prototype.toString.call(tagParam) === '[object Array]' &&
        tagParam.length == 3) {
          var obj = _newObject(tagParam[2]);
          return new _DERTaggedObject({ tag: tagParam[0],
            explicit: tagParam[1],
            obj: obj });
        } else {
          var newParam = {};
          if (tagParam.explicit !== undefined)
          newParam.explicit = tagParam.explicit;
          if (tagParam.tag !== undefined)
          newParam.tag = tagParam.tag;
          if (tagParam.obj === undefined)
          throw "obj shall be specified for 'tag'.";
          newParam.obj = _newObject(tagParam.obj);
          return new _DERTaggedObject(newParam);
        }
      }
    };

    /**
        * get encoded hexadecimal string of ASN1Object specifed by JSON parameters
        * @name jsonToASN1HEX
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {Array} param JSON parameter to generate ASN1Object
        * @return hexadecimal string of ASN1Object
        * @since asn1 1.0.4
        * @description
        * As for ASN.1 object representation of JSON object,
        * please see {@link newObject}.
        * @example
        * jsonToASN1HEX({'prnstr': 'aaa'});
        */
    this.jsonToASN1HEX = function (param) {
      var asn1Obj = this.newObject(param);
      return asn1Obj.getEncodedHex();
    };
  }();

  /**
        * get dot noted oid number string from hexadecimal value of OID
        * @name oidHexToInt
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {String} hex hexadecimal value of object identifier
        * @return {String} dot noted string of object identifier
        * @since jsrsasign 4.8.3 asn1 1.0.7
        * @description
        * This static method converts from hexadecimal string representation of
        * ASN.1 value of object identifier to oid number string.
        * @example
        * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; "2.5.4.6"
        */
  KJUR.asn1.ASN1Util.oidHexToInt = function (hex) {
    var s = "";
    var i01 = parseInt(hex.substr(0, 2), 16);
    var i0 = Math.floor(i01 / 40);
    var i1 = i01 % 40;
    var s = i0 + "." + i1;

    var binbuf = "";
    for (var i = 2; i < hex.length; i += 2) {
      var value = parseInt(hex.substr(i, 2), 16);
      var bin = ("00000000" + value.toString(2)).slice(-8);
      binbuf = binbuf + bin.substr(1, 7);
      if (bin.substr(0, 1) == "0") {
        var bi = new BigInteger(binbuf, 2);
        s = s + "." + bi.toString(10);
        binbuf = "";
      }
    }
    return s;
  };

  /**
      * get hexadecimal value of object identifier from dot noted oid value
      * @name oidIntToHex
      * @memberOf KJUR.asn1.ASN1Util
      * @function
      * @param {String} oidString dot noted string of object identifier
      * @return {String} hexadecimal value of object identifier
      * @since jsrsasign 4.8.3 asn1 1.0.7
      * @description
      * This static method converts from object identifier value string.
      * to hexadecimal string representation of it.
      * @example
      * KJUR.asn1.ASN1Util.oidIntToHex("2.5.4.6") &rarr; "550406"
      */
  KJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {
    var itox = function itox(i) {
      var h = i.toString(16);
      if (h.length == 1) h = '0' + h;
      return h;
    };

    var roidtox = function roidtox(roid) {
      var h = '';
      var bi = new BigInteger(roid, 10);
      var b = bi.toString(2);
      var padLen = 7 - b.length % 7;
      if (padLen == 7) padLen = 0;
      var bPad = '';
      for (var i = 0; i < padLen; i++) {bPad += '0';}
      b = bPad + b;
      for (var i = 0; i < b.length - 1; i += 7) {
        var b8 = b.substr(i, 7);
        if (i != b.length - 7) b8 = '1' + b8;
        h += itox(parseInt(b8, 2));
      }
      return h;
    };

    if (!oidString.match(/^[0-9.]+$/)) {
      throw "malformed oid string: " + oidString;
    }
    var h = '';
    var a = oidString.split('.');
    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
    h += itox(i0);
    a.splice(0, 2);
    for (var i = 0; i < a.length; i++) {
      h += roidtox(a[i]);
    }
    return h;
  };


  // ********************************************************************
  //  Abstract ASN.1 Classes
  // ********************************************************************

  // ********************************************************************

  /**
   * base class for ASN.1 DER encoder object
   * @name KJUR.asn1.ASN1Object
   * @class base class for ASN.1 DER encoder object
   * @property {Boolean} isModified flag whether internal data was changed
   * @property {String} hTLV hexadecimal string of ASN.1 TLV
   * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)
   * @property {String} hL hexadecimal string of ASN.1 TLV length(L)
   * @property {String} hV hexadecimal string of ASN.1 TLV value(V)
   * @description
   */
  KJUR.asn1.ASN1Object = function () {
    var hV = '';

    /**
                  * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)
                  * @name getLengthHexFromValue
                  * @memberOf KJUR.asn1.ASN1Object#
                  * @function
                  * @return {String} hexadecimal string of ASN.1 TLV length(L)
                  */
    this.getLengthHexFromValue = function () {
      if (typeof this.hV == "undefined" || this.hV == null) {
        throw "this.hV is null or undefined.";
      }
      if (this.hV.length % 2 == 1) {
        throw "value hex must be even length: n=" + hV.length + ",v=" + this.hV;
      }
      var n = this.hV.length / 2;
      var hN = n.toString(16);
      if (hN.length % 2 == 1) {
        hN = "0" + hN;
      }
      if (n < 128) {
        return hN;
      } else {
        var hNlen = hN.length / 2;
        if (hNlen > 15) {
          throw "ASN.1 length too long to represent by 8x: n = " + n.toString(16);
        }
        var head = 128 + hNlen;
        return head.toString(16) + hN;
      }
    };

    /**
        * get hexadecimal string of ASN.1 TLV bytes
        * @name getEncodedHex
        * @memberOf KJUR.asn1.ASN1Object#
        * @function
        * @return {String} hexadecimal string of ASN.1 TLV
        */
    this.getEncodedHex = function () {
      if (this.hTLV == null || this.isModified) {
        this.hV = this.getFreshValueHex();
        this.hL = this.getLengthHexFromValue();
        this.hTLV = this.hT + this.hL + this.hV;
        this.isModified = false;
        //alert("first time: " + this.hTLV);
      }
      return this.hTLV;
    };

    /**
        * get hexadecimal string of ASN.1 TLV value(V) bytes
        * @name getValueHex
        * @memberOf KJUR.asn1.ASN1Object#
        * @function
        * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes
        */
    this.getValueHex = function () {
      this.getEncodedHex();
      return this.hV;
    };

    this.getFreshValueHex = function () {
      return '';
    };
  };

  // == BEGIN DERAbstractString ================================================
  /**
   * base class for ASN.1 DER string classes
   * @name KJUR.asn1.DERAbstractString
   * @class base class for ASN.1 DER string classes
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @property {String} s internal string of value
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERAbstractString = function (params) {
    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);

    /**
                                                                    * get string value of this string object
                                                                    * @name getString
                                                                    * @memberOf KJUR.asn1.DERAbstractString#
                                                                    * @function
                                                                    * @return {String} string value of this string object
                                                                    */
    this.getString = function () {
      return this.s;
    };

    /**
        * set value by a string
        * @name setString
        * @memberOf KJUR.asn1.DERAbstractString#
        * @function
        * @param {String} newS value by a string to set
        */
    this.setString = function (newS) {
      this.hTLV = null;
      this.isModified = true;
      this.s = newS;
      this.hV = stohex(this.s);
    };

    /**
        * set value by a hexadecimal string
        * @name setStringHex
        * @memberOf KJUR.asn1.DERAbstractString#
        * @function
        * @param {String} newHexString value by a hexadecimal string to set
        */
    this.setStringHex = function (newHexString) {
      this.hTLV = null;
      this.isModified = true;
      this.s = null;
      this.hV = newHexString;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params == "string") {
        this.setString(params);
      } else if (typeof params['str'] != "undefined") {
        this.setString(params['str']);
      } else if (typeof params['hex'] != "undefined") {
        this.setStringHex(params['hex']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);
  // == END   DERAbstractString ================================================

  // == BEGIN DERAbstractTime ==================================================
  /**
   * base class for ASN.1 DER Generalized/UTCTime class
   * @name KJUR.asn1.DERAbstractTime
   * @class base class for ASN.1 DER Generalized/UTCTime class
   * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERAbstractTime = function (params) {
    KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);

    // --- PRIVATE METHODS --------------------
    this.localDateToUTC = function (d) {
      utc = d.getTime() + d.getTimezoneOffset() * 60000;
      var utcDate = new Date(utc);
      return utcDate;
    };

    /*
        * format date string by Data object
        * @name formatDate
        * @memberOf KJUR.asn1.AbstractTime;
        * @param {Date} dateObject
        * @param {string} type 'utc' or 'gen'
        * @param {boolean} withMillis flag for with millisections or not
        * @description
        * 'withMillis' flag is supported from asn1 1.0.6.
        */
    this.formatDate = function (dateObject, type, withMillis) {
      var pad = this.zeroPadding;
      var d = this.localDateToUTC(dateObject);
      var year = String(d.getFullYear());
      if (type == 'utc') year = year.substr(2, 2);
      var month = pad(String(d.getMonth() + 1), 2);
      var day = pad(String(d.getDate()), 2);
      var hour = pad(String(d.getHours()), 2);
      var min = pad(String(d.getMinutes()), 2);
      var sec = pad(String(d.getSeconds()), 2);
      var s = year + month + day + hour + min + sec;
      if (withMillis === true) {
        var millis = d.getMilliseconds();
        if (millis != 0) {
          var sMillis = pad(String(millis), 3);
          sMillis = sMillis.replace(/[0]+$/, "");
          s = s + "." + sMillis;
        }
      }
      return s + "Z";
    };

    this.zeroPadding = function (s, len) {
      if (s.length >= len) return s;
      return new Array(len - s.length + 1).join('0') + s;
    };

    // --- PUBLIC METHODS --------------------
    /**
     * get string value of this string object
     * @name getString
     * @memberOf KJUR.asn1.DERAbstractTime#
     * @function
     * @return {String} string value of this time object
     */
    this.getString = function () {
      return this.s;
    };

    /**
        * set value by a string
        * @name setString
        * @memberOf KJUR.asn1.DERAbstractTime#
        * @function
        * @param {String} newS value by a string to set such like "130430235959Z"
        */
    this.setString = function (newS) {
      this.hTLV = null;
      this.isModified = true;
      this.s = newS;
      this.hV = stohex(newS);
    };

    /**
        * set value by a Date object
        * @name setByDateValue
        * @memberOf KJUR.asn1.DERAbstractTime#
        * @function
        * @param {Integer} year year of date (ex. 2013)
        * @param {Integer} month month of date between 1 and 12 (ex. 12)
        * @param {Integer} day day of month
        * @param {Integer} hour hours of date
        * @param {Integer} min minutes of date
        * @param {Integer} sec seconds of date
        */
    this.setByDateValue = function (year, month, day, hour, min, sec) {
      var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));
      this.setByDate(dateObject);
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);
  // == END   DERAbstractTime ==================================================

  // == BEGIN DERAbstractStructured ============================================
  /**
   * base class for ASN.1 DER structured class
   * @name KJUR.asn1.DERAbstractStructured
   * @class base class for ASN.1 DER structured class
   * @property {Array} asn1Array internal array of ASN1Object
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERAbstractStructured = function (params) {
    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);

    /**
                                                                    * set value by array of ASN1Object
                                                                    * @name setByASN1ObjectArray
                                                                    * @memberOf KJUR.asn1.DERAbstractStructured#
                                                                    * @function
                                                                    * @param {array} asn1ObjectArray array of ASN1Object to set
                                                                    */
    this.setByASN1ObjectArray = function (asn1ObjectArray) {
      this.hTLV = null;
      this.isModified = true;
      this.asn1Array = asn1ObjectArray;
    };

    /**
        * append an ASN1Object to internal array
        * @name appendASN1Object
        * @memberOf KJUR.asn1.DERAbstractStructured#
        * @function
        * @param {ASN1Object} asn1Object to add
        */
    this.appendASN1Object = function (asn1Object) {
      this.hTLV = null;
      this.isModified = true;
      this.asn1Array.push(asn1Object);
    };

    this.asn1Array = new Array();
    if (typeof params != "undefined") {
      if (typeof params['array'] != "undefined") {
        this.asn1Array = params['array'];
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);


  // ********************************************************************
  //  ASN.1 Object Classes
  // ********************************************************************

  // ********************************************************************
  /**
   * class for ASN.1 DER Boolean
   * @name KJUR.asn1.DERBoolean
   * @class class for ASN.1 DER Boolean
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERBoolean = function () {
    KJUR.asn1.DERBoolean.superclass.constructor.call(this);
    this.hT = "01";
    this.hTLV = "0101ff";
  };
  YAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER Integer
   * @name KJUR.asn1.DERInteger
   * @class class for ASN.1 DER Integer
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>int - specify initial ASN.1 value(V) by integer value</li>
   * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERInteger = function (params) {
    KJUR.asn1.DERInteger.superclass.constructor.call(this);
    this.hT = "02";

    /**
                     * set value by Tom Wu's BigInteger object
                     * @name setByBigInteger
                     * @memberOf KJUR.asn1.DERInteger#
                     * @function
                     * @param {BigInteger} bigIntegerValue to set
                     */
    this.setByBigInteger = function (bigIntegerValue) {
      this.hTLV = null;
      this.isModified = true;
      this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
    };

    /**
        * set value by integer value
        * @name setByInteger
        * @memberOf KJUR.asn1.DERInteger
        * @function
        * @param {Integer} integer value to set
        */
    this.setByInteger = function (intValue) {
      var bi = new BigInteger(String(intValue), 10);
      this.setByBigInteger(bi);
    };

    /**
        * set value by integer value
        * @name setValueHex
        * @memberOf KJUR.asn1.DERInteger#
        * @function
        * @param {String} hexadecimal string of integer value
        * @description
        * <br/>
        * NOTE: Value shall be represented by minimum octet length of
        * two's complement representation.
        * @example
        * new KJUR.asn1.DERInteger(123);
        * new KJUR.asn1.DERInteger({'int': 123});
        * new KJUR.asn1.DERInteger({'hex': '1fad'});
        */
    this.setValueHex = function (newHexString) {
      this.hV = newHexString;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params['bigint'] != "undefined") {
        this.setByBigInteger(params['bigint']);
      } else if (typeof params['int'] != "undefined") {
        this.setByInteger(params['int']);
      } else if (typeof params == "number") {
        this.setByInteger(params);
      } else if (typeof params['hex'] != "undefined") {
        this.setValueHex(params['hex']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER encoded BitString primitive
   * @name KJUR.asn1.DERBitString
   * @class class for ASN.1 DER encoded BitString primitive
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>bin - specify binary string (ex. '10111')</li>
   * <li>array - specify array of boolean (ex. [true,false,true,true])</li>
   * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>
   * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}
   * argument for "BitString encapsulates" structure.</li>
   * </ul>
   * NOTE1: 'params' can be omitted.<br/>
   * NOTE2: 'obj' parameter have been supported since
   * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>
   * @example
   * // default constructor
   * o = new KJUR.asn1.DERBitString();
   * // initialize with binary string
   * o = new KJUR.asn1.DERBitString({bin: "1011"});
   * // initialize with boolean array
   * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});
   * // initialize with hexadecimal string (04 is unused bits)
   * o = new KJUR.asn1.DEROctetString({hex: "04bac0"});
   * // initialize with ASN1Util.newObject argument for encapsulated
   * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
   * // above generates a ASN.1 data like this:
   * // BIT STRING, encapsulates {
   * //   SEQUENCE {
   * //     INTEGER 3
   * //     PrintableString 'aaa'
   * //     }
   * //   }
   */
  KJUR.asn1.DERBitString = function (params) {
    if (params !== undefined && typeof params.obj !== "undefined") {
      var o = KJUR.asn1.ASN1Util.newObject(params.obj);
      params.hex = "00" + o.getEncodedHex();
    }
    KJUR.asn1.DERBitString.superclass.constructor.call(this);
    this.hT = "03";

    /**
                     * set ASN.1 value(V) by a hexadecimal string including unused bits
                     * @name setHexValueIncludingUnusedBits
                     * @memberOf KJUR.asn1.DERBitString#
                     * @function
                     * @param {String} newHexStringIncludingUnusedBits
                     */
    this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {
      this.hTLV = null;
      this.isModified = true;
      this.hV = newHexStringIncludingUnusedBits;
    };

    /**
        * set ASN.1 value(V) by unused bit and hexadecimal string of value
        * @name setUnusedBitsAndHexValue
        * @memberOf KJUR.asn1.DERBitString#
        * @function
        * @param {Integer} unusedBits
        * @param {String} hValue
        */
    this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {
      if (unusedBits < 0 || 7 < unusedBits) {
        throw "unused bits shall be from 0 to 7: u = " + unusedBits;
      }
      var hUnusedBits = "0" + unusedBits;
      this.hTLV = null;
      this.isModified = true;
      this.hV = hUnusedBits + hValue;
    };

    /**
        * set ASN.1 DER BitString by binary string<br/>
        * @name setByBinaryString
        * @memberOf KJUR.asn1.DERBitString#
        * @function
        * @param {String} binaryString binary value string (i.e. '10111')
        * @description
        * Its unused bits will be calculated automatically by length of
        * 'binaryValue'. <br/>
        * NOTE: Trailing zeros '0' will be ignored.
        * @example
        * o = new KJUR.asn1.DERBitString();
        * o.setByBooleanArray("01011");
        */
    this.setByBinaryString = function (binaryString) {
      binaryString = binaryString.replace(/0+$/, '');
      var unusedBits = 8 - binaryString.length % 8;
      if (unusedBits == 8) unusedBits = 0;
      for (var i = 0; i <= unusedBits; i++) {
        binaryString += '0';
      }
      var h = '';
      for (var i = 0; i < binaryString.length - 1; i += 8) {
        var b = binaryString.substr(i, 8);
        var x = parseInt(b, 2).toString(16);
        if (x.length == 1) x = '0' + x;
        h += x;
      }
      this.hTLV = null;
      this.isModified = true;
      this.hV = '0' + unusedBits + h;
    };

    /**
        * set ASN.1 TLV value(V) by an array of boolean<br/>
        * @name setByBooleanArray
        * @memberOf KJUR.asn1.DERBitString#
        * @function
        * @param {array} booleanArray array of boolean (ex. [true, false, true])
        * @description
        * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.
        * @example
        * o = new KJUR.asn1.DERBitString();
        * o.setByBooleanArray([false, true, false, true, true]);
        */
    this.setByBooleanArray = function (booleanArray) {
      var s = '';
      for (var i = 0; i < booleanArray.length; i++) {
        if (booleanArray[i] == true) {
          s += '1';
        } else {
          s += '0';
        }
      }
      this.setByBinaryString(s);
    };

    /**
        * generate an array of falses with specified length<br/>
        * @name newFalseArray
        * @memberOf KJUR.asn1.DERBitString
        * @function
        * @param {Integer} nLength length of array to generate
        * @return {array} array of boolean falses
        * @description
        * This static method may be useful to initialize boolean array.
        * @example
        * o = new KJUR.asn1.DERBitString();
        * o.newFalseArray(3) &rarr; [false, false, false]
        */
    this.newFalseArray = function (nLength) {
      var a = new Array(nLength);
      for (var i = 0; i < nLength; i++) {
        a[i] = false;
      }
      return a;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params == "string" && params.toLowerCase().match(/^[0-9a-f]+$/)) {
        this.setHexValueIncludingUnusedBits(params);
      } else if (typeof params['hex'] != "undefined") {
        this.setHexValueIncludingUnusedBits(params['hex']);
      } else if (typeof params['bin'] != "undefined") {
        this.setByBinaryString(params['bin']);
      } else if (typeof params['array'] != "undefined") {
        this.setByBooleanArray(params['array']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER OctetString<br/>
   * @name KJUR.asn1.DEROctetString
   * @class class for ASN.1 DER OctetString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * This class provides ASN.1 OctetString simple type.<br/>
   * Supported "params" attributes are:
   * <ul>
   * <li>str - to set a string as a value</li>
   * <li>hex - to set a hexadecimal string as a value</li>
   * <li>obj - to set a encapsulated ASN.1 value by JSON object
   * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>
   * </ul>
   * NOTE: A parameter 'obj' have been supported
   * for "OCTET STRING, encapsulates" structure.
   * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).
   * @see KJUR.asn1.DERAbstractString - superclass
   * @example
   * // default constructor
   * o = new KJUR.asn1.DEROctetString();
   * // initialize with string
   * o = new KJUR.asn1.DEROctetString({str: "aaa"});
   * // initialize with hexadecimal string
   * o = new KJUR.asn1.DEROctetString({hex: "616161"});
   * // initialize with ASN1Util.newObject argument
   * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
   * // above generates a ASN.1 data like this:
   * // OCTET STRING, encapsulates {
   * //   SEQUENCE {
   * //     INTEGER 3
   * //     PrintableString 'aaa'
   * //     }
   * //   }
   */
  KJUR.asn1.DEROctetString = function (params) {
    if (params !== undefined && typeof params.obj !== "undefined") {
      var o = KJUR.asn1.ASN1Util.newObject(params.obj);
      params.hex = o.getEncodedHex();
    }
    KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);
    this.hT = "04";
  };
  YAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER Null
   * @name KJUR.asn1.DERNull
   * @class class for ASN.1 DER Null
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERNull = function () {
    KJUR.asn1.DERNull.superclass.constructor.call(this);
    this.hT = "05";
    this.hTLV = "0500";
  };
  YAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER ObjectIdentifier
   * @name KJUR.asn1.DERObjectIdentifier
   * @class class for ASN.1 DER ObjectIdentifier
   * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERObjectIdentifier = function (params) {
    var itox = function itox(i) {
      var h = i.toString(16);
      if (h.length == 1) h = '0' + h;
      return h;
    };
    var roidtox = function roidtox(roid) {
      var h = '';
      var bi = new BigInteger(roid, 10);
      var b = bi.toString(2);
      var padLen = 7 - b.length % 7;
      if (padLen == 7) padLen = 0;
      var bPad = '';
      for (var i = 0; i < padLen; i++) {bPad += '0';}
      b = bPad + b;
      for (var i = 0; i < b.length - 1; i += 7) {
        var b8 = b.substr(i, 7);
        if (i != b.length - 7) b8 = '1' + b8;
        h += itox(parseInt(b8, 2));
      }
      return h;
    };

    KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);
    this.hT = "06";

    /**
                     * set value by a hexadecimal string
                     * @name setValueHex
                     * @memberOf KJUR.asn1.DERObjectIdentifier#
                     * @function
                     * @param {String} newHexString hexadecimal value of OID bytes
                     */
    this.setValueHex = function (newHexString) {
      this.hTLV = null;
      this.isModified = true;
      this.s = null;
      this.hV = newHexString;
    };

    /**
        * set value by a OID string<br/>
        * @name setValueOidString
        * @memberOf KJUR.asn1.DERObjectIdentifier#
        * @function
        * @param {String} oidString OID string (ex. 2.5.4.13)
        * @example
        * o = new KJUR.asn1.DERObjectIdentifier();
        * o.setValueOidString("2.5.4.13");
        */
    this.setValueOidString = function (oidString) {
      if (!oidString.match(/^[0-9.]+$/)) {
        throw "malformed oid string: " + oidString;
      }
      var h = '';
      var a = oidString.split('.');
      var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
      h += itox(i0);
      a.splice(0, 2);
      for (var i = 0; i < a.length; i++) {
        h += roidtox(a[i]);
      }
      this.hTLV = null;
      this.isModified = true;
      this.s = null;
      this.hV = h;
    };

    /**
        * set value by a OID name
        * @name setValueName
        * @memberOf KJUR.asn1.DERObjectIdentifier#
        * @function
        * @param {String} oidName OID name (ex. 'serverAuth')
        * @since 1.0.1
        * @description
        * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.
        * Otherwise raise error.
        * @example
        * o = new KJUR.asn1.DERObjectIdentifier();
        * o.setValueName("serverAuth");
        */
    this.setValueName = function (oidName) {
      var oid = KJUR.asn1.x509.OID.name2oid(oidName);
      if (oid !== '') {
        this.setValueOidString(oid);
      } else {
        throw "DERObjectIdentifier oidName undefined: " + oidName;
      }
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (params !== undefined) {
      if (typeof params === "string") {
        if (params.match(/^[0-2].[0-9.]+$/)) {
          this.setValueOidString(params);
        } else {
          this.setValueName(params);
        }
      } else if (params.oid !== undefined) {
        this.setValueOidString(params.oid);
      } else if (params.hex !== undefined) {
        this.setValueHex(params.hex);
      } else if (params.name !== undefined) {
        this.setValueName(params.name);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER Enumerated
   * @name KJUR.asn1.DEREnumerated
   * @class class for ASN.1 DER Enumerated
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>int - specify initial ASN.1 value(V) by integer value</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   * @example
   * new KJUR.asn1.DEREnumerated(123);
   * new KJUR.asn1.DEREnumerated({int: 123});
   * new KJUR.asn1.DEREnumerated({hex: '1fad'});
   */
  KJUR.asn1.DEREnumerated = function (params) {
    KJUR.asn1.DEREnumerated.superclass.constructor.call(this);
    this.hT = "0a";

    /**
                     * set value by Tom Wu's BigInteger object
                     * @name setByBigInteger
                     * @memberOf KJUR.asn1.DEREnumerated#
                     * @function
                     * @param {BigInteger} bigIntegerValue to set
                     */
    this.setByBigInteger = function (bigIntegerValue) {
      this.hTLV = null;
      this.isModified = true;
      this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
    };

    /**
        * set value by integer value
        * @name setByInteger
        * @memberOf KJUR.asn1.DEREnumerated#
        * @function
        * @param {Integer} integer value to set
        */
    this.setByInteger = function (intValue) {
      var bi = new BigInteger(String(intValue), 10);
      this.setByBigInteger(bi);
    };

    /**
        * set value by integer value
        * @name setValueHex
        * @memberOf KJUR.asn1.DEREnumerated#
        * @function
        * @param {String} hexadecimal string of integer value
        * @description
        * <br/>
        * NOTE: Value shall be represented by minimum octet length of
        * two's complement representation.
        */
    this.setValueHex = function (newHexString) {
      this.hV = newHexString;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params['int'] != "undefined") {
        this.setByInteger(params['int']);
      } else if (typeof params == "number") {
        this.setByInteger(params);
      } else if (typeof params['hex'] != "undefined") {
        this.setValueHex(params['hex']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER UTF8String
   * @name KJUR.asn1.DERUTF8String
   * @class class for ASN.1 DER UTF8String
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERUTF8String = function (params) {
    KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);
    this.hT = "0c";
  };
  YAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER NumericString
   * @name KJUR.asn1.DERNumericString
   * @class class for ASN.1 DER NumericString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERNumericString = function (params) {
    KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);
    this.hT = "12";
  };
  YAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER PrintableString
   * @name KJUR.asn1.DERPrintableString
   * @class class for ASN.1 DER PrintableString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERPrintableString = function (params) {
    KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);
    this.hT = "13";
  };
  YAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER TeletexString
   * @name KJUR.asn1.DERTeletexString
   * @class class for ASN.1 DER TeletexString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERTeletexString = function (params) {
    KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);
    this.hT = "14";
  };
  YAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER IA5String
   * @name KJUR.asn1.DERIA5String
   * @class class for ASN.1 DER IA5String
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERIA5String = function (params) {
    KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);
    this.hT = "16";
  };
  YAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER UTCTime
   * @name KJUR.asn1.DERUTCTime
   * @class class for ASN.1 DER UTCTime
   * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
   * @extends KJUR.asn1.DERAbstractTime
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * <li>date - specify Date object.</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   * <h4>EXAMPLES</h4>
   * @example
   * d1 = new KJUR.asn1.DERUTCTime();
   * d1.setString('130430125959Z');
   *
   * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});
   * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});
   * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');
   */
  KJUR.asn1.DERUTCTime = function (params) {
    KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);
    this.hT = "17";

    /**
                     * set value by a Date object<br/>
                     * @name setByDate
                     * @memberOf KJUR.asn1.DERUTCTime#
                     * @function
                     * @param {Date} dateObject Date object to set ASN.1 value(V)
                     * @example
                     * o = new KJUR.asn1.DERUTCTime();
                     * o.setByDate(new Date("2016/12/31"));
                     */
    this.setByDate = function (dateObject) {
      this.hTLV = null;
      this.isModified = true;
      this.date = dateObject;
      this.s = this.formatDate(this.date, 'utc');
      this.hV = stohex(this.s);
    };

    this.getFreshValueHex = function () {
      if (typeof this.date == "undefined" && typeof this.s == "undefined") {
        this.date = new Date();
        this.s = this.formatDate(this.date, 'utc');
        this.hV = stohex(this.s);
      }
      return this.hV;
    };

    if (params !== undefined) {
      if (params.str !== undefined) {
        this.setString(params.str);
      } else if (typeof params == "string" && params.match(/^[0-9]{12}Z$/)) {
        this.setString(params);
      } else if (params.hex !== undefined) {
        this.setStringHex(params.hex);
      } else if (params.date !== undefined) {
        this.setByDate(params.date);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);

  // ********************************************************************
  /**
   * class for ASN.1 DER GeneralizedTime
   * @name KJUR.asn1.DERGeneralizedTime
   * @class class for ASN.1 DER GeneralizedTime
   * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})
   * @property {Boolean} withMillis flag to show milliseconds or not
   * @extends KJUR.asn1.DERAbstractTime
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * <li>date - specify Date object.</li>
   * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>
   * </ul>
   * NOTE1: 'params' can be omitted.
   * NOTE2: 'withMillis' property is supported from asn1 1.0.6.
   */
  KJUR.asn1.DERGeneralizedTime = function (params) {
    KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);
    this.hT = "18";
    this.withMillis = false;

    /**
                              * set value by a Date object
                              * @name setByDate
                              * @memberOf KJUR.asn1.DERGeneralizedTime#
                              * @function
                              * @param {Date} dateObject Date object to set ASN.1 value(V)
                              * @example
                              * When you specify UTC time, use 'Date.UTC' method like this:<br/>
                              * o1 = new DERUTCTime();
                              * o1.setByDate(date);
                              *
                              * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59
                              */
    this.setByDate = function (dateObject) {
      this.hTLV = null;
      this.isModified = true;
      this.date = dateObject;
      this.s = this.formatDate(this.date, 'gen', this.withMillis);
      this.hV = stohex(this.s);
    };

    this.getFreshValueHex = function () {
      if (this.date === undefined && this.s === undefined) {
        this.date = new Date();
        this.s = this.formatDate(this.date, 'gen', this.withMillis);
        this.hV = stohex(this.s);
      }
      return this.hV;
    };

    if (params !== undefined) {
      if (params.str !== undefined) {
        this.setString(params.str);
      } else if (typeof params == "string" && params.match(/^[0-9]{14}Z$/)) {
        this.setString(params);
      } else if (params.hex !== undefined) {
        this.setStringHex(params.hex);
      } else if (params.date !== undefined) {
        this.setByDate(params.date);
      }
      if (params.millis === true) {
        this.withMillis = true;
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);

  // ********************************************************************
  /**
   * class for ASN.1 DER Sequence
   * @name KJUR.asn1.DERSequence
   * @class class for ASN.1 DER Sequence
   * @extends KJUR.asn1.DERAbstractStructured
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>array - specify array of ASN1Object to set elements of content</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERSequence = function (params) {
    KJUR.asn1.DERSequence.superclass.constructor.call(this, params);
    this.hT = "30";
    this.getFreshValueHex = function () {
      var h = '';
      for (var i = 0; i < this.asn1Array.length; i++) {
        var asn1Obj = this.asn1Array[i];
        h += asn1Obj.getEncodedHex();
      }
      this.hV = h;
      return this.hV;
    };
  };
  YAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);

  // ********************************************************************
  /**
   * class for ASN.1 DER Set
   * @name KJUR.asn1.DERSet
   * @class class for ASN.1 DER Set
   * @extends KJUR.asn1.DERAbstractStructured
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>array - specify array of ASN1Object to set elements of content</li>
   * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>
   * </ul>
   * NOTE1: 'params' can be omitted.<br/>
   * NOTE2: sortflag is supported since 1.0.5.
   */
  KJUR.asn1.DERSet = function (params) {
    KJUR.asn1.DERSet.superclass.constructor.call(this, params);
    this.hT = "31";
    this.sortFlag = true; // item shall be sorted only in ASN.1 DER
    this.getFreshValueHex = function () {
      var a = new Array();
      for (var i = 0; i < this.asn1Array.length; i++) {
        var asn1Obj = this.asn1Array[i];
        a.push(asn1Obj.getEncodedHex());
      }
      if (this.sortFlag == true) a.sort();
      this.hV = a.join('');
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params.sortflag != "undefined" &&
      params.sortflag == false)
      this.sortFlag = false;
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);

  // ********************************************************************
  /**
   * class for ASN.1 DER TaggedObject
   * @name KJUR.asn1.DERTaggedObject
   * @class class for ASN.1 DER TaggedObject
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.
   * For example, if you find '[1]' tag in a ASN.1 dump,
   * 'tagNoHex' will be 'a1'.
   * <br/>
   * As for optional argument 'params' for constructor, you can specify *ANY* of
   * following properties:
   * <ul>
   * <li>explicit - specify true if this is explicit tag otherwise false
   *     (default is 'true').</li>
   * <li>tag - specify tag (default is 'a0' which means [0])</li>
   * <li>obj - specify ASN1Object which is tagged</li>
   * </ul>
   * @example
   * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});
   * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});
   * hex = d2.getEncodedHex();
   */
  KJUR.asn1.DERTaggedObject = function (params) {
    KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);
    this.hT = "a0";
    this.hV = '';
    this.isExplicit = true;
    this.asn1Object = null;

    /**
                             * set value by an ASN1Object
                             * @name setString
                             * @memberOf KJUR.asn1.DERTaggedObject#
                             * @function
                             * @param {Boolean} isExplicitFlag flag for explicit/implicit tag
                             * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag
                             * @param {ASN1Object} asn1Object ASN.1 to encapsulate
                             */
    this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {
      this.hT = tagNoHex;
      this.isExplicit = isExplicitFlag;
      this.asn1Object = asn1Object;
      if (this.isExplicit) {
        this.hV = this.asn1Object.getEncodedHex();
        this.hTLV = null;
        this.isModified = true;
      } else {
        this.hV = null;
        this.hTLV = asn1Object.getEncodedHex();
        this.hTLV = this.hTLV.replace(/^../, tagNoHex);
        this.isModified = false;
      }
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params['tag'] != "undefined") {
        this.hT = params['tag'];
      }
      if (typeof params['explicit'] != "undefined") {
        this.isExplicit = params['explicit'];
      }
      if (typeof params['obj'] != "undefined") {
        this.asn1Object = params['obj'];
        this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);

  /**
                                                                       * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.
                                                                       * This object is just a decorator for parsing the key parameter
                                                                       * @param {string|Object} key - The key in string format, or an object containing
                                                                       * the parameters needed to build a RSAKey object.
                                                                       * @constructor
                                                                       */
  var JSEncryptRSAKey = /** @class */function (_super) {
    __extends(JSEncryptRSAKey, _super);
    function JSEncryptRSAKey(key) {
      var _this = _super.call(this) || this;
      // Call the super constructor.
      //  RSAKey.call(this);
      // If a key key was provided.
      if (key) {
        // If this is a string...
        if (typeof key === "string") {
          _this.parseKey(key);
        } else
        if (JSEncryptRSAKey.hasPrivateKeyProperty(key) ||
        JSEncryptRSAKey.hasPublicKeyProperty(key)) {
          // Set the values for the key.
          _this.parsePropertiesFrom(key);
        }
      }
      return _this;
    }
    /**
       * Method to parse a pem encoded string containing both a public or private key.
       * The method will translate the pem encoded string in a der encoded string and
       * will parse private key and public key parameters. This method accepts public key
       * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).
       *
       * @todo Check how many rsa formats use the same format of pkcs #1.
       *
       * The format is defined as:
       * PublicKeyInfo ::= SEQUENCE {
       *   algorithm       AlgorithmIdentifier,
       *   PublicKey       BIT STRING
       * }
       * Where AlgorithmIdentifier is:
       * AlgorithmIdentifier ::= SEQUENCE {
       *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
       *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
       * }
       * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
       * RSAPublicKey ::= SEQUENCE {
       *   modulus           INTEGER,  -- n
       *   publicExponent    INTEGER   -- e
       * }
       * it's possible to examine the structure of the keys obtained from openssl using
       * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/
       * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer
       * @private
       */
    JSEncryptRSAKey.prototype.parseKey = function (pem) {
      try {
        var modulus = 0;
        var public_exponent = 0;
        var reHex = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/;
        var der = reHex.test(pem) ? Hex.decode(pem) : Base64.unarmor(pem);
        var asn1 = ASN1.decode(der);
        // Fixes a bug with OpenSSL 1.0+ private keys
        if (asn1.sub.length === 3) {
          asn1 = asn1.sub[2].sub[0];
        }
        if (asn1.sub.length === 9) {
          // Parse the private key.
          modulus = asn1.sub[1].getHexStringValue(); // bigint
          this.n = parseBigInt(modulus, 16);
          public_exponent = asn1.sub[2].getHexStringValue(); // int
          this.e = parseInt(public_exponent, 16);
          var private_exponent = asn1.sub[3].getHexStringValue(); // bigint
          this.d = parseBigInt(private_exponent, 16);
          var prime1 = asn1.sub[4].getHexStringValue(); // bigint
          this.p = parseBigInt(prime1, 16);
          var prime2 = asn1.sub[5].getHexStringValue(); // bigint
          this.q = parseBigInt(prime2, 16);
          var exponent1 = asn1.sub[6].getHexStringValue(); // bigint
          this.dmp1 = parseBigInt(exponent1, 16);
          var exponent2 = asn1.sub[7].getHexStringValue(); // bigint
          this.dmq1 = parseBigInt(exponent2, 16);
          var coefficient = asn1.sub[8].getHexStringValue(); // bigint
          this.coeff = parseBigInt(coefficient, 16);
        } else
        if (asn1.sub.length === 2) {
          // Parse the public key.
          var bit_string = asn1.sub[1];
          var sequence = bit_string.sub[0];
          modulus = sequence.sub[0].getHexStringValue();
          this.n = parseBigInt(modulus, 16);
          public_exponent = sequence.sub[1].getHexStringValue();
          this.e = parseInt(public_exponent, 16);
        } else
        {
          return false;
        }
        return true;
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Translate rsa parameters in a hex encoded string representing the rsa key.
        *
        * The translation follow the ASN.1 notation :
        * RSAPrivateKey ::= SEQUENCE {
        *   version           Version,
        *   modulus           INTEGER,  -- n
        *   publicExponent    INTEGER,  -- e
        *   privateExponent   INTEGER,  -- d
        *   prime1            INTEGER,  -- p
        *   prime2            INTEGER,  -- q
        *   exponent1         INTEGER,  -- d mod (p1)
        *   exponent2         INTEGER,  -- d mod (q-1)
        *   coefficient       INTEGER,  -- (inverse of q) mod p
        * }
        * @returns {string}  DER Encoded String representing the rsa private key
        * @private
        */
    JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {
      var options = {
        array: [
        new KJUR.asn1.DERInteger({ int: 0 }),
        new KJUR.asn1.DERInteger({ bigint: this.n }),
        new KJUR.asn1.DERInteger({ int: this.e }),
        new KJUR.asn1.DERInteger({ bigint: this.d }),
        new KJUR.asn1.DERInteger({ bigint: this.p }),
        new KJUR.asn1.DERInteger({ bigint: this.q }),
        new KJUR.asn1.DERInteger({ bigint: this.dmp1 }),
        new KJUR.asn1.DERInteger({ bigint: this.dmq1 }),
        new KJUR.asn1.DERInteger({ bigint: this.coeff })] };


      var seq = new KJUR.asn1.DERSequence(options);
      return seq.getEncodedHex();
    };
    /**
        * base64 (pem) encoded version of the DER encoded representation
        * @returns {string} pem encoded representation without header and footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {
      return hex2b64(this.getPrivateBaseKey());
    };
    /**
        * Translate rsa parameters in a hex encoded string representing the rsa public key.
        * The representation follow the ASN.1 notation :
        * PublicKeyInfo ::= SEQUENCE {
        *   algorithm       AlgorithmIdentifier,
        *   PublicKey       BIT STRING
        * }
        * Where AlgorithmIdentifier is:
        * AlgorithmIdentifier ::= SEQUENCE {
        *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
        *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
        * }
        * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
        * RSAPublicKey ::= SEQUENCE {
        *   modulus           INTEGER,  -- n
        *   publicExponent    INTEGER   -- e
        * }
        * @returns {string} DER Encoded String representing the rsa public key
        * @private
        */
    JSEncryptRSAKey.prototype.getPublicBaseKey = function () {
      var first_sequence = new KJUR.asn1.DERSequence({
        array: [
        new KJUR.asn1.DERObjectIdentifier({ oid: "1.2.840.113549.1.1.1" }),
        new KJUR.asn1.DERNull()] });


      var second_sequence = new KJUR.asn1.DERSequence({
        array: [
        new KJUR.asn1.DERInteger({ bigint: this.n }),
        new KJUR.asn1.DERInteger({ int: this.e })] });


      var bit_string = new KJUR.asn1.DERBitString({
        hex: "00" + second_sequence.getEncodedHex() });

      var seq = new KJUR.asn1.DERSequence({
        array: [
        first_sequence,
        bit_string] });


      return seq.getEncodedHex();
    };
    /**
        * base64 (pem) encoded version of the DER encoded representation
        * @returns {string} pem encoded representation without header and footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {
      return hex2b64(this.getPublicBaseKey());
    };
    /**
        * wrap the string in block of width chars. The default value for rsa keys is 64
        * characters.
        * @param {string} str the pem encoded string without header and footer
        * @param {Number} [width=64] - the length the string has to be wrapped at
        * @returns {string}
        * @private
        */
    JSEncryptRSAKey.wordwrap = function (str, width) {
      width = width || 64;
      if (!str) {
        return str;
      }
      var regex = "(.{1," + width + "})( +|$\n?)|(.{1," + width + "})";
      return str.match(RegExp(regex, "g")).join("\n");
    };
    /**
        * Retrieve the pem encoded private key
        * @returns {string} the pem encoded private key with header/footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPrivateKey = function () {
      var key = "-----BEGIN RSA PRIVATE KEY-----\n";
      key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + "\n";
      key += "-----END RSA PRIVATE KEY-----";
      return key;
    };
    /**
        * Retrieve the pem encoded public key
        * @returns {string} the pem encoded public key with header/footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPublicKey = function () {
      var key = "-----BEGIN PUBLIC KEY-----\n";
      key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + "\n";
      key += "-----END PUBLIC KEY-----";
      return key;
    };
    /**
        * Check if the object contains the necessary parameters to populate the rsa modulus
        * and public exponent parameters.
        * @param {Object} [obj={}] - An object that may contain the two public key
        * parameters
        * @returns {boolean} true if the object contains both the modulus and the public exponent
        * properties (n and e)
        * @todo check for types of n and e. N should be a parseable bigInt object, E should
        * be a parseable integer number
        * @private
        */
    JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {
      obj = obj || {};
      return obj.hasOwnProperty("n") &&
      obj.hasOwnProperty("e");
    };
    /**
        * Check if the object contains ALL the parameters of an RSA key.
        * @param {Object} [obj={}] - An object that may contain nine rsa key
        * parameters
        * @returns {boolean} true if the object contains all the parameters needed
        * @todo check for types of the parameters all the parameters but the public exponent
        * should be parseable bigint objects, the public exponent should be a parseable integer number
        * @private
        */
    JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {
      obj = obj || {};
      return obj.hasOwnProperty("n") &&
      obj.hasOwnProperty("e") &&
      obj.hasOwnProperty("d") &&
      obj.hasOwnProperty("p") &&
      obj.hasOwnProperty("q") &&
      obj.hasOwnProperty("dmp1") &&
      obj.hasOwnProperty("dmq1") &&
      obj.hasOwnProperty("coeff");
    };
    /**
        * Parse the properties of obj in the current rsa object. Obj should AT LEAST
        * include the modulus and public exponent (n, e) parameters.
        * @param {Object} obj - the object containing rsa parameters
        * @private
        */
    JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {
      this.n = obj.n;
      this.e = obj.e;
      if (obj.hasOwnProperty("d")) {
        this.d = obj.d;
        this.p = obj.p;
        this.q = obj.q;
        this.dmp1 = obj.dmp1;
        this.dmq1 = obj.dmq1;
        this.coeff = obj.coeff;
      }
    };
    return JSEncryptRSAKey;
  }(RSAKey);

  /**
              *
              * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour
              * possible parameters are:
              * - default_key_size        {number}  default: 1024 the key size in bit
              * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent
              * - log                     {boolean} default: false whether log warn/error or not
              * @constructor
              */
  var JSEncrypt = /** @class */function () {
    function JSEncrypt(options) {
      options = options || {};
      this.default_key_size = parseInt(options.default_key_size, 10) || 1024;
      this.default_public_exponent = options.default_public_exponent || "010001"; // 65537 default openssl public exponent for rsa key type
      this.log = options.log || false;
      // The private and public key.
      this.key = null;
    }
    /**
       * Method to set the rsa key parameter (one method is enough to set both the public
       * and the private key, since the private key contains the public key paramenters)
       * Log a warning if logs are enabled
       * @param {Object|string} key the pem encoded string or an object (with or without header/footer)
       * @public
       */
    JSEncrypt.prototype.setKey = function (key) {
      if (this.log && this.key) {
        console.warn("A key was already set, overriding existing.", " at jsencrypt\\bin\\jsencrypt.js:5207");
      }
      this.key = new JSEncryptRSAKey(key);
    };
    /**
        * Proxy method for setKey, for api compatibility
        * @see setKey
        * @public
        */
    JSEncrypt.prototype.setPrivateKey = function (privkey) {
      // Create the key.
      this.setKey(privkey);
    };
    /**
        * Proxy method for setKey, for api compatibility
        * @see setKey
        * @public
        */
    JSEncrypt.prototype.setPublicKey = function (pubkey) {
      // Sets the public key.
      this.setKey(pubkey);
    };
    /**
        * Proxy method for RSAKey object's decrypt, decrypt the string using the private
        * components of the rsa key object. Note that if the object was not set will be created
        * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
        * @param {string} str base64 encoded crypted string to decrypt
        * @return {string} the decrypted string
        * @public
        */
    JSEncrypt.prototype.decrypt = function (str) {
      // Return the decrypted string.
      try {
        return this.getKey().decrypt(b64tohex(str));
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Proxy method for RSAKey object's encrypt, encrypt the string using the public
        * components of the rsa key object. Note that if the object was not set will be created
        * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
        * @param {string} str the string to encrypt
        * @return {string} the encrypted string encoded in base64
        * @public
        */
    JSEncrypt.prototype.encrypt = function (str) {
      // Return the encrypted string.
      try {
        return hex2b64(this.getKey().encrypt(str));
      }
      catch (ex) {
        return false;
      }
    };
    JSEncrypt.prototype.encryptLong = function (string) {
      var k = this.getKey();
      try {
        var lt = "";
        var ct = "";
        //RSA每次加密117bytes，需要辅助方法判断字符串截取位置
        //1.获取字符串截取点
        var bytes = new Array();
        bytes.push(0);
        var byteNo = 0;
        var len, c;
        len = string.length;
        var temp = 0;
        for (var i = 0; i < len; i++) {
          c = string.charCodeAt(i);
          if (c >= 0x010000 && c <= 0x10FFFF) {
            byteNo += 4;
          } else if (c >= 0x000800 && c <= 0x00FFFF) {
            byteNo += 3;
          } else if (c >= 0x000080 && c <= 0x0007FF) {
            byteNo += 2;
          } else {
            byteNo += 1;
          }
          if (byteNo % 117 >= 114 || byteNo % 117 == 0) {
            if (byteNo - temp >= 114) {
              bytes.push(i);
              temp = byteNo;
            }
          }
        }
        //2.截取字符串并分段加密
        if (bytes.length > 1) {
          for (var i = 0; i < bytes.length - 1; i++) {
            var str;
            if (i == 0) {
              str = string.substring(0, bytes[i + 1] + 1);
            } else {
              str = string.substring(bytes[i] + 1, bytes[i + 1] + 1);
            }
            var t1 = k.encrypt(str);
            ct += t1;
          }
          ;
          if (bytes[bytes.length - 1] != string.length - 1) {
            var lastStr = string.substring(bytes[bytes.length - 1] + 1);
            ct += k.encrypt(lastStr);
          }
          return hexToBytes(ct);
        }
        var t = k.encrypt(string);
        var y = hexToBytes(t);
        return y;
      } catch (ex) {
        return false;
      }
    };
    JSEncrypt.prototype.decryptLong = function (string) {var k = this.getKey();var MAX_DECRYPT_BLOCK = 128;try {var ct = "";var t1;var bufTmp;var hexTmp;var str = bytesToHex(string);var buf = hexToBytes(str);var inputLen = buf.length;var offSet = 0;var endOffSet = MAX_DECRYPT_BLOCK;while (inputLen - offSet > 0) {if (inputLen - offSet > MAX_DECRYPT_BLOCK) {bufTmp = buf.slice(offSet, endOffSet);hexTmp = bytesToHex(bufTmp);t1 = k.decrypt(hexTmp);ct += t1;} else {bufTmp = buf.slice(offSet, inputLen);hexTmp = bytesToHex(bufTmp);t1 = k.decrypt(hexTmp);ct += t1;}offSet += MAX_DECRYPT_BLOCK;endOffSet += MAX_DECRYPT_BLOCK;}return ct;} catch (ex) {return false;}};
    /**
roxy method for RSAKey object's sign.
param {string} str the string to sign
param {function} digestMethod hash method
param {string} digestName the name of the hash algorithm
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * @return {string} the signature encoded in base64
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * @public
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */
    JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {
      // return the RSA signature of 'str' in 'hex' format.
      try {
        return hex2b64(this.getKey().sign(str, digestMethod, digestName));
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Proxy method for RSAKey object's verify.
        * @param {string} str the string to verify
        * @param {string} signature the signature encoded in base64 to compare the string to
        * @param {function} digestMethod hash method
        * @return {boolean} whether the data and signature match
        * @public
        */
    JSEncrypt.prototype.verify = function (str, signature, digestMethod) {
      // Return the decrypted 'digest' of the signature.
      try {
        return this.getKey().verify(str, b64tohex(signature), digestMethod);
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object
        * will be created and returned
        * @param {callback} [cb] the callback to be called if we want the key to be generated
        * in an async fashion
        * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object
        * @public
        */
    JSEncrypt.prototype.getKey = function (cb) {
      // Only create new if it does not exist.
      if (!this.key) {
        // Get a new private key.
        this.key = new JSEncryptRSAKey();
        if (cb && {}.toString.call(cb) === "[object Function]") {
          this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);
          return;
        }
        // Generate the key.
        this.key.generate(this.default_key_size, this.default_public_exponent);
      }
      return this.key;
    };
    /**
        * Returns the pem encoded representation of the private key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the private key WITH header and footer
        * @public
        */
    JSEncrypt.prototype.getPrivateKey = function () {
      // Return the private representation of this key.
      return this.getKey().getPrivateKey();
    };
    /**
        * Returns the pem encoded representation of the private key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the private key WITHOUT header and footer
        * @public
        */
    JSEncrypt.prototype.getPrivateKeyB64 = function () {
      // Return the private representation of this key.
      return this.getKey().getPrivateBaseKeyB64();
    };
    /**
        * Returns the pem encoded representation of the public key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the public key WITH header and footer
        * @public
        */
    JSEncrypt.prototype.getPublicKey = function () {
      // Return the private representation of this key.
      return this.getKey().getPublicKey();
    };
    /**
        * Returns the pem encoded representation of the public key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the public key WITHOUT header and footer
        * @public
        */
    JSEncrypt.prototype.getPublicKeyB64 = function () {
      // Return the private representation of this key.
      return this.getKey().getPublicBaseKeyB64();
    };
    JSEncrypt.version = "3.0.0-rc.1";
    return JSEncrypt;
  }();

  window.JSEncrypt = JSEncrypt;

  exports.JSEncrypt = JSEncrypt;
  exports.default = JSEncrypt;

  Object.defineProperty(exports, '__esModule', { value: true });

});

/***/ }),

/***/ "F:\\app\\物联网\\main.js":
/*!**************************!*\
  !*** F:/app/物联网/main.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(createApp) {__webpack_require__(/*! uni-pages */ "F:\\app\\物联网\\pages.json");
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ "./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js"));
var _App = _interopRequireDefault(__webpack_require__(/*! ./App */ "F:\\app\\物联网\\App.vue"));





var _iconfont = _interopRequireDefault(__webpack_require__(/*! ./static/iconfont/iconfont.css */ "F:\\app\\物联网\\static\\iconfont\\iconfont.css"));

var _jsencrypt = _interopRequireDefault(__webpack_require__(/*! jsencrypt */ "F:\\app\\物联网\\jsencrypt\\bin\\jsencrypt.js"));



var _vueSocket = _interopRequireDefault(__webpack_require__(/*! vue-socket.io */ "F:\\app\\物联网\\node_modules\\vue-socket.io\\dist\\vue-socketio.js"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}_vue.default.config.productionTip = false;_App.default.mpType = 'app';
// // import security from 
_vue.default.prototype.$crypto = __webpack_require__(/*! crypto-js */ "F:\\app\\物联网\\node_modules\\crypto-js\\index.js");

_vue.default.use(new _vueSocket.default({
  connection: 'ws://127.0.0.1:5000' }));

var app = new _vue.default(_objectSpread({},
_App.default));

createApp(app).$mount();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ "./node_modules/@dcloudio/uni-app-plus/dist/index.js")["createApp"]))

/***/ }),

/***/ "F:\\app\\物联网\\main.js?{\"page\":\"pages%2Findex%2Findex\"}":
/*!***********************************************************!*\
  !*** F:/app/物联网/main.js?{"page":"pages%2Findex%2Findex"} ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ "F:\\app\\物联网\\pages.json");

var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ "./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js"));
var _index = _interopRequireDefault(__webpack_require__(/*! ./pages/index/index.vue */ "F:\\app\\物联网\\pages\\index\\index.vue"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
createPage(_index.default);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ "./node_modules/@dcloudio/uni-app-plus/dist/index.js")["createPage"]))

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\aes.js":
/*!************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/aes.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./enc-base64 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js"), __webpack_require__(/*! ./md5 */ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;

    // Lookup tables
    var SBOX = [];
    var INV_SBOX = [];
    var SUB_MIX_0 = [];
    var SUB_MIX_1 = [];
    var SUB_MIX_2 = [];
    var SUB_MIX_3 = [];
    var INV_SUB_MIX_0 = [];
    var INV_SUB_MIX_1 = [];
    var INV_SUB_MIX_2 = [];
    var INV_SUB_MIX_3 = [];

    // Compute lookup tables
    (function () {
      // Compute double table
      var d = [];
      for (var i = 0; i < 256; i++) {
        if (i < 128) {
          d[i] = i << 1;
        } else {
          d[i] = i << 1 ^ 0x11b;
        }
      }

      // Walk GF(2^8)
      var x = 0;
      var xi = 0;
      for (var i = 0; i < 256; i++) {
        // Compute sbox
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;

        // Compute multiplication
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];

        // Compute sub bytes, mix columns tables
        var t = d[sx] * 0x101 ^ sx * 0x1010100;
        SUB_MIX_0[x] = t << 24 | t >>> 8;
        SUB_MIX_1[x] = t << 16 | t >>> 16;
        SUB_MIX_2[x] = t << 8 | t >>> 24;
        SUB_MIX_3[x] = t;

        // Compute inv sub bytes, inv mix columns tables
        var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
        INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;
        INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;
        INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;
        INV_SUB_MIX_3[sx] = t;

        // Compute next counter
        if (!x) {
          x = xi = 1;
        } else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }
    })();

    // Precomputed Rcon lookup
    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

    /**
                                                                                    * AES block cipher algorithm.
                                                                                    */
    var AES = C_algo.AES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Skip reset of nRounds has been set before and key did not change
        if (this._nRounds && this._keyPriorReset === this._key) {
          return;
        }

        // Shortcuts
        var key = this._keyPriorReset = this._key;
        var keyWords = key.words;
        var keySize = key.sigBytes / 4;

        // Compute number of rounds
        var nRounds = this._nRounds = keySize + 6;

        // Compute number of key schedule rows
        var ksRows = (nRounds + 1) * 4;

        // Compute key schedule
        var keySchedule = this._keySchedule = [];
        for (var ksRow = 0; ksRow < ksRows; ksRow++) {
          if (ksRow < keySize) {
            keySchedule[ksRow] = keyWords[ksRow];
          } else {
            var t = keySchedule[ksRow - 1];

            if (!(ksRow % keySize)) {
              // Rot word
              t = t << 8 | t >>> 24;

              // Sub word
              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];

              // Mix Rcon
              t ^= RCON[ksRow / keySize | 0] << 24;
            } else if (keySize > 6 && ksRow % keySize == 4) {
              // Sub word
              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];
            }

            keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
          }
        }

        // Compute inv key schedule
        var invKeySchedule = this._invKeySchedule = [];
        for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
          var ksRow = ksRows - invKsRow;

          if (invKsRow % 4) {
            var t = keySchedule[ksRow];
          } else {
            var t = keySchedule[ksRow - 4];
          }

          if (invKsRow < 4 || ksRow <= 4) {
            invKeySchedule[invKsRow] = t;
          } else {
            invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^
            INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
          }
        }
      },

      encryptBlock: function encryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
      },

      decryptBlock: function decryptBlock(M, offset) {
        // Swap 2nd and 4th rows
        var t = M[offset + 1];
        M[offset + 1] = M[offset + 3];
        M[offset + 3] = t;

        this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

        // Inv swap 2nd and 4th rows
        var t = M[offset + 1];
        M[offset + 1] = M[offset + 3];
        M[offset + 3] = t;
      },

      _doCryptBlock: function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
        // Shortcut
        var nRounds = this._nRounds;

        // Get input, add round key
        var s0 = M[offset] ^ keySchedule[0];
        var s1 = M[offset + 1] ^ keySchedule[1];
        var s2 = M[offset + 2] ^ keySchedule[2];
        var s3 = M[offset + 3] ^ keySchedule[3];

        // Key schedule row counter
        var ksRow = 4;

        // Rounds
        for (var round = 1; round < nRounds; round++) {
          // Shift rows, sub bytes, mix columns, add round key
          var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
          var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
          var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
          var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

          // Update state
          s0 = t0;
          s1 = t1;
          s2 = t2;
          s3 = t3;
        }

        // Shift rows, sub bytes, add round key
        var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
        var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
        var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
        var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

        // Set output
        M[offset] = t0;
        M[offset + 1] = t1;
        M[offset + 2] = t2;
        M[offset + 3] = t3;
      },

      keySize: 256 / 32 });


    /**
                             * Shortcut functions to the cipher's object interface.
                             *
                             * @example
                             *
                             *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
                             *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
                             */
    C.AES = BlockCipher._createHelper(AES);
  })();


  return CryptoJS.AES;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js":
/*!********************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/cipher-core.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * Cipher core components.
                                 */
  CryptoJS.lib.Cipher || function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
    var C_enc = C.enc;
    var Utf8 = C_enc.Utf8;
    var Base64 = C_enc.Base64;
    var C_algo = C.algo;
    var EvpKDF = C_algo.EvpKDF;

    /**
                                 * Abstract base cipher template.
                                 *
                                 * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
                                 * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
                                 * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
                                 * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
                                 */
    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
      /**
                                                                 * Configuration options.
                                                                 *
                                                                 * @property {WordArray} iv The IV to use for this operation.
                                                                 */
      cfg: Base.extend(),

      /**
                           * Creates this cipher in encryption mode.
                           *
                           * @param {WordArray} key The key.
                           * @param {Object} cfg (Optional) The configuration options to use for this operation.
                           *
                           * @return {Cipher} A cipher instance.
                           *
                           * @static
                           *
                           * @example
                           *
                           *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                           */
      createEncryptor: function createEncryptor(key, cfg) {
        return this.create(this._ENC_XFORM_MODE, key, cfg);
      },

      /**
          * Creates this cipher in decryption mode.
          *
          * @param {WordArray} key The key.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @return {Cipher} A cipher instance.
          *
          * @static
          *
          * @example
          *
          *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
          */
      createDecryptor: function createDecryptor(key, cfg) {
        return this.create(this._DEC_XFORM_MODE, key, cfg);
      },

      /**
          * Initializes a newly created cipher.
          *
          * @param {number} xformMode Either the encryption or decryption transormation mode constant.
          * @param {WordArray} key The key.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @example
          *
          *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
          */
      init: function init(xformMode, key, cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg);

        // Store transform mode and key
        this._xformMode = xformMode;
        this._key = key;

        // Set initial values
        this.reset();
      },

      /**
          * Resets this cipher to its initial state.
          *
          * @example
          *
          *     cipher.reset();
          */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this);

        // Perform concrete-cipher logic
        this._doReset();
      },

      /**
          * Adds data to be encrypted or decrypted.
          *
          * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
          *
          * @return {WordArray} The data after processing.
          *
          * @example
          *
          *     var encrypted = cipher.process('data');
          *     var encrypted = cipher.process(wordArray);
          */
      process: function process(dataUpdate) {
        // Append
        this._append(dataUpdate);

        // Process available blocks
        return this._process();
      },

      /**
          * Finalizes the encryption or decryption process.
          * Note that the finalize operation is effectively a destructive, read-once operation.
          *
          * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
          *
          * @return {WordArray} The data after final processing.
          *
          * @example
          *
          *     var encrypted = cipher.finalize();
          *     var encrypted = cipher.finalize('data');
          *     var encrypted = cipher.finalize(wordArray);
          */
      finalize: function finalize(dataUpdate) {
        // Final data update
        if (dataUpdate) {
          this._append(dataUpdate);
        }

        // Perform concrete-cipher logic
        var finalProcessedData = this._doFinalize();

        return finalProcessedData;
      },

      keySize: 128 / 32,

      ivSize: 128 / 32,

      _ENC_XFORM_MODE: 1,

      _DEC_XFORM_MODE: 2,

      /**
                           * Creates shortcut functions to a cipher's object interface.
                           *
                           * @param {Cipher} cipher The cipher to create a helper for.
                           *
                           * @return {Object} An object with encrypt and decrypt shortcut functions.
                           *
                           * @static
                           *
                           * @example
                           *
                           *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                           */
      _createHelper: function () {
        function selectCipherStrategy(key) {
          if (typeof key == 'string') {
            return PasswordBasedCipher;
          } else {
            return SerializableCipher;
          }
        }

        return function (cipher) {
          return {
            encrypt: function encrypt(message, key, cfg) {
              return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
            },

            decrypt: function decrypt(ciphertext, key, cfg) {
              return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
            } };

        };
      }() });


    /**
               * Abstract base stream cipher template.
               *
               * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
               */
    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
      _doFinalize: function _doFinalize() {
        // Process partial blocks
        var finalProcessedBlocks = this._process(!!'flush');

        return finalProcessedBlocks;
      },

      blockSize: 1 });


    /**
                        * Mode namespace.
                        */
    var C_mode = C.mode = {};

    /**
                               * Abstract base block cipher mode template.
                               */
    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
      /**
                                                                 * Creates this mode for encryption.
                                                                 *
                                                                 * @param {Cipher} cipher A block cipher instance.
                                                                 * @param {Array} iv The IV words.
                                                                 *
                                                                 * @static
                                                                 *
                                                                 * @example
                                                                 *
                                                                 *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                                                                 */
      createEncryptor: function createEncryptor(cipher, iv) {
        return this.Encryptor.create(cipher, iv);
      },

      /**
          * Creates this mode for decryption.
          *
          * @param {Cipher} cipher A block cipher instance.
          * @param {Array} iv The IV words.
          *
          * @static
          *
          * @example
          *
          *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
          */
      createDecryptor: function createDecryptor(cipher, iv) {
        return this.Decryptor.create(cipher, iv);
      },

      /**
          * Initializes a newly created mode.
          *
          * @param {Cipher} cipher A block cipher instance.
          * @param {Array} iv The IV words.
          *
          * @example
          *
          *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
          */
      init: function init(cipher, iv) {
        this._cipher = cipher;
        this._iv = iv;
      } });


    /**
             * Cipher Block Chaining mode.
             */
    var CBC = C_mode.CBC = function () {
      /**
                                         * Abstract base CBC mode.
                                         */
      var CBC = BlockCipherMode.extend();

      /**
                                           * CBC encryptor.
                                           */
      CBC.Encryptor = CBC.extend({
        /**
                                    * Processes the data block at offset.
                                    *
                                    * @param {Array} words The data words to operate on.
                                    * @param {number} offset The offset where the block starts.
                                    *
                                    * @example
                                    *
                                    *     mode.processBlock(data.words, offset);
                                    */
        processBlock: function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // XOR and encrypt
          xorBlock.call(this, words, offset, blockSize);
          cipher.encryptBlock(words, offset);

          // Remember this block to use with next block
          this._prevBlock = words.slice(offset, offset + blockSize);
        } });


      /**
               * CBC decryptor.
               */
      CBC.Decryptor = CBC.extend({
        /**
                                    * Processes the data block at offset.
                                    *
                                    * @param {Array} words The data words to operate on.
                                    * @param {number} offset The offset where the block starts.
                                    *
                                    * @example
                                    *
                                    *     mode.processBlock(data.words, offset);
                                    */
        processBlock: function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // Remember this block to use with next block
          var thisBlock = words.slice(offset, offset + blockSize);

          // Decrypt and XOR
          cipher.decryptBlock(words, offset);
          xorBlock.call(this, words, offset, blockSize);

          // This block becomes the previous block
          this._prevBlock = thisBlock;
        } });


      function xorBlock(words, offset, blockSize) {
        // Shortcut
        var iv = this._iv;

        // Choose mixing block
        if (iv) {
          var block = iv;

          // Remove IV for subsequent blocks
          this._iv = undefined;
        } else {
          var block = this._prevBlock;
        }

        // XOR blocks
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= block[i];
        }
      }

      return CBC;
    }();

    /**
          * Padding namespace.
          */
    var C_pad = C.pad = {};

    /**
                             * PKCS #5/7 padding strategy.
                             */
    var Pkcs7 = C_pad.Pkcs7 = {
      /**
                                 * Pads data using the algorithm defined in PKCS #5/7.
                                 *
                                 * @param {WordArray} data The data to pad.
                                 * @param {number} blockSize The multiple that the data should be padded to.
                                 *
                                 * @static
                                 *
                                 * @example
                                 *
                                 *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                                 */
      pad: function pad(data, blockSize) {
        // Shortcut
        var blockSizeBytes = blockSize * 4;

        // Count padding bytes
        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

        // Create padding word
        var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;

        // Create padding
        var paddingWords = [];
        for (var i = 0; i < nPaddingBytes; i += 4) {
          paddingWords.push(paddingWord);
        }
        var padding = WordArray.create(paddingWords, nPaddingBytes);

        // Add padding
        data.concat(padding);
      },

      /**
          * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
          *
          * @param {WordArray} data The data to unpad.
          *
          * @static
          *
          * @example
          *
          *     CryptoJS.pad.Pkcs7.unpad(wordArray);
          */
      unpad: function unpad(data) {
        // Get number of padding bytes from last byte
        var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

        // Remove padding
        data.sigBytes -= nPaddingBytes;
      } };


    /**
            * Abstract base block cipher template.
            *
            * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
            */
    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
      /**
                                                           * Configuration options.
                                                           *
                                                           * @property {Mode} mode The block mode to use. Default: CBC
                                                           * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                                                           */
      cfg: Cipher.cfg.extend({
        mode: CBC,
        padding: Pkcs7 }),


      reset: function reset() {
        // Reset cipher
        Cipher.reset.call(this);

        // Shortcuts
        var cfg = this.cfg;
        var iv = cfg.iv;
        var mode = cfg.mode;

        // Reset block mode
        if (this._xformMode == this._ENC_XFORM_MODE) {
          var modeCreator = mode.createEncryptor;
        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
            var modeCreator = mode.createDecryptor;
            // Keep at least one block in the buffer for unpadding
            this._minBufferSize = 1;
          }

        if (this._mode && this._mode.__creator == modeCreator) {
          this._mode.init(this, iv && iv.words);
        } else {
          this._mode = modeCreator.call(mode, this, iv && iv.words);
          this._mode.__creator = modeCreator;
        }
      },

      _doProcessBlock: function _doProcessBlock(words, offset) {
        this._mode.processBlock(words, offset);
      },

      _doFinalize: function _doFinalize() {
        // Shortcut
        var padding = this.cfg.padding;

        // Finalize
        if (this._xformMode == this._ENC_XFORM_MODE) {
          // Pad data
          padding.pad(this._data, this.blockSize);

          // Process final blocks
          var finalProcessedBlocks = this._process(!!'flush');
        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
            // Process final blocks
            var finalProcessedBlocks = this._process(!!'flush');

            // Unpad data
            padding.unpad(finalProcessedBlocks);
          }

        return finalProcessedBlocks;
      },

      blockSize: 128 / 32 });


    /**
                               * A collection of cipher parameters.
                               *
                               * @property {WordArray} ciphertext The raw ciphertext.
                               * @property {WordArray} key The key to this ciphertext.
                               * @property {WordArray} iv The IV used in the ciphering operation.
                               * @property {WordArray} salt The salt used with a key derivation function.
                               * @property {Cipher} algorithm The cipher algorithm.
                               * @property {Mode} mode The block mode used in the ciphering operation.
                               * @property {Padding} padding The padding scheme used in the ciphering operation.
                               * @property {number} blockSize The block size of the cipher.
                               * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
                               */
    var CipherParams = C_lib.CipherParams = Base.extend({
      /**
                                                           * Initializes a newly created cipher params object.
                                                           *
                                                           * @param {Object} cipherParams An object with any of the possible cipher parameters.
                                                           *
                                                           * @example
                                                           *
                                                           *     var cipherParams = CryptoJS.lib.CipherParams.create({
                                                           *         ciphertext: ciphertextWordArray,
                                                           *         key: keyWordArray,
                                                           *         iv: ivWordArray,
                                                           *         salt: saltWordArray,
                                                           *         algorithm: CryptoJS.algo.AES,
                                                           *         mode: CryptoJS.mode.CBC,
                                                           *         padding: CryptoJS.pad.PKCS7,
                                                           *         blockSize: 4,
                                                           *         formatter: CryptoJS.format.OpenSSL
                                                           *     });
                                                           */
      init: function init(cipherParams) {
        this.mixIn(cipherParams);
      },

      /**
          * Converts this cipher params object to a string.
          *
          * @param {Format} formatter (Optional) The formatting strategy to use.
          *
          * @return {string} The stringified cipher params.
          *
          * @throws Error If neither the formatter nor the default formatter is set.
          *
          * @example
          *
          *     var string = cipherParams + '';
          *     var string = cipherParams.toString();
          *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
          */
      toString: function toString(formatter) {
        return (formatter || this.formatter).stringify(this);
      } });


    /**
             * Format namespace.
             */
    var C_format = C.format = {};

    /**
                                   * OpenSSL formatting strategy.
                                   */
    var OpenSSLFormatter = C_format.OpenSSL = {
      /**
                                                 * Converts a cipher params object to an OpenSSL-compatible string.
                                                 *
                                                 * @param {CipherParams} cipherParams The cipher params object.
                                                 *
                                                 * @return {string} The OpenSSL-compatible string.
                                                 *
                                                 * @static
                                                 *
                                                 * @example
                                                 *
                                                 *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                                                 */
      stringify: function stringify(cipherParams) {
        // Shortcuts
        var ciphertext = cipherParams.ciphertext;
        var salt = cipherParams.salt;

        // Format
        if (salt) {
          var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
        } else {
          var wordArray = ciphertext;
        }

        return wordArray.toString(Base64);
      },

      /**
          * Converts an OpenSSL-compatible string to a cipher params object.
          *
          * @param {string} openSSLStr The OpenSSL-compatible string.
          *
          * @return {CipherParams} The cipher params object.
          *
          * @static
          *
          * @example
          *
          *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
          */
      parse: function parse(openSSLStr) {
        // Parse base64
        var ciphertext = Base64.parse(openSSLStr);

        // Shortcut
        var ciphertextWords = ciphertext.words;

        // Test for salt
        if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
          // Extract salt
          var salt = WordArray.create(ciphertextWords.slice(2, 4));

          // Remove salt from ciphertext
          ciphertextWords.splice(0, 4);
          ciphertext.sigBytes -= 16;
        }

        return CipherParams.create({ ciphertext: ciphertext, salt: salt });
      } };


    /**
            * A cipher wrapper that returns ciphertext as a serializable cipher params object.
            */
    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
      /**
                                                                       * Configuration options.
                                                                       *
                                                                       * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                                                                       */
      cfg: Base.extend({
        format: OpenSSLFormatter }),


      /**
                                      * Encrypts a message.
                                      *
                                      * @param {Cipher} cipher The cipher algorithm to use.
                                      * @param {WordArray|string} message The message to encrypt.
                                      * @param {WordArray} key The key.
                                      * @param {Object} cfg (Optional) The configuration options to use for this operation.
                                      *
                                      * @return {CipherParams} A cipher params object.
                                      *
                                      * @static
                                      *
                                      * @example
                                      *
                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                                      */
      encrypt: function encrypt(cipher, message, key, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Encrypt
        var encryptor = cipher.createEncryptor(key, cfg);
        var ciphertext = encryptor.finalize(message);

        // Shortcut
        var cipherCfg = encryptor.cfg;

        // Create and return serializable cipher params
        return CipherParams.create({
          ciphertext: ciphertext,
          key: key,
          iv: cipherCfg.iv,
          algorithm: cipher,
          mode: cipherCfg.mode,
          padding: cipherCfg.padding,
          blockSize: cipher.blockSize,
          formatter: cfg.format });

      },

      /**
          * Decrypts serialized ciphertext.
          *
          * @param {Cipher} cipher The cipher algorithm to use.
          * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
          * @param {WordArray} key The key.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @return {WordArray} The plaintext.
          *
          * @static
          *
          * @example
          *
          *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
          *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
          */
      decrypt: function decrypt(cipher, ciphertext, key, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Convert string to CipherParams
        ciphertext = this._parse(ciphertext, cfg.format);

        // Decrypt
        var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

        return plaintext;
      },

      /**
          * Converts serialized ciphertext to CipherParams,
          * else assumed CipherParams already and returns ciphertext unchanged.
          *
          * @param {CipherParams|string} ciphertext The ciphertext.
          * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
          *
          * @return {CipherParams} The unserialized ciphertext.
          *
          * @static
          *
          * @example
          *
          *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
          */
      _parse: function _parse(ciphertext, format) {
        if (typeof ciphertext == 'string') {
          return format.parse(ciphertext, this);
        } else {
          return ciphertext;
        }
      } });


    /**
             * Key derivation function namespace.
             */
    var C_kdf = C.kdf = {};

    /**
                             * OpenSSL key derivation function.
                             */
    var OpenSSLKdf = C_kdf.OpenSSL = {
      /**
                                        * Derives a key and IV from a password.
                                        *
                                        * @param {string} password The password to derive from.
                                        * @param {number} keySize The size in words of the key to generate.
                                        * @param {number} ivSize The size in words of the IV to generate.
                                        * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                                        *
                                        * @return {CipherParams} A cipher params object with the key, IV, and salt.
                                        *
                                        * @static
                                        *
                                        * @example
                                        *
                                        *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                                        *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                                        */
      execute: function execute(password, keySize, ivSize, salt) {
        // Generate random salt
        if (!salt) {
          salt = WordArray.random(64 / 8);
        }

        // Derive key and IV
        var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

        // Separate key and IV
        var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
        key.sigBytes = keySize * 4;

        // Return params
        return CipherParams.create({ key: key, iv: iv, salt: salt });
      } };


    /**
            * A serializable cipher wrapper that derives the key from a password,
            * and returns ciphertext as a serializable cipher params object.
            */
    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
      /**
                                                                                       * Configuration options.
                                                                                       *
                                                                                       * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                                                                                       */
      cfg: SerializableCipher.cfg.extend({
        kdf: OpenSSLKdf }),


      /**
                             * Encrypts a message using a password.
                             *
                             * @param {Cipher} cipher The cipher algorithm to use.
                             * @param {WordArray|string} message The message to encrypt.
                             * @param {string} password The password.
                             * @param {Object} cfg (Optional) The configuration options to use for this operation.
                             *
                             * @return {CipherParams} A cipher params object.
                             *
                             * @static
                             *
                             * @example
                             *
                             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                             */
      encrypt: function encrypt(cipher, message, password, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Derive key and other params
        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

        // Add IV to config
        cfg.iv = derivedParams.iv;

        // Encrypt
        var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

        // Mix in derived params
        ciphertext.mixIn(derivedParams);

        return ciphertext;
      },

      /**
          * Decrypts serialized ciphertext using a password.
          *
          * @param {Cipher} cipher The cipher algorithm to use.
          * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
          * @param {string} password The password.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @return {WordArray} The plaintext.
          *
          * @static
          *
          * @example
          *
          *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
          *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
          */
      decrypt: function decrypt(cipher, ciphertext, password, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Convert string to CipherParams
        ciphertext = this._parse(ciphertext, cfg.format);

        // Derive key and other params
        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

        // Add IV to config
        cfg.iv = derivedParams.iv;

        // Decrypt
        var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

        return plaintext;
      } });

  }();


});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js":
/*!*************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/core.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory();
  } else
  {}
})(void 0, function () {

  /**
                         * CryptoJS core components.
                         */
  var CryptoJS = CryptoJS || function (Math, undefined) {
    /*
                                                          * Local polyfil of Object.create
                                                          */
    var create = Object.create || function () {
      function F() {};

      return function (obj) {
        var subtype;

        F.prototype = obj;

        subtype = new F();

        F.prototype = null;

        return subtype;
      };
    }();

    /**
          * CryptoJS namespace.
          */
    var C = {};

    /**
                 * Library namespace.
                 */
    var C_lib = C.lib = {};

    /**
                             * Base object for prototypal inheritance.
                             */
    var Base = C_lib.Base = function () {


      return {
        /**
                * Creates a new object that inherits from this object.
                *
                * @param {Object} overrides Properties to copy into the new object.
                *
                * @return {Object} The new object.
                *
                * @static
                *
                * @example
                *
                *     var MyType = CryptoJS.lib.Base.extend({
                *         field: 'value',
                *
                *         method: function () {
                *         }
                *     });
                */
        extend: function extend(overrides) {
          // Spawn
          var subtype = create(this);

          // Augment
          if (overrides) {
            subtype.mixIn(overrides);
          }

          // Create default initializer
          if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
            subtype.init = function () {
              subtype.$super.init.apply(this, arguments);
            };
          }

          // Initializer's prototype is the subtype object
          subtype.init.prototype = subtype;

          // Reference supertype
          subtype.$super = this;

          return subtype;
        },

        /**
            * Extends this object and runs the init method.
            * Arguments to create() will be passed to init().
            *
            * @return {Object} The new object.
            *
            * @static
            *
            * @example
            *
            *     var instance = MyType.create();
            */
        create: function create() {
          var instance = this.extend();
          instance.init.apply(instance, arguments);

          return instance;
        },

        /**
            * Initializes a newly created object.
            * Override this method to add some logic when your objects are created.
            *
            * @example
            *
            *     var MyType = CryptoJS.lib.Base.extend({
            *         init: function () {
            *             // ...
            *         }
            *     });
            */
        init: function init() {
        },

        /**
            * Copies properties into this object.
            *
            * @param {Object} properties The properties to mix in.
            *
            * @example
            *
            *     MyType.mixIn({
            *         field: 'value'
            *     });
            */
        mixIn: function mixIn(properties) {
          for (var propertyName in properties) {
            if (properties.hasOwnProperty(propertyName)) {
              this[propertyName] = properties[propertyName];
            }
          }

          // IE won't copy toString using the loop above
          if (properties.hasOwnProperty('toString')) {
            this.toString = properties.toString;
          }
        },

        /**
            * Creates a copy of this object.
            *
            * @return {Object} The clone.
            *
            * @example
            *
            *     var clone = instance.clone();
            */
        clone: function clone() {
          return this.init.prototype.extend(this);
        } };

    }();

    /**
          * An array of 32-bit words.
          *
          * @property {Array} words The array of 32-bit words.
          * @property {number} sigBytes The number of significant bytes in this word array.
          */
    var WordArray = C_lib.WordArray = Base.extend({
      /**
                                                     * Initializes a newly created word array.
                                                     *
                                                     * @param {Array} words (Optional) An array of 32-bit words.
                                                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                                                     *
                                                     * @example
                                                     *
                                                     *     var wordArray = CryptoJS.lib.WordArray.create();
                                                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                                                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                                                     */
      init: function init(words, sigBytes) {
        words = this.words = words || [];

        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 4;
        }
      },

      /**
          * Converts this word array to a string.
          *
          * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
          *
          * @return {string} The stringified word array.
          *
          * @example
          *
          *     var string = wordArray + '';
          *     var string = wordArray.toString();
          *     var string = wordArray.toString(CryptoJS.enc.Utf8);
          */
      toString: function toString(encoder) {
        return (encoder || Hex).stringify(this);
      },

      /**
          * Concatenates a word array to this word array.
          *
          * @param {WordArray} wordArray The word array to append.
          *
          * @return {WordArray} This word array.
          *
          * @example
          *
          *     wordArray1.concat(wordArray2);
          */
      concat: function concat(wordArray) {
        // Shortcuts
        var thisWords = this.words;
        var thatWords = wordArray.words;
        var thisSigBytes = this.sigBytes;
        var thatSigBytes = wordArray.sigBytes;

        // Clamp excess bits
        this.clamp();

        // Concat
        if (thisSigBytes % 4) {
          // Copy one byte at a time
          for (var i = 0; i < thatSigBytes; i++) {
            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
          }
        } else {
          // Copy one word at a time
          for (var i = 0; i < thatSigBytes; i += 4) {
            thisWords[thisSigBytes + i >>> 2] = thatWords[i >>> 2];
          }
        }
        this.sigBytes += thatSigBytes;

        // Chainable
        return this;
      },

      /**
          * Removes insignificant bits.
          *
          * @example
          *
          *     wordArray.clamp();
          */
      clamp: function clamp() {
        // Shortcuts
        var words = this.words;
        var sigBytes = this.sigBytes;

        // Clamp
        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
        words.length = Math.ceil(sigBytes / 4);
      },

      /**
          * Creates a copy of this word array.
          *
          * @return {WordArray} The clone.
          *
          * @example
          *
          *     var clone = wordArray.clone();
          */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone.words = this.words.slice(0);

        return clone;
      },

      /**
          * Creates a word array filled with random bytes.
          *
          * @param {number} nBytes The number of random bytes to generate.
          *
          * @return {WordArray} The random word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.lib.WordArray.random(16);
          */
      random: function random(nBytes) {
        var words = [];

        var r = function r(m_w) {
          var m_w = m_w;
          var m_z = 0x3ade68b1;
          var mask = 0xffffffff;

          return function () {
            m_z = 0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10) & mask;
            m_w = 0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10) & mask;
            var result = (m_z << 0x10) + m_w & mask;
            result /= 0x100000000;
            result += 0.5;
            return result * (Math.random() > .5 ? 1 : -1);
          };
        };

        for (var i = 0, rcache; i < nBytes; i += 4) {
          var _r = r((rcache || Math.random()) * 0x100000000);

          rcache = _r() * 0x3ade67b7;
          words.push(_r() * 0x100000000 | 0);
        }

        return new WordArray.init(words, nBytes);
      } });


    /**
             * Encoder namespace.
             */
    var C_enc = C.enc = {};

    /**
                             * Hex encoding strategy.
                             */
    var Hex = C_enc.Hex = {
      /**
                             * Converts a word array to a hex string.
                             *
                             * @param {WordArray} wordArray The word array.
                             *
                             * @return {string} The hex string.
                             *
                             * @static
                             *
                             * @example
                             *
                             *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                             */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var hexChars = [];
        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          hexChars.push((bite >>> 4).toString(16));
          hexChars.push((bite & 0x0f).toString(16));
        }

        return hexChars.join('');
      },

      /**
          * Converts a hex string to a word array.
          *
          * @param {string} hexStr The hex string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
          */
      parse: function parse(hexStr) {
        // Shortcut
        var hexStrLength = hexStr.length;

        // Convert
        var words = [];
        for (var i = 0; i < hexStrLength; i += 2) {
          words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
        }

        return new WordArray.init(words, hexStrLength / 2);
      } };


    /**
            * Latin1 encoding strategy.
            */
    var Latin1 = C_enc.Latin1 = {
      /**
                                   * Converts a word array to a Latin1 string.
                                   *
                                   * @param {WordArray} wordArray The word array.
                                   *
                                   * @return {string} The Latin1 string.
                                   *
                                   * @static
                                   *
                                   * @example
                                   *
                                   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                                   */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var latin1Chars = [];
        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          latin1Chars.push(String.fromCharCode(bite));
        }

        return latin1Chars.join('');
      },

      /**
          * Converts a Latin1 string to a word array.
          *
          * @param {string} latin1Str The Latin1 string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
          */
      parse: function parse(latin1Str) {
        // Shortcut
        var latin1StrLength = latin1Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < latin1StrLength; i++) {
          words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
        }

        return new WordArray.init(words, latin1StrLength);
      } };


    /**
            * UTF-8 encoding strategy.
            */
    var Utf8 = C_enc.Utf8 = {
      /**
                               * Converts a word array to a UTF-8 string.
                               *
                               * @param {WordArray} wordArray The word array.
                               *
                               * @return {string} The UTF-8 string.
                               *
                               * @static
                               *
                               * @example
                               *
                               *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                               */
      stringify: function stringify(wordArray) {
        try {
          return decodeURIComponent(escape(Latin1.stringify(wordArray)));
        } catch (e) {
          throw new Error('Malformed UTF-8 data');
        }
      },

      /**
          * Converts a UTF-8 string to a word array.
          *
          * @param {string} utf8Str The UTF-8 string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
          */
      parse: function parse(utf8Str) {
        return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
      } };


    /**
            * Abstract buffered block algorithm template.
            *
            * The property blockSize must be implemented in a concrete subtype.
            *
            * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
            */
    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
      /**
                                                                               * Resets this block algorithm's data buffer to its initial state.
                                                                               *
                                                                               * @example
                                                                               *
                                                                               *     bufferedBlockAlgorithm.reset();
                                                                               */
      reset: function reset() {
        // Initial values
        this._data = new WordArray.init();
        this._nDataBytes = 0;
      },

      /**
          * Adds new data to this block algorithm's buffer.
          *
          * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
          *
          * @example
          *
          *     bufferedBlockAlgorithm._append('data');
          *     bufferedBlockAlgorithm._append(wordArray);
          */
      _append: function _append(data) {
        // Convert string to WordArray, else assume WordArray already
        if (typeof data == 'string') {
          data = Utf8.parse(data);
        }

        // Append
        this._data.concat(data);
        this._nDataBytes += data.sigBytes;
      },

      /**
          * Processes available data blocks.
          *
          * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
          *
          * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
          *
          * @return {WordArray} The processed data.
          *
          * @example
          *
          *     var processedData = bufferedBlockAlgorithm._process();
          *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
          */
      _process: function _process(doFlush) {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var dataSigBytes = data.sigBytes;
        var blockSize = this.blockSize;
        var blockSizeBytes = blockSize * 4;

        // Count blocks ready
        var nBlocksReady = dataSigBytes / blockSizeBytes;
        if (doFlush) {
          // Round up to include partial blocks
          nBlocksReady = Math.ceil(nBlocksReady);
        } else {
          // Round down to include only full blocks,
          // less the number of blocks that must remain in the buffer
          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
        }

        // Count words ready
        var nWordsReady = nBlocksReady * blockSize;

        // Count bytes ready
        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

        // Process blocks
        if (nWordsReady) {
          for (var offset = 0; offset < nWordsReady; offset += blockSize) {
            // Perform concrete-algorithm logic
            this._doProcessBlock(dataWords, offset);
          }

          // Remove processed words
          var processedWords = dataWords.splice(0, nWordsReady);
          data.sigBytes -= nBytesReady;
        }

        // Return processed words
        return new WordArray.init(processedWords, nBytesReady);
      },

      /**
          * Creates a copy of this object.
          *
          * @return {Object} The clone.
          *
          * @example
          *
          *     var clone = bufferedBlockAlgorithm.clone();
          */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone._data = this._data.clone();

        return clone;
      },

      _minBufferSize: 0 });


    /**
                             * Abstract hasher template.
                             *
                             * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
                             */
    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
      /**
                                                                 * Configuration options.
                                                                 */
      cfg: Base.extend(),

      /**
                           * Initializes a newly created hasher.
                           *
                           * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                           *
                           * @example
                           *
                           *     var hasher = CryptoJS.algo.SHA256.create();
                           */
      init: function init(cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg);

        // Set initial values
        this.reset();
      },

      /**
          * Resets this hasher to its initial state.
          *
          * @example
          *
          *     hasher.reset();
          */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this);

        // Perform concrete-hasher logic
        this._doReset();
      },

      /**
          * Updates this hasher with a message.
          *
          * @param {WordArray|string} messageUpdate The message to append.
          *
          * @return {Hasher} This hasher.
          *
          * @example
          *
          *     hasher.update('message');
          *     hasher.update(wordArray);
          */
      update: function update(messageUpdate) {
        // Append
        this._append(messageUpdate);

        // Update the hash
        this._process();

        // Chainable
        return this;
      },

      /**
          * Finalizes the hash computation.
          * Note that the finalize operation is effectively a destructive, read-once operation.
          *
          * @param {WordArray|string} messageUpdate (Optional) A final message update.
          *
          * @return {WordArray} The hash.
          *
          * @example
          *
          *     var hash = hasher.finalize();
          *     var hash = hasher.finalize('message');
          *     var hash = hasher.finalize(wordArray);
          */
      finalize: function finalize(messageUpdate) {
        // Final message update
        if (messageUpdate) {
          this._append(messageUpdate);
        }

        // Perform concrete-hasher logic
        var hash = this._doFinalize();

        return hash;
      },

      blockSize: 512 / 32,

      /**
                            * Creates a shortcut function to a hasher's object interface.
                            *
                            * @param {Hasher} hasher The hasher to create a helper for.
                            *
                            * @return {Function} The shortcut function.
                            *
                            * @static
                            *
                            * @example
                            *
                            *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                            */
      _createHelper: function _createHelper(hasher) {
        return function (message, cfg) {
          return new hasher.init(cfg).finalize(message);
        };
      },

      /**
          * Creates a shortcut function to the HMAC's object interface.
          *
          * @param {Hasher} hasher The hasher to use in this HMAC helper.
          *
          * @return {Function} The shortcut function.
          *
          * @static
          *
          * @example
          *
          *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
          */
      _createHmacHelper: function _createHmacHelper(hasher) {
        return function (message, key) {
          return new C_algo.HMAC.init(hasher, key).finalize(message);
        };
      } });


    /**
             * Algorithm namespace.
             */
    var C_algo = C.algo = {};

    return C;
  }(Math);


  return CryptoJS;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js":
/*!*******************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/enc-base64.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
                        * Base64 encoding strategy.
                        */
    var Base64 = C_enc.Base64 = {
      /**
                                   * Converts a word array to a Base64 string.
                                   *
                                   * @param {WordArray} wordArray The word array.
                                   *
                                   * @return {string} The Base64 string.
                                   *
                                   * @static
                                   *
                                   * @example
                                   *
                                   *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                                   */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;
        var map = this._map;

        // Clamp excess bits
        wordArray.clamp();

        // Convert
        var base64Chars = [];
        for (var i = 0; i < sigBytes; i += 3) {
          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;

          var triplet = byte1 << 16 | byte2 << 8 | byte3;

          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
          }
        }

        // Add padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          while (base64Chars.length % 4) {
            base64Chars.push(paddingChar);
          }
        }

        return base64Chars.join('');
      },

      /**
          * Converts a Base64 string to a word array.
          *
          * @param {string} base64Str The Base64 string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
          */
      parse: function parse(base64Str) {
        // Shortcuts
        var base64StrLength = base64Str.length;
        var map = this._map;
        var reverseMap = this._reverseMap;

        if (!reverseMap) {
          reverseMap = this._reverseMap = [];
          for (var j = 0; j < map.length; j++) {
            reverseMap[map.charCodeAt(j)] = j;
          }
        }

        // Ignore padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          var paddingIndex = base64Str.indexOf(paddingChar);
          if (paddingIndex !== -1) {
            base64StrLength = paddingIndex;
          }
        }

        // Convert
        return parseLoop(base64Str, base64StrLength, reverseMap);

      },

      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' };


    function parseLoop(base64Str, base64StrLength, reverseMap) {
      var words = [];
      var nBytes = 0;
      for (var i = 0; i < base64StrLength; i++) {
        if (i % 4) {
          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
          words[nBytes >>> 2] |= (bits1 | bits2) << 24 - nBytes % 4 * 8;
          nBytes++;
        }
      }
      return WordArray.create(words, nBytes);
    }
  })();


  return CryptoJS.enc.Base64;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-utf16.js":
/*!******************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/enc-utf16.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
                        * UTF-16 BE encoding strategy.
                        */
    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
      /**
                                                   * Converts a word array to a UTF-16 BE string.
                                                   *
                                                   * @param {WordArray} wordArray The word array.
                                                   *
                                                   * @return {string} The UTF-16 BE string.
                                                   *
                                                   * @static
                                                   *
                                                   * @example
                                                   *
                                                   *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                                                   */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var utf16Chars = [];
        for (var i = 0; i < sigBytes; i += 2) {
          var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;
          utf16Chars.push(String.fromCharCode(codePoint));
        }

        return utf16Chars.join('');
      },

      /**
          * Converts a UTF-16 BE string to a word array.
          *
          * @param {string} utf16Str The UTF-16 BE string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
          */
      parse: function parse(utf16Str) {
        // Shortcut
        var utf16StrLength = utf16Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < utf16StrLength; i++) {
          words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;
        }

        return WordArray.create(words, utf16StrLength * 2);
      } };


    /**
            * UTF-16 LE encoding strategy.
            */
    C_enc.Utf16LE = {
      /**
                       * Converts a word array to a UTF-16 LE string.
                       *
                       * @param {WordArray} wordArray The word array.
                       *
                       * @return {string} The UTF-16 LE string.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var utf16Chars = [];
        for (var i = 0; i < sigBytes; i += 2) {
          var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);
          utf16Chars.push(String.fromCharCode(codePoint));
        }

        return utf16Chars.join('');
      },

      /**
          * Converts a UTF-16 LE string to a word array.
          *
          * @param {string} utf16Str The UTF-16 LE string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
          */
      parse: function parse(utf16Str) {
        // Shortcut
        var utf16StrLength = utf16Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < utf16StrLength; i++) {
          words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);
        }

        return WordArray.create(words, utf16StrLength * 2);
      } };


    function swapEndian(word) {
      return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;
    }
  })();


  return CryptoJS.enc.Utf16;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/evpkdf.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./sha1 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha1.js"), __webpack_require__(/*! ./hmac */ "F:\\app\\物联网\\node_modules\\crypto-js\\hmac.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var MD5 = C_algo.MD5;

    /**
                           * This key derivation function is meant to conform with EVP_BytesToKey.
                           * www.openssl.org/docs/crypto/EVP_BytesToKey.html
                           */
    var EvpKDF = C_algo.EvpKDF = Base.extend({
      /**
                                                * Configuration options.
                                                *
                                                * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                                                * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                                                * @property {number} iterations The number of iterations to perform. Default: 1
                                                */
      cfg: Base.extend({
        keySize: 128 / 32,
        hasher: MD5,
        iterations: 1 }),


      /**
                           * Initializes a newly created key derivation function.
                           *
                           * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                           *
                           * @example
                           *
                           *     var kdf = CryptoJS.algo.EvpKDF.create();
                           *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                           *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                           */
      init: function init(cfg) {
        this.cfg = this.cfg.extend(cfg);
      },

      /**
          * Derives a key from a password.
          *
          * @param {WordArray|string} password The password.
          * @param {WordArray|string} salt A salt.
          *
          * @return {WordArray} The derived key.
          *
          * @example
          *
          *     var key = kdf.compute(password, salt);
          */
      compute: function compute(password, salt) {
        // Shortcut
        var cfg = this.cfg;

        // Init hasher
        var hasher = cfg.hasher.create();

        // Initial values
        var derivedKey = WordArray.create();

        // Shortcuts
        var derivedKeyWords = derivedKey.words;
        var keySize = cfg.keySize;
        var iterations = cfg.iterations;

        // Generate key
        while (derivedKeyWords.length < keySize) {
          if (block) {
            hasher.update(block);
          }
          var block = hasher.update(password).finalize(salt);
          hasher.reset();

          // Iterations
          for (var i = 1; i < iterations; i++) {
            block = hasher.finalize(block);
            hasher.reset();
          }

          derivedKey.concat(block);
        }
        derivedKey.sigBytes = keySize * 4;

        return derivedKey;
      } });


    /**
             * Derives a key from a password.
             *
             * @param {WordArray|string} password The password.
             * @param {WordArray|string} salt A salt.
             * @param {Object} cfg (Optional) The configuration options to use for this computation.
             *
             * @return {WordArray} The derived key.
             *
             * @static
             *
             * @example
             *
             *     var key = CryptoJS.EvpKDF(password, salt);
             *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
             *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
             */
    C.EvpKDF = function (password, salt, cfg) {
      return EvpKDF.create(cfg).compute(password, salt);
    };
  })();


  return CryptoJS.EvpKDF;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\format-hex.js":
/*!*******************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/format-hex.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var CipherParams = C_lib.CipherParams;
    var C_enc = C.enc;
    var Hex = C_enc.Hex;
    var C_format = C.format;

    var HexFormatter = C_format.Hex = {
      /**
                                         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                                         *
                                         * @param {CipherParams} cipherParams The cipher params object.
                                         *
                                         * @return {string} The hexadecimally encoded string.
                                         *
                                         * @static
                                         *
                                         * @example
                                         *
                                         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                                         */
      stringify: function stringify(cipherParams) {
        return cipherParams.ciphertext.toString(Hex);
      },

      /**
          * Converts a hexadecimally encoded ciphertext string to a cipher params object.
          *
          * @param {string} input The hexadecimally encoded string.
          *
          * @return {CipherParams} The cipher params object.
          *
          * @static
          *
          * @example
          *
          *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
          */
      parse: function parse(input) {
        var ciphertext = Hex.parse(input);
        return CipherParams.create({ ciphertext: ciphertext });
      } };

  })();


  return CryptoJS.format.Hex;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\hmac.js":
/*!*************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/hmac.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var C_enc = C.enc;
    var Utf8 = C_enc.Utf8;
    var C_algo = C.algo;

    /**
                          * HMAC algorithm.
                          */
    var HMAC = C_algo.HMAC = Base.extend({
      /**
                                            * Initializes a newly created HMAC.
                                            *
                                            * @param {Hasher} hasher The hash algorithm to use.
                                            * @param {WordArray|string} key The secret key.
                                            *
                                            * @example
                                            *
                                            *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                                            */
      init: function init(hasher, key) {
        // Init hasher
        hasher = this._hasher = new hasher.init();

        // Convert string to WordArray, else assume WordArray already
        if (typeof key == 'string') {
          key = Utf8.parse(key);
        }

        // Shortcuts
        var hasherBlockSize = hasher.blockSize;
        var hasherBlockSizeBytes = hasherBlockSize * 4;

        // Allow arbitrary length keys
        if (key.sigBytes > hasherBlockSizeBytes) {
          key = hasher.finalize(key);
        }

        // Clamp excess bits
        key.clamp();

        // Clone key for inner and outer pads
        var oKey = this._oKey = key.clone();
        var iKey = this._iKey = key.clone();

        // Shortcuts
        var oKeyWords = oKey.words;
        var iKeyWords = iKey.words;

        // XOR keys with pad constants
        for (var i = 0; i < hasherBlockSize; i++) {
          oKeyWords[i] ^= 0x5c5c5c5c;
          iKeyWords[i] ^= 0x36363636;
        }
        oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

        // Set initial values
        this.reset();
      },

      /**
          * Resets this HMAC to its initial state.
          *
          * @example
          *
          *     hmacHasher.reset();
          */
      reset: function reset() {
        // Shortcut
        var hasher = this._hasher;

        // Reset
        hasher.reset();
        hasher.update(this._iKey);
      },

      /**
          * Updates this HMAC with a message.
          *
          * @param {WordArray|string} messageUpdate The message to append.
          *
          * @return {HMAC} This HMAC instance.
          *
          * @example
          *
          *     hmacHasher.update('message');
          *     hmacHasher.update(wordArray);
          */
      update: function update(messageUpdate) {
        this._hasher.update(messageUpdate);

        // Chainable
        return this;
      },

      /**
          * Finalizes the HMAC computation.
          * Note that the finalize operation is effectively a destructive, read-once operation.
          *
          * @param {WordArray|string} messageUpdate (Optional) A final message update.
          *
          * @return {WordArray} The HMAC.
          *
          * @example
          *
          *     var hmac = hmacHasher.finalize();
          *     var hmac = hmacHasher.finalize('message');
          *     var hmac = hmacHasher.finalize(wordArray);
          */
      finalize: function finalize(messageUpdate) {
        // Shortcut
        var hasher = this._hasher;

        // Compute HMAC
        var innerHash = hasher.finalize(messageUpdate);
        hasher.reset();
        var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

        return hmac;
      } });

  })();


});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\index.js":
/*!**************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./x64-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\x64-core.js"), __webpack_require__(/*! ./lib-typedarrays */ "F:\\app\\物联网\\node_modules\\crypto-js\\lib-typedarrays.js"), __webpack_require__(/*! ./enc-utf16 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-utf16.js"), __webpack_require__(/*! ./enc-base64 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js"), __webpack_require__(/*! ./md5 */ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js"), __webpack_require__(/*! ./sha1 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha1.js"), __webpack_require__(/*! ./sha256 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha256.js"), __webpack_require__(/*! ./sha224 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha224.js"), __webpack_require__(/*! ./sha512 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha512.js"), __webpack_require__(/*! ./sha384 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha384.js"), __webpack_require__(/*! ./sha3 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha3.js"), __webpack_require__(/*! ./ripemd160 */ "F:\\app\\物联网\\node_modules\\crypto-js\\ripemd160.js"), __webpack_require__(/*! ./hmac */ "F:\\app\\物联网\\node_modules\\crypto-js\\hmac.js"), __webpack_require__(/*! ./pbkdf2 */ "F:\\app\\物联网\\node_modules\\crypto-js\\pbkdf2.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"), __webpack_require__(/*! ./mode-cfb */ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-cfb.js"), __webpack_require__(/*! ./mode-ctr */ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ctr.js"), __webpack_require__(/*! ./mode-ctr-gladman */ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ctr-gladman.js"), __webpack_require__(/*! ./mode-ofb */ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ofb.js"), __webpack_require__(/*! ./mode-ecb */ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ecb.js"), __webpack_require__(/*! ./pad-ansix923 */ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-ansix923.js"), __webpack_require__(/*! ./pad-iso10126 */ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-iso10126.js"), __webpack_require__(/*! ./pad-iso97971 */ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-iso97971.js"), __webpack_require__(/*! ./pad-zeropadding */ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-zeropadding.js"), __webpack_require__(/*! ./pad-nopadding */ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-nopadding.js"), __webpack_require__(/*! ./format-hex */ "F:\\app\\物联网\\node_modules\\crypto-js\\format-hex.js"), __webpack_require__(/*! ./aes */ "F:\\app\\物联网\\node_modules\\crypto-js\\aes.js"), __webpack_require__(/*! ./tripledes */ "F:\\app\\物联网\\node_modules\\crypto-js\\tripledes.js"), __webpack_require__(/*! ./rc4 */ "F:\\app\\物联网\\node_modules\\crypto-js\\rc4.js"), __webpack_require__(/*! ./rabbit */ "F:\\app\\物联网\\node_modules\\crypto-js\\rabbit.js"), __webpack_require__(/*! ./rabbit-legacy */ "F:\\app\\物联网\\node_modules\\crypto-js\\rabbit-legacy.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  return CryptoJS;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\lib-typedarrays.js":
/*!************************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/lib-typedarrays.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Check if typed arrays are supported
    if (typeof ArrayBuffer != 'function') {
      return;
    }

    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;

    // Reference original init
    var superInit = WordArray.init;

    // Augment WordArray.init to handle typed arrays
    var subInit = WordArray.init = function (typedArray) {
      // Convert buffers to uint8
      if (typedArray instanceof ArrayBuffer) {
        typedArray = new Uint8Array(typedArray);
      }

      // Convert other array views to uint8
      if (
      typedArray instanceof Int8Array ||
      typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray ||
      typedArray instanceof Int16Array ||
      typedArray instanceof Uint16Array ||
      typedArray instanceof Int32Array ||
      typedArray instanceof Uint32Array ||
      typedArray instanceof Float32Array ||
      typedArray instanceof Float64Array)
      {
        typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
      }

      // Handle Uint8Array
      if (typedArray instanceof Uint8Array) {
        // Shortcut
        var typedArrayByteLength = typedArray.byteLength;

        // Extract bytes
        var words = [];
        for (var i = 0; i < typedArrayByteLength; i++) {
          words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
        }

        // Initialize this word array
        superInit.call(this, words, typedArrayByteLength);
      } else {
        // Else call normal init
        superInit.apply(this, arguments);
      }
    };

    subInit.prototype = WordArray;
  })();


  return CryptoJS.lib.WordArray;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js":
/*!************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/md5.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Constants table
    var T = [];

    // Compute constants
    (function () {
      for (var i = 0; i < 64; i++) {
        T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
      }
    })();

    /**
           * MD5 hash algorithm.
           */
    var MD5 = C_algo.MD5 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([
        0x67452301, 0xefcdab89,
        0x98badcfe, 0x10325476]);

      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];

          M[offset_i] =
          (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |
          (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;

        }

        // Shortcuts
        var H = this._hash.words;

        var M_offset_0 = M[offset + 0];
        var M_offset_1 = M[offset + 1];
        var M_offset_2 = M[offset + 2];
        var M_offset_3 = M[offset + 3];
        var M_offset_4 = M[offset + 4];
        var M_offset_5 = M[offset + 5];
        var M_offset_6 = M[offset + 6];
        var M_offset_7 = M[offset + 7];
        var M_offset_8 = M[offset + 8];
        var M_offset_9 = M[offset + 9];
        var M_offset_10 = M[offset + 10];
        var M_offset_11 = M[offset + 11];
        var M_offset_12 = M[offset + 12];
        var M_offset_13 = M[offset + 13];
        var M_offset_14 = M[offset + 14];
        var M_offset_15 = M[offset + 15];

        // Working varialbes
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];

        // Computation
        a = FF(a, b, c, d, M_offset_0, 7, T[0]);
        d = FF(d, a, b, c, M_offset_1, 12, T[1]);
        c = FF(c, d, a, b, M_offset_2, 17, T[2]);
        b = FF(b, c, d, a, M_offset_3, 22, T[3]);
        a = FF(a, b, c, d, M_offset_4, 7, T[4]);
        d = FF(d, a, b, c, M_offset_5, 12, T[5]);
        c = FF(c, d, a, b, M_offset_6, 17, T[6]);
        b = FF(b, c, d, a, M_offset_7, 22, T[7]);
        a = FF(a, b, c, d, M_offset_8, 7, T[8]);
        d = FF(d, a, b, c, M_offset_9, 12, T[9]);
        c = FF(c, d, a, b, M_offset_10, 17, T[10]);
        b = FF(b, c, d, a, M_offset_11, 22, T[11]);
        a = FF(a, b, c, d, M_offset_12, 7, T[12]);
        d = FF(d, a, b, c, M_offset_13, 12, T[13]);
        c = FF(c, d, a, b, M_offset_14, 17, T[14]);
        b = FF(b, c, d, a, M_offset_15, 22, T[15]);

        a = GG(a, b, c, d, M_offset_1, 5, T[16]);
        d = GG(d, a, b, c, M_offset_6, 9, T[17]);
        c = GG(c, d, a, b, M_offset_11, 14, T[18]);
        b = GG(b, c, d, a, M_offset_0, 20, T[19]);
        a = GG(a, b, c, d, M_offset_5, 5, T[20]);
        d = GG(d, a, b, c, M_offset_10, 9, T[21]);
        c = GG(c, d, a, b, M_offset_15, 14, T[22]);
        b = GG(b, c, d, a, M_offset_4, 20, T[23]);
        a = GG(a, b, c, d, M_offset_9, 5, T[24]);
        d = GG(d, a, b, c, M_offset_14, 9, T[25]);
        c = GG(c, d, a, b, M_offset_3, 14, T[26]);
        b = GG(b, c, d, a, M_offset_8, 20, T[27]);
        a = GG(a, b, c, d, M_offset_13, 5, T[28]);
        d = GG(d, a, b, c, M_offset_2, 9, T[29]);
        c = GG(c, d, a, b, M_offset_7, 14, T[30]);
        b = GG(b, c, d, a, M_offset_12, 20, T[31]);

        a = HH(a, b, c, d, M_offset_5, 4, T[32]);
        d = HH(d, a, b, c, M_offset_8, 11, T[33]);
        c = HH(c, d, a, b, M_offset_11, 16, T[34]);
        b = HH(b, c, d, a, M_offset_14, 23, T[35]);
        a = HH(a, b, c, d, M_offset_1, 4, T[36]);
        d = HH(d, a, b, c, M_offset_4, 11, T[37]);
        c = HH(c, d, a, b, M_offset_7, 16, T[38]);
        b = HH(b, c, d, a, M_offset_10, 23, T[39]);
        a = HH(a, b, c, d, M_offset_13, 4, T[40]);
        d = HH(d, a, b, c, M_offset_0, 11, T[41]);
        c = HH(c, d, a, b, M_offset_3, 16, T[42]);
        b = HH(b, c, d, a, M_offset_6, 23, T[43]);
        a = HH(a, b, c, d, M_offset_9, 4, T[44]);
        d = HH(d, a, b, c, M_offset_12, 11, T[45]);
        c = HH(c, d, a, b, M_offset_15, 16, T[46]);
        b = HH(b, c, d, a, M_offset_2, 23, T[47]);

        a = II(a, b, c, d, M_offset_0, 6, T[48]);
        d = II(d, a, b, c, M_offset_7, 10, T[49]);
        c = II(c, d, a, b, M_offset_14, 15, T[50]);
        b = II(b, c, d, a, M_offset_5, 21, T[51]);
        a = II(a, b, c, d, M_offset_12, 6, T[52]);
        d = II(d, a, b, c, M_offset_3, 10, T[53]);
        c = II(c, d, a, b, M_offset_10, 15, T[54]);
        b = II(b, c, d, a, M_offset_1, 21, T[55]);
        a = II(a, b, c, d, M_offset_8, 6, T[56]);
        d = II(d, a, b, c, M_offset_15, 10, T[57]);
        c = II(c, d, a, b, M_offset_6, 15, T[58]);
        b = II(b, c, d, a, M_offset_13, 21, T[59]);
        a = II(a, b, c, d, M_offset_4, 6, T[60]);
        d = II(d, a, b, c, M_offset_11, 10, T[61]);
        c = II(c, d, a, b, M_offset_2, 15, T[62]);
        b = II(b, c, d, a, M_offset_9, 21, T[63]);

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;

        var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
        var nBitsTotalL = nBitsTotal;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] =
        (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff |
        (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;

        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =
        (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff |
        (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;


        data.sigBytes = (dataWords.length + 1) * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var hash = this._hash;
        var H = hash.words;

        // Swap endian
        for (var i = 0; i < 4; i++) {
          // Shortcut
          var H_i = H[i];

          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |
          (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        }

        // Return final computed hash
        return hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });


    function FF(a, b, c, d, x, s, t) {
      var n = a + (b & c | ~b & d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function GG(a, b, c, d, x, s, t) {
      var n = a + (b & d | c & ~d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function HH(a, b, c, d, x, s, t) {
      var n = a + (b ^ c ^ d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function II(a, b, c, d, x, s, t) {
      var n = a + (c ^ (b | ~d)) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.MD5('message');
       *     var hash = CryptoJS.MD5(wordArray);
       */
    C.MD5 = Hasher._createHelper(MD5);

    /**
                                        * Shortcut function to the HMAC's object interface.
                                        *
                                        * @param {WordArray|string} message The message to hash.
                                        * @param {WordArray|string} key The secret key.
                                        *
                                        * @return {WordArray} The HMAC.
                                        *
                                        * @static
                                        *
                                        * @example
                                        *
                                        *     var hmac = CryptoJS.HmacMD5(message, key);
                                        */
    C.HmacMD5 = Hasher._createHmacHelper(MD5);
  })(Math);


  return CryptoJS.MD5;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-cfb.js":
/*!*****************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/mode-cfb.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * Cipher Feedback block mode.
                                 */
  CryptoJS.mode.CFB = function () {
    var CFB = CryptoJS.lib.BlockCipherMode.extend();

    CFB.Encryptor = CFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

        // Remember this block to use with next block
        this._prevBlock = words.slice(offset, offset + blockSize);
      } });


    CFB.Decryptor = CFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        // Remember this block to use with next block
        var thisBlock = words.slice(offset, offset + blockSize);

        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

        // This block becomes the previous block
        this._prevBlock = thisBlock;
      } });


    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
      // Shortcut
      var iv = this._iv;

      // Generate keystream
      if (iv) {
        var keystream = iv.slice(0);

        // Remove IV for subsequent blocks
        this._iv = undefined;
      } else {
        var keystream = this._prevBlock;
      }
      cipher.encryptBlock(keystream, 0);

      // Encrypt
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= keystream[i];
      }
    }

    return CFB;
  }();


  return CryptoJS.mode.CFB;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ctr-gladman.js":
/*!*************************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/mode-ctr-gladman.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /** @preserve
                                 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
                                 * derived from CryptoJS.mode.CTR
                                 * Jan Hruby jhruby.web@gmail.com
                                 */
  CryptoJS.mode.CTRGladman = function () {
    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

    function incWord(word)
    {
      if ((word >> 24 & 0xff) === 0xff) {//overflow
        var b1 = word >> 16 & 0xff;
        var b2 = word >> 8 & 0xff;
        var b3 = word & 0xff;

        if (b1 === 0xff) // overflow b1
          {
            b1 = 0;
            if (b2 === 0xff)
            {
              b2 = 0;
              if (b3 === 0xff)
              {
                b3 = 0;
              } else

              {
                ++b3;
              }
            } else

            {
              ++b2;
            }
          } else

        {
          ++b1;
        }

        word = 0;
        word += b1 << 16;
        word += b2 << 8;
        word += b3;
      } else

      {
        word += 0x01 << 24;
      }
      return word;
    }

    function incCounter(counter)
    {
      if ((counter[0] = incWord(counter[0])) === 0)
      {
        // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
        counter[1] = incWord(counter[1]);
      }
      return counter;
    }

    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var counter = this._counter;

        // Generate keystream
        if (iv) {
          counter = this._counter = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }

        incCounter(counter);

        var keystream = counter.slice(0);
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      } });


    CTRGladman.Decryptor = Encryptor;

    return CTRGladman;
  }();




  return CryptoJS.mode.CTRGladman;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ctr.js":
/*!*****************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/mode-ctr.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * Counter block mode.
                                 */
  CryptoJS.mode.CTR = function () {
    var CTR = CryptoJS.lib.BlockCipherMode.extend();

    var Encryptor = CTR.Encryptor = CTR.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var counter = this._counter;

        // Generate keystream
        if (iv) {
          counter = this._counter = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        var keystream = counter.slice(0);
        cipher.encryptBlock(keystream, 0);

        // Increment counter
        counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      } });


    CTR.Decryptor = Encryptor;

    return CTR;
  }();


  return CryptoJS.mode.CTR;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ecb.js":
/*!*****************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/mode-ecb.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * Electronic Codebook block mode.
                                 */
  CryptoJS.mode.ECB = function () {
    var ECB = CryptoJS.lib.BlockCipherMode.extend();

    ECB.Encryptor = ECB.extend({
      processBlock: function processBlock(words, offset) {
        this._cipher.encryptBlock(words, offset);
      } });


    ECB.Decryptor = ECB.extend({
      processBlock: function processBlock(words, offset) {
        this._cipher.decryptBlock(words, offset);
      } });


    return ECB;
  }();


  return CryptoJS.mode.ECB;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\mode-ofb.js":
/*!*****************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/mode-ofb.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * Output Feedback block mode.
                                 */
  CryptoJS.mode.OFB = function () {
    var OFB = CryptoJS.lib.BlockCipherMode.extend();

    var Encryptor = OFB.Encryptor = OFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var keystream = this._keystream;

        // Generate keystream
        if (iv) {
          keystream = this._keystream = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      } });


    OFB.Decryptor = Encryptor;

    return OFB;
  }();


  return CryptoJS.mode.OFB;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-ansix923.js":
/*!*********************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/pad-ansix923.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * ANSI X.923 padding strategy.
                                 */
  CryptoJS.pad.AnsiX923 = {
    pad: function pad(data, blockSize) {
      // Shortcuts
      var dataSigBytes = data.sigBytes;
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

      // Compute last byte position
      var lastBytePos = dataSigBytes + nPaddingBytes - 1;

      // Pad
      data.clamp();
      data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;
      data.sigBytes += nPaddingBytes;
    },

    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    } };



  return CryptoJS.pad.Ansix923;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-iso10126.js":
/*!*********************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/pad-iso10126.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * ISO 10126 padding strategy.
                                 */
  CryptoJS.pad.Iso10126 = {
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

      // Pad
      data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
      concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
    },

    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    } };



  return CryptoJS.pad.Iso10126;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-iso97971.js":
/*!*********************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/pad-iso97971.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * ISO/IEC 9797-1 Padding Method 2.
                                 */
  CryptoJS.pad.Iso97971 = {
    pad: function pad(data, blockSize) {
      // Add 0x80 byte
      data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

      // Zero pad the rest
      CryptoJS.pad.ZeroPadding.pad(data, blockSize);
    },

    unpad: function unpad(data) {
      // Remove zero padding
      CryptoJS.pad.ZeroPadding.unpad(data);

      // Remove one more byte -- the 0x80 byte
      data.sigBytes--;
    } };



  return CryptoJS.pad.Iso97971;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-nopadding.js":
/*!**********************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/pad-nopadding.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * A noop padding strategy.
                                 */
  CryptoJS.pad.NoPadding = {
    pad: function pad() {
    },

    unpad: function unpad() {
    } };



  return CryptoJS.pad.NoPadding;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\pad-zeropadding.js":
/*!************************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/pad-zeropadding.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /**
                                 * Zero padding strategy.
                                 */
  CryptoJS.pad.ZeroPadding = {
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Pad
      data.clamp();
      data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);
    },

    unpad: function unpad(data) {
      // Shortcut
      var dataWords = data.words;

      // Unpad
      var i = data.sigBytes - 1;
      while (!(dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff)) {
        i--;
      }
      data.sigBytes = i + 1;
    } };



  return CryptoJS.pad.ZeroPadding;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\pbkdf2.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/pbkdf2.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./sha1 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha1.js"), __webpack_require__(/*! ./hmac */ "F:\\app\\物联网\\node_modules\\crypto-js\\hmac.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA1 = C_algo.SHA1;
    var HMAC = C_algo.HMAC;

    /**
                             * Password-Based Key Derivation Function 2 algorithm.
                             */
    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
      /**
                                                * Configuration options.
                                                *
                                                * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                                                * @property {Hasher} hasher The hasher to use. Default: SHA1
                                                * @property {number} iterations The number of iterations to perform. Default: 1
                                                */
      cfg: Base.extend({
        keySize: 128 / 32,
        hasher: SHA1,
        iterations: 1 }),


      /**
                           * Initializes a newly created key derivation function.
                           *
                           * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                           *
                           * @example
                           *
                           *     var kdf = CryptoJS.algo.PBKDF2.create();
                           *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                           *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                           */
      init: function init(cfg) {
        this.cfg = this.cfg.extend(cfg);
      },

      /**
          * Computes the Password-Based Key Derivation Function 2.
          *
          * @param {WordArray|string} password The password.
          * @param {WordArray|string} salt A salt.
          *
          * @return {WordArray} The derived key.
          *
          * @example
          *
          *     var key = kdf.compute(password, salt);
          */
      compute: function compute(password, salt) {
        // Shortcut
        var cfg = this.cfg;

        // Init HMAC
        var hmac = HMAC.create(cfg.hasher, password);

        // Initial values
        var derivedKey = WordArray.create();
        var blockIndex = WordArray.create([0x00000001]);

        // Shortcuts
        var derivedKeyWords = derivedKey.words;
        var blockIndexWords = blockIndex.words;
        var keySize = cfg.keySize;
        var iterations = cfg.iterations;

        // Generate key
        while (derivedKeyWords.length < keySize) {
          var block = hmac.update(salt).finalize(blockIndex);
          hmac.reset();

          // Shortcuts
          var blockWords = block.words;
          var blockWordsLength = blockWords.length;

          // Iterations
          var intermediate = block;
          for (var i = 1; i < iterations; i++) {
            intermediate = hmac.finalize(intermediate);
            hmac.reset();

            // Shortcut
            var intermediateWords = intermediate.words;

            // XOR intermediate with block
            for (var j = 0; j < blockWordsLength; j++) {
              blockWords[j] ^= intermediateWords[j];
            }
          }

          derivedKey.concat(block);
          blockIndexWords[0]++;
        }
        derivedKey.sigBytes = keySize * 4;

        return derivedKey;
      } });


    /**
             * Computes the Password-Based Key Derivation Function 2.
             *
             * @param {WordArray|string} password The password.
             * @param {WordArray|string} salt A salt.
             * @param {Object} cfg (Optional) The configuration options to use for this computation.
             *
             * @return {WordArray} The derived key.
             *
             * @static
             *
             * @example
             *
             *     var key = CryptoJS.PBKDF2(password, salt);
             *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
             *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
             */
    C.PBKDF2 = function (password, salt, cfg) {
      return PBKDF2.create(cfg).compute(password, salt);
    };
  })();


  return CryptoJS.PBKDF2;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\rabbit-legacy.js":
/*!**********************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/rabbit-legacy.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./enc-base64 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js"), __webpack_require__(/*! ./md5 */ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    // Reusable objects
    var S = [];
    var C_ = [];
    var G = [];

    /**
                 * Rabbit stream cipher algorithm.
                 *
                 * This is a legacy version that neglected to convert the key to little-endian.
                 * This error doesn't affect the cipher's security,
                 * but it does affect its compatibility with other implementations.
                 */
    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var K = this._key.words;
        var iv = this.cfg.iv;

        // Generate initial state values
        var X = this._X = [
        K[0], K[3] << 16 | K[2] >>> 16,
        K[1], K[0] << 16 | K[3] >>> 16,
        K[2], K[1] << 16 | K[0] >>> 16,
        K[3], K[2] << 16 | K[1] >>> 16];


        // Generate initial counter values
        var C = this._C = [
        K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,
        K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,
        K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,
        K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];


        // Carry bit
        this._b = 0;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }

        // Modify the counters
        for (var i = 0; i < 8; i++) {
          C[i] ^= X[i + 4 & 7];
        }

        // IV setup
        if (iv) {
          // Shortcuts
          var IV = iv.words;
          var IV_0 = IV[0];
          var IV_1 = IV[1];

          // Generate four subvectors
          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
          var i1 = i0 >>> 16 | i2 & 0xffff0000;
          var i3 = i2 << 16 | i0 & 0x0000ffff;

          // Modify counter values
          C[0] ^= i0;
          C[1] ^= i1;
          C[2] ^= i2;
          C[3] ^= i3;
          C[4] ^= i0;
          C[5] ^= i1;
          C[6] ^= i2;
          C[7] ^= i3;

          // Iterate the system four times
          for (var i = 0; i < 4; i++) {
            nextState.call(this);
          }
        }
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var X = this._X;

        // Iterate the system
        nextState.call(this);

        // Generate four keystream words
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

        for (var i = 0; i < 4; i++) {
          // Swap endian
          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |
          (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

          // Encrypt
          M[offset + i] ^= S[i];
        }
      },

      blockSize: 128 / 32,

      ivSize: 64 / 32 });


    function nextState() {
      // Shortcuts
      var X = this._X;
      var C = this._C;

      // Save old counter values
      for (var i = 0; i < 8; i++) {
        C_[i] = C[i];
      }

      // Calculate new counter values
      C[0] = C[0] + 0x4d34d34d + this._b | 0;
      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

      // Calculate the g-values
      for (var i = 0; i < 8; i++) {
        var gx = X[i] + C[i];

        // Construct high and low argument for squaring
        var ga = gx & 0xffff;
        var gb = gx >>> 16;

        // Calculate high and low result of squaring
        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

        // High XOR low
        G[i] = gh ^ gl;
      }

      // Calculate new state values
      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
       */
    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
  })();


  return CryptoJS.RabbitLegacy;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\rabbit.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/rabbit.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./enc-base64 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js"), __webpack_require__(/*! ./md5 */ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    // Reusable objects
    var S = [];
    var C_ = [];
    var G = [];

    /**
                 * Rabbit stream cipher algorithm
                 */
    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var K = this._key.words;
        var iv = this.cfg.iv;

        // Swap endian
        for (var i = 0; i < 4; i++) {
          K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff |
          (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;
        }

        // Generate initial state values
        var X = this._X = [
        K[0], K[3] << 16 | K[2] >>> 16,
        K[1], K[0] << 16 | K[3] >>> 16,
        K[2], K[1] << 16 | K[0] >>> 16,
        K[3], K[2] << 16 | K[1] >>> 16];


        // Generate initial counter values
        var C = this._C = [
        K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,
        K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,
        K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,
        K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];


        // Carry bit
        this._b = 0;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }

        // Modify the counters
        for (var i = 0; i < 8; i++) {
          C[i] ^= X[i + 4 & 7];
        }

        // IV setup
        if (iv) {
          // Shortcuts
          var IV = iv.words;
          var IV_0 = IV[0];
          var IV_1 = IV[1];

          // Generate four subvectors
          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
          var i1 = i0 >>> 16 | i2 & 0xffff0000;
          var i3 = i2 << 16 | i0 & 0x0000ffff;

          // Modify counter values
          C[0] ^= i0;
          C[1] ^= i1;
          C[2] ^= i2;
          C[3] ^= i3;
          C[4] ^= i0;
          C[5] ^= i1;
          C[6] ^= i2;
          C[7] ^= i3;

          // Iterate the system four times
          for (var i = 0; i < 4; i++) {
            nextState.call(this);
          }
        }
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var X = this._X;

        // Iterate the system
        nextState.call(this);

        // Generate four keystream words
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

        for (var i = 0; i < 4; i++) {
          // Swap endian
          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |
          (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

          // Encrypt
          M[offset + i] ^= S[i];
        }
      },

      blockSize: 128 / 32,

      ivSize: 64 / 32 });


    function nextState() {
      // Shortcuts
      var X = this._X;
      var C = this._C;

      // Save old counter values
      for (var i = 0; i < 8; i++) {
        C_[i] = C[i];
      }

      // Calculate new counter values
      C[0] = C[0] + 0x4d34d34d + this._b | 0;
      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

      // Calculate the g-values
      for (var i = 0; i < 8; i++) {
        var gx = X[i] + C[i];

        // Construct high and low argument for squaring
        var ga = gx & 0xffff;
        var gb = gx >>> 16;

        // Calculate high and low result of squaring
        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

        // High XOR low
        G[i] = gh ^ gl;
      }

      // Calculate new state values
      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
       */
    C.Rabbit = StreamCipher._createHelper(Rabbit);
  })();


  return CryptoJS.Rabbit;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\rc4.js":
/*!************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/rc4.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./enc-base64 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js"), __webpack_require__(/*! ./md5 */ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    /**
                          * RC4 stream cipher algorithm.
                          */
    var RC4 = C_algo.RC4 = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;
        var keySigBytes = key.sigBytes;

        // Init sbox
        var S = this._S = [];
        for (var i = 0; i < 256; i++) {
          S[i] = i;
        }

        // Key setup
        for (var i = 0, j = 0; i < 256; i++) {
          var keyByteIndex = i % keySigBytes;
          var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;

          j = (j + S[i] + keyByte) % 256;

          // Swap
          var t = S[i];
          S[i] = S[j];
          S[j] = t;
        }

        // Counters
        this._i = this._j = 0;
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        M[offset] ^= generateKeystreamWord.call(this);
      },

      keySize: 256 / 32,

      ivSize: 0 });


    function generateKeystreamWord() {
      // Shortcuts
      var S = this._S;
      var i = this._i;
      var j = this._j;

      // Generate keystream word
      var keystreamWord = 0;
      for (var n = 0; n < 4; n++) {
        i = (i + 1) % 256;
        j = (j + S[i]) % 256;

        // Swap
        var t = S[i];
        S[i] = S[j];
        S[j] = t;

        keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;
      }

      // Update counters
      this._i = i;
      this._j = j;

      return keystreamWord;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
       */
    C.RC4 = StreamCipher._createHelper(RC4);

    /**
                                              * Modified RC4 stream cipher algorithm.
                                              */
    var RC4Drop = C_algo.RC4Drop = RC4.extend({
      /**
                                                 * Configuration options.
                                                 *
                                                 * @property {number} drop The number of keystream words to drop. Default 192
                                                 */
      cfg: RC4.cfg.extend({
        drop: 192 }),


      _doReset: function _doReset() {
        RC4._doReset.call(this);

        // Drop
        for (var i = this.cfg.drop; i > 0; i--) {
          generateKeystreamWord.call(this);
        }
      } });


    /**
             * Shortcut functions to the cipher's object interface.
             *
             * @example
             *
             *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
             *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
             */
    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
  })();


  return CryptoJS.RC4;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\ripemd160.js":
/*!******************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/ripemd160.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  /** @preserve
                                (c) 2012 by Cédric Mesnil. All rights reserved.
                                	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                                	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                                    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                                	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                */




  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Constants table
    var _zl = WordArray.create([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
    var _zr = WordArray.create([
    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
    var _sl = WordArray.create([
    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
    var _sr = WordArray.create([
    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);

    var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
    var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

    /**
                                                                                               * RIPEMD160 hash algorithm.
                                                                                               */
    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {

        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];

          // Swap
          M[offset_i] =
          (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |
          (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;

        }
        // Shortcut
        var H = this._hash.words;
        var hl = _hl.words;
        var hr = _hr.words;
        var zl = _zl.words;
        var zr = _zr.words;
        var sl = _sl.words;
        var sr = _sr.words;

        // Working variables
        var al, bl, cl, dl, el;
        var ar, br, cr, dr, er;

        ar = al = H[0];
        br = bl = H[1];
        cr = cl = H[2];
        dr = dl = H[3];
        er = el = H[4];
        // Computation
        var t;
        for (var i = 0; i < 80; i += 1) {
          t = al + M[offset + zl[i]] | 0;
          if (i < 16) {
            t += f1(bl, cl, dl) + hl[0];
          } else if (i < 32) {
            t += f2(bl, cl, dl) + hl[1];
          } else if (i < 48) {
            t += f3(bl, cl, dl) + hl[2];
          } else if (i < 64) {
            t += f4(bl, cl, dl) + hl[3];
          } else {// if (i<80) {
            t += f5(bl, cl, dl) + hl[4];
          }
          t = t | 0;
          t = rotl(t, sl[i]);
          t = t + el | 0;
          al = el;
          el = dl;
          dl = rotl(cl, 10);
          cl = bl;
          bl = t;

          t = ar + M[offset + zr[i]] | 0;
          if (i < 16) {
            t += f5(br, cr, dr) + hr[0];
          } else if (i < 32) {
            t += f4(br, cr, dr) + hr[1];
          } else if (i < 48) {
            t += f3(br, cr, dr) + hr[2];
          } else if (i < 64) {
            t += f2(br, cr, dr) + hr[3];
          } else {// if (i<80) {
            t += f1(br, cr, dr) + hr[4];
          }
          t = t | 0;
          t = rotl(t, sr[i]);
          t = t + er | 0;
          ar = er;
          er = dr;
          dr = rotl(cr, 10);
          cr = br;
          br = t;
        }
        // Intermediate hash value
        t = H[1] + cl + dr | 0;
        H[1] = H[2] + dl + er | 0;
        H[2] = H[3] + el + ar | 0;
        H[3] = H[4] + al + br | 0;
        H[4] = H[0] + bl + cr | 0;
        H[0] = t;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =
        (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff |
        (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;

        data.sigBytes = (dataWords.length + 1) * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var hash = this._hash;
        var H = hash.words;

        // Swap endian
        for (var i = 0; i < 5; i++) {
          // Shortcut
          var H_i = H[i];

          // Swap
          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |
          (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        }

        // Return final computed hash
        return hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });



    function f1(x, y, z) {
      return x ^ y ^ z;

    }

    function f2(x, y, z) {
      return x & y | ~x & z;
    }

    function f3(x, y, z) {
      return (x | ~y) ^ z;
    }

    function f4(x, y, z) {
      return x & z | y & ~z;
    }

    function f5(x, y, z) {
      return x ^ (y | ~z);

    }

    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }


    /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.RIPEMD160('message');
       *     var hash = CryptoJS.RIPEMD160(wordArray);
       */
    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

    /**
                                                    * Shortcut function to the HMAC's object interface.
                                                    *
                                                    * @param {WordArray|string} message The message to hash.
                                                    * @param {WordArray|string} key The secret key.
                                                    *
                                                    * @return {WordArray} The HMAC.
                                                    *
                                                    * @static
                                                    *
                                                    * @example
                                                    *
                                                    *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
                                                    */
    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
  })(Math);


  return CryptoJS.RIPEMD160;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\sha1.js":
/*!*************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/sha1.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Reusable object
    var W = [];

    /**
                 * SHA-1 hash algorithm.
                 */
    var SHA1 = C_algo.SHA1 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([
        0x67452301, 0xefcdab89,
        0x98badcfe, 0x10325476,
        0xc3d2e1f0]);

      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words;

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];

        // Computation
        for (var i = 0; i < 80; i++) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = n << 1 | n >>> 31;
          }

          var t = (a << 5 | a >>> 27) + e + W[i];
          if (i < 20) {
            t += (b & c | ~b & d) + 0x5a827999;
          } else if (i < 40) {
            t += (b ^ c ^ d) + 0x6ed9eba1;
          } else if (i < 60) {
            t += (b & c | b & d | c & d) - 0x70e44324;
          } else /* if (i < 80) */{
              t += (b ^ c ^ d) - 0x359d3e2a;
            }

          e = d;
          d = c;
          c = b << 30 | b >>> 2;
          b = a;
          a = t;
        }

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Return final computed hash
        return this._hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA1('message');
             *     var hash = CryptoJS.SHA1(wordArray);
             */
    C.SHA1 = Hasher._createHelper(SHA1);

    /**
                                          * Shortcut function to the HMAC's object interface.
                                          *
                                          * @param {WordArray|string} message The message to hash.
                                          * @param {WordArray|string} key The secret key.
                                          *
                                          * @return {WordArray} The HMAC.
                                          *
                                          * @static
                                          *
                                          * @example
                                          *
                                          *     var hmac = CryptoJS.HmacSHA1(message, key);
                                          */
    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
  })();


  return CryptoJS.SHA1;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\sha224.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/sha224.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./sha256 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha256.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA256 = C_algo.SHA256;

    /**
                                 * SHA-224 hash algorithm.
                                 */
    var SHA224 = C_algo.SHA224 = SHA256.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([
        0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
        0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);

      },

      _doFinalize: function _doFinalize() {
        var hash = SHA256._doFinalize.call(this);

        hash.sigBytes -= 4;

        return hash;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA224('message');
             *     var hash = CryptoJS.SHA224(wordArray);
             */
    C.SHA224 = SHA256._createHelper(SHA224);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA224(message, key);
                                              */
    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
  })();


  return CryptoJS.SHA224;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\sha256.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/sha256.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Initialization and round constants tables
    var H = [];
    var K = [];

    // Compute constants
    (function () {
      function isPrime(n) {
        var sqrtN = Math.sqrt(n);
        for (var factor = 2; factor <= sqrtN; factor++) {
          if (!(n % factor)) {
            return false;
          }
        }

        return true;
      }

      function getFractionalBits(n) {
        return (n - (n | 0)) * 0x100000000 | 0;
      }

      var n = 2;
      var nPrime = 0;
      while (nPrime < 64) {
        if (isPrime(n)) {
          if (nPrime < 8) {
            H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
          }
          K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

          nPrime++;
        }

        n++;
      }
    })();

    // Reusable object
    var W = [];

    /**
                 * SHA-256 hash algorithm.
                 */
    var SHA256 = C_algo.SHA256 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init(H.slice(0));
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words;

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];
        var f = H[5];
        var g = H[6];
        var h = H[7];

        // Computation
        for (var i = 0; i < 64; i++) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var gamma0x = W[i - 15];
            var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (
            gamma0x << 14 | gamma0x >>> 18) ^
            gamma0x >>> 3;

            var gamma1x = W[i - 2];
            var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (
            gamma1x << 13 | gamma1x >>> 19) ^
            gamma1x >>> 10;

            W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
          }

          var ch = e & f ^ ~e & g;
          var maj = a & b ^ a & c ^ b & c;

          var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
          var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);

          var t1 = h + sigma1 + ch + K[i] + W[i];
          var t2 = sigma0 + maj;

          h = g;
          g = f;
          f = e;
          e = d + t1 | 0;
          d = c;
          c = b;
          b = a;
          a = t1 + t2 | 0;
        }

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
        H[5] = H[5] + f | 0;
        H[6] = H[6] + g | 0;
        H[7] = H[7] + h | 0;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Return final computed hash
        return this._hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA256('message');
             *     var hash = CryptoJS.SHA256(wordArray);
             */
    C.SHA256 = Hasher._createHelper(SHA256);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA256(message, key);
                                              */
    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
  })(Math);


  return CryptoJS.SHA256;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\sha3.js":
/*!*************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/sha3.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./x64-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\x64-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var C_algo = C.algo;

    // Constants tables
    var RHO_OFFSETS = [];
    var PI_INDEXES = [];
    var ROUND_CONSTANTS = [];

    // Compute Constants
    (function () {
      // Compute rho offset constants
      var x = 1,y = 0;
      for (var t = 0; t < 24; t++) {
        RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;

        var newX = y % 5;
        var newY = (2 * x + 3 * y) % 5;
        x = newX;
        y = newY;
      }

      // Compute pi index constants
      for (var x = 0; x < 5; x++) {
        for (var y = 0; y < 5; y++) {
          PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;
        }
      }

      // Compute round constants
      var LFSR = 0x01;
      for (var i = 0; i < 24; i++) {
        var roundConstantMsw = 0;
        var roundConstantLsw = 0;

        for (var j = 0; j < 7; j++) {
          if (LFSR & 0x01) {
            var bitPosition = (1 << j) - 1;
            if (bitPosition < 32) {
              roundConstantLsw ^= 1 << bitPosition;
            } else /* if (bitPosition >= 32) */{
                roundConstantMsw ^= 1 << bitPosition - 32;
              }
          }

          // Compute next LFSR
          if (LFSR & 0x80) {
            // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
            LFSR = LFSR << 1 ^ 0x71;
          } else {
            LFSR <<= 1;
          }
        }

        ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
      }
    })();

    // Reusable objects for temporary values
    var T = [];
    (function () {
      for (var i = 0; i < 25; i++) {
        T[i] = X64Word.create();
      }
    })();

    /**
           * SHA-3 hash algorithm.
           */
    var SHA3 = C_algo.SHA3 = Hasher.extend({
      /**
                                              * Configuration options.
                                              *
                                              * @property {number} outputLength
                                              *   The desired number of bits in the output hash.
                                              *   Only values permitted are: 224, 256, 384, 512.
                                              *   Default: 512
                                              */
      cfg: Hasher.cfg.extend({
        outputLength: 512 }),


      _doReset: function _doReset() {
        var state = this._state = [];
        for (var i = 0; i < 25; i++) {
          state[i] = new X64Word.init();
        }

        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcuts
        var state = this._state;
        var nBlockSizeLanes = this.blockSize / 2;

        // Absorb
        for (var i = 0; i < nBlockSizeLanes; i++) {
          // Shortcuts
          var M2i = M[offset + 2 * i];
          var M2i1 = M[offset + 2 * i + 1];

          // Swap endian
          M2i =
          (M2i << 8 | M2i >>> 24) & 0x00ff00ff |
          (M2i << 24 | M2i >>> 8) & 0xff00ff00;

          M2i1 =
          (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff |
          (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;


          // Absorb message into state
          var lane = state[i];
          lane.high ^= M2i1;
          lane.low ^= M2i;
        }

        // Rounds
        for (var round = 0; round < 24; round++) {
          // Theta
          for (var x = 0; x < 5; x++) {
            // Mix column lanes
            var tMsw = 0,tLsw = 0;
            for (var y = 0; y < 5; y++) {
              var lane = state[x + 5 * y];
              tMsw ^= lane.high;
              tLsw ^= lane.low;
            }

            // Temporary values
            var Tx = T[x];
            Tx.high = tMsw;
            Tx.low = tLsw;
          }
          for (var x = 0; x < 5; x++) {
            // Shortcuts
            var Tx4 = T[(x + 4) % 5];
            var Tx1 = T[(x + 1) % 5];
            var Tx1Msw = Tx1.high;
            var Tx1Lsw = Tx1.low;

            // Mix surrounding columns
            var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);
            var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);
            for (var y = 0; y < 5; y++) {
              var lane = state[x + 5 * y];
              lane.high ^= tMsw;
              lane.low ^= tLsw;
            }
          }

          // Rho Pi
          for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
            // Shortcuts
            var lane = state[laneIndex];
            var laneMsw = lane.high;
            var laneLsw = lane.low;
            var rhoOffset = RHO_OFFSETS[laneIndex];

            // Rotate lanes
            if (rhoOffset < 32) {
              var tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;
              var tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;
            } else /* if (rhoOffset >= 32) */{
                var tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;
                var tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;
              }

            // Transpose lanes
            var TPiLane = T[PI_INDEXES[laneIndex]];
            TPiLane.high = tMsw;
            TPiLane.low = tLsw;
          }

          // Rho pi at x = y = 0
          var T0 = T[0];
          var state0 = state[0];
          T0.high = state0.high;
          T0.low = state0.low;

          // Chi
          for (var x = 0; x < 5; x++) {
            for (var y = 0; y < 5; y++) {
              // Shortcuts
              var laneIndex = x + 5 * y;
              var lane = state[laneIndex];
              var TLane = T[laneIndex];
              var Tx1Lane = T[(x + 1) % 5 + 5 * y];
              var Tx2Lane = T[(x + 2) % 5 + 5 * y];

              // Mix rows
              lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;
              lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;
            }
          }

          // Iota
          var lane = state[0];
          var roundConstant = ROUND_CONSTANTS[round];
          lane.high ^= roundConstant.high;
          lane.low ^= roundConstant.low;;
        }
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;
        var blockSizeBits = this.blockSize * 32;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;
        dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var state = this._state;
        var outputLengthBytes = this.cfg.outputLength / 8;
        var outputLengthLanes = outputLengthBytes / 8;

        // Squeeze
        var hashWords = [];
        for (var i = 0; i < outputLengthLanes; i++) {
          // Shortcuts
          var lane = state[i];
          var laneMsw = lane.high;
          var laneLsw = lane.low;

          // Swap endian
          laneMsw =
          (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff |
          (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;

          laneLsw =
          (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff |
          (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;


          // Squeeze state to retrieve hash
          hashWords.push(laneLsw);
          hashWords.push(laneMsw);
        }

        // Return final computed hash
        return new WordArray.init(hashWords, outputLengthBytes);
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);

        var state = clone._state = this._state.slice(0);
        for (var i = 0; i < 25; i++) {
          state[i] = state[i].clone();
        }

        return clone;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA3('message');
             *     var hash = CryptoJS.SHA3(wordArray);
             */
    C.SHA3 = Hasher._createHelper(SHA3);

    /**
                                          * Shortcut function to the HMAC's object interface.
                                          *
                                          * @param {WordArray|string} message The message to hash.
                                          * @param {WordArray|string} key The secret key.
                                          *
                                          * @return {WordArray} The HMAC.
                                          *
                                          * @static
                                          *
                                          * @example
                                          *
                                          *     var hmac = CryptoJS.HmacSHA3(message, key);
                                          */
    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
  })(Math);


  return CryptoJS.SHA3;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\sha384.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/sha384.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./x64-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\x64-core.js"), __webpack_require__(/*! ./sha512 */ "F:\\app\\物联网\\node_modules\\crypto-js\\sha512.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;
    var SHA512 = C_algo.SHA512;

    /**
                                 * SHA-384 hash algorithm.
                                 */
    var SHA384 = C_algo.SHA384 = SHA512.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([
        new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
        new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
        new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
        new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);

      },

      _doFinalize: function _doFinalize() {
        var hash = SHA512._doFinalize.call(this);

        hash.sigBytes -= 16;

        return hash;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA384('message');
             *     var hash = CryptoJS.SHA384(wordArray);
             */
    C.SHA384 = SHA512._createHelper(SHA384);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA384(message, key);
                                              */
    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
  })();


  return CryptoJS.SHA384;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\sha512.js":
/*!***************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/sha512.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./x64-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\x64-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;

    function X64Word_create() {
      return X64Word.create.apply(X64Word, arguments);
    }

    // Constants
    var K = [
    X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
    X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
    X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
    X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
    X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
    X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
    X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
    X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
    X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
    X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
    X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
    X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
    X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
    X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
    X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
    X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
    X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
    X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
    X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
    X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
    X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
    X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
    X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
    X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
    X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
    X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
    X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
    X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
    X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
    X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
    X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
    X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
    X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
    X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
    X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
    X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
    X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
    X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
    X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
    X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];


    // Reusable objects
    var W = [];
    (function () {
      for (var i = 0; i < 80; i++) {
        W[i] = X64Word_create();
      }
    })();

    /**
           * SHA-512 hash algorithm.
           */
    var SHA512 = C_algo.SHA512 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([
        new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
        new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
        new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
        new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);

      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcuts
        var H = this._hash.words;

        var H0 = H[0];
        var H1 = H[1];
        var H2 = H[2];
        var H3 = H[3];
        var H4 = H[4];
        var H5 = H[5];
        var H6 = H[6];
        var H7 = H[7];

        var H0h = H0.high;
        var H0l = H0.low;
        var H1h = H1.high;
        var H1l = H1.low;
        var H2h = H2.high;
        var H2l = H2.low;
        var H3h = H3.high;
        var H3l = H3.low;
        var H4h = H4.high;
        var H4l = H4.low;
        var H5h = H5.high;
        var H5l = H5.low;
        var H6h = H6.high;
        var H6l = H6.low;
        var H7h = H7.high;
        var H7l = H7.low;

        // Working variables
        var ah = H0h;
        var al = H0l;
        var bh = H1h;
        var bl = H1l;
        var ch = H2h;
        var cl = H2l;
        var dh = H3h;
        var dl = H3l;
        var eh = H4h;
        var el = H4l;
        var fh = H5h;
        var fl = H5l;
        var gh = H6h;
        var gl = H6l;
        var hh = H7h;
        var hl = H7l;

        // Rounds
        for (var i = 0; i < 80; i++) {
          // Shortcut
          var Wi = W[i];

          // Extend message
          if (i < 16) {
            var Wih = Wi.high = M[offset + i * 2] | 0;
            var Wil = Wi.low = M[offset + i * 2 + 1] | 0;
          } else {
            // Gamma0
            var gamma0x = W[i - 15];
            var gamma0xh = gamma0x.high;
            var gamma0xl = gamma0x.low;
            var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
            var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);

            // Gamma1
            var gamma1x = W[i - 2];
            var gamma1xh = gamma1x.high;
            var gamma1xl = gamma1x.low;
            var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
            var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);

            // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
            var Wi7 = W[i - 7];
            var Wi7h = Wi7.high;
            var Wi7l = Wi7.low;

            var Wi16 = W[i - 16];
            var Wi16h = Wi16.high;
            var Wi16l = Wi16.low;

            var Wil = gamma0l + Wi7l;
            var Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
            var Wil = Wil + gamma1l;
            var Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
            var Wil = Wil + Wi16l;
            var Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);

            Wi.high = Wih;
            Wi.low = Wil;
          }

          var chh = eh & fh ^ ~eh & gh;
          var chl = el & fl ^ ~el & gl;
          var majh = ah & bh ^ ah & ch ^ bh & ch;
          var majl = al & bl ^ al & cl ^ bl & cl;

          var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
          var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
          var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
          var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);

          // t1 = h + sigma1 + ch + K[i] + W[i]
          var Ki = K[i];
          var Kih = Ki.high;
          var Kil = Ki.low;

          var t1l = hl + sigma1l;
          var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
          var t1l = t1l + chl;
          var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
          var t1l = t1l + Kil;
          var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
          var t1l = t1l + Wil;
          var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);

          // t2 = sigma0 + maj
          var t2l = sigma0l + majl;
          var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);

          // Update working variables
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          el = dl + t1l | 0;
          eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          al = t1l + t2l | 0;
          ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
        }

        // Intermediate hash value
        H0l = H0.low = H0l + al;
        H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
        H1l = H1.low = H1l + bl;
        H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
        H2l = H2.low = H2l + cl;
        H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
        H3l = H3.low = H3l + dl;
        H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
        H4l = H4.low = H4l + el;
        H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
        H5l = H5.low = H5l + fl;
        H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
        H6l = H6.low = H6l + gl;
        H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
        H7l = H7.low = H7l + hl;
        H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Convert hash to 32-bit word array before returning
        var hash = this._hash.toX32();

        // Return final computed hash
        return hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      },

      blockSize: 1024 / 32 });


    /**
                                * Shortcut function to the hasher's object interface.
                                *
                                * @param {WordArray|string} message The message to hash.
                                *
                                * @return {WordArray} The hash.
                                *
                                * @static
                                *
                                * @example
                                *
                                *     var hash = CryptoJS.SHA512('message');
                                *     var hash = CryptoJS.SHA512(wordArray);
                                */
    C.SHA512 = Hasher._createHelper(SHA512);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA512(message, key);
                                              */
    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
  })();


  return CryptoJS.SHA512;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\tripledes.js":
/*!******************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/tripledes.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"), __webpack_require__(/*! ./enc-base64 */ "F:\\app\\物联网\\node_modules\\crypto-js\\enc-base64.js"), __webpack_require__(/*! ./md5 */ "F:\\app\\物联网\\node_modules\\crypto-js\\md5.js"), __webpack_require__(/*! ./evpkdf */ "F:\\app\\物联网\\node_modules\\crypto-js\\evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "F:\\app\\物联网\\node_modules\\crypto-js\\cipher-core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;

    // Permuted Choice 1 constants
    var PC1 = [
    57, 49, 41, 33, 25, 17, 9, 1,
    58, 50, 42, 34, 26, 18, 10, 2,
    59, 51, 43, 35, 27, 19, 11, 3,
    60, 52, 44, 36, 63, 55, 47, 39,
    31, 23, 15, 7, 62, 54, 46, 38,
    30, 22, 14, 6, 61, 53, 45, 37,
    29, 21, 13, 5, 28, 20, 12, 4];


    // Permuted Choice 2 constants
    var PC2 = [
    14, 17, 11, 24, 1, 5,
    3, 28, 15, 6, 21, 10,
    23, 19, 12, 4, 26, 8,
    16, 7, 27, 20, 13, 2,
    41, 52, 31, 37, 47, 55,
    30, 40, 51, 45, 33, 48,
    44, 49, 39, 56, 34, 53,
    46, 42, 50, 36, 29, 32];


    // Cumulative bit shift constants
    var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

    // SBOXes and round permutation constants
    var SBOX_P = [
    {
      0x0: 0x808200,
      0x10000000: 0x8000,
      0x20000000: 0x808002,
      0x30000000: 0x2,
      0x40000000: 0x200,
      0x50000000: 0x808202,
      0x60000000: 0x800202,
      0x70000000: 0x800000,
      0x80000000: 0x202,
      0x90000000: 0x800200,
      0xa0000000: 0x8200,
      0xb0000000: 0x808000,
      0xc0000000: 0x8002,
      0xd0000000: 0x800002,
      0xe0000000: 0x0,
      0xf0000000: 0x8202,
      0x8000000: 0x0,
      0x18000000: 0x808202,
      0x28000000: 0x8202,
      0x38000000: 0x8000,
      0x48000000: 0x808200,
      0x58000000: 0x200,
      0x68000000: 0x808002,
      0x78000000: 0x2,
      0x88000000: 0x800200,
      0x98000000: 0x8200,
      0xa8000000: 0x808000,
      0xb8000000: 0x800202,
      0xc8000000: 0x800002,
      0xd8000000: 0x8002,
      0xe8000000: 0x202,
      0xf8000000: 0x800000,
      0x1: 0x8000,
      0x10000001: 0x2,
      0x20000001: 0x808200,
      0x30000001: 0x800000,
      0x40000001: 0x808002,
      0x50000001: 0x8200,
      0x60000001: 0x200,
      0x70000001: 0x800202,
      0x80000001: 0x808202,
      0x90000001: 0x808000,
      0xa0000001: 0x800002,
      0xb0000001: 0x8202,
      0xc0000001: 0x202,
      0xd0000001: 0x800200,
      0xe0000001: 0x8002,
      0xf0000001: 0x0,
      0x8000001: 0x808202,
      0x18000001: 0x808000,
      0x28000001: 0x800000,
      0x38000001: 0x200,
      0x48000001: 0x8000,
      0x58000001: 0x800002,
      0x68000001: 0x2,
      0x78000001: 0x8202,
      0x88000001: 0x8002,
      0x98000001: 0x800202,
      0xa8000001: 0x202,
      0xb8000001: 0x808200,
      0xc8000001: 0x800200,
      0xd8000001: 0x0,
      0xe8000001: 0x8200,
      0xf8000001: 0x808002 },

    {
      0x0: 0x40084010,
      0x1000000: 0x4000,
      0x2000000: 0x80000,
      0x3000000: 0x40080010,
      0x4000000: 0x40000010,
      0x5000000: 0x40084000,
      0x6000000: 0x40004000,
      0x7000000: 0x10,
      0x8000000: 0x84000,
      0x9000000: 0x40004010,
      0xa000000: 0x40000000,
      0xb000000: 0x84010,
      0xc000000: 0x80010,
      0xd000000: 0x0,
      0xe000000: 0x4010,
      0xf000000: 0x40080000,
      0x800000: 0x40004000,
      0x1800000: 0x84010,
      0x2800000: 0x10,
      0x3800000: 0x40004010,
      0x4800000: 0x40084010,
      0x5800000: 0x40000000,
      0x6800000: 0x80000,
      0x7800000: 0x40080010,
      0x8800000: 0x80010,
      0x9800000: 0x0,
      0xa800000: 0x4000,
      0xb800000: 0x40080000,
      0xc800000: 0x40000010,
      0xd800000: 0x84000,
      0xe800000: 0x40084000,
      0xf800000: 0x4010,
      0x10000000: 0x0,
      0x11000000: 0x40080010,
      0x12000000: 0x40004010,
      0x13000000: 0x40084000,
      0x14000000: 0x40080000,
      0x15000000: 0x10,
      0x16000000: 0x84010,
      0x17000000: 0x4000,
      0x18000000: 0x4010,
      0x19000000: 0x80000,
      0x1a000000: 0x80010,
      0x1b000000: 0x40000010,
      0x1c000000: 0x84000,
      0x1d000000: 0x40004000,
      0x1e000000: 0x40000000,
      0x1f000000: 0x40084010,
      0x10800000: 0x84010,
      0x11800000: 0x80000,
      0x12800000: 0x40080000,
      0x13800000: 0x4000,
      0x14800000: 0x40004000,
      0x15800000: 0x40084010,
      0x16800000: 0x10,
      0x17800000: 0x40000000,
      0x18800000: 0x40084000,
      0x19800000: 0x40000010,
      0x1a800000: 0x40004010,
      0x1b800000: 0x80010,
      0x1c800000: 0x0,
      0x1d800000: 0x4010,
      0x1e800000: 0x40080010,
      0x1f800000: 0x84000 },

    {
      0x0: 0x104,
      0x100000: 0x0,
      0x200000: 0x4000100,
      0x300000: 0x10104,
      0x400000: 0x10004,
      0x500000: 0x4000004,
      0x600000: 0x4010104,
      0x700000: 0x4010000,
      0x800000: 0x4000000,
      0x900000: 0x4010100,
      0xa00000: 0x10100,
      0xb00000: 0x4010004,
      0xc00000: 0x4000104,
      0xd00000: 0x10000,
      0xe00000: 0x4,
      0xf00000: 0x100,
      0x80000: 0x4010100,
      0x180000: 0x4010004,
      0x280000: 0x0,
      0x380000: 0x4000100,
      0x480000: 0x4000004,
      0x580000: 0x10000,
      0x680000: 0x10004,
      0x780000: 0x104,
      0x880000: 0x4,
      0x980000: 0x100,
      0xa80000: 0x4010000,
      0xb80000: 0x10104,
      0xc80000: 0x10100,
      0xd80000: 0x4000104,
      0xe80000: 0x4010104,
      0xf80000: 0x4000000,
      0x1000000: 0x4010100,
      0x1100000: 0x10004,
      0x1200000: 0x10000,
      0x1300000: 0x4000100,
      0x1400000: 0x100,
      0x1500000: 0x4010104,
      0x1600000: 0x4000004,
      0x1700000: 0x0,
      0x1800000: 0x4000104,
      0x1900000: 0x4000000,
      0x1a00000: 0x4,
      0x1b00000: 0x10100,
      0x1c00000: 0x4010000,
      0x1d00000: 0x104,
      0x1e00000: 0x10104,
      0x1f00000: 0x4010004,
      0x1080000: 0x4000000,
      0x1180000: 0x104,
      0x1280000: 0x4010100,
      0x1380000: 0x0,
      0x1480000: 0x10004,
      0x1580000: 0x4000100,
      0x1680000: 0x100,
      0x1780000: 0x4010004,
      0x1880000: 0x10000,
      0x1980000: 0x4010104,
      0x1a80000: 0x10104,
      0x1b80000: 0x4000004,
      0x1c80000: 0x4000104,
      0x1d80000: 0x4010000,
      0x1e80000: 0x4,
      0x1f80000: 0x10100 },

    {
      0x0: 0x80401000,
      0x10000: 0x80001040,
      0x20000: 0x401040,
      0x30000: 0x80400000,
      0x40000: 0x0,
      0x50000: 0x401000,
      0x60000: 0x80000040,
      0x70000: 0x400040,
      0x80000: 0x80000000,
      0x90000: 0x400000,
      0xa0000: 0x40,
      0xb0000: 0x80001000,
      0xc0000: 0x80400040,
      0xd0000: 0x1040,
      0xe0000: 0x1000,
      0xf0000: 0x80401040,
      0x8000: 0x80001040,
      0x18000: 0x40,
      0x28000: 0x80400040,
      0x38000: 0x80001000,
      0x48000: 0x401000,
      0x58000: 0x80401040,
      0x68000: 0x0,
      0x78000: 0x80400000,
      0x88000: 0x1000,
      0x98000: 0x80401000,
      0xa8000: 0x400000,
      0xb8000: 0x1040,
      0xc8000: 0x80000000,
      0xd8000: 0x400040,
      0xe8000: 0x401040,
      0xf8000: 0x80000040,
      0x100000: 0x400040,
      0x110000: 0x401000,
      0x120000: 0x80000040,
      0x130000: 0x0,
      0x140000: 0x1040,
      0x150000: 0x80400040,
      0x160000: 0x80401000,
      0x170000: 0x80001040,
      0x180000: 0x80401040,
      0x190000: 0x80000000,
      0x1a0000: 0x80400000,
      0x1b0000: 0x401040,
      0x1c0000: 0x80001000,
      0x1d0000: 0x400000,
      0x1e0000: 0x40,
      0x1f0000: 0x1000,
      0x108000: 0x80400000,
      0x118000: 0x80401040,
      0x128000: 0x0,
      0x138000: 0x401000,
      0x148000: 0x400040,
      0x158000: 0x80000000,
      0x168000: 0x80001040,
      0x178000: 0x40,
      0x188000: 0x80000040,
      0x198000: 0x1000,
      0x1a8000: 0x80001000,
      0x1b8000: 0x80400040,
      0x1c8000: 0x1040,
      0x1d8000: 0x80401000,
      0x1e8000: 0x400000,
      0x1f8000: 0x401040 },

    {
      0x0: 0x80,
      0x1000: 0x1040000,
      0x2000: 0x40000,
      0x3000: 0x20000000,
      0x4000: 0x20040080,
      0x5000: 0x1000080,
      0x6000: 0x21000080,
      0x7000: 0x40080,
      0x8000: 0x1000000,
      0x9000: 0x20040000,
      0xa000: 0x20000080,
      0xb000: 0x21040080,
      0xc000: 0x21040000,
      0xd000: 0x0,
      0xe000: 0x1040080,
      0xf000: 0x21000000,
      0x800: 0x1040080,
      0x1800: 0x21000080,
      0x2800: 0x80,
      0x3800: 0x1040000,
      0x4800: 0x40000,
      0x5800: 0x20040080,
      0x6800: 0x21040000,
      0x7800: 0x20000000,
      0x8800: 0x20040000,
      0x9800: 0x0,
      0xa800: 0x21040080,
      0xb800: 0x1000080,
      0xc800: 0x20000080,
      0xd800: 0x21000000,
      0xe800: 0x1000000,
      0xf800: 0x40080,
      0x10000: 0x40000,
      0x11000: 0x80,
      0x12000: 0x20000000,
      0x13000: 0x21000080,
      0x14000: 0x1000080,
      0x15000: 0x21040000,
      0x16000: 0x20040080,
      0x17000: 0x1000000,
      0x18000: 0x21040080,
      0x19000: 0x21000000,
      0x1a000: 0x1040000,
      0x1b000: 0x20040000,
      0x1c000: 0x40080,
      0x1d000: 0x20000080,
      0x1e000: 0x0,
      0x1f000: 0x1040080,
      0x10800: 0x21000080,
      0x11800: 0x1000000,
      0x12800: 0x1040000,
      0x13800: 0x20040080,
      0x14800: 0x20000000,
      0x15800: 0x1040080,
      0x16800: 0x80,
      0x17800: 0x21040000,
      0x18800: 0x40080,
      0x19800: 0x21040080,
      0x1a800: 0x0,
      0x1b800: 0x21000000,
      0x1c800: 0x1000080,
      0x1d800: 0x40000,
      0x1e800: 0x20040000,
      0x1f800: 0x20000080 },

    {
      0x0: 0x10000008,
      0x100: 0x2000,
      0x200: 0x10200000,
      0x300: 0x10202008,
      0x400: 0x10002000,
      0x500: 0x200000,
      0x600: 0x200008,
      0x700: 0x10000000,
      0x800: 0x0,
      0x900: 0x10002008,
      0xa00: 0x202000,
      0xb00: 0x8,
      0xc00: 0x10200008,
      0xd00: 0x202008,
      0xe00: 0x2008,
      0xf00: 0x10202000,
      0x80: 0x10200000,
      0x180: 0x10202008,
      0x280: 0x8,
      0x380: 0x200000,
      0x480: 0x202008,
      0x580: 0x10000008,
      0x680: 0x10002000,
      0x780: 0x2008,
      0x880: 0x200008,
      0x980: 0x2000,
      0xa80: 0x10002008,
      0xb80: 0x10200008,
      0xc80: 0x0,
      0xd80: 0x10202000,
      0xe80: 0x202000,
      0xf80: 0x10000000,
      0x1000: 0x10002000,
      0x1100: 0x10200008,
      0x1200: 0x10202008,
      0x1300: 0x2008,
      0x1400: 0x200000,
      0x1500: 0x10000000,
      0x1600: 0x10000008,
      0x1700: 0x202000,
      0x1800: 0x202008,
      0x1900: 0x0,
      0x1a00: 0x8,
      0x1b00: 0x10200000,
      0x1c00: 0x2000,
      0x1d00: 0x10002008,
      0x1e00: 0x10202000,
      0x1f00: 0x200008,
      0x1080: 0x8,
      0x1180: 0x202000,
      0x1280: 0x200000,
      0x1380: 0x10000008,
      0x1480: 0x10002000,
      0x1580: 0x2008,
      0x1680: 0x10202008,
      0x1780: 0x10200000,
      0x1880: 0x10202000,
      0x1980: 0x10200008,
      0x1a80: 0x2000,
      0x1b80: 0x202008,
      0x1c80: 0x200008,
      0x1d80: 0x0,
      0x1e80: 0x10000000,
      0x1f80: 0x10002008 },

    {
      0x0: 0x100000,
      0x10: 0x2000401,
      0x20: 0x400,
      0x30: 0x100401,
      0x40: 0x2100401,
      0x50: 0x0,
      0x60: 0x1,
      0x70: 0x2100001,
      0x80: 0x2000400,
      0x90: 0x100001,
      0xa0: 0x2000001,
      0xb0: 0x2100400,
      0xc0: 0x2100000,
      0xd0: 0x401,
      0xe0: 0x100400,
      0xf0: 0x2000000,
      0x8: 0x2100001,
      0x18: 0x0,
      0x28: 0x2000401,
      0x38: 0x2100400,
      0x48: 0x100000,
      0x58: 0x2000001,
      0x68: 0x2000000,
      0x78: 0x401,
      0x88: 0x100401,
      0x98: 0x2000400,
      0xa8: 0x2100000,
      0xb8: 0x100001,
      0xc8: 0x400,
      0xd8: 0x2100401,
      0xe8: 0x1,
      0xf8: 0x100400,
      0x100: 0x2000000,
      0x110: 0x100000,
      0x120: 0x2000401,
      0x130: 0x2100001,
      0x140: 0x100001,
      0x150: 0x2000400,
      0x160: 0x2100400,
      0x170: 0x100401,
      0x180: 0x401,
      0x190: 0x2100401,
      0x1a0: 0x100400,
      0x1b0: 0x1,
      0x1c0: 0x0,
      0x1d0: 0x2100000,
      0x1e0: 0x2000001,
      0x1f0: 0x400,
      0x108: 0x100400,
      0x118: 0x2000401,
      0x128: 0x2100001,
      0x138: 0x1,
      0x148: 0x2000000,
      0x158: 0x100000,
      0x168: 0x401,
      0x178: 0x2100400,
      0x188: 0x2000001,
      0x198: 0x2100000,
      0x1a8: 0x0,
      0x1b8: 0x2100401,
      0x1c8: 0x100401,
      0x1d8: 0x400,
      0x1e8: 0x2000400,
      0x1f8: 0x100001 },

    {
      0x0: 0x8000820,
      0x1: 0x20000,
      0x2: 0x8000000,
      0x3: 0x20,
      0x4: 0x20020,
      0x5: 0x8020820,
      0x6: 0x8020800,
      0x7: 0x800,
      0x8: 0x8020000,
      0x9: 0x8000800,
      0xa: 0x20800,
      0xb: 0x8020020,
      0xc: 0x820,
      0xd: 0x0,
      0xe: 0x8000020,
      0xf: 0x20820,
      0x80000000: 0x800,
      0x80000001: 0x8020820,
      0x80000002: 0x8000820,
      0x80000003: 0x8000000,
      0x80000004: 0x8020000,
      0x80000005: 0x20800,
      0x80000006: 0x20820,
      0x80000007: 0x20,
      0x80000008: 0x8000020,
      0x80000009: 0x820,
      0x8000000a: 0x20020,
      0x8000000b: 0x8020800,
      0x8000000c: 0x0,
      0x8000000d: 0x8020020,
      0x8000000e: 0x8000800,
      0x8000000f: 0x20000,
      0x10: 0x20820,
      0x11: 0x8020800,
      0x12: 0x20,
      0x13: 0x800,
      0x14: 0x8000800,
      0x15: 0x8000020,
      0x16: 0x8020020,
      0x17: 0x20000,
      0x18: 0x0,
      0x19: 0x20020,
      0x1a: 0x8020000,
      0x1b: 0x8000820,
      0x1c: 0x8020820,
      0x1d: 0x20800,
      0x1e: 0x820,
      0x1f: 0x8000000,
      0x80000010: 0x20000,
      0x80000011: 0x800,
      0x80000012: 0x8020020,
      0x80000013: 0x20820,
      0x80000014: 0x20,
      0x80000015: 0x8020000,
      0x80000016: 0x8000000,
      0x80000017: 0x8000820,
      0x80000018: 0x8020820,
      0x80000019: 0x8000020,
      0x8000001a: 0x8000800,
      0x8000001b: 0x0,
      0x8000001c: 0x20800,
      0x8000001d: 0x820,
      0x8000001e: 0x20020,
      0x8000001f: 0x8020800 }];



    // Masks that select the SBOX input
    var SBOX_MASK = [
    0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
    0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];


    /**
                                                      * DES block cipher algorithm.
                                                      */
    var DES = C_algo.DES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;

        // Select 56 bits according to PC1
        var keyBits = [];
        for (var i = 0; i < 56; i++) {
          var keyBitPos = PC1[i] - 1;
          keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;
        }

        // Assemble 16 subkeys
        var subKeys = this._subKeys = [];
        for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
          // Create subkey
          var subKey = subKeys[nSubKey] = [];

          // Shortcut
          var bitShift = BIT_SHIFTS[nSubKey];

          // Select 48 bits according to PC2
          for (var i = 0; i < 24; i++) {
            // Select from the left 28 key bits
            subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;

            // Select from the right 28 key bits
            subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;
          }

          // Since each subkey is applied to an expanded 32-bit input,
          // the subkey can be broken into 8 values scaled to 32-bits,
          // which allows the key to be used without expansion
          subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;
          for (var i = 1; i < 7; i++) {
            subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;
          }
          subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;
        }

        // Compute inverse subkeys
        var invSubKeys = this._invSubKeys = [];
        for (var i = 0; i < 16; i++) {
          invSubKeys[i] = subKeys[15 - i];
        }
      },

      encryptBlock: function encryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._subKeys);
      },

      decryptBlock: function decryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._invSubKeys);
      },

      _doCryptBlock: function _doCryptBlock(M, offset, subKeys) {
        // Get input
        this._lBlock = M[offset];
        this._rBlock = M[offset + 1];

        // Initial permutation
        exchangeLR.call(this, 4, 0x0f0f0f0f);
        exchangeLR.call(this, 16, 0x0000ffff);
        exchangeRL.call(this, 2, 0x33333333);
        exchangeRL.call(this, 8, 0x00ff00ff);
        exchangeLR.call(this, 1, 0x55555555);

        // Rounds
        for (var round = 0; round < 16; round++) {
          // Shortcuts
          var subKey = subKeys[round];
          var lBlock = this._lBlock;
          var rBlock = this._rBlock;

          // Feistel function
          var f = 0;
          for (var i = 0; i < 8; i++) {
            f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
          }
          this._lBlock = rBlock;
          this._rBlock = lBlock ^ f;
        }

        // Undo swap from last round
        var t = this._lBlock;
        this._lBlock = this._rBlock;
        this._rBlock = t;

        // Final permutation
        exchangeLR.call(this, 1, 0x55555555);
        exchangeRL.call(this, 8, 0x00ff00ff);
        exchangeRL.call(this, 2, 0x33333333);
        exchangeLR.call(this, 16, 0x0000ffff);
        exchangeLR.call(this, 4, 0x0f0f0f0f);

        // Set output
        M[offset] = this._lBlock;
        M[offset + 1] = this._rBlock;
      },

      keySize: 64 / 32,

      ivSize: 64 / 32,

      blockSize: 64 / 32 });


    // Swap bits across the left and right words
    function exchangeLR(offset, mask) {
      var t = (this._lBlock >>> offset ^ this._rBlock) & mask;
      this._rBlock ^= t;
      this._lBlock ^= t << offset;
    }

    function exchangeRL(offset, mask) {
      var t = (this._rBlock >>> offset ^ this._lBlock) & mask;
      this._lBlock ^= t;
      this._rBlock ^= t << offset;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
       */
    C.DES = BlockCipher._createHelper(DES);

    /**
                                             * Triple-DES block cipher algorithm.
                                             */
    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;

        // Create DES instances
        this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));
        this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));
        this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));
      },

      encryptBlock: function encryptBlock(M, offset) {
        this._des1.encryptBlock(M, offset);
        this._des2.decryptBlock(M, offset);
        this._des3.encryptBlock(M, offset);
      },

      decryptBlock: function decryptBlock(M, offset) {
        this._des3.decryptBlock(M, offset);
        this._des2.encryptBlock(M, offset);
        this._des1.decryptBlock(M, offset);
      },

      keySize: 192 / 32,

      ivSize: 64 / 32,

      blockSize: 64 / 32 });


    /**
                              * Shortcut functions to the cipher's object interface.
                              *
                              * @example
                              *
                              *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
                              *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
                              */
    C.TripleDES = BlockCipher._createHelper(TripleDES);
  })();


  return CryptoJS.TripleDES;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\crypto-js\\x64-core.js":
/*!*****************************************************!*\
  !*** F:/app/物联网/node_modules/crypto-js/x64-core.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ "F:\\app\\物联网\\node_modules\\crypto-js\\core.js"));
  } else
  {}
})(void 0, function (CryptoJS) {

  (function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var X32WordArray = C_lib.WordArray;

    /**
                                         * x64 namespace.
                                         */
    var C_x64 = C.x64 = {};

    /**
                             * A 64-bit word.
                             */
    var X64Word = C_x64.Word = Base.extend({
      /**
                                              * Initializes a newly created 64-bit word.
                                              *
                                              * @param {number} high The high 32 bits.
                                              * @param {number} low The low 32 bits.
                                              *
                                              * @example
                                              *
                                              *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                                              */
      init: function init(high, low) {
        this.high = high;
        this.low = low;
      }

      /**
         * Bitwise NOTs this word.
         *
         * @return {X64Word} A new x64-Word object after negating.
         *
         * @example
         *
         *     var negated = x64Word.not();
         */
      // not: function () {
      // var high = ~this.high;
      // var low = ~this.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise ANDs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to AND with this word.
       *
       * @return {X64Word} A new x64-Word object after ANDing.
       *
       * @example
       *
       *     var anded = x64Word.and(anotherX64Word);
       */
      // and: function (word) {
      // var high = this.high & word.high;
      // var low = this.low & word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise ORs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to OR with this word.
       *
       * @return {X64Word} A new x64-Word object after ORing.
       *
       * @example
       *
       *     var ored = x64Word.or(anotherX64Word);
       */
      // or: function (word) {
      // var high = this.high | word.high;
      // var low = this.low | word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise XORs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to XOR with this word.
       *
       * @return {X64Word} A new x64-Word object after XORing.
       *
       * @example
       *
       *     var xored = x64Word.xor(anotherX64Word);
       */
      // xor: function (word) {
      // var high = this.high ^ word.high;
      // var low = this.low ^ word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Shifts this word n bits to the left.
       *
       * @param {number} n The number of bits to shift.
       *
       * @return {X64Word} A new x64-Word object after shifting.
       *
       * @example
       *
       *     var shifted = x64Word.shiftL(25);
       */
      // shiftL: function (n) {
      // if (n < 32) {
      // var high = (this.high << n) | (this.low >>> (32 - n));
      // var low = this.low << n;
      // } else {
      // var high = this.low << (n - 32);
      // var low = 0;
      // }

      // return X64Word.create(high, low);
      // },

      /**
       * Shifts this word n bits to the right.
       *
       * @param {number} n The number of bits to shift.
       *
       * @return {X64Word} A new x64-Word object after shifting.
       *
       * @example
       *
       *     var shifted = x64Word.shiftR(7);
       */
      // shiftR: function (n) {
      // if (n < 32) {
      // var low = (this.low >>> n) | (this.high << (32 - n));
      // var high = this.high >>> n;
      // } else {
      // var low = this.high >>> (n - 32);
      // var high = 0;
      // }

      // return X64Word.create(high, low);
      // },

      /**
       * Rotates this word n bits to the left.
       *
       * @param {number} n The number of bits to rotate.
       *
       * @return {X64Word} A new x64-Word object after rotating.
       *
       * @example
       *
       *     var rotated = x64Word.rotL(25);
       */
      // rotL: function (n) {
      // return this.shiftL(n).or(this.shiftR(64 - n));
      // },

      /**
       * Rotates this word n bits to the right.
       *
       * @param {number} n The number of bits to rotate.
       *
       * @return {X64Word} A new x64-Word object after rotating.
       *
       * @example
       *
       *     var rotated = x64Word.rotR(7);
       */
      // rotR: function (n) {
      // return this.shiftR(n).or(this.shiftL(64 - n));
      // },

      /**
       * Adds this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to add with this word.
       *
       * @return {X64Word} A new x64-Word object after adding.
       *
       * @example
       *
       *     var added = x64Word.add(anotherX64Word);
       */
      // add: function (word) {
      // var low = (this.low + word.low) | 0;
      // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
      // var high = (this.high + word.high + carry) | 0;

      // return X64Word.create(high, low);
      // }
    });

    /**
         * An array of 64-bit words.
         *
         * @property {Array} words The array of CryptoJS.x64.Word objects.
         * @property {number} sigBytes The number of significant bytes in this word array.
         */
    var X64WordArray = C_x64.WordArray = Base.extend({
      /**
                                                        * Initializes a newly created word array.
                                                        *
                                                        * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                                                        * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                                                        *
                                                        * @example
                                                        *
                                                        *     var wordArray = CryptoJS.x64.WordArray.create();
                                                        *
                                                        *     var wordArray = CryptoJS.x64.WordArray.create([
                                                        *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                                                        *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                                                        *     ]);
                                                        *
                                                        *     var wordArray = CryptoJS.x64.WordArray.create([
                                                        *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                                                        *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                                                        *     ], 10);
                                                        */
      init: function init(words, sigBytes) {
        words = this.words = words || [];

        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 8;
        }
      },

      /**
          * Converts this 64-bit word array to a 32-bit word array.
          *
          * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
          *
          * @example
          *
          *     var x32WordArray = x64WordArray.toX32();
          */
      toX32: function toX32() {
        // Shortcuts
        var x64Words = this.words;
        var x64WordsLength = x64Words.length;

        // Convert
        var x32Words = [];
        for (var i = 0; i < x64WordsLength; i++) {
          var x64Word = x64Words[i];
          x32Words.push(x64Word.high);
          x32Words.push(x64Word.low);
        }

        return X32WordArray.create(x32Words, this.sigBytes);
      },

      /**
          * Creates a copy of this word array.
          *
          * @return {X64WordArray} The clone.
          *
          * @example
          *
          *     var clone = x64WordArray.clone();
          */
      clone: function clone() {
        var clone = Base.clone.call(this);

        // Clone "words" array
        var words = clone.words = this.words.slice(0);

        // Clone each X64Word object
        var wordsLength = words.length;
        for (var i = 0; i < wordsLength; i++) {
          words[i] = words[i].clone();
        }

        return clone;
      } });

  })();


  return CryptoJS;

});

/***/ }),

/***/ "F:\\app\\物联网\\node_modules\\vue-socket.io\\dist\\vue-socketio.js":
/*!******************************************************************!*\
  !*** F:/app/物联网/node_modules/vue-socket.io/dist/vue-socketio.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed (from ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js):\nError: ENOENT: no such file or directory, open 'F:\\app\\物联网\\node_modules\\vue-socket.io\\dist\\vue-socketio.js'");

/***/ }),

/***/ "F:\\app\\物联网\\pages.json":
/*!*****************************!*\
  !*** F:/app/物联网/pages.json ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),

/***/ "F:\\app\\物联网\\static\\iconfont\\iconfont.css":
/*!***********************************************!*\
  !*** F:/app/物联网/static/iconfont/iconfont.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })

}]);
});
define('static/iconfont/iconfont.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";!function (L) {var a,t = '<svg><symbol id="icon-all" viewBox="0 0 1024 1024"><path d="M460.8 486.4 486.4 486.4 486.4 460.8 486.4 243.2C486.4 108.884349 377.51565 0 243.2 0 108.884349 0 0 108.884349 0 243.2 0 377.51565 108.884349 486.4 243.2 486.4L460.8 486.4ZM51.2 243.2C51.2 137.161328 137.161328 51.2 243.2 51.2 349.238671 51.2 435.2 137.161328 435.2 243.2L435.2 460.8 460.8 435.2 243.2 435.2C137.161328 435.2 51.2 349.238671 51.2 243.2Z"  ></path><path d="M460.8 588.8 435.2 563.2 435.2 780.8C435.2 886.838671 349.238671 972.8 243.2 972.8 137.161328 972.8 51.2 886.838671 51.2 780.8 51.2 674.761329 137.161328 588.8 243.2 588.8L460.8 588.8ZM0 780.8C0 915.11565 108.884349 1024 243.2 1024 377.51565 1024 486.4 915.11565 486.4 780.8L486.4 563.2 486.4 537.6 460.8 537.6 243.2 537.6C108.884349 537.6 0 646.48435 0 780.8Z"  ></path><path d="M563.2 435.2 588.8 460.8 588.8 243.2C588.8 137.161328 674.761329 51.2 780.8 51.2 886.838671 51.2 972.8 137.161328 972.8 243.2 972.8 349.238671 886.838671 435.2 780.8 435.2L563.2 435.2ZM1024 243.2C1024 108.884349 915.11565 0 780.8 0 646.48435 0 537.6 108.884349 537.6 243.2L537.6 460.8 537.6 486.4 563.2 486.4 780.8 486.4C915.11565 486.4 1024 377.51565 1024 243.2Z"  ></path><path d="M1024 780.8C1024 646.48435 915.11565 537.6 780.8 537.6L563.2 537.6 537.6 537.6 537.6 563.2 537.6 780.8C537.6 915.11565 646.48435 1024 780.8 1024 818.513163 1024 855.051123 1015.390662 888.179087 999.065099 900.861235 992.815296 906.075682 977.467919 899.825882 964.785773 893.576079 952.103625 878.228702 946.889178 865.546554 953.138978 839.420429 966.014014 810.620764 972.8 780.8 972.8 674.761329 972.8 588.8 886.838671 588.8 780.8L588.8 563.2 563.2 588.8 780.8 588.8C886.838671 588.8 972.8 674.761329 972.8 780.8 972.8 799.469549 970.142607 817.755731 964.968006 835.279443 960.963957 848.839106 968.71031 863.07731 982.269973 867.081361 995.829636 871.085412 1010.06784 863.339057 1014.071891 849.779394 1020.63305 827.560122 1024 804.391296 1024 780.8Z"  ></path></symbol><symbol id="icon-back" viewBox="0 0 1024 1024"><path d="M363.840919 472.978737C336.938714 497.358861 337.301807 537.486138 364.730379 561.486138L673.951902 832.05497C682.818816 839.813519 696.296418 838.915012 704.05497 830.048098 711.813519 821.181184 710.915012 807.703582 702.048098 799.94503L392.826577 529.376198C384.59578 522.174253 384.502227 511.835287 392.492414 504.59418L702.325747 223.807723C711.056111 215.895829 711.719614 202.404616 703.807723 193.674252 695.895829 184.943889 682.404617 184.280386 673.674253 192.192278L363.840919 472.978737Z"  ></path></symbol><symbol id="icon-cart" viewBox="0 0 1024 1024"><path d="M235.097303 699.133018C247.384597 735.582848 286.382106 763.623932 324.772759 763.623932L861.658537 763.623932 880.429732 763.623932 885.649214 745.458146 1009.08775 315.845043C1021.388907 273.032339 993.187631 235.213675 949.051586 235.213675L424.585365 235.213675C410.791718 235.213675 399.609756 246.479262 399.609756 260.376068 399.609756 274.272875 410.791718 285.538462 424.585365 285.538462L949.051586 285.538462C959.924 285.538462 964.161052 291.220461 961.106394 301.851829L837.667859 731.464932 861.658537 713.299145 324.772759 713.299145C307.742153 713.299145 287.789837 698.952471 282.395194 682.949451L73.600164 63.566336C69.16437 50.407706 54.980454 43.363344 41.919502 47.832313 28.858551 52.301281 21.86648 66.591273 26.302275 79.749903L235.097303 699.133018Z"  ></path><path d="M399.609756 902.017094C399.609756 846.429871 354.881911 801.367522 299.707317 801.367522 244.532723 801.367522 199.804878 846.429871 199.804878 902.017094 199.804878 957.604318 244.532723 1002.666667 299.707317 1002.666667 354.881911 1002.666667 399.609756 957.604318 399.609756 902.017094ZM249.756098 902.017094C249.756098 874.223482 272.120021 851.692307 299.707317 851.692307 327.294613 851.692307 349.658537 874.223482 349.658537 902.017094 349.658537 929.810705 327.294613 952.341879 299.707317 952.341879 272.120021 952.341879 249.756098 929.810705 249.756098 902.017094Z"  ></path><path d="M924.097562 902.017094C924.097562 846.429871 879.369715 801.367522 824.195121 801.367522 769.020529 801.367522 724.292683 846.429871 724.292683 902.017094 724.292683 957.604318 769.020529 1002.666667 824.195121 1002.666667 879.369715 1002.666667 924.097562 957.604318 924.097562 902.017094ZM774.243902 902.017094C774.243902 874.223482 796.607825 851.692307 824.195121 851.692307 851.782419 851.692307 874.146342 874.223482 874.146342 902.017094 874.146342 929.810705 851.782419 952.341879 824.195121 952.341879 796.607825 952.341879 774.243902 929.810705 774.243902 902.017094Z"  ></path></symbol><symbol id="icon-category" viewBox="0 0 1024 1024"><path d="M134.095238 256C147.560466 256 158.476191 246.448741 158.476191 234.666667 158.476191 222.884592 147.560466 213.333333 134.095238 213.333333L36.571428 213.333333C23.1062 213.333333 12.190476 222.884592 12.190476 234.666667 12.190476 246.448741 23.1062 256 36.571428 256L134.095238 256Z"  ></path><path d="M134.095238 533.333333C147.560466 533.333333 158.476191 523.782074 158.476191 512 158.476191 500.217926 147.560466 490.666667 134.095238 490.666667L36.571428 490.666667C23.1062 490.666667 12.190476 500.217926 12.190476 512 12.190476 523.782074 23.1062 533.333333 36.571428 533.333333L134.095238 533.333333Z"  ></path><path d="M134.095238 810.666667C147.560466 810.666667 158.476191 801.115407 158.476191 789.333333 158.476191 777.55126 147.560466 768 134.095238 768L36.571428 768C23.1062 768 12.190476 777.55126 12.190476 789.333333 12.190476 801.115407 23.1062 810.666667 36.571428 810.666667L134.095238 810.666667Z"  ></path><path d="M987.428572 256C1000.893801 256 1011.809523 246.448741 1011.809523 234.666667 1011.809523 222.884592 1000.893801 213.333333 987.428572 213.333333L280.380951 213.333333C266.915725 213.333333 256 222.884592 256 234.666667 256 246.448741 266.915725 256 280.380951 256L987.428572 256Z"  ></path><path d="M993.52381 533.333333C1006.989037 533.333333 1017.904762 523.782074 1017.904762 512 1017.904762 500.217926 1006.989037 490.666667 993.52381 490.666667L286.47619 490.666667C273.010963 490.666667 262.095238 500.217926 262.095238 512 262.095238 523.782074 273.010963 533.333333 286.47619 533.333333L993.52381 533.333333Z"  ></path><path d="M996.571428 810.666667C1010.036657 810.666667 1020.952382 801.115407 1020.952382 789.333333 1020.952382 777.55126 1010.036657 768 996.571428 768L289.52381 768C276.058581 768 265.142857 777.55126 265.142857 789.333333 265.142857 801.115407 276.058581 810.666667 289.52381 810.666667L996.571428 810.666667Z"  ></path></symbol><symbol id="icon-close" viewBox="0 0 1024 1024"><path d="M176.661601 817.172881C168.472798 825.644055 168.701706 839.149636 177.172881 847.338438 185.644056 855.527241 199.149636 855.298332 207.338438 846.827157L826.005105 206.827157C834.193907 198.355983 833.964998 184.850403 825.493824 176.661601 817.02265 168.472798 803.517069 168.701706 795.328267 177.172881L176.661601 817.172881Z"  ></path><path d="M795.328267 846.827157C803.517069 855.298332 817.02265 855.527241 825.493824 847.338438 833.964998 839.149636 834.193907 825.644055 826.005105 817.172881L207.338438 177.172881C199.149636 168.701706 185.644056 168.472798 177.172881 176.661601 168.701706 184.850403 168.472798 198.355983 176.661601 206.827157L795.328267 846.827157Z"  ></path></symbol><symbol id="icon-comments" viewBox="0 0 1024 1024"><path d="M131.253515 789.333333C87.810305 789.333333 52.51282 753.473975 52.51282 709.41763L52.51282 69.333333 26.25641 96 892.853331 96C936.231586 96 971.487179 131.853286 971.487179 175.915703L971.487179 816 997.74359 789.333333 525.128205 789.333333 517.234323 789.333333 510.649171 793.754413 285.912493 944.636066C273.815607 952.757562 270.491629 969.301024 278.488179 981.586923 286.484727 993.872821 302.773675 997.248736 314.87056 989.127241L539.607238 838.245587 525.128205 842.666667 997.74359 842.666667 1024 842.666667 1024 816 1024 175.915703C1024 102.41369 965.24899 42.666667 892.853331 42.666667L26.25641 42.666667 0 42.666667 0 69.333333 0 709.41763C0 782.925715 58.804881 842.666667 131.253515 842.666667L268.117303 842.666667C282.618319 842.666667 294.373713 830.727593 294.373713 816 294.373713 801.272407 282.618319 789.333333 268.117303 789.333333L131.253515 789.333333Z"  ></path><path d="M367.589743 442.666667C367.589743 383.756294 320.568162 336 262.564102 336 204.560043 336 157.538461 383.756294 157.538461 442.666667 157.538461 501.577039 204.560043 549.333333 262.564102 549.333333 320.568162 549.333333 367.589743 501.577039 367.589743 442.666667ZM210.051282 442.666667C210.051282 413.211479 233.562074 389.333333 262.564102 389.333333 291.566133 389.333333 315.076924 413.211479 315.076924 442.666667 315.076924 472.121854 291.566133 496 262.564102 496 233.562074 496 210.051282 472.121854 210.051282 442.666667Z"  ></path><path d="M630.153845 442.666667C630.153845 383.756294 583.132265 336 525.128205 336 467.124145 336 420.102564 383.756294 420.102564 442.666667 420.102564 501.577039 467.124145 549.333333 525.128205 549.333333 583.132265 549.333333 630.153845 501.577039 630.153845 442.666667ZM472.615386 442.666667C472.615386 413.211479 496.126176 389.333333 525.128205 389.333333 554.130236 389.333333 577.641026 413.211479 577.641026 442.666667 577.641026 472.121854 554.130236 496 525.128205 496 496.126176 496 472.615386 472.121854 472.615386 442.666667Z"  ></path><path d="M892.717948 442.666667C892.717948 383.756294 845.696367 336 787.692307 336 729.688247 336 682.666667 383.756294 682.666667 442.666667 682.666667 501.577039 729.688247 549.333333 787.692307 549.333333 845.696367 549.333333 892.717948 501.577039 892.717948 442.666667ZM735.179488 442.666667C735.179488 413.211479 758.690278 389.333333 787.692307 389.333333 816.694338 389.333333 840.205129 413.211479 840.205129 442.666667 840.205129 472.121854 816.694338 496 787.692307 496 758.690278 496 735.179488 472.121854 735.179488 442.666667Z"  ></path></symbol><symbol id="icon-cry" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 629.410831 1024 740.826187 984.331046 830.768465 912.686662 841.557579 904.092491 843.33693 888.379234 834.742758 877.590121 826.148587 866.801009 810.43533 865.021658 799.646219 873.615827 718.470035 938.277495 618.001779 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 767.182496 49.951219 974.048781 256.817504 974.048781 512 974.048781 599.492834 949.714859 683.336764 904.470807 755.960693 897.177109 767.668243 900.755245 783.071797 912.462793 790.365493 924.170342 797.659191 939.573897 794.081058 946.867595 782.373508 997.013826 701.880796 1024 608.898379 1024 512Z"  ></path><path d="M337.170731 499.512194C371.654852 499.512194 399.609756 471.557291 399.609756 437.073171 399.609756 402.58905 371.654852 374.634146 337.170731 374.634146 302.686611 374.634146 274.731708 402.58905 274.731708 437.073171 274.731708 471.557291 302.686611 499.512194 337.170731 499.512194ZM711.804879 499.512194C746.288998 499.512194 774.243902 471.557291 774.243902 437.073171 774.243902 402.58905 746.288998 374.634146 711.804879 374.634146 677.320757 374.634146 649.365854 402.58905 649.365854 437.073171 649.365854 471.557291 677.320757 499.512194 711.804879 499.512194Z"  ></path><path d="M352.788105 704.784525C396.165222 670.082831 453.151987 649.360371 524.487806 649.360371 595.823622 649.360371 652.810387 670.082831 696.187505 704.784525 722.700531 725.994946 738.882517 747.570927 746.631548 763.068988 752.800254 775.406402 747.799529 790.408576 735.462114 796.577284 723.124702 802.74599 708.122526 797.745265 701.953818 785.407851 701.03616 783.572535 698.492224 779.382524 694.165854 773.614029 686.602473 763.529523 676.927317 753.345148 664.983226 743.789875 630.311565 716.052544 584.273939 699.31159 524.487806 699.31159 464.70167 699.31159 418.664045 716.052544 383.992384 743.789875 372.048292 753.345148 362.373137 763.529523 354.809756 773.614029 350.483386 779.382524 347.93945 783.572535 347.021792 785.407851 340.853084 797.745265 325.850908 802.74599 313.513495 796.577284 301.176081 790.408576 296.175356 775.406402 302.344062 763.068988 310.093092 747.570927 326.275078 725.994946 352.788105 704.784525Z"  ></path></symbol><symbol id="icon-delete" viewBox="0 0 1024 1024"><path d="M972.657609 209.348408C987.158609 209.36839 998.930114 197.571202 998.949999 182.99865 998.969882 168.426097 987.230618 156.59651 972.729617 156.576528L32.457975 155.280806C17.956974 155.260823 6.18547 167.058012 6.165585 181.630564 6.1457 196.203116 17.884965 208.032703 32.385966 208.052686L972.657609 209.348408Z"  ></path><path d="M180.466902 992.356169 180.466902 1019.014859 206.993296 1018.74074 833.361858 1012.267947 859.348284 1011.999407 859.348284 985.883377 859.348284 289.397297C859.348284 274.824732 847.59289 263.011332 833.091874 263.011332 818.590859 263.011332 806.835465 274.824732 806.835465 289.397297L806.835465 985.883377 832.82189 959.498805 206.453329 965.971599 232.979723 992.356169 232.979723 282.67005C232.979723 268.097483 221.224329 256.284085 206.723313 256.284085 192.222298 256.284085 180.466902 268.097483 180.466902 282.67005L180.466902 992.356169Z"  ></path><path d="M656.410257 847.079027C656.410257 861.651593 668.165651 873.464992 682.666667 873.464992 697.167682 873.464992 708.923076 861.651593 708.923076 847.079027L708.923076 372.131659C708.923076 357.559091 697.167682 345.745694 682.666667 345.745694 668.165651 345.745694 656.410257 357.559091 656.410257 372.131659L656.410257 847.079027Z"  ></path><path d="M341.333333 847.079027C341.333333 861.651593 353.08873 873.464992 367.589743 873.464992 382.090758 873.464992 393.846155 861.651593 393.846155 847.079027L393.846155 372.131659C393.846155 357.559091 382.090758 345.745694 367.589743 345.745694 353.08873 345.745694 341.333333 357.559091 341.333333 372.131659L341.333333 847.079027Z"  ></path><path d="M498.871795 847.079027C498.871795 861.651593 510.627189 873.464992 525.128205 873.464992 539.62922 873.464992 551.384614 861.651593 551.384614 847.079027L551.384614 372.131659C551.384614 357.559091 539.62922 345.745694 525.128205 345.745694 510.627189 345.745694 498.871795 357.559091 498.871795 372.131659L498.871795 847.079027Z"  ></path><path d="M392.147755 116.721777C392.147755 102.063669 403.758665 90.363507 418.40134 90.363507L622.925796 90.363507C637.408947 90.363507 649.179381 102.1619 649.179381 116.549585L649.179381 171.644875 701.692203 171.644875 701.692203 116.549585C701.692203 72.986607 666.38105 37.591577 622.925796 37.591577L418.40134 37.591577C374.724427 37.591577 339.634933 72.950804 339.634933 116.721777L339.634933 165.310801 392.147755 165.310801 392.147755 116.721777Z"  ></path></symbol><symbol id="icon-edit" viewBox="0 0 1024 1024"><path d="M34.155089 230.940227 9.17948 230.940227 9.17948 256.203386 9.17948 854.158012C9.17948 923.769568 65.248004 980.289737 134.081773 980.289737L927.938515 980.289737 952.914125 980.289737 952.914125 955.026579 952.914125 471.100561C952.914125 457.148105 941.732164 445.837402 927.938515 445.837402 914.144868 445.837402 902.962906 457.148105 902.962906 471.100561L902.962906 955.026579 927.938515 929.76342 134.081773 929.76342C92.797081 929.76342 59.130699 895.825847 59.130699 854.158012L59.130699 256.203386 34.155089 281.466543 598.93821 281.466543C612.731859 281.466543 623.91382 270.155842 623.91382 256.203386 623.91382 242.250928 612.731859 230.940227 598.93821 230.940227L34.155089 230.940227Z"  ></path><path d="M437.016339 593.503789 431.876019 600.104892 431.668623 608.505214 427.984924 757.709741 427.077935 794.446421 461.312335 782.146455 605.005395 730.519447 611.980762 728.013291 616.479561 722.067243 1003.181673 210.964228 1018.529978 190.678421 998.306108 175.379305 869.49174 77.932781 849.985487 63.176536 834.913446 82.53177 437.016339 593.503789ZM839.575373 118.395018 968.389739 215.841542 963.514174 180.256619 576.81206 691.359633 588.286225 682.907428 444.593165 734.534436 477.920574 758.971151 481.604275 609.766622 476.256559 624.768047 874.153664 113.79603 839.575373 118.395018Z"  ></path><path d="M891.217762 310.505713 920.474916 269.553252 808.309143 187.564266 779.051989 228.516725 891.217762 310.505713Z"  ></path></symbol><symbol id="icon-email" viewBox="0 0 1024 1024"><path d="M972.8 934.274509 998.4 908.54902 127.868001 908.54902C85.502225 908.54902 51.2 874.019706 51.2 831.263017L51.2 111.058823 25.6 136.784314 896.131998 136.784314C938.452011 136.784314 972.8 171.324278 972.8 213.860934L972.8 278.566694C972.8 292.77449 984.26151 304.292183 998.4 304.292183 1012.53849 304.292183 1024 292.77449 1024 278.566694L1024 213.860934C1024 142.916556 966.736828 85.333333 896.131998 85.333333L25.6 85.333333 0 85.333333 0 111.058823 0 831.263017C0 902.415639 57.205646 960 127.868001 960L998.4 960 1024 960 1024 934.274509 1024 457.69849C1024 443.490694 1012.53849 431.973001 998.4 431.973001 984.26151 431.973001 972.8 443.490694 972.8 457.69849L972.8 934.274509Z"  ></path><path d="M512.651558 567.164817C520.64791 572.874498 531.187889 573.490406 539.788919 568.750601L1002.624789 313.693694C1015.021598 306.862133 1019.560139 291.225196 1012.761901 278.767619 1005.963665 266.310041 990.403006 261.749254 978.006197 268.580816L515.170327 523.637722 542.307689 525.223505 194.028065 276.539467C182.502788 268.310009 166.520953 271.027598 158.331639 282.609372 150.142325 294.191146 152.846657 310.251322 164.371935 318.480781L512.651558 567.164817Z"  ></path></symbol><symbol id="icon-favorite" viewBox="0 0 1024 1024"><path d="M471.86368 72.097804C485.674955 41.934476 493.044868 42.004821 506.088062 72.343455L619.745431 336.711942C625.163575 349.314613 639.967742 355.221257 652.81146 349.9048 665.655179 344.588341 671.674797 330.062018 666.256653 317.459345L552.599283 53.090859C522.392994-17.169354 457.679046-17.787043 425.817282 51.79791L306.603706 312.156098C300.890827 324.632819 306.56746 339.291488 319.282822 344.89715 331.998182 350.50281 346.937225 344.932715 352.650101 332.455991L471.86368 72.097804ZM946.32909 396.483296C979.832725 400.051098 982.041973 406.950494 956.666908 428.497651L735.550581 616.257899C725.009777 625.208591 723.85952 640.849199 732.981408 651.192177 742.103296 661.535153 758.043057 662.663823 768.583861 653.713133L989.700188 465.952885C1048.465438 416.052555 1029.066423 355.470148 951.775584 347.23945L662.585148 316.443567C648.726743 314.967787 636.273047 324.79504 634.769039 338.393355 633.265033 351.991667 643.28025 364.211635 657.138652 365.687415L946.32909 396.483296ZM789.29175 946.034577C796.186861 978.402929 790.182336 982.596644 761.456491 965.574886L511.141715 817.248614C499.208996 810.177775 483.693933 813.937557 476.487851 825.646327 469.281769 837.355095 473.113466 852.578978 485.046185 859.649818L735.36096 1007.97609C801.886172 1047.396203 854.610867 1010.571904 838.704265 935.9001L779.188324 656.509011C776.336237 643.120205 762.962797 634.535115 749.317907 637.333673 735.673018 640.132233 726.923723 653.254684 729.775808 666.643488L789.29175 946.034577ZM232.773805 963.365201C203.531582 979.802142 197.611334 975.494605 205.23285 943.427422L271.646138 663.996497C274.812115 650.675787 266.373538 637.358852 252.798046 634.252292 239.222554 631.145732 225.65091 639.425937 222.484932 652.746647L156.071644 932.177572C138.421236 1006.440873 190.405906 1044.264612 257.865924 1006.345598L510.273487 864.46829C522.369205 857.669333 526.55766 842.536203 519.628661 830.667492 512.699663 818.798784 497.277084 814.688939 485.181367 821.487893L232.773805 963.365201ZM129.994101 501.287629C82.102458 458.686274 82.102458 458.686274 42.192755 423.185148 31.865104 413.998327 15.903056 414.766027 6.540523 424.899851-2.82201 435.033675-2.039628 450.696151 8.288022 459.88297 48.197725 495.384098 48.197725 495.384098 96.089368 537.985451L223.800416 651.58906C234.128066 660.775881 250.090114 660.008181 259.452649 649.874357 268.815181 639.740533 268.0328 624.078057 257.705148 614.891236 225.777387 586.490334 225.777387 586.490334 129.994101 501.287629ZM180.395462 382.262878C190.366845 381.267631 200.661419 380.210295 211.223313 379.09885 236.673773 376.420659 262.52381 373.552395 287.435772 370.684164 296.155283 369.680247 304.136079 368.747883 311.210485 367.910867 315.461207 367.40794 318.460849 367.049069 320.067674 366.854942 333.902965 365.183369 343.73769 352.823061 342.034144 339.247426 340.330596 325.671791 327.733879 316.021643 313.898586 317.693216 312.350014 317.880324 309.374861 318.236267 305.16739 318.734078 298.144806 319.56496 290.21721 320.49111 281.552922 321.48867 256.796887 324.338946 231.109284 327.189188 205.840444 329.848269 195.367057 330.950398 185.163505 331.998385 175.286984 332.984164 154.745362 335.034432 135.924256 336.785406 119.20766 338.183706 105.318259 339.345517 95.018524 351.33562 96.202557 364.964348 97.386591 378.593077 109.606024 388.699509 123.495425 387.537698 140.511074 386.114383 159.598349 384.338647 180.395462 382.262878Z"  ></path></symbol><symbol id="icon-form" viewBox="0 0 1024 1024"><path d="M835.55027 48.761905C876.805122 48.761905 910.222223 81.441158 910.222223 121.753604L910.222223 834.966428 917.178886 818.05911 755.401109 982.711731 773.333333 975.238095 188.412988 975.238095C147.247907 975.238095 113.777778 942.409011 113.777778 902.094615L113.777778 24.380952 88.888889 48.761905 835.55027 48.761905ZM64 0 64 24.380952 64 902.094615C64 969.325498 119.742117 1024 188.412988 1024L773.333333 1024 783.922411 1024 791.265557 1016.526364 953.043334 851.873745 960 844.793457 960 834.966428 960 121.753604C960 54.49204 904.277615 0 835.55027 0L88.888889 0 64 0Z"  ></path><path d="M736.080945 707.047618C694.76038 707.047618 661.333333 739.619379 661.333333 780.144186L661.333333 926.47619C661.333333 939.941419 672.476469 950.857143 686.222223 950.857143 699.967977 950.857143 711.11111 939.941419 711.11111 926.47619L711.11111 780.144186C711.11111 766.607861 722.192996 755.809523 736.080945 755.809523L848 755.809523C861.745754 755.809523 872.88889 744.893801 872.88889 731.428572 872.88889 717.963343 861.745754 707.047618 848 707.047618L736.080945 707.047618Z"  ></path><path d="M775.164361 219.428572C788.910114 219.428572 800.05325 208.512847 800.05325 195.047619 800.05325 181.582391 788.910114 170.666667 775.164361 170.666667L263.111111 170.666667C249.365357 170.666667 238.222222 181.582391 238.222222 195.047619 238.222222 208.512847 249.365357 219.428572 263.111111 219.428572L775.164361 219.428572Z"  ></path><path d="M775.164361 365.714285C788.910114 365.714285 800.05325 354.798562 800.05325 341.333333 800.05325 327.868105 788.910114 316.952382 775.164361 316.952382L263.111111 316.952382C249.365357 316.952382 238.222222 327.868105 238.222222 341.333333 238.222222 354.798562 249.365357 365.714285 263.111111 365.714285L775.164361 365.714285Z"  ></path><path d="M775.164361 536.380951C788.910114 536.380951 800.05325 525.465229 800.05325 512 800.05325 498.534771 788.910114 487.619049 775.164361 487.619049L263.111111 487.619049C249.365357 487.619049 238.222222 498.534771 238.222222 512 238.222222 525.465229 249.365357 536.380951 263.111111 536.380951L775.164361 536.380951Z"  ></path></symbol><symbol id="icon-help" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 629.410831 1024 740.826187 984.331046 830.768465 912.686662 841.557579 904.092491 843.33693 888.379234 834.742758 877.590121 826.148587 866.801009 810.43533 865.021658 799.646219 873.615827 718.470035 938.277495 618.001779 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 767.182496 49.951219 974.048781 256.817504 974.048781 512 974.048781 599.492834 949.714859 683.336764 904.470807 755.960693 897.177109 767.668243 900.755245 783.071797 912.462793 790.365493 924.170342 797.659191 939.573897 794.081058 946.867595 782.373508 997.013826 701.880796 1024 608.898379 1024 512Z"  ></path><path d="M533.078812 691.418556C551.918022 691.418556 567.190219 706.673952 567.190219 725.511386L567.190219 734.541728C567.190219 753.370677 552.049365 768.634558 533.078812 768.634558L533.078812 768.634558C514.239601 768.634558 498.967405 753.379162 498.967405 734.541728L498.967405 725.511386C498.967405 706.682436 514.108258 691.418556 533.078812 691.418556L533.078812 691.418556ZM374.634146 418.654985C374.634146 418.654985 377.308518 442.210609 403.631972 442.210609 429.955424 442.210609 431.511799 418.654985 431.511799 418.654985 429.767552 342.380653 465.107535 306.162338 537.45591 309.760186 585.612324 315.19693 610.562654 342.380653 612.231066 391.391309 608.894242 413.21824 590.617557 441.441342 558.083539 475.90071 515.008196 519.47462 493.470524 558.49126 493.470524 592.950626L493.470524 628.289468C493.470524 628.289468 496.775846 649.365867 520.582206 649.365867 544.388565 649.365867 547.693888 628.289468 547.693888 628.289468L547.693888 603.744164C547.693888 574.961397 568.321517 540.342125 609.652612 500.28611 652.879629 460.469948 674.341463 424.091729 674.341463 391.391309 670.777131 300.725594 623.530758 253.473886 532.223166 249.796087 427.189099 248.037141 374.634146 304.323439 374.634146 418.654985Z"  ></path></symbol><symbol id="icon-information" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 629.410831 1024 740.826187 984.331046 830.768465 912.686662 841.557579 904.092491 843.33693 888.379234 834.742758 877.590121 826.148587 866.801009 810.43533 865.021658 799.646219 873.615827 718.470035 938.277495 618.001779 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 767.182496 49.951219 974.048781 256.817504 974.048781 512 974.048781 599.492834 949.714859 683.336764 904.470807 755.960693 897.177109 767.668243 900.755245 783.071797 912.462793 790.365493 924.170342 797.659191 939.573897 794.081058 946.867595 782.373508 997.013826 701.880796 1024 608.898379 1024 512Z"  ></path><path d="M499.512194 743.02439C499.512194 756.818039 510.694157 768 524.487806 768 538.281453 768 549.463415 756.818039 549.463415 743.02439L549.463415 424.585365C549.463415 410.791718 538.281453 399.609756 524.487806 399.609756 510.694157 399.609756 499.512194 410.791718 499.512194 424.585365L499.512194 743.02439Z"  ></path><path d="M499.512194 318.439025C499.512194 332.232672 510.694157 343.414635 524.487806 343.414635 538.281453 343.414635 549.463415 332.232672 549.463415 318.439025L549.463415 274.731708C549.463415 260.938059 538.281453 249.756098 524.487806 249.756098 510.694157 249.756098 499.512194 260.938059 499.512194 274.731708L499.512194 318.439025Z"  ></path></symbol><symbol id="icon-less" viewBox="0 0 1024 1024"><path d="M509.927514 387.159081C517.168621 379.168894 527.507586 379.262447 534.709532 387.493244L805.278364 696.714765C813.036915 705.581679 826.514517 706.480186 835.381431 698.721636 844.248346 690.963085 845.146852 677.485483 837.388303 668.618569L566.819471 359.397045C542.819471 331.968474 502.692194 331.60538 478.31207 358.507586L197.525612 668.340919C189.61372 677.071283 190.277222 690.562496 199.007586 698.474389 207.737949 706.386281 221.229163 705.722778 229.141056 696.992414L509.927514 387.159081Z"  ></path></symbol><symbol id="icon-moreunfold" viewBox="0 0 1024 1024"><path d="M478.31207 644.159081C502.692194 671.061286 542.819471 670.698193 566.819471 643.269621L837.388303 334.048098C845.146852 325.181184 844.248346 311.703582 835.381431 303.94503 826.514517 296.186481 813.036915 297.084988 805.278364 305.951902L534.709532 615.173423C527.507586 623.40422 517.168621 623.497773 509.927514 615.507586L229.141056 305.674253C221.229163 296.943889 207.737949 296.280386 199.007586 304.192277 190.277222 312.104171 189.61372 325.595383 197.525612 334.325747L478.31207 644.159081Z"  ></path></symbol><symbol id="icon-more" viewBox="0 0 1024 1024"><path d="M642.174253 504.59418C650.164439 511.835287 650.070886 522.174253 641.84009 529.376198L332.618569 799.94503C323.751654 807.703582 322.853148 821.181184 330.611697 830.048098 338.370249 838.915012 351.847851 839.813519 360.714765 832.05497L669.936288 561.486138C697.36486 537.486138 697.727953 497.358861 670.825747 472.978737L360.992414 192.192278C352.26205 184.280386 338.770837 184.943889 330.858944 193.674252 322.947053 202.404616 323.610556 215.895829 332.340919 223.807723L642.174253 504.59418Z"  ></path></symbol><symbol id="icon-pic" viewBox="0 0 1024 1024"><path d="M475.224371 575.792506 440.035586 579.864725 667.59114 724.380853 683.870889 734.719806 699.396883 723.24605 1012.285773 492.020243 1024 483.363394 1024 468.645161 1024 208.704131C1024 128.805961 960.311036 64 881.771738 64L28.444444 64 0 64 0 92.903226 0 815.429577C0 895.261382 63.696326 960 142.228263 960L995.555556 960 1024 960 1024 931.096774 1024 670.967742C1024 655.00493 1011.264988 642.064516 995.555556 642.064516 979.846123 642.064516 967.11111 655.00493 967.11111 670.967742L967.11111 931.096774 995.555556 902.193549 142.228263 902.193549C95.11813 902.193549 56.888889 863.338746 56.888889 815.429577L56.888889 92.903226 28.444444 121.806452 881.771738 121.806452C928.874507 121.806452 967.11111 160.713662 967.11111 208.704131L967.11111 468.645161 978.825338 445.27008 665.93645 676.495887 697.742193 675.361082 470.186637 530.844951 450.998204 518.65875 434.997852 534.917171 207.442296 766.142978C196.334049 777.430389 196.334049 795.730901 207.442296 807.018313 218.550543 818.305724 236.56057 818.305724 247.668815 807.018313L475.224371 575.792506Z"  ></path><path d="M341.333333 338.580644C341.333333 282.710807 296.760794 237.419355 241.777777 237.419355 186.794763 237.419355 142.222222 282.710807 142.222222 338.580644 142.222222 394.450483 186.794763 439.741935 241.777777 439.741935 296.760794 439.741935 341.333333 394.450483 341.333333 338.580644ZM199.111111 338.580644C199.111111 314.636429 218.213628 295.225807 241.777777 295.225807 265.341926 295.225807 284.444444 314.636429 284.444444 338.580644 284.444444 362.524862 265.341926 381.935484 241.777777 381.935484 218.213628 381.935484 199.111111 362.524862 199.111111 338.580644Z"  ></path></symbol><symbol id="icon-qrcode" viewBox="0 0 1024 1024"><path d="M390.095238 70.243903 365.714285 45.788618 365.714285 388.162603 390.095238 363.707317 48.761905 363.707317 73.142857 388.162603 73.142857 45.788618 48.761905 70.243903 390.095238 70.243903ZM24.380952 21.333333 24.380952 45.788618 24.380952 388.162603 24.380952 412.617886 48.761905 412.617886 390.095238 412.617886 414.47619 412.617886 414.47619 388.162603 414.47619 45.788618 414.47619 21.333333 390.095238 21.333333 48.761905 21.333333 24.380952 21.333333Z"  ></path><path d="M390.095238 657.170731 365.714285 632.715447 365.714285 975.089431 390.095238 950.634146 97.666649 950.634146C84.112298 950.634146 73.142857 939.635025 73.142857 926.035586L73.142857 632.715447 48.761905 657.170731 390.095238 657.170731ZM24.380952 608.260162 24.380952 632.715447 24.380952 926.035586C24.380952 966.651334 57.185576 999.544715 97.666649 999.544715L390.095238 999.544715 414.47619 999.544715 414.47619 975.089431 414.47619 632.715447 414.47619 608.260162 390.095238 608.260162 48.761905 608.260162 24.380952 608.260162Z"  ></path><path d="M926.33335 70.243903C939.887701 70.243903 950.857143 81.243023 950.857143 94.842462L950.857143 388.162603 975.238095 363.707317 633.904762 363.707317 658.285715 388.162603 658.285715 45.788618 633.904762 70.243903 926.33335 70.243903ZM609.52381 21.333333 609.52381 45.788618 609.52381 388.162603 609.52381 412.617886 633.904762 412.617886 975.238095 412.617886 999.619049 412.617886 999.619049 388.162603 999.619049 94.842462C999.619049 54.226715 966.814423 21.333333 926.33335 21.333333L633.904762 21.333333 609.52381 21.333333Z"  ></path><path d="M975.238095 657.170731 950.857143 632.715447 950.857143 975.089431 975.238095 950.634146 633.904762 950.634146 658.285715 975.089431 658.285715 632.715447 633.904762 657.170731 975.238095 657.170731ZM609.52381 608.260162 609.52381 632.715447 609.52381 975.089431 609.52381 999.544715 633.904762 999.544715 975.238095 999.544715 999.619049 999.544715 999.619049 975.089431 999.619049 632.715447 999.619049 608.260162 975.238095 608.260162 633.904762 608.260162 609.52381 608.260162Z"  ></path><path d="M487.619049 388.440358C487.619049 401.946639 498.534771 412.895644 512 412.895644 525.465229 412.895644 536.380951 401.946639 536.380951 388.440358L536.380951 119.154471C536.380951 105.648191 525.465229 94.699187 512 94.699187 498.534771 94.699187 487.619049 105.648191 487.619049 119.154471L487.619049 388.440358Z"  ></path><path d="M585.142857 681.371383C585.142857 667.865103 574.227134 656.9161 560.761905 656.9161 547.296676 656.9161 536.380951 667.865103 536.380951 681.371383L536.380951 975.089431C536.380951 988.595712 547.296676 999.544715 560.761905 999.544715 574.227134 999.544715 585.142857 988.595712 585.142857 975.089431L585.142857 681.371383Z"  ></path><path d="M487.619049 779.447155C487.619049 765.940875 476.703324 754.99187 463.238095 754.99187 449.772866 754.99187 438.857143 765.940875 438.857143 779.447155L438.857143 975.089431C438.857143 988.595712 449.772866 999.544715 463.238095 999.544715 476.703324 999.544715 487.619049 988.595712 487.619049 975.089431L487.619049 779.447155Z"  ></path><path d="M999.619049 534.894308C1013.084275 534.894308 1024 523.945306 1024 510.439025 1024 496.932745 1013.084275 485.98374 999.619049 485.98374L24.380952 485.98374C10.915724 485.98374 0 496.932745 0 510.439025 0 523.945306 10.915724 534.894308 24.380952 534.894308L999.619049 534.894308Z"  ></path></symbol><symbol id="icon-refresh" viewBox="0 0 1024 1024"><path d="M512 0C229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 761.325865 1024 973.201958 844.559514 1016.153097 601.764678 1018.151127 590.470182 1019.771663 579.089182 1021.010022 567.635639 1022.492753 553.921916 1012.577574 541.602754 998.863851 540.120021 985.150125 538.637291 972.830963 548.552469 971.348233 562.266193 970.230573 572.603369 968.768273 582.873092 966.965602 593.063262 928.217702 812.097967 736.992706 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 698.044361 49.951219 863.703281 160.916567 936.293348 328.7543 941.768939 341.414579 956.470965 347.238921 969.131243 341.763332 981.791522 336.287742 987.615863 321.585717 982.140273 308.925438 901.710383 122.961007 718.143277 0 512 0Z"  ></path><path d="M958.442797 350.246554 983.418406 325.270944 724.292683 325.270944C710.499034 325.270944 699.317073 336.452907 699.317073 350.246554 699.317073 364.040203 710.499034 375.222163 724.292683 375.222163L983.418406 375.222163C997.212055 375.222163 1008.394016 364.040203 1008.394016 350.246554L1008.394016 74.926829C1008.394016 61.133181 997.212055 49.951219 983.418406 49.951219 969.624757 49.951219 958.442797 61.133181 958.442797 74.926829L958.442797 350.246554Z"  ></path></symbol><symbol id="icon-rfq" viewBox="0 0 1024 1024"><path d="M797.970974 491.89619 761.457982 491.073534 951.72983 727.092303 970.333549 688.354662 850.968469 688.354662 827.095452 688.354662 827.095452 712.168617 827.095452 976.372094 850.968471 952.55814 683.857357 952.558118 707.73037 976.372073 707.73037 809.674398C707.73037 796.522315 697.042057 785.860444 683.857355 785.860444 670.672651 785.860444 659.984337 796.522315 659.984337 809.674398L659.984337 976.372073 659.984337 1000.186022 683.85735 1000.186025 850.968465 1000.186046 874.841485 1000.18605 874.841485 976.372094 874.841485 712.168617 850.968469 735.982569 970.333549 735.982569 1020.166487 735.982569 988.937265 697.244928 798.665419 461.226157 780.898613 439.187693 762.152427 460.403501 552.503424 697.671663C543.785389 707.53821 544.736282 722.586507 554.6273 731.282974 564.518319 739.979439 579.603938 739.030899 588.321973 729.164352L797.970974 491.89619Z"  ></path><path d="M153.857145 928.744186C107.228929 928.744186 69.079365 889.386191 69.079365 840.486526L69.079365 23.813953 45.206349 47.627907 748.087665 47.627907C794.753677 47.627907 833.015872 87.152172 833.015872 136.104066L833.015872 562.592239 880.761905 562.592239 880.761905 136.104066C880.761905 61.213064 821.503465 0 748.087665 0L45.206349 0 21.333333 0 21.333333 23.813953 21.333333 840.486526C21.333333 915.338285 80.493186 976.372094 153.857145 976.372094L687.308156 976.372094 687.308156 928.744186 153.857145 928.744186Z"  ></path><path d="M735.286219 381.023255C748.470923 381.023255 759.159236 370.361387 759.159236 357.209301 759.159236 344.057218 748.470923 333.395349 735.286219 333.395349L189.399822 333.395349C176.215119 333.395349 165.526806 344.057218 165.526806 357.209301 165.526806 370.361387 176.215119 381.023255 189.399822 381.023255L735.286219 381.023255Z"  ></path><path d="M737.956448 238.139535C751.14115 238.139535 761.829463 227.477664 761.829463 214.325581 761.829463 201.173498 751.14115 190.511628 737.956448 190.511628L192.070049 190.511628C178.885347 190.511628 168.197034 201.173498 168.197034 214.325581 168.197034 227.477664 178.885347 238.139535 192.070049 238.139535L737.956448 238.139535Z"  ></path></symbol><symbol id="icon-search" viewBox="0 0 1024 1024"><path d="M1001.526404 991.699618C999.922771 986.822379 999.922771 986.822379 998.661741 984.531443 997.556333 982.547938 996.293839 980.724943 994.702325 978.653549 992.500075 975.787264 989.423708 972.169135 985.358477 967.619563 978.223881 959.634933 967.82403 948.546074 954.04227 934.18551 932.495573 911.733901 910.909628 889.684252 858.479859 836.391998 806.561909 783.619985 784.782022 761.370402 763.425645 739.113463 750.035742 725.158933 739.986204 714.441517 733.331893 706.993367 730.0273 703.294545 727.65239 700.501581 726.365602 698.828322 727.222236 700.438869 727.222236 700.438869 728.57702 704.41879 730.685899 711.913483 730.685899 711.913483 721.610157 729.174018 803.853596 649.91606 851.33145 539.987051 851.33145 422.399774 851.33145 189.11482 665.530044 0 436.332393 0 207.134741 0 21.333333 189.11482 21.333333 422.399774 21.333333 655.684727 207.134741 844.799548 436.332393 844.799548 441.356706 844.799548 446.556279 844.56416 452.347883 844.11767 456.487002 843.798575 460.079727 843.454155 466.651669 842.776804 479.958906 841.405269 484.804847 841.014569 490.397372 841.014558 499.896397 841.014541 514.964663 837.646929 537.39015 831.429666 540.021178 830.700239 542.719546 829.938705 545.476431 829.148403 553.976567 826.711712 562.667765 824.108471 571.097184 821.505798 576.160226 819.942528 580.026436 818.721914 582.233225 818.013231 595.480279 813.759108 602.830912 799.380094 598.651326 785.896804 594.471738 772.413515 580.344653 764.931795 567.097598 769.18592 565.058735 769.840674 561.367413 771.006074 556.494825 772.510539 548.364858 775.020755 539.986116 777.530404 531.839533 779.865745 529.217662 780.617342 526.657771 781.339795 524.170112 782.029476 506.936476 786.807345 493.480702 789.814579 490.397278 789.814586 482.458716 789.814601 476.720548 790.277235 461.583853 791.837329 455.416051 792.473024 452.140828 792.787008 448.548723 793.063932 443.933724 793.419714 439.960704 793.599575 436.332393 793.599575 234.916275 793.599575 71.63625 627.407763 71.63625 422.399774 71.63625 217.391785 234.916275 51.199973 436.332393 51.199973 637.74851 51.199973 801.028533 217.391785 801.028533 422.399774 801.028533 525.775443 759.336083 622.309077 687.025254 691.994987 677.769918 709.563029 677.769918 709.563029 679.976768 717.62707 681.566101 722.305182 681.566101 722.305182 682.808947 724.550298 683.910231 726.511657 685.170219 728.326692 686.754421 730.386692 688.964348 733.260343 692.047349 736.886044 696.115554 741.439575 703.261474 749.437982 713.66454 760.532418 727.438434 774.887134 749.001325 797.359294 770.84669 819.675765 822.916311 872.601946 875.194278 925.7399 896.716879 947.724843 918.057933 969.962174 931.455439 983.922347 941.502012 994.634524 948.144469 1002.068378 951.440527 1005.757135 953.805218 1008.538259 955.077419 1010.194061 954.139053 1008.441707 954.139053 1008.441707 952.75811 1004.249822 950.686453 996.172693 950.686453 996.172693 960.850534 978.849743 950.24269 987.977788 948.913429 1004.130236 957.881542 1014.927251 966.849655 1025.724265 982.719104 1027.077231 993.326948 1017.949188 1003.683753 1000.332838 1003.683753 1000.332838 1001.526404 991.699618Z"  ></path></symbol><symbol id="icon-selected" viewBox="0 0 1024 1024"><path d="M464.247574 677.487844C474.214622 686.649009 489.665824 686.201589 499.086059 676.479029L798.905035 367.037898C808.503379 357.131511 808.253662 341.319801 798.347275 331.721456 788.44089 322.12311 772.62918 322.372828 763.030833 332.279215L463.211858 641.720346 498.050342 640.711531 316.608839 473.940462C306.453341 464.606085 290.653676 465.271736 281.319299 475.427234 271.984922 485.582733 272.650573 501.382398 282.806071 510.716775L464.247574 677.487844Z"  ></path></symbol><symbol id="icon-set" viewBox="0 0 1024 1024"><path d="M825.606018 647.538283 819.263571 660.258455 827.207981 672.04471 905.327294 787.941807 908.52362 756.858321 769.540324 892.373873 799.04025 888.884996 671.47766 812.883319 660.919793 806.592954 649.583401 811.338837C641.524386 814.712674 633.321491 817.795042 625.041941 820.560337L611.811631 824.979142 608.915804 838.623962 580.996546 970.176486 604.846304 950.857143 408.272431 950.857141 431.938677 969.378097 397.841517 831.672939 394.800523 819.391548 383.007648 814.808062C375.650317 811.948518 368.359849 808.829278 361.19018 805.473457L349.017562 799.775966 337.701214 807.026784 217.88134 883.799985 248.055031 886.871665 109.071736 751.363721 112.710251 781.768288 190.651237 657.409417 197.546671 646.407394 192.26576 634.545545C188.597667 626.306366 185.255827 617.89434 182.266902 609.377882L177.674889 596.293685 164.082002 593.552105 29.201333 566.347718 48.761905 590.247401 48.761905 398.59747 29.96636 422.330022 171.221091 389.086012 183.450436 386.207861 188.204044 374.578423C191.634415 366.18621 195.421037 357.903851 199.530538 349.803328L205.959792 337.130182 198.101254 325.29011 124.686421 214.679584 121.526273 245.488151 259.687038 108.701216 229.912147 112.235203 352.693357 186.524314 363.287226 192.934163 374.712497 188.161388C381.330477 185.396804 388.053308 182.826231 394.835279 180.46681L407.314641 176.12529 410.490432 163.299629 443.437389 30.241004 419.771153 48.761905 616.327194 48.761905 592.477417 29.442474 621.325088 165.37204 624.105103 178.471403 636.651202 183.152979C646.841886 186.955632 656.865493 191.232395 666.627682 195.943104L678.796045 201.814904 690.225485 194.609697 803.674639 123.090468 773.791902 120.057533 914.162801 254.754833 910.479401 224.06547 834.210227 343.81367 827.217813 354.792273 832.449542 366.710857C836.047972 374.908567 839.325363 383.281107 842.252943 391.75287L846.63933 404.446089 859.712006 407.52234 994.034289 439.130935 975.238095 415.398229 975.238095 607.04816 994.798163 583.14858 852.982818 611.75475 840.250379 614.323063 835.279123 626.322974C832.31875 633.468898 829.086927 640.557101 825.606018 647.538283ZM857.803703 635.65433 862.624587 659.553909 1004.439932 630.94774 1024 627.002195 1024 607.04816 1024 415.398229 1024 396.088627 1005.203806 391.665525 870.881523 360.056928 865.296766 383.789634 888.340587 375.826398C884.98377 366.112521 881.22675 356.514699 877.099219 347.111631L854.774381 356.911245 875.338534 370.008819 951.607706 250.260619 962.34231 233.406505 947.924307 219.571255 807.553406 84.873956 793.797813 71.674344 777.670669 81.841021 664.221513 153.36025 677.223499 173.984973 687.819315 152.026842C676.702449 146.662439 665.295885 141.79561 653.698526 137.468057L645.174865 160.310518 669.02464 155.248996 640.176969 19.31943 636.0769 0 616.327194 0 419.771153 0 400.690923 0 396.104919 18.520901 363.157965 151.579527 386.824198 157.439578 378.813118 134.412346C371.096704 137.096855 363.448934 140.021092 355.916838 143.167538L365.314667 165.664463 377.935979 144.804613 255.154767 70.515502 238.88953 60.674174 225.379878 74.049489 87.219113 210.836425 72.972426 224.941449 84.058966 241.644992 157.473798 352.255518 177.787526 338.772813 156.044514 327.742298C151.336434 337.02272 146.99905 346.509743 143.067323 356.128497L165.635683 365.353459 160.050276 341.620907 18.795545 374.864917 0 379.28841 0 398.59747 0 590.247401 0 610.201867 19.560572 614.147083 154.441241 641.351467 159.261622 617.451787 136.256342 625.52569C139.682853 635.288979 143.513008 644.930182 147.71909 654.377779L169.992425 644.461662 149.333613 631.513907 71.392628 755.872779 60.94464 772.543085 75.031143 786.277348 214.014438 921.785293 227.881289 935.305393 244.18813 924.856971 364.008004 848.08377 350.854609 827.555277 340.519036 849.637097C348.675428 853.454763 356.968563 857.002997 365.342891 860.257811L374.17527 837.532937 350.509022 843.392932 384.606182 981.098091 389.192156 999.619046 408.272431 999.619046 604.846304 999.619049 624.595936 999.619049 628.696062 980.299706 656.615319 848.747183 632.765562 843.685572 640.489184 866.810807C649.912247 863.663588 659.243565 860.157199 668.413638 856.318227L658.998519 833.828531 646.519381 854.773745 774.081971 930.775422 790.172006 940.36185 803.581897 927.286545 942.565193 791.770995 957.136469 777.563281 945.761519 760.687509 867.642208 644.790413 847.425094 658.417562 869.244171 669.296841C873.230259 661.302494 876.932843 653.181798 880.328282 644.985685L857.803703 635.65433Z"  ></path><path d="M731.428572 499.809523C731.428572 385.355085 638.644915 292.571428 524.190477 292.571428 409.736036 292.571428 316.952382 385.355085 316.952382 499.809523 316.952382 614.263964 409.736036 707.047618 524.190477 707.047618 553.504879 707.047618 582.005801 700.942889 608.253005 689.28262 620.558583 683.815889 626.102566 669.408589 620.635836 657.10301 615.169107 644.797434 600.761807 639.253451 588.456228 644.720179 568.411953 653.624811 546.651767 658.285715 524.190477 658.285715 436.666494 658.285715 365.714285 587.333506 365.714285 499.809523 365.714285 412.28554 436.666494 341.333333 524.190477 341.333333 611.71446 341.333333 682.666667 412.28554 682.666667 499.809523 682.666667 511.374255 681.431994 522.7624 679.007782 533.847245 676.130985 547.001574 684.462569 559.997374 697.616898 562.874172 710.77123 565.75097 723.767027 557.419386 726.643825 544.265056 729.815238 529.763582 731.428572 514.882835 731.428572 499.809523Z"  ></path></symbol><symbol id="icon-smile" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 629.410831 1024 740.826187 984.331046 830.768465 912.686662 841.557579 904.092491 843.33693 888.379234 834.742758 877.590121 826.148587 866.801009 810.43533 865.021658 799.646219 873.615827 718.470035 938.277495 618.001779 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 767.182496 49.951219 974.048781 256.817504 974.048781 512 974.048781 599.492834 949.714859 683.336764 904.470807 755.960693 897.177109 767.668243 900.755245 783.071797 912.462793 790.365493 924.170342 797.659191 939.573897 794.081058 946.867595 782.373508 997.013826 701.880796 1024 608.898379 1024 512Z"  ></path><path d="M337.170731 499.512194C371.654852 499.512194 399.609756 471.557291 399.609756 437.073171 399.609756 402.58905 371.654852 374.634146 337.170731 374.634146 302.686611 374.634146 274.731708 402.58905 274.731708 437.073171 274.731708 471.557291 302.686611 499.512194 337.170731 499.512194ZM711.804879 499.512194C746.288998 499.512194 774.243902 471.557291 774.243902 437.073171 774.243902 402.58905 746.288998 374.634146 711.804879 374.634146 677.320757 374.634146 649.365854 402.58905 649.365854 437.073171 649.365854 471.557291 677.320757 499.512194 711.804879 499.512194Z"  ></path><path d="M352.788105 768.770967C396.165222 803.472661 453.151987 824.195121 524.487806 824.195121 595.823622 824.195121 652.810387 803.472661 696.187505 768.770967 722.700531 747.560546 738.882517 725.984565 746.631548 710.486505 752.800254 698.149092 747.799529 683.146916 735.462114 676.978208 723.124702 670.809502 708.122526 675.810227 701.953818 688.147642 701.03616 689.982957 698.492224 694.172969 694.165854 699.941463 686.602473 710.025971 676.927317 720.210345 664.983226 729.765617 630.311565 757.502948 584.273939 774.243902 524.487806 774.243902 464.70167 774.243902 418.664045 757.502948 383.992384 729.765617 372.048292 720.210345 362.373137 710.025971 354.809756 699.941463 350.483386 694.172969 347.93945 689.982957 347.021792 688.147642 340.853084 675.810227 325.850908 670.809502 313.513495 676.978208 301.176081 683.146916 296.175356 698.149092 302.344062 710.486505 310.093092 725.984565 326.275078 747.560546 352.788105 768.770967Z"  ></path></symbol><symbol id="icon-success" viewBox="0 0 1024 1024"><path d="M464.247573 677.487844C474.214622 686.649009 489.665824 686.201589 499.086059 676.479029L798.905035 367.037897C808.503379 357.131511 808.253662 341.319802 798.347275 331.721455 788.44089 322.12311 772.62918 322.372828 763.030833 332.279215L463.211857 641.720346 498.050342 640.711531 316.608838 473.940461C306.453342 464.606084 290.653675 465.271735 281.319298 475.427234 271.984922 485.582733 272.650573 501.382398 282.806071 510.716774L464.247573 677.487844Z"  ></path><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 629.410831 1024 740.826187 984.331046 830.768465 912.686662 841.557579 904.092491 843.33693 888.379234 834.742758 877.590121 826.148587 866.801009 810.43533 865.021658 799.646219 873.615827 718.470035 938.277495 618.001779 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 767.182496 49.951219 974.048781 256.817504 974.048781 512 974.048781 599.492834 949.714859 683.336764 904.470807 755.960693 897.177109 767.668243 900.755245 783.071797 912.462793 790.365493 924.170342 797.659191 939.573897 794.081058 946.867595 782.373508 997.013826 701.880796 1024 608.898379 1024 512Z"  ></path></symbol><symbol id="icon-survey" viewBox="0 0 1024 1024"><path d="M722.355804 46.545455C761.006291 46.545455 792.380951 77.833977 792.380951 116.372656L792.380951 458.499072 799.081094 442.186782 401.874746 844.77862 418.539682 837.818182 138.070006 837.818182C99.387643 837.818182 68.063492 806.671445 68.063492 768.228572L68.063492 23.272727 44.698413 46.545455 722.355804 46.545455ZM21.333333 0 21.333333 23.272727 21.333333 768.228572C21.333333 832.395723 73.59726 884.363637 138.070006 884.363637L418.539682 884.363637 428.337293 884.363637 435.204619 877.403198 832.410967 474.81136 839.11111 468.020375 839.11111 458.499072 839.11111 116.372656C839.11111 52.140243 786.827324 0 722.355804 0L44.698413 0 21.333333 0Z"  ></path><path d="M775.859347 588.634605 759.337741 605.09091 775.859347 621.547213 869.319663 714.638121 885.841269 731.094426 902.362876 714.638121 972.458114 644.81994 988.979721 628.363637 972.458114 611.907332 878.997796 518.816425 862.47619 502.360122 845.954583 518.816425 775.859347 588.634605ZM845.954583 551.72903 939.414901 644.81994 939.414901 611.907332 869.319663 681.725515 902.362876 681.725515 808.902558 588.634605 808.902558 621.547213 878.997796 551.72903 845.954583 551.72903Z"  ></path><path d="M518.843473 844.634605 513.841133 849.617173 512.453734 856.526752 489.088655 972.890387 482.215251 1007.121568 516.58227 1000.275332 633.407665 977.002605 640.344663 975.620689 645.347004 970.638121 902.362876 714.638121 918.884482 698.181818 902.362876 681.725515 808.902558 588.634605 792.380951 572.178302 775.859347 588.634605 518.843473 844.634605ZM775.859347 621.547213 869.319663 714.638121 869.319663 681.725515 612.303791 937.725515 624.243127 931.361033 507.41773 954.633758 534.911345 982.018703 558.276425 865.655066 551.886686 877.547213 808.902558 621.547213 775.859347 621.547213Z"  ></path><path d="M426.576706 597.730927C444.201086 597.730927 458.488469 611.946185 458.488469 629.499247L458.488469 637.913884C458.488469 655.459042 444.323959 669.682203 426.576706 669.682203L426.576706 669.682203C408.952326 669.682203 394.664943 655.466946 394.664943 637.913884L394.664943 629.499247C394.664943 611.954089 408.829453 597.730927 426.576706 597.730927L426.576706 597.730927ZM278.349205 343.564873C278.349205 343.564873 280.851125 365.514432 305.477133 365.514432 330.103138 365.514432 331.559155 343.564873 331.559155 343.564873 329.927383 272.491063 362.988497 238.74218 430.67155 242.094718 475.722639 247.160777 499.06407 272.491063 500.624896 318.160083 497.503245 338.498816 480.405116 364.797615 449.969026 396.907479 409.671358 437.510443 389.522524 473.866857 389.522524 505.976721L389.522524 538.906097C389.522524 538.906097 392.614705 558.545468 414.885933 558.545468 437.157161 558.545468 440.249342 538.906097 440.249342 538.906097L440.249342 516.034336C440.249342 489.214031 459.546816 456.955164 498.21271 419.630238 538.652271 382.528817 558.730159 348.630931 558.730159 318.160083 555.395669 233.676122 511.195938 189.646123 425.776235 186.219083 327.515198 184.580064 278.349205 237.028661 278.349205 343.564873Z"  ></path></symbol><symbol id="icon-training" viewBox="0 0 1024 1024"><path d="M887.286976 122.88C927.302833 122.88 959.646052 155.814754 959.646052 196.762688L959.646052 663.552 983.843138 638.976 136.713024 638.976C96.697168 638.976 64.353947 606.041246 64.353947 565.093312L64.353947 98.304 40.156863 122.88 887.286976 122.88ZM15.959779 73.728 15.959779 98.304 15.959779 565.093312C15.959779 633.158735 69.941754 688.128 136.713024 688.128L983.843138 688.128 1008.040222 688.128 1008.040222 663.552 1008.040222 196.762688C1008.040222 128.697264 954.058246 73.728 887.286976 73.728L40.156863 73.728 15.959779 73.728Z"  ></path><path d="M195.578315 964.786556C186.532947 974.777739 187.174803 990.32474 197.011941 999.511755 206.849078 1008.698769 222.156373 1008.046863 231.201741 998.05568L450.40665 755.929948C459.452017 745.938765 458.810161 730.391763 448.973022 721.204749 439.135885 712.017734 423.828591 712.669643 414.783221 722.660826L195.578315 964.786556Z"  ></path><path d="M798.39181 998.05568C807.437178 1008.046863 822.744474 1008.698769 832.581611 999.511755 842.418748 990.32474 843.060604 974.777739 834.015236 964.786556L614.81033 722.660826C605.76496 712.669643 590.457666 712.017734 580.620529 721.204749 570.78339 730.391763 570.141534 745.938765 579.186903 755.929948L798.39181 998.05568Z"  ></path><path d="M441.76944 103.615949C441.76944 114.25519 452.602844 122.88 465.966524 122.88 479.330204 122.88 490.163607 114.25519 490.163607 103.615949L490.163607 19.264051C490.163607 8.62481 479.330204 0 465.966524 0 452.602844 0 441.76944 8.62481 441.76944 19.264051L441.76944 103.615949Z"  ></path><path d="M514.796777 307.058758C528.160457 307.058758 538.99386 296.055708 538.99386 282.482758 538.99386 268.909809 528.160457 257.906758 514.796777 257.906758L158.588801 257.906758C145.225121 257.906758 134.391718 268.909809 134.391718 282.482758 134.391718 296.055708 145.225121 307.058758 158.588801 307.058758L514.796777 307.058758Z"  ></path><path d="M514.796777 465.249103C528.160457 465.249103 538.99386 454.246054 538.99386 440.673103 538.99386 427.100154 528.160457 416.097103 514.796777 416.097103L158.588801 416.097103C145.225121 416.097103 134.391718 427.100154 134.391718 440.673103 134.391718 454.246054 145.225121 465.249103 158.588801 465.249103L514.796777 465.249103Z"  ></path><path d="M680.30294 552.391044C728.899441 514.220079 758.198767 456.685922 758.198767 378.258908L758.198767 216.841754C758.198767 203.268804 747.365363 192.265754 734.001683 192.265754 720.638003 192.265754 709.804599 203.268804 709.804599 216.841754L709.804599 378.258908C709.804599 441.071906 687.727774 484.423469 650.697359 513.509651 637.686323 523.729393 623.667934 531.437086 609.678551 536.931187 601.472998 540.153783 595.348683 541.871802 592.405429 542.44976 579.284725 545.026231 570.704734 557.917867 573.241481 571.244036 575.778227 584.570204 588.471098 593.284557 601.591802 590.708085 622.119765 586.677073 651.18515 575.262118 680.30294 552.391044Z"  ></path><path d="M752.643211 232.510336C761.163307 222.053681 759.724115 206.561827 749.428683 197.908309 739.133252 189.254791 723.880252 190.716521 715.360156 201.173174L605.757702 335.687469C597.237604 346.144122 598.676798 361.635977 608.972228 370.289495 619.267661 378.943012 634.520659 377.481284 643.040757 367.024629L752.643211 232.510336Z"  ></path><path d="M752.643211 201.173174C744.123113 190.716521 728.870114 189.254791 718.574682 197.908309 708.279251 206.561827 706.84006 222.053681 715.360156 232.510336L824.962609 367.024629C833.482707 377.481284 848.735706 378.943012 859.031136 370.289495 869.326569 361.635977 870.76576 346.144122 862.245664 335.687469L752.643211 201.173174Z"  ></path></symbol><symbol id="icon-viewgallery" viewBox="0 0 1024 1024"><path d="M147.04975 49.951219 348.539994 49.951219C390.229001 49.951219 423.931625 83.45593 423.931625 125.058766L423.931625 349.47782C423.931625 390.977141 390.167209 424.585365 348.539994 424.585365L147.04975 424.585365C105.360742 424.585365 71.65812 391.080655 71.65812 349.47782L71.65812 125.058766C71.65812 83.559445 105.422534 49.951219 147.04975 49.951219ZM21.333333 349.47782C21.333333 418.650511 77.549527 474.536585 147.04975 474.536585L348.539994 474.536585C417.992574 474.536585 474.25641 418.533018 474.25641 349.47782L474.25641 125.058766C474.25641 55.886075 418.040215 0 348.539994 0L147.04975 0C77.597169 0 21.333333 56.003567 21.333333 125.058766L21.333333 349.47782Z"  ></path><path d="M675.460006 49.951219 876.950251 49.951219C918.639258 49.951219 952.341879 83.45593 952.341879 125.058766L952.341879 349.47782C952.341879 390.977141 918.577466 424.585365 876.950251 424.585365L675.460006 424.585365C633.770999 424.585365 600.068375 391.080655 600.068375 349.47782L600.068375 125.058766C600.068375 83.559445 633.832791 49.951219 675.460006 49.951219ZM549.74359 349.47782C549.74359 418.650511 605.959785 474.536585 675.460006 474.536585L876.950251 474.536585C946.402831 474.536585 1002.666667 418.533018 1002.666667 349.47782L1002.666667 125.058766C1002.666667 55.886075 946.450473 0 876.950251 0L675.460006 0C606.007426 0 549.74359 56.003567 549.74359 125.058766L549.74359 349.47782Z"  ></path><path d="M147.04975 599.414635 348.539994 599.414635C390.229001 599.414635 423.931625 632.919345 423.931625 674.52218L423.931625 898.941233C423.931625 940.440555 390.167209 974.048781 348.539994 974.048781L147.04975 974.048781C105.360742 974.048781 71.65812 940.54407 71.65812 898.941233L71.65812 674.52218C71.65812 633.022859 105.422534 599.414635 147.04975 599.414635ZM21.333333 898.941233C21.333333 968.113924 77.549527 1024 147.04975 1024L348.539994 1024C417.992574 1024 474.25641 967.996433 474.25641 898.941233L474.25641 674.52218C474.25641 605.349489 418.040215 549.463415 348.539994 549.463415L147.04975 549.463415C77.597169 549.463415 21.333333 605.466982 21.333333 674.52218L21.333333 898.941233Z"  ></path><path d="M874.686701 974.048781 868.289711 974.048781 845.457374 974.048781 776.173041 974.048781 675.395834 974.048781C633.745909 974.048781 600.068375 940.547631 600.068375 898.941233L600.068375 674.52218C600.068375 633.022859 633.832791 599.414635 675.460006 599.414635L876.950251 599.414635C918.642281 599.414635 952.341879 632.88393 952.341879 674.420529L952.341879 869.021858 952.341879 899.065886C952.341879 912.859535 963.607467 924.041495 977.504273 924.041495 991.401079 924.041495 1002.666667 912.859535 1002.666667 899.065886L1002.666667 869.021858 1002.666667 674.420529C1002.666667 605.303266 946.442579 549.463415 876.950251 549.463415L675.460006 549.463415C606.007426 549.463415 549.74359 605.466982 549.74359 674.52218L549.74359 898.941233C549.74359 968.110364 605.927488 1024 675.395834 1024L776.173041 1024 845.457374 1024 868.289711 1024 874.686701 1024 876.37206 1024C890.847055 1024 902.112642 1012.818039 902.112642 999.02439 902.112642 985.230741 890.847055 974.048781 876.950251 974.048781L874.686701 974.048781Z"  ></path></symbol><symbol id="icon-viewlist" viewBox="0 0 1024 1024"><path d="M146.571481 49.951219 347.295185 49.951219C388.825594 49.951219 422.4 83.45593 422.4 125.058766L422.4 349.47782C422.4 390.977141 388.764036 424.585365 347.295185 424.585365L146.571481 424.585365C105.041073 424.585365 71.466667 391.080655 71.466667 349.47782L71.466667 125.058766C71.466667 83.559445 105.10263 49.951219 146.571481 49.951219ZM21.333333 349.47782C21.333333 418.650511 77.335661 474.536585 146.571481 474.536585L347.295185 474.536585C416.483543 474.536585 472.533333 418.533018 472.533333 349.47782L472.533333 125.058766C472.533333 55.886075 416.531006 0 347.295185 0L146.571481 0C77.383122 0 21.333333 56.003567 21.333333 125.058766L21.333333 349.47782Z"  ></path><path d="M146.571481 599.414635 347.295185 599.414635C388.825594 599.414635 422.4 632.919345 422.4 674.52218L422.4 898.941233C422.4 940.440555 388.764036 974.048781 347.295185 974.048781L146.571481 974.048781C105.041073 974.048781 71.466667 940.54407 71.466667 898.941233L71.466667 674.52218C71.466667 633.022859 105.10263 599.414635 146.571481 599.414635ZM21.333333 898.941233C21.333333 968.113924 77.335661 1024 146.571481 1024L347.295185 1024C416.483543 1024 472.533333 967.996433 472.533333 898.941233L472.533333 674.52218C472.533333 605.349489 416.531006 549.463415 347.295185 549.463415L146.571481 549.463415C77.383122 549.463415 21.333333 605.466982 21.333333 674.52218L21.333333 898.941233Z"  ></path><path d="M998.933333 149.853658C1012.777271 149.853658 1024 138.671697 1024 124.878049 1024 111.0844 1012.777271 99.902439 998.933333 99.902439L572.8 99.902439C558.956062 99.902439 547.733333 111.0844 547.733333 124.878049 547.733333 138.671697 558.956062 149.853658 572.8 149.853658L998.933333 149.853658Z"  ></path><path d="M998.933333 274.731708C1012.777271 274.731708 1024 263.549745 1024 249.756098 1024 235.962449 1012.777271 224.780489 998.933333 224.780489L572.8 224.780489C558.956062 224.780489 547.733333 235.962449 547.733333 249.756098 547.733333 263.549745 558.956062 274.731708 572.8 274.731708L998.933333 274.731708Z"  ></path><path d="M998.933333 399.609756C1012.777271 399.609756 1024 388.427795 1024 374.634146 1024 360.840497 1012.777271 349.658537 998.933333 349.658537L572.8 349.658537C558.956062 349.658537 547.733333 360.840497 547.733333 374.634146 547.733333 388.427795 558.956062 399.609756 572.8 399.609756L998.933333 399.609756Z"  ></path><path d="M998.933333 674.341463C1012.777271 674.341463 1024 663.159503 1024 649.365854 1024 635.572205 1012.777271 624.390244 998.933333 624.390244L572.8 624.390244C558.956062 624.390244 547.733333 635.572205 547.733333 649.365854 547.733333 663.159503 558.956062 674.341463 572.8 674.341463L998.933333 674.341463Z"  ></path><path d="M998.933333 799.219511C1012.777271 799.219511 1024 788.037551 1024 774.243902 1024 760.450255 1012.777271 749.268292 998.933333 749.268292L572.8 749.268292C558.956062 749.268292 547.733333 760.450255 547.733333 774.243902 547.733333 788.037551 558.956062 799.219511 572.8 799.219511L998.933333 799.219511Z"  ></path><path d="M998.933333 924.097562C1012.777271 924.097562 1024 912.915599 1024 899.121952 1024 885.328303 1012.777271 874.146342 998.933333 874.146342L572.8 874.146342C558.956062 874.146342 547.733333 885.328303 547.733333 899.121952 547.733333 912.915599 558.956062 924.097562 572.8 924.097562L998.933333 924.097562Z"  ></path></symbol><symbol id="icon-warning" viewBox="0 0 1024 1024"><path d="M598.272514 158.17909C545.018272 71.994036 451.264177 71.951401 397.724122 158.397341L25.049726 760.118586C-28.93569 847.283607 14.324655 927.325257 116.435565 929.308966L891.057077 929.313666C993.88467 931.315989 1036.926865 868.038259 983.25955 781.189694 980.374633 776.521099 980.374633 776.521099 971.719878 762.515313 967.393745 755.514432 967.393745 755.514432 963.78822 749.679695 956.511588 737.90409 941.113263 734.285867 929.3951 741.59817 917.676937 748.910473 914.076365 764.384279 921.352996 776.159885 924.958522 781.994622 924.958522 781.994622 929.284655 788.995503 937.939409 803.001289 937.939409 803.001289 940.824326 807.669884 972.284602 858.581314 957.441559 880.402549 891.539823 879.122276L116.918309 879.117577C54.037254 877.891296 33.95555 840.735497 67.458075 786.642217L440.132471 184.920971C474.112981 130.055931 522.112175 130.077759 556.029583 184.965509L857.08969 656.83971C864.534622 668.508595 879.98329 671.9032 891.595253 664.421773 903.207217 656.940343 906.585263 641.415949 899.140331 629.747063L598.272514 158.17909Z"  ></path><path d="M474.536585 619.793346C474.536585 633.654611 485.718547 644.891386 499.512194 644.891386 513.305843 644.891386 524.487806 633.654611 524.487806 619.793346L524.487806 299.793346C524.487806 285.932082 513.305843 274.695307 499.512194 274.695307 485.718547 274.695307 474.536585 285.932082 474.536585 299.793346L474.536585 619.793346Z"  ></path><path d="M474.465781 776.736145C474.565553 790.597047 485.828105 801.75225 499.621393 801.651987 513.414679 801.551725 524.515467 790.233967 524.415695 776.373065L523.955031 712.375667C523.855258 698.514767 512.592708 687.359563 498.79942 687.459825 485.006133 687.560087 473.905346 698.877847 474.005118 712.738748L474.465781 776.736145Z"  ></path></symbol><symbol id="icon-wrong" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 629.410831 1024 740.826187 984.331046 830.768465 912.686662 841.557579 904.092491 843.33693 888.379234 834.742758 877.590121 826.148587 866.801009 810.43533 865.021658 799.646219 873.615827 718.470035 938.277495 618.001779 974.048781 512 974.048781 256.817504 974.048781 49.951219 767.182496 49.951219 512 49.951219 256.817504 256.817504 49.951219 512 49.951219 767.182496 49.951219 974.048781 256.817504 974.048781 512 974.048781 599.492834 949.714859 683.336764 904.470807 755.960693 897.177109 767.668243 900.755245 783.071797 912.462793 790.365493 924.170342 797.659191 939.573897 794.081058 946.867595 782.373508 997.013826 701.880796 1024 608.898379 1024 512Z"  ></path><path d="M331.838918 663.575492C322.174057 673.416994 322.317252 689.230029 332.158756 698.894891 342.000258 708.559753 357.813293 708.416557 367.478155 698.575053L717.473766 342.182707C727.138628 332.341205 726.995433 316.528171 717.153931 306.863309 707.312427 297.198447 691.499394 297.341643 681.834532 307.183147L331.838918 663.575492Z"  ></path><path d="M681.834532 698.575053C691.499394 708.416557 707.312427 708.559753 717.153931 698.894891 726.995433 689.230029 727.138628 673.416994 717.473766 663.575492L367.478155 307.183147C357.813293 297.341643 342.000258 297.198447 332.158756 306.863309 322.317252 316.528171 322.174057 332.341205 331.838918 342.182707L681.834532 698.575053Z"  ></path></symbol><symbol id="icon-account" viewBox="0 0 1024 1024"><path d="M793.6 316.991454C793.6 153.703982 661.792629 21.333333 499.2 21.333333 336.607371 21.333333 204.8 153.703982 204.8 316.991454 204.8 480.278923 336.607371 612.649572 499.2 612.649572 661.792629 612.649572 793.6 480.278923 793.6 316.991454ZM256 316.991454C256 182.101803 364.88435 72.752137 499.2 72.752137 633.51565 72.752137 742.4 182.101803 742.4 316.991454 742.4 451.881103 633.51565 561.230769 499.2 561.230769 364.88435 561.230769 256 451.881103 256 316.991454Z"  ></path><path d="M0 998.290598 0 1024 25.6 1024 486.4 1024 998.4 1024 1024 1024 1024 998.290598C1024 767.462671 787.090923 561.230769 512 561.230769 495.448045 561.230769 478.989086 561.900892 462.660538 563.232578 448.568439 564.381869 485.255599 576.786276 486.4 590.938596 501.350035 589.719337 496.831226 612.649572 512 612.649572 760.310844 612.649572 972.8 797.623669 972.8 998.290598L998.4 972.581197 486.4 972.581197 25.6 972.581197 51.2 998.290598C51.2 861.757427 137.013906 736.945338 275.263548 667.439085 287.906261 661.082846 293.024384 645.637353 286.695191 632.94061 280.366001 620.243866 264.986234 615.103872 252.34352 621.460111 97.581613 699.268053 0 841.195691 0 998.290598Z"  ></path></symbol><symbol id="icon-add" viewBox="0 0 1024 1024"><path d="M853.333333 533.333333C865.115407 533.333333 874.666667 523.782074 874.666667 512 874.666667 500.217926 865.115407 490.666667 853.333333 490.666667L170.666667 490.666667C158.884592 490.666667 149.333333 500.217926 149.333333 512 149.333333 523.782074 158.884592 533.333333 170.666667 533.333333L853.333333 533.333333Z"  ></path><path d="M490.666667 853.333333C490.666667 865.115407 500.217926 874.666667 512 874.666667 523.782074 874.666667 533.333333 865.115407 533.333333 853.333333L533.333333 170.666667C533.333333 158.884592 523.782074 149.333333 512 149.333333 500.217926 149.333333 490.666667 158.884592 490.666667 170.666667L490.666667 853.333333Z"  ></path></symbol><symbol id="icon-atm" viewBox="0 0 1024 1024"><path d="M786.731708 648C807.42218 648 824.195121 603.109084 824.195121 547.733333 824.195121 492.357583 807.42218 447.466667 786.731708 447.466667 766.041235 447.466667 749.268292 492.357583 749.268292 547.733333 749.268292 603.109084 766.041235 648 786.731708 648ZM462.048781 698.133333C482.739253 698.133333 499.512194 658.853781 499.512194 610.4 499.512194 561.946217 482.739253 522.666667 462.048781 522.666667 441.358308 522.666667 424.585365 561.946217 424.585365 610.4 424.585365 658.853781 441.358308 698.133333 462.048781 698.133333ZM0 572.8C0 822.813926 229.933961 1024 512 1024 794.066039 1024 1024 822.813926 1024 572.8 1024 322.786074 794.066039 121.599999 512 121.599999 515.649685 121.599999 516.946722 122.183253 516.866057 122.124053 514.736119 120.560928 512.302005 118.428984 505.789668 112.472612 487.675081 95.904489 476.340222 86.603485 458.812092 75.393661 404.94781 40.945655 334.29571 21.333333 237.268292 21.333333 223.474645 21.333333 212.292683 32.556062 212.292683 46.4 212.292683 60.243938 223.474645 71.466667 237.268292 71.466667 325.013274 71.466667 386.336418 88.489363 431.969129 117.673005 444.078925 125.417623 494.717728 171.733333 512 171.733333 767.886246 171.733333 974.048781 352.120043 974.048781 572.8 974.048781 793.479955 767.886246 973.866667 512 973.866667 256.113754 973.866667 49.951219 793.479955 49.951219 572.8 49.951219 427.029845 140.536466 294.462295 284.745583 223.557118 297.132651 217.466607 302.254953 202.450961 296.186566 190.018733 290.11818 177.586505 275.157079 172.445527 262.770012 178.536038 102.138268 257.515945 0 406.990833 0 572.8Z"  ></path></symbol><symbol id="icon-clock" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 625.316262 1024 733.09232 987.060258 821.44823 919.93747 832.170355 911.792017 834.259159 896.496821 826.113707 885.774697 817.968254 875.052572 802.67306 872.963767 791.950935 881.10922 712.006355 941.842033 614.569408 975.238095 512 975.238095 256.160663 975.238095 48.761905 767.839337 48.761905 512 48.761905 256.160663 256.160663 48.761905 512 48.761905 767.839337 48.761905 975.238095 256.160663 975.238095 512 975.238095 606.738266 946.765111 697.157764 894.355733 773.603714 886.741822 784.709602 889.572629 799.884996 900.678517 807.498908 911.784403 815.112819 926.959799 812.282012 934.573709 801.176124 992.505146 716.675526 1024 616.659703 1024 512Z"  ></path><path d="M487.619049 609.52381C487.619049 622.989037 498.534771 633.904762 512 633.904762 525.465229 633.904762 536.380951 622.989037 536.380951 609.52381L536.380951 243.809523C536.380951 230.344297 525.465229 219.428572 512 219.428572 498.534771 219.428572 487.619049 230.344297 487.619049 243.809523L487.619049 609.52381Z"  ></path><path d="M481.586633 471.564079C472.719716 461.430462 457.316742 460.403597 447.183125 469.270511 437.049508 478.137425 436.022643 493.540401 444.889559 503.674018L615.556226 698.721636C624.42314 708.855253 639.826114 709.882118 649.959731 701.015204 660.093348 692.148288 661.120213 676.745314 652.253299 666.611697L481.586633 471.564079Z"  ></path></symbol><symbol id="icon-remind" viewBox="0 0 1024 1024"><path d="M0 435.309237 0 610.024096C0 645.308043 28.657739 674 63.838605 674L228.9009 674 213.800267 667.735906 469.201726 923.669451C499.273171 953.803546 535.639639 938.646511 535.639639 895.975706L535.639639 149.357629C535.639639 106.839052 499.309939 91.492944 469.201726 121.663883L213.800267 377.597427 228.9009 371.333333 63.838605 371.333333C28.573201 371.333333 0 400.011223 0 435.309237ZM228.9009 414 237.750464 414 244.001534 407.735906 499.402993 151.802362C501.578012 149.62281 503.223142 148.452401 503.936853 148.166441 502.587712 148.706997 500.074389 148.808867 497.235991 147.609892 494.446571 146.431607 492.826063 144.636013 492.299426 143.387549 492.628553 144.167789 492.972973 146.225184 492.972973 149.357629L492.972973 895.975706C492.972973 899.146332 492.625939 901.221845 492.296619 902.001423 492.834735 900.727578 494.485777 898.907403 497.311223 897.729796 500.154871 896.544602 502.647469 896.657431 503.972905 897.192945 503.239477 896.896619 501.582121 895.714639 499.402993 893.530972L244.001534 637.597427 237.750464 631.333333 228.9009 631.333333 63.838605 631.333333C52.233293 631.333333 42.666667 621.755283 42.666667 610.024096L42.666667 435.309237C42.666667 423.540514 52.172352 414 63.838605 414L228.9009 414Z"  ></path><path d="M821.045045 535.666667C821.045045 416.514537 730.531159 319.333333 618.090091 319.333333 606.308015 319.333333 596.756757 328.884593 596.756757 340.666667 596.756757 352.44874 606.308015 362 618.090091 362 706.262724 362 778.378379 439.427744 778.378379 535.666667 778.378379 631.905589 706.262724 709.333333 618.090091 709.333333 606.308015 709.333333 596.756757 718.884593 596.756757 730.666667 596.756757 742.44874 606.308015 752 618.090091 752 730.531159 752 821.045045 654.818797 821.045045 535.666667Z"  ></path><path d="M1002.666667 527.293033C1002.666667 369.877487 905.044211 229.428404 756.28896 165.086453 745.475106 160.409076 732.916983 165.383673 728.239605 176.197526 723.562229 187.011379 728.536826 199.569503 739.350679 204.24688 872.873312 262.000181 960 387.349039 960 527.293033 960 660.177203 881.48423 780.22717 758.227616 841.567753 747.679578 846.81715 743.384179 859.623501 748.633577 870.171539 753.882974 880.719578 766.689325 885.014976 777.237363 879.765581 914.638133 811.385935 1002.666667 676.791034 1002.666667 527.293033Z"  ></path></symbol><symbol id="icon-calendar" viewBox="0 0 1024 1024"><path d="M128.194764 929.441442C85.742288 929.441442 51.2 894.408934 51.2 851.471951L51.2 151.063063 25.6 177.009009 896.131998 177.009009C938.35962 177.009009 972.8 211.994665 972.8 254.743324L972.8 838.63063C972.8 852.960181 984.26151 864.576576 998.4 864.576576 1012.53849 864.576576 1024 852.960181 1024 838.63063L1024 254.743324C1024 183.362078 966.662825 125.117117 896.131998 125.117117L25.6 125.117117C11.46151 125.117117 0 136.733513 0 151.063063L0 851.471951C0 923.060267 57.457637 981.333333 128.194764 981.333333L883.2 981.333333C897.33849 981.333333 908.8 969.716939 908.8 955.387388 908.8 941.057837 897.33849 929.441442 883.2 929.441442L128.194764 929.441442Z"  ></path><path d="M281.6 254.846846C281.6 269.176397 293.06151 280.792794 307.2 280.792794 321.33849 280.792794 332.8 269.176397 332.8 254.846846L332.8 60.252252C332.8 45.922702 321.33849 34.306306 307.2 34.306306 293.06151 34.306306 281.6 45.922702 281.6 60.252252L281.6 254.846846Z"  ></path><path d="M716.8 241.873873C716.8 256.203424 728.26151 267.819821 742.4 267.819821 756.53849 267.819821 768 256.203424 768 241.873873L768 47.279279C768 32.949729 756.53849 21.333333 742.4 21.333333 728.26151 21.333333 716.8 32.949729 716.8 47.279279L716.8 241.873873Z"  ></path><path d="M332.8 410.522522C346.93849 410.522522 358.4 398.906127 358.4 384.576576 358.4 370.247027 346.93849 358.63063 332.8 358.63063L192 358.63063C177.86151 358.63063 166.4 370.247027 166.4 384.576576 166.4 398.906127 177.86151 410.522522 192 410.522522L332.8 410.522522Z"  ></path><path d="M614.4 410.522522C628.53849 410.522522 640 398.906127 640 384.576576 640 370.247027 628.53849 358.63063 614.4 358.63063L473.6 358.63063C459.46151 358.63063 448 370.247027 448 384.576576 448 398.906127 459.46151 410.522522 473.6 410.522522L614.4 410.522522Z"  ></path><path d="M870.4 410.522522C884.53849 410.522522 896 398.906127 896 384.576576 896 370.247027 884.53849 358.63063 870.4 358.63063L729.6 358.63063C715.46151 358.63063 704 370.247027 704 384.576576 704 398.906127 715.46151 410.522522 729.6 410.522522L870.4 410.522522Z"  ></path><path d="M332.8 566.198197C346.93849 566.198197 358.4 554.581803 358.4 540.252252 358.4 525.922703 346.93849 514.306306 332.8 514.306306L192 514.306306C177.86151 514.306306 166.4 525.922703 166.4 540.252252 166.4 554.581803 177.86151 566.198197 192 566.198197L332.8 566.198197Z"  ></path><path d="M614.4 566.198197C628.53849 566.198197 640 554.581803 640 540.252252 640 525.922703 628.53849 514.306306 614.4 514.306306L473.6 514.306306C459.46151 514.306306 448 525.922703 448 540.252252 448 554.581803 459.46151 566.198197 473.6 566.198197L614.4 566.198197Z"  ></path><path d="M870.4 566.198197C884.53849 566.198197 896 554.581803 896 540.252252 896 525.922703 884.53849 514.306306 870.4 514.306306L729.6 514.306306C715.46151 514.306306 704 525.922703 704 540.252252 704 554.581803 715.46151 566.198197 729.6 566.198197L870.4 566.198197Z"  ></path><path d="M332.8 721.873873C346.93849 721.873873 358.4 710.257478 358.4 695.927927 358.4 681.598379 346.93849 669.981982 332.8 669.981982L192 669.981982C177.86151 669.981982 166.4 681.598379 166.4 695.927927 166.4 710.257478 177.86151 721.873873 192 721.873873L332.8 721.873873Z"  ></path><path d="M614.4 721.873873C628.53849 721.873873 640 710.257478 640 695.927927 640 681.598379 628.53849 669.981982 614.4 669.981982L473.6 669.981982C459.46151 669.981982 448 681.598379 448 695.927927 448 710.257478 459.46151 721.873873 473.6 721.873873L614.4 721.873873Z"  ></path><path d="M870.4 721.873873C884.53849 721.873873 896 710.257478 896 695.927927 896 681.598379 884.53849 669.981982 870.4 669.981982L729.6 669.981982C715.46151 669.981982 704 681.598379 704 695.927927 704 710.257478 715.46151 721.873873 729.6 721.873873L870.4 721.873873Z"  ></path></symbol><symbol id="icon-attachment" viewBox="0 0 1024 1024"><path d="M472.153474 119.228972 92.638513 517.750743C-3.525822 618.731164-2.288327 780.624077 95.536728 880.163189L99.321659 884.014438C197.267042 983.675987 357.082027 984.489975 455.906639 885.911622L955.925037 387.139215C1034.944759 308.316403 1036.587465 179.168202 959.634413 98.61339L941.34458 116.085449 923.054748 133.557508 927.277389 137.977788 945.567221 120.505729 963.857054 103.03367C886.268179 21.813275 760.692811 22.649855 683.951435 104.944905L209.92702 613.273856C171.75695 654.206246 173.954266 718.232602 214.90487 756.419659L226.383979 767.1241C267.274317 805.254957 331.360614 803.034336 369.461105 762.176561L738.140738 366.81606C747.66794 356.599386 747.109013 340.593813 736.892339 331.066609 726.675665 321.539407 710.670091 322.098334 701.142889 332.315008L332.463258 727.675509C313.421342 748.095465 281.346492 749.206871 260.88503 730.126253L249.405922 719.421811C228.898628 700.298449 227.799923 668.2839 246.924868 647.774908L720.949284 139.445957C777.863249 78.413202 869.791012 77.800782 927.277389 137.977788 950.573468 162.364232 987.153133 127.420114 963.857054 103.03367L959.634413 98.61339C936.338334 74.226946 899.758669 109.171065 923.054748 133.557508 980.99271 194.207237 979.749843 291.920378 920.198449 351.323377L420.180051 850.095785C341.242127 928.837003 213.662948 928.187202 135.402204 848.5552L131.617273 844.703949C52.922438 764.630251 51.922852 633.86137 129.272687 552.637713L508.787648 154.115942C518.421419 143.999694 518.030293 127.989141 507.914046 118.35537 497.797798 108.7216 481.787245 109.112724 472.153474 119.228972L472.153474 119.228972Z"  ></path></symbol><symbol id="icon-discount" viewBox="0 0 1024 1024"><path d="M855.903027 561.400463 457.002421 933.283098C427.000478 961.36995 378.630415 961.004819 349.185589 932.452262L87.045522 678.255834C58.072052 650.160348 57.513624 603.882908 85.796115 574.971917L565.999763 84.097076 548.571428 91.428572 877.886948 91.428572C918.232493 91.428572 950.857143 124.131073 950.857143 164.747843L950.857143 481.52381C950.857143 494.989037 961.772866 505.904762 975.238095 505.904762 988.703324 505.904762 999.619049 494.989037 999.619049 481.52381L999.619049 164.747843C999.619049 97.226599 945.189001 42.666667 877.886948 42.666667L548.571428 42.666667C542.012309 42.666667 535.729847 45.30948 531.143093 49.998162L50.939447 540.873001C3.783193 589.077171 4.715564 666.343661 53.100125 713.262025L315.240192 967.458453C363.379925 1014.139405 441.35376 1014.728006 490.290377 968.915004L889.153871 597.067042C899.002925 587.885075 899.543706 572.457385 890.361739 562.608331 881.179772 552.759277 865.752081 552.218496 855.903027 561.400463L855.903027 561.400463Z"  ></path><path d="M743.619049 408.380951C804.212574 408.380951 853.333333 359.260194 853.333333 298.666667 853.333333 238.07314 804.212574 188.952381 743.619049 188.952381 683.025521 188.952381 633.904762 238.07314 633.904762 298.666667 633.904762 359.260194 683.025521 408.380951 743.619049 408.380951L743.619049 408.380951ZM743.619049 359.619049C709.955977 359.619049 682.666667 332.329737 682.666667 298.666667 682.666667 265.003597 709.955977 237.714286 743.619049 237.714286 777.282118 237.714286 804.571428 265.003597 804.571428 298.666667 804.571428 332.329737 777.282118 359.619049 743.619049 359.619049L743.619049 359.619049Z"  ></path></symbol><symbol id="icon-service" viewBox="0 0 1024 1024"><path d="M537.676629 572.777016C667.27978 572.777016 772.259879 466.772722 772.259879 336.112332 772.259879 205.451942 667.27978 99.447648 537.676629 99.447648 408.073477 99.447648 303.093381 205.451942 303.093381 336.112332 303.093381 466.772722 408.073477 572.777016 537.676629 572.777016L537.676629 572.777016ZM537.676629 530.304582C431.623156 530.304582 345.565814 443.407655 345.565814 336.112332 345.565814 228.817008 431.623156 141.920082 537.676629 141.920082 643.730103 141.920082 729.787446 228.817008 729.787446 336.112332 729.787446 443.407655 643.730103 530.304582 537.676629 530.304582L537.676629 530.304582Z"  ></path><path d="M1001.664066 1024.000004C1001.664066 751.431228 782.755985 530.387459 512.615542 530.387459 242.4751 530.387459 23.567019 751.431228 23.567019 1024.000004L66.039452 1024.000004C66.039452 774.796294 266.024779 572.859892 512.615542 572.859892 759.206306 572.859892 959.191633 774.796294 959.191633 1024.000004L1001.664066 1024.000004 1001.664066 1024.000004Z"  ></path><path d="M233.809816 572.859892C281.846495 572.859892 320.7039 533.623389 320.7039 485.325241 320.7039 437.027096 281.846495 397.790593 233.809816 397.790593 185.773138 397.790593 146.915732 437.027096 146.915732 485.325241 146.915732 533.623389 185.773138 572.859892 233.809816 572.859892L233.809816 572.859892ZM233.809816 530.387459C209.322817 530.387459 189.388166 510.258322 189.388166 485.325241 189.388166 460.392163 209.322817 440.263026 233.809816 440.263026 258.296816 440.263026 278.231467 460.392163 278.231467 485.325241 278.231467 510.258322 258.296816 530.387459 233.809816 530.387459L233.809816 530.387459Z"  ></path><path d="M830.543236 520.287306C838.435011 517.213408 856.420583 512.250861 869.738118 507.413846 871.10678 506.916965 871.10678 506.916965 872.477119 506.42035 883.299946 502.499785 894.907365 498.352896 906.516385 494.244034 913.482439 491.778488 918.897025 489.874927 921.981649 488.795985L936.206384 483.820443 936.206384 468.750633 936.206384 282.286293 936.206384 269.008648 924.26945 263.194403C922.053561 262.115087 918.144366 260.19565 913.109699 257.697247 904.720115 253.534 896.333421 249.310732 888.525544 245.293116 886.929012 244.470731 886.929012 244.470731 885.338411 243.647696 876.494909 239.066281 869.177034 235.138507 863.892556 232.110649 861.160872 230.54547 859.071734 229.275744 857.78666 228.410362 859.888255 229.825599 860.115079 230.016911 862.214218 234.916219 804.257697 99.647907 670.564953 0 531.990097 0 337.403916 0 179.744666 159.197389 179.744666 355.474788 179.744666 378.590106 181.933686 401.433919 186.246239 423.785122L227.949506 415.738687C224.147939 396.035838 222.2171 375.886294 222.2171 355.474788 222.2171 182.562455 360.953596 42.472433 531.990097 42.472433 652.531844 42.472433 771.567984 131.196039 823.17426 251.643123 827.282349 261.231249 830.445679 263.043749 865.801418 281.359942 867.446153 282.210985 867.446153 282.210985 869.092686 283.059126 877.10527 287.182075 885.669071 291.494531 894.229978 295.742796 899.365609 298.291301 903.366644 300.255832 905.670886 301.378183L893.733951 282.286293 893.733951 468.750633 907.958689 448.705284C904.827575 449.800489 899.364613 451.721059 892.345253 454.205469 880.645251 458.346535 868.943646 462.527074 858.011386 466.48728 856.62458 466.989862 856.62458 466.989862 855.238611 467.493025 841.640096 472.432095 830.384497 476.618365 822.125588 479.835263 817.286018 481.720307 813.48815 483.267063 810.712137 484.49784 808.902954 485.299962 807.434242 486.005276 806.123281 486.734668 804.750891 487.504549 804.750891 487.504549 802.39627 489.219923 797.915841 491.325505 788.070803 499.05109 795.378771 512.767063 802.686739 526.483036 826.258515 521.956233 830.543236 520.287306Z"  ></path></symbol><symbol id="icon-print" viewBox="0 0 1024 1024"><path d="M24.380952 265.886178 902.094615 265.886178C942.428977 265.886178 975.238095 298.903371 975.238095 339.485775L975.238095 779.447155 999.619049 754.99187 853.333333 754.99187 877.714285 779.447155 877.714285 681.626016 877.714285 657.170731 853.333333 657.170731 170.666667 657.170731 146.285714 657.170731 146.285714 681.626016 146.285714 779.447155 170.666667 754.99187 121.955642 754.99187C81.590725 754.99187 48.761905 721.971868 48.761905 681.392275L48.761905 241.430895 24.380952 265.886178 24.380952 265.886178ZM24.380952 216.97561 0 216.97561 0 241.430895 0 681.392275C0 748.954229 54.630068 803.902438 121.955642 803.902438L170.666667 803.902438 195.047619 803.902438 195.047619 779.447155 195.047619 681.626016 170.666667 706.081301 853.333333 706.081301 828.952382 681.626016 828.952382 779.447155 828.952382 803.902438 853.333333 803.902438 999.619049 803.902438 1024 803.902438 1024 779.447155 1024 339.485775C1024 271.92663 969.395277 216.97561 902.094615 216.97561L24.380952 216.97561 24.380952 216.97561Z"  ></path><path d="M755.809523 999.544715 780.190477 975.089431 243.809523 975.089431 268.190477 999.544715 268.190477 776.325203C268.190477 762.818923 257.274752 751.869918 243.809523 751.869918 230.344297 751.869918 219.428572 762.818923 219.428572 776.325203L219.428572 999.544715C219.428572 1013.050995 230.344297 1024 243.809523 1024L780.190477 1024C793.655703 1024 804.571428 1013.050995 804.571428 999.544715L804.571428 776.325203C804.571428 762.818923 793.655703 751.869918 780.190477 751.869918 766.725248 751.869918 755.809523 762.818923 755.809523 776.325203L755.809523 999.544715Z"  ></path><path d="M207.238095 437.073171 524.190477 437.073171 524.190477 388.162603 207.238095 388.162603 207.238095 437.073171 207.238095 437.073171Z"  ></path><path d="M219.428572 241.430895 219.428572 45.788618 195.047619 70.243903 828.952382 70.243903 804.571428 45.788618 804.571428 241.430933 853.333333 241.430933 853.333333 45.788618 853.333333 21.333333 828.952382 21.333333 195.047619 21.333333 170.666667 21.333333 170.666667 45.788618 170.666667 241.430895 219.428572 241.430895 219.428572 241.430895Z"  ></path></symbol><symbol id="icon-box" viewBox="0 0 1024 1024"><path d="M58.18714 261.513847 489.750985 506.066692C497.230148 510.304885 506.385346 510.304885 513.86451 506.066692L945.428356 261.513847C962.456593 251.864512 961.814227 227.116685 944.308329 218.363735L512.744484 2.581813C505.859648-0.860604 497.755846-0.860604 490.871012 2.581813L59.307167 218.363735C41.801269 227.116685 41.158901 251.864512 58.18714 261.513847L58.18714 261.513847ZM82.300665 218.960567 81.180638 262.110679 512.744484 46.328756 490.871012 46.328756 922.434857 262.110679 921.314829 218.960567 489.750985 463.513412 513.86451 463.513412 82.300665 218.960567 82.300665 218.960567Z"  ></path><path d="M477.352463 504.929698 477.352463 974.793958C477.352463 993.514057 497.526411 1005.2927 513.828779 996.090807L974.163548 736.254285C981.846246 731.917777 986.597801 723.77952 986.597801 714.957436L986.597801 398.477284C986.597801 384.971004 975.648796 374.021999 962.142515 374.021999 948.636235 374.021999 937.687232 384.971004 937.687232 398.477284L937.687232 714.957436 950.121483 693.660589 489.786716 953.497111 526.263031 974.793958 526.263031 504.929698C526.263031 491.423418 515.314029 480.474415 501.807748 480.474415 488.301468 480.474415 477.352463 491.423418 477.352463 504.929698L477.352463 504.929698Z"  ></path><path d="M514.421935 953.842987 82.858091 694.006466 94.699187 714.957436 94.699187 254.622669C94.699187 241.116388 83.750183 230.167383 70.243903 230.167383 56.737622 230.167383 45.788618 241.116388 45.788618 254.622669L45.788618 714.957436C45.788618 723.534342 50.281834 731.484386 57.629714 735.908407L489.193559 995.74493C500.764461 1002.711554 515.792096 998.979049 522.758718 987.408147 529.725342 975.837246 525.992838 960.809611 514.421935 953.842987L514.421935 953.842987Z"  ></path><path d="M172.745454 448.218441 316.60007 534.531209C328.181609 541.480132 343.203518 537.724655 350.152444 526.143115 357.101367 514.561577 353.34589 499.539667 341.76435 492.590741L197.909735 406.277973C186.328194 399.32905 171.306285 403.084527 164.357361 414.666067 157.408437 426.247607 161.163914 441.269517 172.745454 448.218441L172.745454 448.218441Z"  ></path></symbol><symbol id="icon-process" viewBox="0 0 1028 1024"><path d="M965.426743 541.836386C955.038827 339.605751 811.004092 169.469444 615.449711 124.450173 601.95866 121.34435 588.504235 129.763241 585.398411 143.254293 582.292589 156.745345 590.711479 170.19977 604.20253 173.305593 778.021961 213.321184 906.125274 364.639021 915.359418 544.408179 916.0696 558.233888 927.853267 568.866125 941.678976 568.155945 955.504687 567.445764 966.136924 555.662097 965.426743 541.836386L965.426743 541.836386ZM386.693427 130.952194C195.197668 186.776034 61.059829 362.94826 61.059829 565.408546 61.059829 609.513775 67.378292 652.800892 79.687136 694.294543 83.62428 707.566827 97.575277 715.134451 110.847561 711.197308 124.119844 707.260164 131.68747 693.309167 127.750327 680.036883 116.810772 643.159168 111.193162 604.673523 111.193162 565.408546 111.193162 385.380604 230.48234 228.710122 400.724023 179.082159 414.014746 175.207717 421.648149 161.292601 417.773707 148.001879 413.899266 134.711156 399.984149 127.077752 386.693427 130.952194L386.693427 130.952194ZM196.356828 888.107575C280.412745 970.736506 393.28759 1017.894018 513.545299 1017.894018 643.321289 1017.894018 764.304599 962.930765 849.557581 868.463038 858.832625 858.185481 858.019927 842.334965 847.742372 833.059923 837.464815 823.784879 821.6143 824.597574 812.339255 834.875132 736.494948 918.917229 628.982336 967.760685 513.545299 967.760685 406.569346 967.760685 306.273973 925.858699 231.501677 852.355782 221.62909 842.650801 205.758337 842.786671 196.053355 852.659255 186.348373 862.53184 186.484242 878.402594 196.356828 888.107575L196.356828 888.107575Z"  ></path><path d="M498.280341 285.176068C571.138502 285.176068 630.201709 226.11286 630.201709 153.254701 630.201709 80.396541 571.138502 21.333333 498.280341 21.333333 425.422182 21.333333 366.358974 80.396541 366.358974 153.254701 366.358974 226.11286 425.422182 285.176068 498.280341 285.176068L498.280341 285.176068ZM498.280341 235.042735C453.110059 235.042735 416.492307 198.424985 416.492307 153.254701 416.492307 108.084417 453.110059 71.466667 498.280341 71.466667 543.450626 71.466667 580.068375 108.084417 580.068375 153.254701 580.068375 198.424985 543.450626 235.042735 498.280341 235.042735L498.280341 235.042735Z"  ></path><path d="M131.921367 926.304273C204.779527 926.304273 263.842735 867.241065 263.842735 794.382906 263.842735 721.524747 204.779527 662.461538 131.921367 662.461538 59.063208 662.461538 0 721.524747 0 794.382906 0 867.241065 59.063208 926.304273 131.921367 926.304273L131.921367 926.304273ZM131.921367 876.17094C86.751084 876.17094 50.133333 839.55319 50.133333 794.382906 50.133333 749.212623 86.751084 712.594871 131.921367 712.594871 177.091651 712.594871 213.709402 749.212623 213.709402 794.382906 213.709402 839.55319 177.091651 876.17094 131.921367 876.17094L131.921367 876.17094Z"  ></path><path d="M895.169231 895.774359C968.02739 895.774359 1027.090598 836.711151 1027.090598 763.852992 1027.090598 690.994831 968.02739 631.931625 895.169231 631.931625 822.311072 631.931625 763.247863 690.994831 763.247863 763.852992 763.247863 836.711151 822.311072 895.774359 895.169231 895.774359L895.169231 895.774359ZM895.169231 845.641026C849.998946 845.641026 813.381197 809.023275 813.381197 763.852992 813.381197 718.682707 849.998946 682.064958 895.169231 682.064958 940.339516 682.064958 976.957265 718.682707 976.957265 763.852992 976.957265 809.023275 940.339516 845.641026 895.169231 845.641026L895.169231 845.641026Z"  ></path></symbol><symbol id="icon-beauty" viewBox="0 0 1024 1024"><path d="M743.619048 511.999998 743.619048 999.619045 767.999999 975.238091 402.436749 975.238091C361.966454 975.238091 329.142858 942.460515 329.142858 902.114008L329.142858 511.999998 304.761906 536.380949 572.952382 536.380949C586.417608 536.380949 597.333333 525.465227 597.333333 511.999998 597.333333 498.534769 586.417608 487.619047 572.952382 487.619047L304.761906 487.619047 280.380953 487.619047 280.380953 511.999998 280.380953 902.114008C280.380953 969.406298 335.051301 1023.999996 402.436749 1023.999996L767.999999 1023.999996 792.38095 1023.999996 792.38095 999.619045 792.38095 511.999998C792.38095 498.534769 781.465228 487.619047 767.999999 487.619047 754.53477 487.619047 743.619048 498.534769 743.619048 511.999998L743.619048 511.999998Z"  ></path><path d="M670.476189 390.095237 670.476189 121.904761C669.24573 106.724361 665.564723 88.343325 657.506525 69.449458 641.134018 31.061232 612.120891 7.41427 570.10368 12.357471 565.389728 12.912054 560.65841 13.832954 555.912998 15.100715 526.12375 23.059059 496.579123 44.100961 467.116168 74.125843 454.583228 86.897815 442.894214 100.499022 432.311201 114.099062 425.929992 122.299438 421.280327 128.756187 418.664001 132.623069L414.476191 138.812577 414.476191 146.285714 414.476191 402.575798 463.238095 402.575798 463.238095 146.285714 459.050285 159.948358C461.092638 156.929797 465.120136 151.33702 470.794381 144.04515 480.303791 131.824778 490.805099 119.605573 501.920188 108.278494 525.80899 83.934076 548.994795 67.420975 568.498592 62.210439 571.02992 61.534183 573.465015 61.060217 575.801081 60.785386 592.608825 58.808004 603.871353 67.987456 612.653661 88.579122 615.935464 96.273886 618.404081 104.764223 620.111257 113.288988 621.128998 118.371054 621.64641 122.186165 621.806333 124.021357L621.714284 390.095237 670.476189 390.095237 670.476189 390.095237Z"  ></path><path d="M774.15806 483.754552 688.824727 386.230744C684.195073 380.939713 677.506745 377.90476 670.476189 377.90476L390.095239 377.90476C382.57151 377.90476 375.469202 381.378384 370.85008 387.317255L285.516747 497.031541C277.249896 507.660348 279.164641 522.978306 289.793449 531.245156 300.422256 539.512006 315.740214 537.597263 324.007064 526.968454L409.340397 417.25417 390.095239 426.666665 670.476189 426.666665 652.127654 418.340683 737.460987 515.864491C746.327901 525.998108 761.730875 527.024973 771.864492 518.158059 781.998109 509.291143 783.024974 493.888169 774.15806 483.754552L774.15806 483.754552Z"  ></path></symbol><symbol id="icon-electrical" viewBox="0 0 1024 1024"><path d="M370.99187 770.601626 670.699187 770.601626 645.723578 745.626016 645.723578 845.528454 670.699187 820.552845 370.99187 820.552845 395.967479 845.528454 395.967479 745.626016 370.99187 770.601626 370.99187 770.601626ZM370.99187 720.650406 346.01626 720.650406 346.01626 745.626016 346.01626 845.528454 346.01626 870.504064 370.99187 870.504064 670.699187 870.504064 695.674797 870.504064 695.674797 845.528454 695.674797 745.626016 695.674797 720.650406 670.699187 720.650406 370.99187 720.650406 370.99187 720.650406Z"  ></path><path d="M271.089431 246.113822 271.089431 46.308943 246.113822 71.284553 395.967479 71.284553 370.99187 46.308943 370.99187 246.113822 420.943089 246.113822 420.943089 46.308943 420.943089 21.333333 395.967479 21.333333 246.113822 21.333333 221.138211 21.333333 221.138211 46.308943 221.138211 246.113822 271.089431 246.113822 271.089431 246.113822Z"  ></path><path d="M670.699187 246.113822 670.699187 46.308943 645.723578 71.284553 795.577235 71.284553 770.601626 46.308943 770.601626 246.113822 820.552845 246.113822 820.552845 46.308943 820.552845 21.333333 795.577235 21.333333 645.723578 21.333333 620.747968 21.333333 620.747968 46.308943 620.747968 246.113822 670.699187 246.113822 670.699187 246.113822Z"  ></path><path d="M518.451452 283.577235 920.455262 283.577235 923.213357 283.424478C937.807279 281.802931 941.097152 283.844623 942.987091 291.362852 945.984582 303.286959 943.254669 324.456107 934.89696 351.4887 921.442901 395.00519 893.19792 452.711247 874.363055 482.533118 860.952322 503.766778 840.537295 529.450351 814.418007 558.432548 802.468169 571.692196 789.457762 585.494204 775.552122 599.715902 749.051078 626.819283 720.601165 654.146697 692.145451 680.300023 682.182899 689.456493 672.935959 697.80781 664.645611 705.181888 659.693062 709.587066 656.176173 712.673604 654.335411 714.270039L670.699187 708.162603 520.845527 708.162603 520.845527 758.113822 670.699187 758.113822 680.020811 758.113822 687.062963 752.006383C689.056909 750.277097 692.730099 747.053385 697.843661 742.504988 706.330161 734.956439 715.777427 726.424196 725.947095 717.07737 755.012011 690.364132 784.082726 662.440407 811.267603 634.637653 825.625463 619.953455 839.095669 605.663674 851.523968 591.873122 879.378679 560.965282 901.420233 533.235424 916.596256 509.20672 937.611232 475.933007 967.7329 414.392777 982.619403 366.243119 993.455917 331.192945 997.202187 302.142458 991.43111 279.184954 983.167678 246.312789 956.096139 229.512221 917.697167 233.778774L920.455262 233.626016 518.451452 233.626016 518.451452 283.577235 518.451452 283.577235Z"  ></path><path d="M519.564585 233.626016 117.560772 233.626016 120.318867 233.778774C81.919896 229.512221 54.848356 246.312789 46.584924 279.184954 40.813847 302.142458 44.560117 331.192945 55.396632 366.243119 70.283135 414.392777 100.404802 475.933007 121.419778 509.20672 136.595803 533.235424 158.637355 560.965282 186.492066 591.873122 198.920365 605.663674 212.39057 619.953455 226.748431 634.637653 253.933308 662.440407 283.004023 690.364132 312.068939 717.07737 322.238607 726.424196 331.685873 734.956439 340.172373 742.504988 345.285937 747.053385 348.959125 750.277097 350.953073 752.006383L357.995223 758.113822 367.316847 758.113822 542.146116 758.113822 542.146116 708.162603 367.316847 708.162603 383.680623 714.270039C381.839861 712.673604 378.322972 709.587066 373.370423 705.181888 365.080075 697.80781 355.833135 689.456493 345.870583 680.300023 317.414869 654.146697 288.964958 626.819283 262.463913 599.715902 248.558272 585.494204 235.547866 571.692196 223.598028 558.432548 197.47874 529.450351 177.063713 503.766778 163.65298 482.533118 144.818114 452.711247 116.573134 395.00519 103.119074 351.4887 94.761367 324.456107 92.031452 303.286959 95.028944 291.362852 96.918883 283.844623 100.208756 281.802931 114.802678 283.424478L117.560772 283.577235 519.564585 283.577235 519.564585 233.626016 519.564585 233.626016Z"  ></path><path d="M395.967479 858.01626 395.967479 995.382114C395.967479 1009.175763 407.14944 1020.357724 420.943089 1020.357724 434.736738 1020.357724 445.918699 1009.175763 445.918699 995.382114L445.918699 858.01626C445.918699 844.222611 434.736738 833.040651 420.943089 833.040651 407.14944 833.040651 395.967479 844.222611 395.967479 858.01626L395.967479 858.01626Z"  ></path><path d="M595.772358 858.01626 595.772358 995.382114C595.772358 1009.175763 606.954319 1020.357724 620.747968 1020.357724 634.541615 1020.357724 645.723578 1009.175763 645.723578 995.382114L645.723578 858.01626C645.723578 844.222611 634.541615 833.040651 620.747968 833.040651 606.954319 833.040651 595.772358 844.222611 595.772358 858.01626L595.772358 858.01626Z"  ></path></symbol><symbol id="icon-home" viewBox="0 0 1028 1024"><path d="M888.069936 858.261269C888.32491 856.20874 888.914598 852.094677 889.885241 846.21821 891.526956 836.278925 893.64231 825.167356 896.275784 813.1847 903.790514 778.991659 913.909985 744.828819 926.92488 713.152495 929.368089 707.206091 931.895969 701.396115 934.509141 695.733175 942.165136 679.142061 953.450406 661.170575 968.046999 641.505564 974.458728 632.867471 1017.424626 580.788316 1020.344142 572.029764 1055.52539 466.486027 958.563564 369.524201 830.766591 420.642989 826.82772 422.218539 823.371255 424.80013 820.742542 428.129835L638.92436 658.432866 657.95182 649.212122 367.04273 649.212122C353.654009 649.212122 342.800304 660.065824 342.800304 673.454545 342.800304 686.843266 353.654009 697.696971 367.04273 697.696971L657.95182 697.696971C665.371135 697.696971 672.381947 694.299516 676.979282 688.476226L858.797463 458.173195 848.773414 465.660041C937.426657 430.198743 996.741887 489.513975 974.347376 556.697508 974.866139 555.14122 969.739613 561.855821 962.139777 571.067616 945.255206 591.533481 938.832814 599.51565 929.114997 612.607814 912.696166 634.727808 899.74491 655.352326 890.485409 675.418359 887.579581 681.715511 884.777966 688.154628 882.077913 694.726159 867.889685 729.258197 856.99655 766.03289 848.921077 802.77738 846.097979 815.622859 843.824317 827.565986 842.048554 838.316815 840.96871 844.854417 840.287423 849.607546 839.954918 852.284186 838.304392 865.570782 847.73729 877.67971 861.023886 879.330236 874.31048 880.980762 886.41941 871.547863 888.069936 858.261269L888.069936 858.261269Z"  ></path><path d="M187.673502 852.284186C187.340997 849.607546 186.659709 844.854417 185.579865 838.316815 183.804103 827.565986 181.530441 815.622859 178.707342 802.77738 170.631869 766.03289 159.738735 729.258197 145.550507 694.726159 142.850454 688.154628 140.048839 681.715511 137.143009 675.418359 127.883509 655.352326 114.932254 634.727808 98.513423 612.607814 88.795605 599.51565 82.373214 591.533481 65.488642 571.067616 57.888805 561.855821 52.76228 555.14122 53.281043 556.697508 30.886531 489.513975 90.201763 430.198743 178.855007 465.660041L168.830956 458.173195 275.147743 592.841124C283.443989 603.3497 298.688306 605.143151 309.196885 596.846906 319.705461 588.55066 321.498909 573.306342 313.202666 562.797764L206.885879 428.129835C204.257164 424.80013 200.800701 422.218539 196.861828 420.642989 69.064856 369.524201-27.89697 466.486027 7.284277 572.029764 10.203794 580.788316 53.169693 632.867471 59.581422 641.505564 74.178015 661.170575 85.463284 679.142061 93.11928 695.733175 95.732451 701.396115 98.260331 707.206091 100.703538 713.152495 113.718434 744.828819 123.837904 778.991659 131.352636 813.1847 133.986109 825.167356 136.101464 836.278925 137.743179 846.21821 138.713821 852.094677 139.303509 856.20874 139.558484 858.261269 141.209009 871.547863 153.317939 880.980762 166.604534 879.330236 179.89113 877.67971 189.324028 865.570782 187.673502 852.284186L187.673502 852.284186Z"  ></path><path d="M197.345759 964.363637 197.345759 867.393939 173.103336 891.636363 864.118745 891.636363 839.876321 867.393939 839.876321 964.363695C839.876321 977.752416 850.730024 988.606118 864.118745 988.606118 877.507466 988.606118 888.361168 977.752416 888.361168 964.363695L888.361168 867.393939C888.361168 854.005218 877.507466 843.151516 864.118745 843.151516L173.103336 843.151516C159.714614 843.151516 148.860911 854.005218 148.860911 867.393939L148.860911 964.363637C148.860911 977.752358 159.714614 988.606061 173.103336 988.606061 186.492057 988.606061 197.345759 977.752358 197.345759 964.363637L197.345759 964.363637Z"  ></path><path d="M173.103336 418.90909 173.103336 249.269563C173.103336 209.075596 205.692857 176.484848 245.876149 176.484848L754.875978 176.484848C795.067558 176.484848 827.648791 209.069516 827.648791 249.269563L827.648791 418.90909 876.133638 418.90909 876.133638 249.269563C876.133638 182.293217 821.846143 128 754.875978 128L245.876149 128C178.915006 128 124.618487 182.298562 124.618487 249.269563L124.618487 418.90909 173.103336 418.90909 173.103336 418.90909Z"  ></path></symbol><symbol id="icon-electronics" viewBox="0 0 1024 1024"><path d="M66.133333 153.6 864.120998 153.6C902.909732 153.6 934.4 185.131266 934.4 223.964112L934.4 763.733333 957.866667 740.266667 159.879001 740.266667C121.090268 740.266667 89.6 708.735401 89.6 669.902556L89.6 130.133333 66.133333 153.6 66.133333 153.6ZM66.133333 106.666667 42.666667 106.666667 42.666667 130.133333 42.666667 669.902556C42.666667 734.642304 95.156023 787.2 159.879001 787.2L957.866667 787.2 981.333333 787.2 981.333333 763.733333 981.333333 223.964112C981.333333 159.224362 928.843977 106.666667 864.120998 106.666667L66.133333 106.666667 66.133333 106.666667Z"  ></path><path d="M408.297397 766.222694 337.897397 930.489361C332.792092 942.401739 338.310315 956.197297 350.222694 961.302603 362.135072 966.407908 375.93063 960.889685 381.035936 948.977306L451.435936 784.710639C456.541242 772.798261 451.023019 759.002703 439.110639 753.897397 427.198261 748.792092 413.402703 754.310315 408.297397 766.222694L408.297397 766.222694Z"  ></path><path d="M587.343202 848.540474 669.476535 954.140474C677.433378 964.370701 692.176913 966.213643 702.40714 958.256798 712.637367 950.299955 714.480309 935.55642 706.523465 925.326193L624.390131 819.726193C616.433289 809.495966 601.689754 807.653024 591.459526 815.609869 581.229299 823.566711 579.386357 838.310246 587.343202 848.540474L587.343202 848.540474Z"  ></path><path d="M242.133333 974.933333 805.455541 974.933333C818.415825 974.933333 828.922208 964.426948 828.922208 951.466667 828.922208 938.506385 818.415825 928 805.455541 928L242.133333 928C229.173051 928 218.666667 938.506385 218.666667 951.466667 218.666667 964.426948 229.173051 974.933333 242.133333 974.933333L242.133333 974.933333Z"  ></path></symbol><symbol id="icon-gifts" viewBox="0 0 1024 1024"><path d="M151.31783 556.31747 151.31783 883.907454C151.31783 920.029577 180.635004 949.418204 216.629434 949.418204L784.642673 949.418204C820.737084 949.418204 849.954278 920.237995 849.954278 884.101732L849.954278 567.069766 806.295364 567.069766 806.295364 884.101732C806.295364 896.113453 796.637303 905.759287 784.642673 905.759287L216.629434 905.759287C204.770979 905.759287 194.976744 895.941182 194.976744 883.907454L194.976744 556.31747 151.31783 556.31747 151.31783 556.31747Z"  ></path><path d="M544.248062 927.255814 544.248062 305.116279 500.589148 305.116279 500.589148 927.255814 544.248062 927.255814 544.248062 927.255814Z"  ></path><path d="M85.829457 326.945737 828.143565 326.945737C864.241261 326.945737 893.519379 356.278505 893.519379 392.485833L893.519379 545.240309 915.348836 523.410852 173.03473 523.410852C136.937034 523.410852 107.658915 494.078084 107.658915 457.870756L107.658915 305.116279 85.829457 326.945737 85.829457 326.945737ZM85.829457 283.286822 64 283.286822 64 305.116279 64 457.870756C64 518.17203 112.806637 567.069766 173.03473 567.069766L915.348836 567.069766 937.178295 567.069766 937.178295 545.240309 937.178295 392.485833C937.178295 332.184559 888.371659 283.286822 828.143565 283.286822L85.829457 283.286822 85.829457 283.286822Z"  ></path><path dpath><path d="M551.660693 251.486788C552.55357 250.106889 554.286927 247.460145 556.764205 243.728553 560.914573 237.47673 565.616813 230.502266 570.773873 222.987694 585.499725 201.530022 600.893771 180.079304 616.162106 160.113019 624.310061 149.458001 632.211424 139.508136 639.79069 130.397706 667.823241 96.702015 691.414249 75.906977 697.054263 75.906977 731.078613 75.906977 790.860256 113.663803 821.48217 154.493023 826.567552 161.273533 823.726334 180.275765 811.048563 206.999126 805.881086 217.891608 810.522118 230.910777 821.414601 236.078255 832.307083 241.245732 845.326251 236.6047 850.49373 225.712218 869.606571 185.424421 874.534694 152.464863 856.409301 128.297674 818.268427 77.443174 746.7095 32.248062 697.054263 32.248062 672.038714 32.248062 644.340604 56.663432 606.227876 102.475701 598.243548 112.073026 589.974942 122.485343 581.481306 133.592407 565.71088 154.21527 549.895622 176.252924 534.776514 198.283624 529.487838 205.989982 524.661009 213.149239 520.390835 219.581526 517.815787 223.460397 515.989067 226.2497 515.005973 227.769026 508.456493 237.890948 511.352531 251.40579 521.474453 257.955268 531.596375 264.504747 545.111215 261.60871 551.660693 251.486788L551.660693 251.486788Z"  ></path><path d="M537.988958 227.769026C537.005865 226.2497 535.179145 223.460397 532.604096 219.581526 528.333922 213.149239 523.507093 205.989982 518.218415 198.283624 503.099307 176.252924 487.284049 154.21527 471.513626 133.592407 463.019987 122.485343 454.751383 112.073026 446.767055 102.475701 408.654327 56.663432 380.956218 32.248062 355.940668 32.248062 306.285431 32.248062 234.726504 77.443174 196.585628 128.297674 178.612682 152.261603 183.326064 184.892714 202.033209 224.720828 208.2705 238.000222 216.033171 251.855612 224.982418 266.060766 233.201436 279.106825 241.973779 291.750138 250.747785 303.541662 256.034751 310.646895 260.185632 315.936681 262.642498 318.939516L296.432634 291.293041C294.378822 288.782827 290.636015 284.013082 285.773954 277.478882 277.632915 266.538016 269.490213 254.802185 261.921855 242.788919 253.864791 229.999929 246.954809 217.666482 241.55017 206.159831 229.189078 179.842667 226.494032 161.18466 231.51276 154.493023 262.134675 113.663803 321.916316 75.906977 355.940668 75.906977 361.580681 75.906977 385.171691 96.702015 413.204241 130.397706 420.783505 139.508136 428.68487 149.458001 436.832823 160.113019 452.101161 180.079304 467.495204 201.530022 482.221058 222.987694 487.378116 230.502266 492.080356 237.47673 496.230726 243.728553 498.708002 247.460145 500.441361 250.106889 501.334236 251.486788L537.988958 227.769026 537.988958 227.769026Z"  ></path></symbol><symbol id="icon-lights" viewBox="0 0 1024 1024"><path d="M679.665263 962.872969C675.413163 963.001581 667.598765 963.2272 656.935307 963.517485 639.154961 964.001508 619.950714 964.48557 600.03657 964.937329 574.44019 965.51799 549.558818 966.001798 526.108928 966.356444 483.043249 967.00775 447.182615 967.188531 421.024495 966.792926 406.443524 966.57241 395.149568 966.173867 387.624841 965.604864 384.224145 965.34771 381.80234 965.066908 380.72791 964.855669 381.194349 964.947373 381.890485 965.140388 383.258458 965.740358 390.735245 969.01955 397.00813 974.806517 397.00813 987.317073 397.00813 946.892646 397.00813 946.892646 397.00813 894.103904 397.00813 852.327012 397.00813 852.327012 397.00813 816.678624 397.00813 783.725284 397.00813 783.725284 397.00813 775.357623 397.00813 768.300672 393.959659 761.587733 388.646061 756.943787 387.096252 755.589293 384.043748 752.848371 379.704591 748.83335 372.388975 742.064213 364.215511 734.243153 355.400661 725.483543 330.191165 700.432021 304.977793 672.961018 281.499353 644.006176 238.026531 590.393216 205.693847 538.062669 189.10623 490.052535 181.047142 466.726829 176.910569 444.910645 176.910569 424.845527 176.910569 229.004458 335.671125 70.243903 531.512194 70.243903 727.353265 70.243903 886.113822 229.004458 886.113822 424.845527 886.113822 442.854963 882.465941 462.234505 875.316446 482.83136 857.948181 532.867281 820.944222 587.726451 770.158263 643.857971 744.062129 672.700896 716.032405 700.0032 688.004092 724.852435 678.2009 733.543708 669.109867 741.297751 660.971618 748.004448 656.141248 751.985137 652.740241 754.702895 651.008689 756.048719 645.047855 760.681692 641.560975 767.808055 641.560975 775.357621L641.560975 889.495936 666.01626 865.040651 384.780489 865.040651C371.274208 865.040651 360.325203 875.989653 360.325203 889.495936 360.325203 903.002217 371.274208 913.951219 384.780489 913.951219L666.01626 913.951219C679.522541 913.951219 690.471546 903.002217 690.471546 889.495936L690.471546 775.357621 681.023831 794.666526C683.113419 793.042423 686.877045 790.034895 692.077163 785.7495 700.656395 778.67939 710.193408 770.544956 720.451194 761.45065 749.739953 735.483936 779.027302 706.95664 806.427104 676.672828 861.228109 616.103652 901.60938 556.237542 921.522494 498.870214 930.372414 473.374637 935.02439 448.660785 935.02439 424.845527 935.02439 201.991897 754.365826 21.333333 531.512194 21.333333 308.658563 21.333333 128 201.991897 128 424.845527 128 450.733632 133.140183 477.842833 142.877122 506.024804 161.629467 560.300386 196.757585 617.155351 243.508777 674.811369 268.176678 705.233116 294.548672 733.966485 320.924541 760.177071 330.16457 769.359198 338.75635 777.580538 346.486466 784.73321 351.174748 789.071275 354.570415 792.120333 356.459629 793.771458L348.097562 775.357621C348.097562 783.725284 348.097562 783.725284 348.097562 816.678624 348.097559 852.32701 348.097559 852.32701 348.097559 894.103904 348.097559 946.892646 348.097559 946.892646 348.097562 987.317073 348.097562 1000.40506 354.962325 1006.738057 363.613472 1010.532303 366.137018 1011.639087 368.552418 1012.308794 371.29242 1012.847494 374.652378 1013.508083 378.769417 1013.985442 383.936862 1014.376192 392.646507 1015.034797 404.802199 1015.46375 420.284879 1015.697903 447.038784 1016.102517 483.33091 1015.919563 526.848544 1015.261421 550.431567 1014.904762 575.433585 1014.418609 601.145837 1013.835317 621.138404 1013.381779 640.415629 1012.895878 658.266276 1012.409941 668.981414 1012.118251 676.844655 1011.891221 681.143991 1011.761178 694.644098 1011.352838 705.257071 1000.077815 704.848732 986.577709 704.440393 973.077602 693.16537 962.464629 679.665263 962.872969L679.665263 962.872969Z"  ></path><path d="M379.715633 552.186807 501.992055 674.46323C511.189239 683.660414 525.97641 684.04928 535.644275 675.348201L657.920698 565.299422C667.959838 556.264196 668.77367 540.801367 659.738445 530.762229 650.703219 520.723089 635.240393 519.909257 625.201252 528.944482L502.92483 638.993261 536.57705 639.878234 414.300627 517.601811C404.750244 508.051428 389.266016 508.051428 379.715633 517.601811 370.16525 527.152194 370.16525 542.636425 379.715633 552.186807L379.715633 552.186807Z"  ></path><path d="M494.829269 669.398374 494.829269 877.268292 543.739838 877.268292 543.739838 669.398374 494.829269 669.398374 494.829269 669.398374Z"  ></path></symbol><symbol id="icon-sports" viewBox="0 0 1024 1024"><path d="M89.619174 149.37178 304.171556 352.128083C309.603234 357.261129 316.793295 360.121009 324.266667 360.121009L732.101412 360.121009C748.259686 360.121009 761.358554 347.02214 761.358554 330.863866 761.358554 314.705591 748.259686 301.606722 732.101412 301.606722L324.266667 301.606722 344.361777 309.599648 129.809397 106.843346C118.065494 95.745123 99.548292 96.268549 88.450069 108.012452 77.351846 119.756354 77.875272 138.273556 89.619174 149.37178L89.619174 149.37178Z"  ></path><path d="M102.35341 621.81072 317.324429 838.506108C328.704322 849.977282 347.228772 850.051281 358.699949 838.671388 370.171123 827.291497 370.245122 808.767046 358.865229 797.29587L143.894209 580.600484C132.514317 569.12931 113.989866 569.055309 102.518691 580.435202 91.047516 591.815095 90.973517 610.339546 102.35341 621.81072L102.35341 621.81072Z"  ></path><path d="M186.715947 231.611784 27.864669 809.727189C22.747211 828.351411 36.761689 846.736134 56.076191 846.736134L981.430498 846.736134C997.588772 846.736134 1010.687642 833.637265 1010.687642 817.478991 1010.687642 801.320717 997.588772 788.22185 981.430498 788.22185L56.076191 788.22185 84.287712 825.230795 243.138991 247.115388C247.420192 231.534595 238.260064 215.433266 222.67927 211.152064 207.098477 206.870862 190.997149 216.03099 186.715947 231.611784L186.715947 231.611784Z"  ></path><path d="M42.666667 954.87283 391.314285 954.87283C407.472559 954.87283 420.571428 941.773961 420.571428 925.615686 420.571428 909.457412 407.472559 896.358543 391.314285 896.358543L42.666667 896.358543C26.508393 896.358543 13.409524 909.457412 13.409524 925.615686 13.409524 941.773961 26.508393 954.87283 42.666667 954.87283L42.666667 954.87283Z"  ></path></symbol><symbol id="icon-toys" viewBox="0 0 1024 1024"><path d="M522.666667 843.340951 522.666667 843.340951C640.39033 843.340951 731.078095 775.325129 731.078095 699.565715 731.078095 623.8063 640.39033 555.790477 522.666667 555.790477 404.943004 555.790477 314.255238 623.8063 314.255238 699.565715 314.255238 775.325129 404.943004 843.340951 522.666667 843.340951L522.666667 843.340951ZM522.666667 893.474285 522.666667 893.474285C379.876337 893.474285 264.121905 806.658462 264.121905 699.565715 264.121905 592.472966 379.876337 505.657143 522.666667 505.657143 665.456996 505.657143 781.211428 592.472966 781.211428 699.565715 781.211428 806.658462 665.456996 893.474285 522.666667 893.474285L522.666667 893.474285Z"  ></path><path d="M328.758095 498.405715C378.299616 498.405715 418.460951 458.244378 418.460951 408.702857 418.460951 359.161338 378.299616 319 328.758095 319 279.216576 319 239.055238 359.161338 239.055238 408.702857 239.055238 458.244378 279.216576 498.405715 328.758095 498.405715L328.758095 498.405715ZM328.758095 448.272382C306.90445 448.272382 289.188572 430.556501 289.188572 408.702857 289.188572 386.849212 306.90445 369.133333 328.758095 369.133333 350.61174 369.133333 368.327618 386.849212 368.327618 408.702857 368.327618 430.556501 350.61174 448.272382 328.758095 448.272382L328.758095 448.272382Z"  ></path><path d="M716.575238 498.405715C766.116757 498.405715 806.278095 458.244378 806.278095 408.702857 806.278095 359.161338 766.116757 319 716.575238 319 667.033717 319 626.872382 359.161338 626.872382 408.702857 626.872382 458.244378 667.033717 498.405715 716.575238 498.405715L716.575238 498.405715ZM716.575238 448.272382C694.721594 448.272382 677.005715 430.556501 677.005715 408.702857 677.005715 386.849212 694.721594 369.133333 716.575238 369.133333 738.428883 369.133333 756.144762 386.849212 756.144762 408.702857 756.144762 430.556501 738.428883 448.272382 716.575238 448.272382L716.575238 448.272382Z"  ></path><path d="M932.149018 767.159371C976.421003 698.533801 1000.186667 619.863132 1000.186667 537.975238 1000.186667 291.664954 785.995691 92.773333 522.666667 92.773333 259.337643 92.773333 45.146667 291.664954 45.146667 537.975238 45.146667 784.285523 259.337643 983.177143 522.666667 983.177143 644.527081 983.177143 759.341054 940.422944 847.029762 864.729043 857.509376 855.682921 858.67145 839.854187 849.625327 829.374573 840.579204 818.894961 824.75047 817.732885 814.270857 826.779008 735.681237 894.618468 632.492169 933.04381 522.666667 933.04381 286.229538 933.04381 95.28 755.733523 95.28 537.975238 95.28 320.216954 286.229538 142.906667 522.666667 142.906667 759.103795 142.906667 950.053333 320.216954 950.053333 537.975238 950.053333 610.099727 929.130844 679.358735 890.021425 739.981858 882.516563 751.615072 885.863251 767.129549 897.496465 774.634411 909.129679 782.139273 924.644154 778.792585 932.149018 767.159371L932.149018 767.159371Z"  ></path><path d="M933.297446 341.144591C975.279191 307.223305 1000.186667 256.222566 1000.186667 201.186667 1000.186667 101.856413 919.663586 21.333333 820.333333 21.333333 747.438752 21.333333 682.608077 65.107606 654.660928 131.084833L700.82362 150.638785C720.985726 103.040372 767.747089 71.466667 820.333333 71.466667 891.975712 71.466667 950.053333 129.544289 950.053333 201.186667 950.053333 240.914944 932.114135 277.647383 901.789532 302.14969L933.297446 341.144591 933.297446 341.144591Z"  ></path><path d="M131.926076 302.14969C101.601472 277.647383 83.662274 240.914944 83.662274 201.186667 83.662274 129.544289 141.739897 71.466667 213.382274 71.466667 265.968518 71.466667 312.729882 103.040372 332.891987 150.638785L379.054679 131.084833C351.107531 65.107606 286.276855 21.333333 213.382274 21.333333 114.052021 21.333333 33.528941 101.856413 33.528941 201.186667 33.528941 256.222566 58.436416 307.223305 100.418161 341.144591L131.926076 302.14969 131.926076 302.14969Z"  ></path><path d="M534.522306 692.21223C572.762722 692.21223 603.762705 661.212245 603.762705 622.971829 603.762705 584.731411 572.762722 553.731428 534.522306 553.731428 496.281888 553.731428 465.281905 584.731411 465.281905 622.971829 465.281905 661.212245 496.281888 692.21223 534.522306 692.21223L534.522306 692.21223ZM534.522306 642.078897C523.969764 642.078897 515.415238 633.524371 515.415238 622.971829 515.415238 612.419287 523.969764 603.864762 534.522306 603.864762 545.074848 603.864762 553.629372 612.419287 553.629372 622.971829 553.629372 633.524371 545.074848 642.078897 534.522306 642.078897L534.522306 642.078897Z"  ></path></symbol><symbol id="icon-auto" viewBox="0 0 1024 1024"><path d="M243.809523 920.380951C311.135665 920.380951 365.714285 865.802332 365.714285 798.47619 365.714285 731.15005 311.135665 676.571428 243.809523 676.571428 176.483383 676.571428 121.904762 731.15005 121.904762 798.47619 121.904762 865.802332 176.483383 920.380951 243.809523 920.380951L243.809523 920.380951ZM243.809523 871.619049C203.413839 871.619049 170.666667 838.871874 170.666667 798.47619 170.666667 758.080506 203.413839 725.333333 243.809523 725.333333 284.205207 725.333333 316.952382 758.080506 316.952382 798.47619 316.952382 838.871874 284.205207 871.619049 243.809523 871.619049L243.809523 871.619049Z"  ></path><path d="M804.571428 920.380951C871.89757 920.380951 926.47619 865.802332 926.47619 798.47619 926.47619 731.15005 871.89757 676.571428 804.571428 676.571428 737.245289 676.571428 682.666667 731.15005 682.666667 798.47619 682.666667 865.802332 737.245289 920.380951 804.571428 920.380951L804.571428 920.380951ZM804.571428 871.619049C764.175744 871.619049 731.428572 838.871874 731.428572 798.47619 731.428572 758.080506 764.175744 725.333333 804.571428 725.333333 844.967113 725.333333 877.714285 758.080506 877.714285 798.47619 877.714285 838.871874 844.967113 871.619049 804.571428 871.619049L804.571428 871.619049Z"  ></path><path d="M1011.809523 810.666667 1011.809523 578.894285C1011.809523 511.523072 957.296806 456.822276 890.130281 456.822276L36.489124 456.822276C23.023896 456.822276 12.108172 467.738001 12.108172 481.20323L12.108172 701.322112C12.108172 768.56387 66.730801 823.199588 133.826317 823.199588 147.291545 823.199588 158.207269 812.283863 158.207269 798.818635 158.207269 785.353408 147.291545 774.437683 133.826317 774.437683 93.663873 774.437683 60.870076 741.63603 60.870076 701.322112L60.870076 481.20323 36.489124 505.584181 890.130281 505.584181C930.328683 505.584181 963.047618 538.416004 963.047618 578.894285L963.047618 810.666667C963.047618 824.131895 973.963343 835.047618 987.428572 835.047618 1000.893801 835.047618 1011.809523 824.131895 1011.809523 810.666667L1011.809523 810.666667ZM359.909427 823.199588 694.774837 823.199588C708.240066 823.199588 719.155791 812.283863 719.155791 798.818635 719.155791 785.353408 708.240066 774.437683 694.774837 774.437683L359.909427 774.437683C346.444198 774.437683 335.528474 785.353408 335.528474 798.818635 335.528474 812.283863 346.444198 823.199588 359.909427 823.199588L359.909427 823.199588Z"  ></path><path d="M288.80963 241.582246 268.190477 252.952381 621.924403 252.952381 604.684467 245.811365 836.513681 477.640578 895.999964 473.411465 639.164341 211.331492 632.023326 204.190476 621.924403 204.190476 268.190477 204.190476 254.74595 204.190476 247.571324 215.560611 85.333333 473.411465 142.523915 473.411465 288.80963 241.582246Z"  ></path><path d="M463.238095 228.571428 463.238095 472.685523 512 472.685523 512 228.571428 463.238095 228.571428 463.238095 228.571428Z"  ></path></symbol><symbol id="icon-jewelry" viewBox="0 0 1028 1024"><path d="M793.353159 127.013285C788.757212 120.978393 781.606701 117.435964 774.021014 117.435964L526.327177 117.435964C518.583824 117.435964 483.890627 117.435964 475.060807 117.435964 466.230987 117.435964 482.176626 161.803936 483.890627 169.360544 484.416564 171.679277 503.502676 167.131636 504.788585 169.360544L666.818369 433.880875 665.166215 413.067087 478.578795 901.572521C476.722143 906.433431 475.512321 910.817907 475.060807 915.080171 473.971201 925.365995 476.431723 935.280759 487.711307 941.927533 498.610029 948.349873 508.106155 946.053523 516.598194 940.610133 520.169202 938.32112 523.548263 935.307471 527.069865 931.519855L946.940048 525.074423C956.582134 515.739556 956.831186 500.355693 947.496316 490.713604 938.161447 481.071516 922.777584 480.822466 913.135497 490.157335L492.371361 897.514955C500.172997 889.074709 528.908982 906.008098 523.97964 918.913632L710.56706 430.408196C713.176959 423.575209 712.570104 415.930089 708.914906 409.594411L547.375448 129.592684 526.327179 166.035869 774.021014 166.035869 754.688869 156.458548 959.305532 425.138701C967.436617 435.81555 982.683459 437.879298 993.360308 429.748213 1004.037157 421.617129 1006.100905 406.370287 997.96982 395.693438L793.353159 127.013285Z"  ></path><path d="M773.224427 175.240885 676.300754 401.396124 661.784107 435.268299 698.635935 435.268297 990.787629 435.268294 990.787629 386.668388 698.635935 386.668393 720.971115 420.540565 817.894789 194.385325 773.224427 175.240885 773.224427 175.240885Z"  ></path><path d="M451.432425 129.592684 289.892969 409.594411 284.288295 419.309178 288.044944 429.876896 461.582175 918.049299C457.173579 905.64761 485.619836 888.843351 494.238928 898.385182L48.971945 405.449026 50.918742 435.569419 244.766091 155.567692 224.786859 166.035869 472.480694 166.035869 451.432425 129.592684 451.432425 129.592684ZM493.528963 153.879148 514.553876 117.435964 472.480694 117.435964 224.786859 117.435964 212.054827 117.435964 204.807629 127.904141 10.96028 407.905867 0 423.737382 12.907077 438.026257 458.174059 930.962415C461.700269 934.866131 465.088402 937.968009 468.692781 940.328418 477.198497 945.898577 486.86492 948.259213 497.834403 941.779134 508.86517 935.26285 511.441311 925.577137 510.594149 915.413478 510.236741 911.125527 509.123525 906.690182 507.374761 901.77079L333.83753 413.598387 331.989505 433.880875 493.528963 153.879148 493.528963 153.879148Z"  ></path><path d="M191.682382 194.385325 288.606057 420.540565 310.941236 386.668393 52.478105 386.668393 52.478105 435.268297 310.941236 435.268297 347.793063 435.268297 333.276417 401.396124 236.352743 175.240885 191.682382 194.385325 191.682382 194.385325Z"  ></path><path d="M310.388965 422.56605 966.487683 422.56605C979.908178 422.56605 990.787636 411.68659 990.787636 398.266097 990.787636 384.845604 979.908178 373.966144 966.487683 373.966144L310.388965 373.966144C296.968472 373.966144 286.089012 384.845604 286.089012 398.266097 286.089012 411.68659 296.968472 422.56605 310.388965 422.56605L310.388965 422.56605Z"  ></path></symbol><symbol id="icon-trade-assurance" viewBox="0 0 1024 1024"><path d="M534.373984 770.601626 534.373984 716.466991C557.788619 713.048454 593.730082 702.277724 612.297886 684.037724 630.865692 665.844553 640.278374 640.931381 640.278374 609.39187 640.278374 577.454308 631.333984 552.75187 613.211057 535.237724 595.08813 517.770406 566.779838 502.129431 528.192521 488.314797 502.717397 479.323578 485.367155 470.168454 476.024715 460.732358 466.729105 451.319676 462.022765 438.699187 462.022765 422.917724 462.022765 406.082603 466.494959 392.829918 475.486178 383.253333 484.453984 373.676749 498.268619 368.829918 516.930082 368.829918 534.865692 368.829918 548.773984 375.807479 558.654959 388.638699 568.489105 401.423089 573.453009 419.382114 573.453009 442.796749L638.569105 442.796749C638.569105 395.967479 626.978861 377.001626 610.003251 355.741139 593.097886 334.480651 581.203251 321.040651 534.373984 316.357724L534.373984 255.479676 487.544715 255.479676 487.544715 315.795772C464.130082 319.588943 436.290082 330.851381 418.44813 349.583089 400.559349 368.338212 394.167155 392.946991 394.167155 423.432845 394.167155 455.534308 404.680324 480.470895 423.271546 498.219187 441.839349 515.967479 471.037397 531.421139 509.624715 544.509918 533.484228 552.939187 550.553495 562.024064 560.22374 571.811381 569.917397 581.598699 574.92813 594.289431 574.92813 609.883578 574.92813 626.929431 569.636422 640.205527 558.865692 649.71187 548.094959 659.218212 532.594473 663.971381 512.340813 663.971381 493.32813 663.971381 477.710569 653.809431 465.394473 643.108943 453.125203 632.478699 447.013984 630.113822 447.013984 583.284553L381.640324 583.284553C381.640324 630.113822 389.577886 657.672845 410.089105 677.341139 430.62374 696.939187 464.130082 713.329431 487.544715 716.724553L487.544715 770.601626 534.373984 770.601626 534.373984 770.601626Z"  ></path><path d="M941.788619 166.035772 800.832521 123.116748C793.691057 120.986016 784.980813 122.297236 779.033495 126.699187 773.086178 131.101138 768.520324 138.102114 768.520324 145.524553L768.520324 255.479676 674.861788 255.479676 674.861788 104.783089C674.861788 94.059187 670.834473 84.693333 660.414959 82.070894L516.321301 45.450406C512.574959 44.490406 509.437397 44.490406 505.691057 45.450406L362.346667 82.070894C351.950569 84.693333 347.056911 94.059187 347.056911 104.783089L347.056911 255.479676 253.398374 255.479676 253.398374 145.524553C253.398374 138.102114 250.096911 131.101138 244.149594 126.699187 238.178862 122.297236 230.63935 121.009431 223.544716 123.116748L82.612032 166.035772C72.286179 169.173333 65.495935 178.96065 66.104716 189.754797L102.842276 839.019187C103.380813 848.759676 109.960325 857.142114 119.255935 860.045527L505.246178 980.279676C507.540813 980.982114 509.882276 981.333333 512.247155 981.333333 514.612032 981.333333 516.930082 980.982114 519.224715 980.279676L905.191546 860.045527C914.487155 857.142114 921.043251 848.759676 921.581788 839.019187L924.06374 794.788943C924.087155 794.507968 924.227642 794.297235 924.227642 794.01626 924.227642 781.091381 913.737886 770.601626 900.813009 770.601626 887.88813 770.601626 877.398374 781.091381 877.398374 794.01626L877.234473 794.01626 875.759349 820.146991 512.247155 933.380162 148.68813 820.146991 113.683252 205.466016 206.569106 177.110894 206.569106 269.762603C206.569106 282.710895 217.527155 302.308943 230.475447 302.308943L366.514473 302.308943C379.439349 302.308943 393.886178 282.710895 393.886178 269.762603L393.886178 123.046504 510.959349 92.326504 628.032521 123.046504 628.032521 269.762603C628.032521 282.710895 645.031546 302.308943 657.956422 302.308943L794.018861 302.308943C806.967155 302.308943 815.349594 282.710895 815.349594 269.762603L815.349594 177.110894 909.499838 205.466016 883.860813 676.170406C883.860813 676.451381 883.720324 676.662114 883.720324 676.943089 883.720324 689.867968 894.210082 700.357724 907.134959 700.357724 920.059838 700.357724 930.549594 689.867968 930.549594 676.943089L930.760324 676.943089 958.366178 189.754797C958.974959 178.96065 952.137886 169.173333 941.788619 166.035772L941.788619 166.035772Z"  ></path></symbol><symbol id="icon-browse" viewBox="0 0 1024 1024"><path d="M1012.444444 500.673015 1010.920636 498.133333C865.193651 280.838095 701.536508 170.666667 524.419049 170.666667 226.48889 170.666667 13.180952 497.498413 11.580952 500.673015 1.549206 520.152382 1.549206 540.8 11.580952 560.355556L13.866667 564.012698C175.568254 779.504762 338.514285 884.266667 512 884.266667 588.393651 884.266667 658.082539 863.263492 719.847618 831.568254 752.101587 815.034921 788.190477 793.701587 809.828572 774.653969 814.349205 770.641269 816.761905 763.682539 816.761905 756.825397 816.761905 742.780951 805.384128 731.428572 791.365079 731.428572 785.777777 731.428572 780.901587 733.612698 776.71111 736.634921 776.71111 736.634921 716.469841 777.371428 682.844444 793.244444 631.11111 817.726985 573.841269 833.447618 512 833.447618 356.114285 833.447618 206.958731 735.974603 56.025397 535.542857 54.323809 531.453969 54.526984 528.203174 56.533333 524.317461 58.260317 521.295238 256.812698 221.460317 524.419049 221.460317 683.174603 221.460317 832.304762 323.580952 967.796826 525.003174 968.380951 526.32381 968.71111 527.441269 968.914285 528.253969L966.679364 531.606349C949.942857 557.003174 879.009523 643.530159 871.314285 651.961905 863.619049 660.393651 860.419049 663.746031 860.419049 672.253969 860.419049 686.298413 871.796826 697.650795 885.815872 697.650795 893.079364 697.650795 898.793651 695.009523 904.177777 689.625397 909.561905 684.266667 990.907936 587.149205 1009.092064 559.568254L1009.879364 558.374603C1022.247618 544.07619 1023.339682 521.879364 1012.444444 500.673015L1012.444444 500.673015Z"  ></path><path d="M393.498413 524.393651C393.498413 586.539682 448.88889 641.041269 512 641.041269 576.203174 641.041269 630.47619 587.606349 630.47619 524.393651 630.47619 461.180951 576.203174 407.796826 512 407.796826 448.88889 407.796826 393.498413 462.273015 393.498413 524.393651L393.498413 524.393651ZM579.682539 524.393651C579.682539 558.857143 547.403174 590.247618 512 590.247618 476.546031 590.247618 444.292064 558.857143 444.292064 524.393651 444.292064 489.955556 476.571428 458.590477 512 458.590477 547.428572 458.590477 579.682539 489.955556 579.682539 524.393651L579.682539 524.393651Z"  ></path></symbol><symbol id="icon-rfqqm" viewBox="0 0 1024 1024"><path d="M647.349867 812.6816C653.312533 791.032533 656.3168 767.8928 656.3168 743.2624 656.3168 713.861867 651.202667 685.447467 640.9744 658.042133 630.746133 630.6368 615.426667 609.492267 594.9472 594.539733 574.467733 579.5872 551.144533 572.133867 524.84 572.133867 512.157867 572.133867 500.0032 573.968533 488.4448 577.614933 476.8864 581.261333 465.9472 586.7424 455.6272 594.081067 445.3072 601.419733 435.835733 611.326933 427.189867 623.871467 418.544 636.416 411.297067 653.501333 405.472 675.1504 399.646933 696.799467 396.7344 720.9024 396.7344 747.482133 396.7344 777.203733 401.4816 805.709867 410.953067 833.023467 420.424533 860.337067 435.285333 881.321067 455.512533 895.952533 475.739733 910.584 499.223467 917.899733 525.9408 917.899733 539.058667 917.899733 550.892267 916.1568 561.326933 912.648 571.7616 909.1392 583.411733 903.130667 596.2544 894.6224L630.081067 933.586133 659.642133 895.746133 627.6272 859.4656C636.479467 843.664533 643.015467 828.069867 647.349867 812.6816L647.349867 812.6816ZM596.506667 783.120533C594.855467 791.926933 591.897067 801.857067 587.539733 812.910933L561.326933 782.6848 532.2016 819.859733 557.061333 849.879467C551.098667 853.181867 545.869867 855.429333 541.374933 856.7136 536.88 857.997867 532.064 858.617067 526.812267 858.617067 511.446933 858.617067 497.916267 853.457067 486.266133 843.16 474.616 832.862933 466.199467 818.690133 460.947733 800.618667 455.696 782.5472 453.173333 764.017067 453.173333 745.0512 453.173333 723.837867 456.154667 704.000533 462.140267 685.4704 465.717867 674.714667 470.648533 665.312 476.932267 657.2624 483.216 649.2128 490.3024 642.8832 498.2144 638.3424 506.1264 633.8016 515.322667 631.508267 525.757333 631.508267 541.306133 631.508267 554.882667 636.599467 566.509867 646.736 578.137067 656.872533 586.6224 670.999467 591.92 689.070933 597.2176 707.1424 599.877867 725.6496 599.877867 744.615467 599.877867 758.3296 598.754133 771.1952 596.506667 783.120533L596.506667 783.120533Z"  ></path><path d="M878.2656 580.458667 829.876267 838.229333 828.981867 838.229333 780.615467 580.458667 699.3168 580.458667 699.3168 909.666667 751.2608 909.666667 751.2608 634.4208 751.9488 634.4208 801.2096 909.666667 856.089067 909.666667 907.368 634.4208 908.033067 634.4208 908.033067 909.666667 960 909.666667 960 580.458667 878.2656 580.458667Z"  ></path><path d="M785.133333 70.696533C779.4 65.284267 765.4336 62.784533 757.819733 64.7568 753.485333 65.903467 424.139733 158.6688 296.1488 449.4176 190.563733 364.151467 75.897067 335.461867 70.714133 334.223467 62.848 332.365867 54.637867 334.705067 49.065067 340.484267 43.4464 346.263467 41.359467 354.6112 43.538133 362.362667 48.2624 379.081067 158.663467 773.717867 287.571733 920.124267 312.821333 965.4864 344.1024 981.333333 365.797333 981.333333L368.067733 981.333333C385.886933 981.333333 403.3392 976.173333 420.4016 967 428.841067 963.6288 434.826667 955.4416 434.826667 945.786667 434.826667 933.104533 424.552533 922.853333 411.893333 922.853333 407.88 922.853333 407.788267 922.601067 400.977067 925.9952 394.165867 929.389333 386.506133 932.026667 381.277333 932.233067 369.994133 932.714667 362.724267 925.2384 353.894933 917.5328 335.066667 901.066667 318.5088 871.528533 313.7616 858.0896 305.666133 833.184 298.465067 800.6416 294.681067 758.696533 255.786133 328.6048 624.3248 162.911467 742.7984 120.2784 713.650133 251.319467 659 458.659733 633.452267 519.8688 630.631467 526.634133 619.348267 550.324267 619.348267 556.080533 619.348267 568.762667 629.599467 579.0368 642.2816 579.0368 651.3632 579.0368 658.954133 575.986667 662.784 565.941867 725.437867 400.684267 781.372267 142.2944 790.385067 99.3632 791.9904 91.6576 790.866667 76.1088 785.133333 70.696533L785.133333 70.696533ZM247.874133 764.062933C248.172267 767.250667 248.4704 770.392533 248.8144 773.557333 180.404267 643.594133 123.277333 469.048533 99.289067 390.8688 141.945067 406.4864 212.465067 437.8592 276.5408 491.981867 248.768533 575.642667 239.1136 667.077867 247.874133 764.062933L247.874133 764.062933Z"  ></path></symbol><symbol id="icon-rfqquantity" viewBox="0 0 1024 1024"><path d="M933.12 879.36C933.12 879.36 879.36 877.12 803.2 854.72 899.52 771.84 960 650.88 960 514.24 960 265.6 758.4 64 512 64 265.6 64 64 265.6 64 512 64 637.44 117.76 758.4 209.6 843.52L209.6 843.52 209.6 843.52C214.08 848 220.8 850.24 225.28 850.24 238.72 850.24 247.68 841.28 247.68 827.84 247.68 821.12 245.44 816.64 240.96 812.16L240.96 812.16C155.84 733.76 108.8 626.24 108.8 512 108.8 290.24 290.24 108.8 512 108.8 733.76 108.8 915.2 290.24 915.2 512 915.2 644.16 850.24 762.88 751.68 836.8 733.76 830.08 718.08 821.12 700.16 812.16 576.96 744.96 422.4 758.4 355.2 814.4 321.6 843.52 317.12 868.16 321.6 886.08 328.32 915.2 357.44 933.12 382.08 942.08 422.4 953.28 467.2 960 512 960 603.84 960 691.2 933.12 762.88 886.08 856.96 919.68 906.24 921.92 935.36 924.16 951.04 924.16 960 915.2 960 901.76 957.76 888.32 951.04 879.36 933.12 879.36L933.12 879.36ZM512 915.2C471.68 915.2 433.6 908.48 395.52 897.28 379.84 892.8 368.64 883.84 366.4 874.88 364.16 868.16 373.12 856.96 384.32 848 408.96 827.84 460.48 812.16 520.96 812.16 570.24 812.16 626.24 823.36 680 852.48 688.96 856.96 697.92 861.44 706.88 865.92 648.64 897.28 581.44 915.2 512 915.2L512 915.2Z"  ></path></symbol><symbol id="icon-atmaway" viewBox="0 0 1024 1024"><path d="M784.130082 627.2 784.130082 627.2C763.43961 627.2 746.666667 582.309084 746.666667 526.933333 746.666667 471.557583 763.43961 426.666667 784.130082 426.666667 804.820555 426.666667 821.593495 471.557583 821.593495 526.933333 821.593495 582.309084 804.820555 627.2 784.130082 627.2L784.130082 627.2Z"  ></path><path d="M506.796749 666.133333 506.796749 666.133333C486.106276 666.133333 469.333333 626.853781 469.333333 578.4 469.333333 529.946219 486.106276 490.666667 506.796749 490.666667 527.487221 490.666667 544.260162 529.946219 544.260162 578.4 544.260162 626.853781 527.487221 666.133333 506.796749 666.133333L506.796749 666.133333Z"  ></path><path d="M298.176058 170.679793C148.903723 243.807857 52.325153 380.784905 47.795479 533.899838 47.683821 537.67418 47.627907 541.454551 47.627907 545.240309 47.627907 558.392393 58.289777 569.054263 71.44186 569.054263 84.593944 569.054263 95.255814 558.392393 95.255814 545.240309 95.255814 541.924122 95.304783 538.613263 95.402558 535.308222 99.385529 400.673301 185.092659 279.115179 319.12951 213.450932 330.940433 207.664797 335.824491 193.399561 330.038353 181.588637 324.252218 169.777713 309.986982 164.893657 298.176058 170.679793L298.176058 170.679793ZM495.752687 972.469122C509.028354 973.415674 522.389387 973.891473 535.813954 973.891473 804.760642 973.891473 1024 782.759725 1024 545.240309 1024 307.720894 804.760642 116.589147 535.813954 116.589147 539.293886 116.589147 540.530596 117.143252 540.453681 117.087011 538.422812 115.602003 536.101914 113.576604 529.892474 107.917904 512.620427 92.177777 501.81277 83.341593 485.099902 72.691983 433.740934 39.965525 366.37498 21.333334 273.860465 21.333334 260.708382 21.333334 250.046511 31.995204 250.046511 45.147288 250.046511 58.299371 260.708382 68.961241 273.860465 68.961241 357.524284 68.961241 415.995189 85.133224 459.505449 112.858405 471.051998 120.215985 519.335509 164.217054 535.813954 164.217054 779.798515 164.217054 976.372094 335.588892 976.372094 545.240309 976.372094 754.891729 779.798515 926.263567 535.813954 926.263567 523.519644 926.263567 511.288412 925.828 499.139945 924.961818 486.021165 924.026453 474.628028 933.903061 473.692663 947.021843 472.757297 960.140623 482.633907 971.533758 495.752687 972.469122L495.752687 972.469122Z"  ></path><path d="M238.139535 1021.519379C369.660369 1021.519379 476.27907 914.900678 476.27907 783.379844 476.27907 651.859012 369.660369 545.240309 238.139535 545.240309 106.618701 545.240309 0 651.859012 0 783.379844 0 914.900678 106.618701 1021.519379 238.139535 1021.519379L238.139535 1021.519379ZM238.139535 973.891473C132.922868 973.891473 47.627907 888.596512 47.627907 783.379844 47.627907 678.163179 132.922868 592.868218 238.139535 592.868218 343.356203 592.868218 428.651164 678.163179 428.651164 783.379844 428.651164 888.596512 343.356203 973.891473 238.139535 973.891473L238.139535 973.891473Z"  ></path><path d="M214.325581 678.598449 214.325581 821.48217C214.325581 834.634255 224.987452 845.296124 238.139535 845.296124 251.291618 845.296124 261.953489 834.634255 261.953489 821.48217L261.953489 678.598449C261.953489 665.446366 251.291618 654.784497 238.139535 654.784497 224.987452 654.784497 214.325581 665.446366 214.325581 678.598449L214.325581 678.598449Z"  ></path><path d="M303.689267 834.377316 237.010199 758.172666C228.349491 748.274714 213.304725 747.271729 203.406774 755.932437 193.508823 764.593146 192.505838 779.637909 201.166546 789.535861L267.845615 865.740512C276.506323 875.638464 291.551089 876.641449 301.449039 867.98074 311.346991 859.320034 312.349975 844.275268 303.689267 834.377316L303.689267 834.377316Z"  ></path></symbol><symbol id="icon-rfq1" viewBox="0 0 1024 1024"><path d="M95.626718 342.011827C226.725812 796.475733 373.457047 950.361353 373.457047 950.361353 354.007987 919.039507 336.150869 869.63037 328.843074 791.354558 317.833444 672.837897 333.638238 571.334353 365.880738 484.600036 243.010105 376.93933 95.626718 342.011827 95.626718 342.011827M154.453485 402.085357C200.141559 420.287526 262.516736 450.592617 320.940715 497.02874 295.910059 574.000546 284.689446 656.534415 287.432249 743.345606 229.430272 623.31373 180.999358 484.063004 154.453485 402.085357"  ></path><path d="M642.80007 215.333547C454.312695 361.52775 369.803151 555.00231 391.669001 790.385929 404.577508 929.521664 446.065058 979.659625 480.570786 980.177502L464.592593 980.196693C662.690323 980.196693 842.6807 354.373404 906.39853 73.934696 854.821926 91.619176 746.413321 134.966993 642.80007 215.333547ZM479.957143 1018.538624C448.174914 1018.059108 372.143181 995.215068 353.461325 793.934317 298.259684 199.18355 921.148303 28.802844 927.439454 27.134104L957.62963 19.212516 951.05062 49.728853C950.53293 52.12653 898.438257 291.99853 817.05529 528.76326 705.328546 853.758483 592.719644 1018.557805 482.393126 1018.557805L479.957143 1018.538624Z"  ></path></symbol><symbol id="icon-scanning" viewBox="0 0 1024 1024"><path d="M910.390485 419.06176C898.522325 419.06176 888.928939 409.46816 888.928939 397.6L888.928939 139.115947C888.928939 121.36704 874.485205 106.92352 856.736469 106.92352 845.340331 106.92352 612.760491 107.1808 598.960683 107.610027 588.315605 108.2112 578.121429 100.76416 576.297259 89.754027 574.344149 78.057813 582.220672 67.004587 593.895723 65.0304 599.862059 64.02176 854.182528 64 856.736469 64 898.157525 64 931.852245 97.695147 931.852245 139.115947L931.852245 397.6C931.852245 409.46816 922.258859 419.06176 910.390485 419.06176L910.390485 419.06176Z"  ></path><path d="M85.461632 419.06176C73.593387 419.06176 64 409.46816 64 397.6L64 139.115947C64 97.695147 97.694805 64 139.115819 64 141.669717 64 395.990187 64.02176 401.956565 65.0304 413.631659 67.004587 421.508139 78.057813 419.555072 89.754027 417.709355 100.76416 407.686699 108.189867 396.891605 107.610027 383.091755 107.1808 150.511915 106.92352 139.115819 106.92352 121.366912 106.92352 106.923307 121.36704 106.923307 139.115947L106.923307 397.6C106.923307 409.46816 97.329963 419.06176 85.461632 419.06176L85.461632 419.06176Z"  ></path><path d="M856.736469 973.728C854.182528 973.728 599.862059 973.70624 593.895723 972.698027 582.220672 970.72384 574.344149 959.670613 576.297259 947.973973 578.121429 936.964267 588.315605 929.62432 598.960683 930.117973 612.696192 930.5472 845.340331 930.804907 856.736469 930.804907 874.485205 930.804907 888.928939 916.361387 888.928939 898.612907L888.928939 640.128427C888.928939 628.25984 898.522325 618.666667 910.390485 618.666667 922.258859 618.666667 931.852245 628.25984 931.852245 640.128427L931.852245 898.612907C931.852245 940.033707 898.157525 973.728 856.736469 973.728L856.736469 973.728Z"  ></path><path d="M139.115819 973.728C97.694805 973.728 64 940.033707 64 898.612907L64 640.128427C64 628.25984 73.593387 618.666667 85.461632 618.666667 97.329963 618.666667 106.923307 628.25984 106.923307 640.128427L106.923307 898.612907C106.923307 916.361387 121.366912 930.804907 139.115819 930.804907 150.511915 930.804907 383.156139 930.5472 396.891605 930.117973 407.708245 929.64608 417.709355 936.964267 419.555072 947.973973 421.508139 959.670613 413.631659 970.72384 401.956565 972.698027 395.990187 973.70624 141.669717 973.728 139.115819 973.728L139.115819 973.728Z"  ></path><path d="M983.5232 533.590187 42.794965 533.590187C30.926592 533.590187 21.333333 523.996587 21.333333 512.128 21.333333 500.260267 30.926592 490.666667 42.794965 490.666667L983.5232 490.666667C995.391488 490.666667 1004.984832 500.260267 1004.984832 512.128 1004.984832 523.996587 995.391488 533.590187 983.5232 533.590187L983.5232 533.590187Z"  ></path></symbol><symbol id="icon-compare" viewBox="0 0 1024 1024"><path d="M247.1424 794.9824c-1.0752 0-2.176-0.0768-3.2768-0.2304-10.8032-1.3568-19.6096-9.3952-21.9648-20.0448L112.64 282.112c-3.0976-13.952 5.7088-27.7504 19.6608-30.848 13.8752-3.1232 27.7504 5.7088 30.848 19.6608l93.6704 422.3232 218.5472-428.4928c6.5024-12.7232 22.016-17.792 34.7904-11.2896 12.7232 6.5024 17.7664 22.0672 11.2896 34.7904l-251.2384 492.6208C265.7024 789.6064 256.768 794.9824 247.1424 794.9824z"  ></path><path d="M669.184 793.7792c-4.8128 0-9.7024-0.128-14.6176-0.3584-58.4448-3.0976-104.9344-22.912-134.4-57.3696-24.1664-28.2112-34.8416-63.7696-30.848-102.784l0.5888-5.0176c1.9712-14.1568 14.9248-24.0128 29.2096-22.0672 14.1568 1.9712 24.0128 15.0272 22.0672 29.2096l-0.3584 3.1488c-2.5088 24.576 3.9424 46.6432 18.6624 63.8208 20.0704 23.424 53.888 37.0432 97.8432 39.3728 85.9648 4.48 151.8848-41.9584 169.9584-87.9616 18.0736-45.9776-27.6992-74.7776-48.1792-85.0176-10.3424-5.1712-31.4624-10.9056-53.7856-16.9984-65.3312-17.7664-146.6368-39.8848-174.8736-95.0784-12.1088-23.6288-12.8256-49.9968-2.176-78.336 19.0208-50.56 51.1488-86.2464 95.488-106.0096 51.5072-22.9632 119.8848-22.0416 182.8608 2.5344 75.8016 29.568 89.7792 108.3136 86.5792 145.8176-1.2032 14.2336-13.568 24.8064-27.9808 23.6032-14.208-1.2032-24.7296-13.6448-23.6032-27.8528l0 0c0.2304-2.8672 4.5568-70.5792-53.7856-93.3376-50.3552-19.6352-103.7824-20.9664-142.976-3.4816-31.2576 13.9264-54.1696 39.8592-68.1472 76.9792-7.1936 19.072-3.5584 30.0032-0.2048 36.5568 17.792 34.816 92.7488 55.1936 142.3872 68.7104 26.0096 7.0656 48.4352 13.1584 63.36 20.6336 68.1728 34.0992 96.2304 91.648 73.1904 150.2208C851.2256 734.2848 773.4272 793.7792 669.184 793.7792z"  ></path><path d="M1024 214.6048 1024 732.928c0 14.08-11.52 25.6-25.6 25.6s-25.6-11.52-25.6-25.6L972.8 214.6048c0-33.536-28.416-60.928-61.952-60.928L112.128 153.6768C78.592 153.6768 51.2 178.2528 51.2 211.7888l0 597.8624c0 33.536 27.392 60.928 60.928 60.928l742.7584 0c14.08 0 25.6 11.52 25.6 25.6s-11.52 25.6-25.6 25.6L112.128 921.7792c-61.952 0-112.128-50.176-112.128-112.128L0 211.7888c0-61.952 50.176-109.312 112.128-109.312l798.72 0C972.544 102.4768 1024 152.6528 1024 214.6048z"  ></path></symbol><symbol id="icon-filter" viewBox="0 0 1024 1024"><path d="M1024 119.552c0 32-12.544 61.952-35.072 84.48L665.6 511.5136 665.6 998.4c0 14.08-11.52 25.6-25.6 25.6s-25.6-11.52-25.6-25.6L614.4 500.5056c0-6.912 2.816-13.824 7.936-18.432L953.088 167.424c12.544-12.544 19.712-29.696 19.712-47.872 0-37.632-30.72-68.352-68.352-68.352 0 0-784.128 0-784.896 0C81.92 51.2 51.2 81.92 51.2 119.552c0 18.176 7.168 35.328 19.968 48.384l305.152 314.88c4.864 4.864 7.68 11.52 7.68 18.432L384 870.4c0 14.336-11.52 25.6-25.6 25.6s-25.6-11.264-25.6-25.6l0-358.4L35.328 204.288C12.544 181.504 0 151.552 0 119.552c0-66.048 53.76-119.552 119.552-119.552 0.768 0 784.896 0 784.896 0C970.496 0 1024 53.504 1024 119.552z"  ></path></symbol><symbol id="icon-pin" viewBox="0 0 1025 1024"><path d="M51.196068 1024c-13.021992 0-26.0184-5.091113-36.021541-15.094254-18.113104-18.164271-20.262117-46.050265-5.091113-66.337966l213.059228-288.325828-166.983379-166.983379C39.862586 470.961896 36.639068 445.48075 48.305135 425.2698c7.982046-12.612656 76.699275-112.82315 229.483822-75.010766 2.532765 0.307002 5.270197 0.537253 8.212297 0.793088 6.267953 0.537253 13.277827 1.17684 20.87612 2.404847 32.33752 5.244614 89.516599-20.722619 139.148552-63.037697 47.559691-40.49865 78.285451-87.751339 78.285451-120.344693 0-7.57271-0.179084-15.631507-0.358169-23.536802-1.279174-30.623426-3.223519-77.697031 31.979351-112.874317 41.649907-41.701074 107.552953-45.05251 153.270633-7.854129 0.921005 0.741921 1.76526 1.535009 2.583932 2.379264l-0.025583 0c24.585725 24.048472 276.608594 275.815506 279.243692 278.476188 21.694792 21.694792 33.642277 50.527374 33.693444 81.176384 0.025583 30.674593-11.896319 59.456009-33.539943 81.099634-35.023785 35.049369-82.353225 33.053857-113.565071 31.723516-7.393626-0.153501-15.478006-0.332585-23.025133-0.332585-30.828094 0-67.69389 21.592458-103.715431 60.760767-50.808793 55.260318-82.09739 126.63823-79.411124 158.617581 1.125673 10.258976 3.223519 28.37208 3.607271 30.930428 36.891379 149.612195-63.114447 217.843339-74.627013 225.109047-20.697036 12.484739-46.357267 9.389137-63.012113-7.240125l-178.393611-178.393611c-10.003141-10.003141-10.003141-26.171901 0-36.175042s26.171901-10.003141 36.175042 0l178.393611 178.393611c7.854129-5.091113 80.101878-54.646315 51.320462-171.76749-0.51167-2.35368-3.044434-23.562386-4.374775-35.970374-4.298025-51.115795 35.586622-136.027367 92.688951-198.118475 32.439854-35.254036 83.27423-77.287695 141.348731-77.287695 7.905296 0 16.399011 0.179084 24.662475 0.358169 32.41427 1.355924 58.048918 0.972172 75.77827-16.782763 11.973069-11.973069 18.548024-27.885994 18.548024-44.847842-0.025583-17.013015-6.677288-33.00269-18.701524-45.05251C952.220677 340.23031 683.849964 72.243349 675.944668 64.645055c-24.278723-19.724864-60.7096-17.882853-83.785899 5.21903-17.908437 17.908437-18.317772 43.491917-17.013015 75.087516 0.204668 8.800717 0.383752 17.243266 0.383752 25.148562 0 48.378362-35.995957 107.936705-96.270638 159.282751-49.478452 42.135993-122.979792 83.811483-180.491457 74.60143-6.293536-1.023339-12.049819-1.509425-17.192099-1.944345-3.325852-0.281418-6.421454-0.562837-9.312387-0.921005-2.456014-0.07675-4.860861-0.537253-7.188958-1.304758-117.760762-29.037251-167.597382 43.44075-172.893163 51.806549l182.742803 182.026466c8.954218 8.954218 10.028724 23.101883 2.481598 33.309692L51.170485 973.114457l238.617125-174.530506c11.435816-8.365798 27.425491-5.80745 35.740123 5.602782s5.80745 27.399908-5.602782 35.714539l-238.821793 174.12117C72.148939 1020.699731 61.685295 1024 51.196068 1024z"  ></path></symbol><symbol id="icon-history" viewBox="0 0 1024 1024"><path d="M65.770667 385.770667c-11.776 0-21.333333-9.557333-21.333333-21.333333l0-256c0-11.776 9.557333-21.333333 21.333333-21.333333s21.333333 9.557333 21.333333 21.333333l0 256C87.104 376.213333 77.546667 385.770667 65.770667 385.770667z"  ></path><path d="M300.437333 385.770667l-234.666667 0c-11.776 0-21.333333-9.557333-21.333333-21.333333s9.557333-21.333333 21.333333-21.333333l234.666667 0c11.776 0 21.333333 9.557333 21.333333 21.333333S312.213333 385.770667 300.437333 385.770667z"  ></path><path d="M513.770667 620.437333c-11.776 0-21.333333-9.557333-21.333333-21.333333l0-384c0-11.776 9.557333-21.333333 21.333333-21.333333s21.333333 9.557333 21.333333 21.333333l0 384C535.104 610.88 525.546667 620.437333 513.770667 620.437333z"  ></path><path d="M634.965333 684.885333c-5.952 0-11.861333-2.474667-16.064-7.296l-185.6-212.266667c-7.744-8.874667-6.848-22.336 2.026667-30.101333 8.896-7.744 22.357333-6.826667 30.101333 2.026667l185.6 212.266667c7.744 8.874667 6.848 22.336-2.026667 30.101333C644.949333 683.114667 639.936 684.885333 634.965333 684.885333z"  ></path><path d="M513.770667 983.104c-258.794667 0-469.333333-210.538667-469.333333-469.333333 0-11.776 9.557333-21.333333 21.333333-21.333333s21.333333 9.557333 21.333333 21.333333c0 235.264 191.402667 426.666667 426.666667 426.666667 235.264 0 426.666667-191.402667 426.666667-426.666667 0-235.264-191.402667-426.666667-426.666667-426.666667-173.568 0-328.448 103.68-394.624 264.128-4.458667 10.88-16.896 16.085333-27.861333 11.584-10.88-4.48-16.085333-16.96-11.584-27.861333C152.469333 158.485333 322.858667 44.437333 513.770667 44.437333c258.794667 0 469.333333 210.538667 469.333333 469.333333S772.565333 983.104 513.770667 983.104z"  ></path></symbol><symbol id="icon-productfeatures" viewBox="0 0 1025 1024"><path d="M302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM458.999525 1020.8768c5.888 1.792 12.544 1.28 18.688-2.304C472.055525 1021.6448 465.399525 1022.6688 458.999525 1020.8768zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808z"  ></path><path d="M477.687525 1018.5472c-6.144 3.584-12.8 4.096-18.688 2.304C465.399525 1022.6688 472.055525 1021.6448 477.687525 1018.5472z"  ></path><path d="M857.284325 968.6784c-14.1568 0-25.6-11.4432-25.6-25.6l0-192.1792c0-6.9888 2.8672-13.7216 7.9616-18.56l127.616-121.3696c3.712-3.712 5.888-8.9856 5.888-14.7968 0-11.904-9.7024-21.5808-21.6064-21.5808L641.757925 574.592c-11.904 0-21.6064 9.6768-21.6064 21.5808 0 5.8368 2.2272 11.136 6.4512 15.36l117.7344 121.7792c4.6336 4.7872 7.1936 11.1616 7.1936 17.792l0 141.44c0 14.1568-11.4432 25.6-25.6 25.6s-25.6-11.4432-25.6-25.6l0-131.0976-110.2336-114.0224c-13.5168-13.5168-21.1456-31.8208-21.1456-51.2512 0-40.1152 32.64-72.7808 72.8064-72.7808l309.8112 0c40.1408 0 72.8064 32.64 72.8064 72.7808 0 19.4304-7.5776 37.6832-21.3504 51.456l-120.1152 114.2528 0 181.1968C882.884325 957.2352 871.441125 968.6784 857.284325 968.6784z"  ></path><path d="M920.157925 266.3936c7.9872-5.1968 9.4976-11.8016 10.5472-16.5376 1.024-9.728-3.584-19.968-13.568-25.088l-440.32-220.16c-7.168-3.584-15.36-3.584-22.528 0l-440.32 220.16C-2.414875 235.52 0.145125 259.328 0.145125 261.888l0 469.76c0 8.704 4.608 16.896 12.032 21.504 0 0 430.848 260.352 438.272 263.68 15.104 7.424 24.576 5.376 31.744 1.792l143.36-82.944c12.288-7.168 16.384-22.784 9.216-35.072-6.912-12.288-22.784-16.384-34.816-9.472l-99.072 57.6 0-0.256-10.24 5.632L490.641125 511.744l389.632-221.184L920.157925 266.3936zM440.465125 511.744l0 441.088L50.065125 717.568l0-427.52L440.465125 511.744zM465.553125 468.224 78.225125 248.576l387.328-193.536 387.328 193.536L465.553125 468.224z"  ></path></symbol><symbol id="icon-supplierfeatures" viewBox="0 0 1024 1024"><path d="M463.027961 556.126968c-153.338036 0-278.088918-124.725448-278.088918-278.063484S309.689925 0 463.027961 0s278.063484 124.750882 278.063484 278.088918S616.365997 556.126968 463.027961 556.126968zM463.027961 50.993989c-125.208683 0-227.069495 101.860812-227.069495 227.069495s101.860812 227.044061 227.069495 227.044061 227.044061-101.860812 227.044061-227.044061C690.097456 152.854801 588.236644 50.993989 463.027961 50.993989z"  ></path><path d="M33.991749 920.002782c-1.831206 0-3.662411-0.203467-5.51905-0.610402-13.759475-3.026576-22.432269-16.658884-19.405693-30.41836 27.13745-122.741642 99.724405-229.282202 204.408325-299.987085 11.673936-7.833491 27.544384-4.781481 35.403308 6.867021 7.884357 11.673936 4.806915 27.518951-6.867021 35.428742-93.79842 63.329194-158.831653 158.780786-183.12056 268.703989C56.245983 911.914957 45.691118 920.002782 33.991749 920.002782z"  ></path><path d="M609.397243 920.028215 34.042615 920.028215c-14.09011 0-25.509711-11.419602-25.509711-25.509711s11.419602-25.509711 25.509711-25.509711l575.329194 0c14.09011 0 25.509711 11.419602 25.509711 25.509711S623.487352 920.028215 609.397243 920.028215z"  ></path><path d="M854.67706 1024c-14.064676 0-25.433411-11.368735-25.433411-25.433411l0-190.928618c0-6.943321 2.848542-13.632308 7.909791-18.439223l126.785555-120.579802c3.687845-3.687845 5.849685-8.927127 5.849685-14.700512 0-11.826536-9.639263-21.440366-21.465799-21.440366L640.553171 632.478069c-11.826536 0-21.465799 9.613829-21.465799 21.440366 0 5.798818 2.212707 11.063534 6.40922 15.260047l116.968258 120.986737c4.603447 4.756048 7.146789 11.088967 7.146789 17.676221l0 140.519597c0 14.064676-11.368735 25.433411-25.433411 25.433411s-25.433411-11.368735-25.433411-25.433411l0-130.244499-109.516268-113.280413c-13.428841-13.428841-21.007998-31.61373-21.007998-50.917689 0-39.854155 32.427599-72.307188 72.332621-72.307188l307.795142 0c39.879589 0 72.332621 32.427599 72.332621 72.307188 0 19.303959-7.52829 37.437981-21.211465 51.121156l-119.333565 113.509314 0 180.017684C880.110471 1012.605832 868.716303 1024 854.67706 1024z"  ></path></symbol><symbol id="icon-similarproduct" viewBox="0 0 1025 1024"><path d="M302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM458.999525 1020.8768c5.888 1.792 12.544 1.28 18.688-2.304C472.055525 1021.6448 465.399525 1022.6688 458.999525 1020.8768zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808z"  ></path><path d="M477.687525 1018.5472c-6.144 3.584-12.8 4.096-18.688 2.304C465.399525 1022.6688 472.055525 1021.6448 477.687525 1018.5472z"  ></path><path d="M490.641125 954.112 490.641125 511.744l389.632-221.184 39.8848-24.1664c7.9872-5.1968 9.4976-11.8016 10.5472-16.5376 1.024-9.728-3.584-19.968-13.568-25.088l-440.32-220.16c-7.168-3.584-15.36-3.584-22.528 0l-440.32 220.16C-2.414875 235.52 0.145125 259.328 0.145125 261.888l0 469.76c0 8.704 4.608 16.896 12.032 21.504 0 0 430.848 260.352 438.272 263.68 15.104 7.424 24.576 5.376 31.744 1.792l143.36-82.944c12.288-7.168 16.384-22.784 9.216-35.072-6.912-12.288-22.784-16.384-34.816-9.472l-99.072 57.6 0-0.256L490.641125 954.112M440.465125 511.744l0 441.088L50.065125 717.568l0-427.52L440.465125 511.744zM465.553125 468.224 78.225125 248.576l387.328-193.536 387.328 193.536L465.553125 468.224z"  ></path><path d="M812.945125 917.376l201.984-121.344c5.632-3.584 9.216-9.728 9.216-16.64l0-222.464c0-7.8336-5.888-13.312-12.288-16.384l-5.12-2.56c-0.512-0.256-1.28-0.256-1.792-0.256l1.536 0-196.352-98.048c-5.376-2.56-11.776-2.56-17.152 0l-196.096 98.048c-14.336 5.504-17.92 17.792-17.92 24.704l0 216.96c0 6.912 3.584 13.056 9.472 16.64 0 0 200.1664 120.0896 201.1904 120.3456C789.623525 916.4032 801.553125 925.2352 812.945125 917.376zM782.481125 868.224l-165.12-99.584 0-178.944 165.12 93.44L782.481125 868.224zM801.681125 650.112l-161.024-91.392 161.024-80.384 160.768 80.384L801.681125 650.112zM985.745125 768.64l-164.864 99.328 0-184.832 164.864-93.44L985.745125 768.64z"  ></path></symbol><symbol id="icon-link" viewBox="0 0 1025 1024"><path d="M331.502964 331.496564c-11.110365 11.110365-11.110365 29.107109 0 40.191874l321.816594 321.790994c11.110365 11.161565 29.107109 11.110365 40.191874 0.0256 11.110365-11.110365 11.110365-29.081509 0-40.191874L371.720439 331.496564C360.610073 320.411799 342.61333 320.411799 331.502964 331.496564z"  ></path><path d="M96.2141 59.958213 59.990213 96.2077c-79.97415 79.97415-79.99975 209.637745 0 289.611895l126.719604 126.719604c62.668604 62.719804 155.749913 75.878163 231.602476 40.243074 0.281599-0.128 0.537598-0.230399 0.844797-0.332799 0.537598-0.255999 1.177596-0.486398 1.715195-0.742398-0.0512-0.128 0.0512 0.128 0 0 2.713592-1.356796 5.171184-3.07199 7.449577-5.350383 11.238365-11.238365 11.238365-29.491108 0-40.755073-9.036772-9.011172-22.24633-10.598367-33.049497-5.171184-0.0512-0.1536 0.0768 0.1536 0 0-56.575823 25.72792-125.849207 15.180753-172.364261-31.359902L103.433277 349.621308c-59.980613-60.006212-59.980613-157.234709 0-217.215321L132.386787 103.426877c59.980613-59.980613 157.234709-59.955013 217.215321 0l119.474827 119.474827c47.283052 47.257452 57.292621 117.810832 30.131106 174.847454 0 0 0.0256-0.0256 0 0-0.0768 0.204799 0.1024-0.204799 0 0 0.0512 0.0256-0.0256-0.0256 0 0-3.839988 10.239968-2.227193 22.707129 6.015981 30.950303 11.238365 11.238365 29.491108 11.263965 40.755073 0 2.303993-2.303993 4.377586-4.915185 5.759982-7.679976 0.1536 0.0256-0.179199-0.0256 0 0 37.196684-76.313361 24.217524-170.905066-39.167878-234.316068l-126.719604-126.719604C305.851844-19.990337 176.16265-19.990337 96.2141 59.958213z"  ></path><path d="M963.411389 927.155503l-36.249487 36.223887c-79.97415 79.97415-209.637745 79.97415-289.611895-0.0256l-126.719604-126.694004c-62.668604-62.668604-75.878163-155.775513-40.217474-231.602476 0.128-0.281599 0.230399-0.537598 0.332799-0.844797 0.255999-0.537598 0.511998-1.203196 0.742398-1.715195 0.128 0.0512-0.128-0.0512 0 0 1.356796-2.713592 3.07199-5.171184 5.350383-7.449577 11.238365-11.238365 29.491108-11.238365 40.780673 0 8.985572 9.011172 10.572767 22.220731 5.119984 33.049497 0.179199 0.0768-0.128-0.0768 0 0-25.72792 56.601423-15.155153 125.823607 31.385502 172.364261l119.474827 119.449227c60.006212 60.006212 157.234709 60.006212 217.215321 0l28.95351-28.95351c60.006212-60.006212 59.980613-157.234709 0-217.189721l-119.449227-119.474827c-47.283052-47.257452-117.810832-57.292621-174.847454-30.131106-0.0256 0 0.0256 0 0 0-0.204799 0.128 0.230399-0.0768 0 0-0.0256 0 0.0256 0.0256 0 0-10.239968 3.865588-22.707129 2.252793-30.950303-6.015981-11.238365-11.263965-11.238365-29.491108-0.0256-40.755073 2.303993-2.278393 4.889585-4.351986 7.705576-5.734382-0.0256-0.128 0.0256 0.179199 0 0 76.313361-37.222284 170.905066-24.217524 234.290468 39.167878l126.719604 126.719604C1043.359939 717.492158 1043.359939 847.181353 963.411389 927.155503z"  ></path></symbol><symbol id="icon-cut" viewBox="0 0 1024 1024"><path d="M995.5584 839.0912 896 839.0912 896 355.5584c0-15.6928-12.7488-28.4416-28.4416-28.4416s-28.4416 12.7488-28.4416 28.4416l0 483.5584L225.1008 839.1168 930.3552 133.888c11.1104-11.1104 11.1104-29.1072 0-40.2176-11.136-11.1104-29.1584-11.1104-40.2432 0L184.8832 798.8992 184.8832 184.8832l469.3248 0c15.7184 0 28.416-12.7488 28.416-28.4416C682.6496 140.7488 669.952 128 654.2336 128L184.8832 128 184.8832 28.4416C184.8832 12.7488 172.16 0 156.4416 0 140.7488 0 128 12.7488 128 28.4416L128 128 28.4416 128C12.7488 128 0 140.7488 0 156.4416c0 15.6928 12.7488 28.4416 28.4416 28.4416L128 184.8832l0 682.6752C128 883.2512 140.7488 896 156.4416 896l682.6496 0 0 99.5584c0 15.6928 12.7488 28.4416 28.4416 28.4416S896 1011.2512 896 995.5584L896 896l99.5584 0C1011.2512 896 1024 883.2512 1024 867.5584S1011.2512 839.0912 995.5584 839.0912z"  ></path></symbol><symbol id="icon-navlist" viewBox="0 0 1024 1024"><path d="M284.416 118.016l711.168 0C1011.2768 118.016 1024 105.2928 1024 89.6c0-15.6928-12.7232-28.416-28.416-28.416L284.416 61.184C268.7232 61.184 256 73.9072 256 89.6 256 105.2928 268.7232 118.016 284.416 118.016z"  ></path><path d="M125.184 61.184 28.416 61.184C12.7232 61.184 0 73.9072 0 89.6c0 15.6928 12.7232 28.416 28.416 28.416l96.768 0C140.8768 118.016 153.6 105.2928 153.6 89.6 153.6 73.9072 140.8768 61.184 125.184 61.184z"  ></path><path d="M995.584 342.784 284.416 342.784c-15.6928 0-28.416 12.7232-28.416 28.416 0 15.6928 12.7232 28.416 28.416 28.416l711.168 0c15.6928 0 28.416-12.7232 28.416-28.416C1024 355.5072 1011.2768 342.784 995.584 342.784z"  ></path><path d="M125.184 342.784 28.416 342.784C12.7232 342.784 0 355.5072 0 371.2c0 15.6928 12.7232 28.416 28.416 28.416l96.768 0C140.8768 399.616 153.6 386.8928 153.6 371.2 153.6 355.5072 140.8768 342.784 125.184 342.784z"  ></path><path d="M585.984 905.984 284.416 905.984c-15.6928 0-28.416 12.7232-28.416 28.3904 0 15.6928 12.7232 28.4416 28.416 28.4416l301.568 0c15.6928 0 28.416-12.7488 28.416-28.4416C614.4 918.7072 601.6768 905.984 585.984 905.984z"  ></path><path d="M125.184 905.984 28.416 905.984C12.7232 905.984 0 918.7072 0 934.3744c0 15.6928 12.7232 28.4416 28.416 28.4416l96.768 0c15.6928 0 28.416-12.7488 28.416-28.4416C153.6 918.7072 140.8768 905.984 125.184 905.984z"  ></path><path d="M585.984 624.384 284.416 624.384c-15.6928 0-28.416 12.7232-28.416 28.3904 0 15.6928 12.7232 28.4416 28.416 28.4416l301.568 0c15.6928 0 28.416-12.7488 28.416-28.4416C614.4 637.1072 601.6768 624.384 585.984 624.384z"  ></path><path d="M125.184 624.384 28.416 624.384C12.7232 624.384 0 637.1072 0 652.7744c0 15.6928 12.7232 28.4416 28.416 28.4416l96.768 0c15.6928 0 28.416-12.7488 28.416-28.4416C153.6 637.1072 140.8768 624.384 125.184 624.384z"  ></path><path d="M995.584 729.6256l-122.368 0 0-122.368c0-15.6928-12.7232-28.416-28.3904-28.416-15.6928 0-28.416 12.7232-28.416 28.416l0 122.368L694.016 729.6256c-15.6928 0-28.416 12.7232-28.416 28.416 0 15.6672 12.7232 28.3904 28.416 28.3904l122.3424 0L816.3584 908.8c0 15.6928 12.7232 28.416 28.416 28.416 15.6672 0 28.3904-12.7232 28.3904-28.416l0-122.3424 122.368 0c15.6928 0 28.416-12.7232 28.416-28.3904C1024 742.3488 1011.2768 729.6256 995.584 729.6256z"  ></path></symbol><symbol id="icon-imagetext" viewBox="0 0 1024 1024"><path d="M608 293.1968c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.336-11.4432-25.9328-25.6-25.9328l-140.8 0c-14.1312 0-25.6 11.6224-25.6 25.9328 0 14.336 11.4688 25.9584 25.6 25.9584L608 293.1968 608 293.1968z"  ></path><path d="M864 293.1968c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.336-11.4432-25.9328-25.6-25.9328l-140.8 0c-14.1568 0-25.6 11.6224-25.6 25.9328 0 14.336 11.4432 25.9584 25.6 25.9584L864 293.1968 864 293.1968z"  ></path><path d="M608 448.8448c14.1568 0 25.6-11.5968 25.6-25.9328s-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.6224-25.6 25.9584s11.4688 25.9328 25.6 25.9328L608 448.8448 608 448.8448z"  ></path><path d="M864 448.8448c14.1568 0 25.6-11.5968 25.6-25.9328s-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1568 0-25.6 11.6224-25.6 25.9584s11.4432 25.9328 25.6 25.9328L864 448.8448 864 448.8448z"  ></path><path d="M608 604.544c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4688 25.9584 25.6 25.9584L608 604.544 608 604.544z"  ></path><path d="M864 604.544c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1568 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4432 25.9584 25.6 25.9584L864 604.544 864 604.544z"  ></path><path d="M864 604.544"  ></path><path d="M608 760.2688c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4688 25.9584 25.6 25.9584L608 760.2688 608 760.2688z"  ></path><path d="M864 760.2688c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1568 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4432 25.9584 25.6 25.9584L864 760.2688 864 760.2688z"  ></path><path d="M864 760.2688"  ></path><path d="M881.7664 64 28.4416 64 0 64l0 28.9024 0 722.5344C0 895.2576 63.6928 960 142.2336 960l853.3248 0L1024 960l0-28.9024L1024 670.976c0-15.9744-12.7232-28.9024-28.4416-28.9024-15.6928 0-28.4416 12.928-28.4416 28.9024l0 231.2192L142.2336 902.1952c-47.104 0-85.3248-38.8608-85.3248-86.784L56.9088 121.8048l824.8832 0c47.104 0 85.3248 38.912 85.3248 86.8864l0.2304 259.9424c0.4608 15.3088 12.8512 27.648 28.2624 27.648s27.8016-12.3392 28.2624-27.648L1024 208.6912C1024 128.7936 960.3328 64 881.7664 64z"  ></path><path d="M142.2336 338.5856c0 55.8848 44.5696 101.1712 99.5584 101.1712 54.9888 0 99.5584-45.312 99.5584-101.1712 0-55.8592-44.5696-101.1712-99.5584-101.1712C186.8032 237.4144 142.2336 282.7008 142.2336 338.5856zM284.4416 338.5856c0 23.9616-19.0976 43.3664-42.6752 43.3664s-42.6752-19.4304-42.6752-43.3664c0-23.936 19.0976-43.3408 42.6752-43.3408S284.4416 314.6496 284.4416 338.5856z"  ></path></symbol><symbol id="icon-text" viewBox="0 0 1024 1024"><path d="M608 293.1968c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.336-11.4432-25.9328-25.6-25.9328l-140.8 0c-14.1312 0-25.6 11.6224-25.6 25.9328 0 14.336 11.4688 25.9584 25.6 25.9584L608 293.1968 608 293.1968z"  ></path><path d="M864 293.1968c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.336-11.4432-25.9328-25.6-25.9328l-140.8 0c-14.1568 0-25.6 11.6224-25.6 25.9328 0 14.336 11.4432 25.9584 25.6 25.9584L864 293.1968 864 293.1968z"  ></path><path d="M608 448.8448c14.1568 0 25.6-11.5968 25.6-25.9328s-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.6224-25.6 25.9584s11.4688 25.9328 25.6 25.9328L608 448.8448 608 448.8448z"  ></path><path d="M864 448.8448c14.1568 0 25.6-11.5968 25.6-25.9328s-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1568 0-25.6 11.6224-25.6 25.9584s11.4432 25.9328 25.6 25.9328L864 448.8448 864 448.8448z"  ></path><path d="M608 604.544c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4688 25.9584 25.6 25.9584L608 604.544 608 604.544z"  ></path><path d="M864 604.544c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1568 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4432 25.9584 25.6 25.9584L864 604.544 864 604.544z"  ></path><path d="M864 604.544"  ></path><path d="M608 760.2688c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4688 25.9584 25.6 25.9584L608 760.2688 608 760.2688z"  ></path><path d="M864 760.2688c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1568 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4432 25.9584 25.6 25.9584L864 760.2688 864 760.2688z"  ></path><path d="M864 760.2688"  ></path><path d="M352 293.1968c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.336-11.4432-25.9328-25.6-25.9328l-140.8 0c-14.1312 0-25.6 11.6224-25.6 25.9328 0 14.336 11.4688 25.9584 25.6 25.9584L352 293.1968 352 293.1968z"  ></path><path d="M352 448.8448c14.1568 0 25.6-11.5968 25.6-25.9328s-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.6224-25.6 25.9584s11.4688 25.9328 25.6 25.9328L352 448.8448 352 448.8448z"  ></path><path d="M352 604.544c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4688 25.9584 25.6 25.9584L352 604.544 352 604.544z"  ></path><path d="M608 604.544"  ></path><path d="M352 760.2688c14.1568 0 25.6-11.6224 25.6-25.9584 0-14.3616-11.4432-25.9584-25.6-25.9584l-140.8 0c-14.1312 0-25.6 11.5968-25.6 25.9584 0 14.336 11.4688 25.9584 25.6 25.9584L352 760.2688 352 760.2688z"  ></path><path d="M608 760.2688"  ></path><path d="M881.7664 64 28.4416 64 0 64l0 28.9024 0 722.5344C0 895.2576 63.6928 960 142.2336 960l853.3248 0L1024 960l0-28.9024L1024 670.976c0-15.9744-12.7232-28.9024-28.4416-28.9024-15.6928 0-28.4416 12.928-28.4416 28.9024l0 231.2192L142.2336 902.1952c-47.104 0-85.3248-38.8608-85.3248-86.784L56.9088 121.8048l824.8832 0c47.104 0 85.3248 38.912 85.3248 86.8864l0.2304 259.9424c0.4608 15.3088 12.8512 27.648 28.2624 27.648s27.8016-12.3392 28.2624-27.648L1024 208.6912C1024 128.7936 960.3328 64 881.7664 64z"  ></path></symbol><symbol id="icon-move" viewBox="0 0 1024 1024"><path d="M501.0944 1021.824c6.9376 2.8928 14.8224 2.8928 21.8112 0 3.4304-1.4336 6.528-3.4816 9.1136-6.0672 0.0256 0 0.0768-0.0256 0.0768-0.0256l158.9248-158.9248c11.1104-11.1104 11.1104-29.1328 0-40.2176-11.0848-11.0848-29.0816-11.0848-40.1664 0.0256l-110.4384 110.4128 0.0256-335.36c0-15.6928-12.7232-28.416-28.416-28.416s-28.416 12.6976-28.416 28.3904l0 335.3856-110.4128-110.4128c-11.1104-11.0848-29.1072-11.0848-40.1408 0-11.1104 11.1104-11.136 29.1072-0.0512 40.192l158.9504 158.9248c0.8192 0.8192 1.8944 1.1776 2.816 1.8688C496.7168 1019.1872 498.688 1020.8256 501.0944 1021.824z"  ></path><path d="M522.9056 2.176c-6.9376-2.8928-14.8224-2.8928-21.7856 0C497.6896 3.584 494.592 5.632 491.9808 8.2176c-0.0256 0-0.0768 0.0512-0.0768 0.0512L332.9792 167.168c-11.1104 11.1104-11.1104 29.1328 0 40.2176 11.0848 11.0848 29.0816 11.0848 40.1664-0.0256l110.4384-110.4128-0.0256 335.36c0 15.6928 12.7232 28.416 28.416 28.416 15.6928 0 28.4416-12.6976 28.4416-28.3904L540.416 96.9472l110.4128 110.4128c11.1104 11.0848 29.1072 11.0848 40.1408 0 11.1104-11.1104 11.1616-29.1072 0.0512-40.192l-158.9504-158.8992c-0.8192-0.8448-1.8944-1.2032-2.816-1.8944C527.2832 4.8128 525.312 3.1744 522.9056 2.176z"  ></path><path d="M1021.824 522.9056c2.8928-6.9376 2.8928-14.8224 0-21.8112-1.408-3.4304-3.456-6.528-6.0416-9.1136 0-0.0256-0.0512-0.0768-0.0512-0.0768l-158.8992-158.9248c-11.1104-11.1104-29.1584-11.1104-40.2432 0-11.0592 11.0848-11.0592 29.0816 0.0512 40.1664l110.3872 110.4384-335.36-0.0256c-15.6928 0-28.3904 12.7232-28.3904 28.416s12.6976 28.416 28.3904 28.416l335.36 0-110.3872 110.4128c-11.1104 11.1104-11.1104 29.1072 0 40.1408 11.1104 11.1104 29.1072 11.136 40.192 0.0512l158.8992-158.9504c0.8448-0.8192 1.2032-1.8944 1.8944-2.816C1019.1872 527.2832 1020.8256 525.312 1021.824 522.9056z"  ></path><path d="M2.176 501.0944c-2.8928 6.9376-2.8928 14.8224 0 21.7856 1.408 3.456 3.456 6.5536 6.0416 9.1392l0.0512 0.0512 158.8992 158.9504c11.1104 11.1104 29.1584 11.1104 40.2432 0 11.0592-11.1104 11.0592-29.1072-0.0512-40.192l-110.3872-110.4384 335.36 0.0512c15.6928 0 28.3904-12.7488 28.3904-28.416 0-15.6928-12.6976-28.4416-28.3904-28.4416l-335.36 0.0256 110.3872-110.4128c11.1104-11.1104 11.1104-29.1072 0-40.1408-11.1104-11.1104-29.1072-11.1616-40.192-0.0512l-158.8992 158.9504c-0.8448 0.8192-1.2032 1.8944-1.8944 2.816C4.8128 496.7168 3.1744 498.688 2.176 501.0944z"  ></path></symbol><symbol id="icon-subtract" viewBox="0 0 1024 1024"><path d="M853.333333 533.333333C865.115407 533.333333 874.666667 523.782075 874.666667 512 874.666667 500.217925 865.115407 490.666667 853.333333 490.666667L170.666667 490.666667C158.884592 490.666667 149.333333 500.217925 149.333333 512 149.333333 523.782075 158.884592 533.333333 170.666667 533.333333L853.333333 533.333333Z"  ></path></symbol><symbol id="icon-dollar" viewBox="0 0 1024 1024"><path d="M818.688 587.52c-16.128-29.952-38.912-55.04-67.072-73.984-29.696-19.968-62.208-34.56-96.768-43.52-54.016-13.568-93.184-15.36-130.56-16.64L524.288 125.952c27.136 1.024 52.992 4.864 77.056 11.008 29.184 7.424 54.528 19.712 75.52 36.096 20.736 16.384 37.12 37.376 49.152 62.72 11.776 25.344 17.92 57.344 17.92 94.72 0 14.08 11.52 25.6 25.6 25.6s25.6-11.52 25.6-25.6c0-44.8-7.68-83.968-22.784-116.48-15.36-32.768-36.864-59.904-63.744-81.152-26.624-20.992-58.624-36.096-94.72-45.568-28.16-7.168-58.112-11.52-89.6-12.8L524.288 26.112c0-14.08-11.264-25.6-25.344-25.6-14.336 0-25.6 11.52-25.6 25.6l0 48.384c-26.368 1.28-49.152 4.352-70.144 9.216-133.12 31.232-184.832 127.488-188.672 200.192-2.56 48.384 7.936 164.608 160.768 203.008 38.912 9.728 70.144 13.568 98.048 15.616l0 375.3216c-28.416-2.304-55.296-7.168-80.384-14.848-34.816-10.752-65.536-27.136-91.392-48.896-25.344-21.248-45.824-47.872-60.416-79.104-14.848-31.232-22.784-68.352-23.552-110.592-0.512-14.08-12.032-25.6-26.112-24.832-14.08 0.256-25.344 12.032-25.088 26.112 1.024 49.152 10.752 93.44 28.416 131.072 17.92 37.888 42.752 70.4 73.984 96.512 30.976 26.112 67.84 45.824 109.056 58.624 29.952 8.96 61.952 14.848 95.488 17.152l0 68.8384c0 14.336 11.264 25.6 25.6 25.6 14.08 0 25.344-11.264 25.344-25.344l0-68.0704c31.488-0.512 64-4.096 96.768-9.984 38.912-7.168 74.752-19.968 106.752-37.888 32.512-18.688 60.16-43.52 81.664-74.24 22.272-31.744 33.792-72.192 33.792-120.064C843.264 643.0976 834.816 617.728 818.688 587.52zM473.344 451.328c-24.832-2.048-51.968-5.632-85.504-14.08-106.24-26.624-125.184-96.512-122.112-150.528 1.024-19.968 13.056-121.088 149.248-153.088 17.408-4.096 36.352-6.656 58.368-7.68L473.344 451.328zM767.488 778.5216c-16.896 24.32-38.912 44.288-65.024 59.136-26.88 15.104-57.344 26.112-90.624 32.256-29.696 5.376-59.136 8.448-87.552 9.216L524.288 504.576c35.328 1.024 69.888 2.816 118.016 15.104 28.672 7.168 55.808 19.456 80.64 36.096 21.504 14.336 38.4 33.28 50.688 56.064 12.288 22.528 18.432 39.7056 18.432 75.8016C792.064 725.0176 783.872 755.4816 767.488 778.5216z"  ></path></symbol><symbol id="icon-raw" viewBox="0 0 1024 1024"><path d="M539.151516 470.894308C580.924324 470.894308 614.787878 437.348425 614.787878 395.967479 614.787878 354.586534 580.924324 321.040651 539.151516 321.040651 497.378705 321.040651 463.515151 354.586534 463.515151 395.967479 463.515151 437.348425 497.378705 470.894308 539.151516 470.894308L539.151516 470.894308ZM539.151516 420.943089C525.227245 420.943089 513.939394 409.761129 513.939394 395.967479 513.939394 382.17383 525.227245 370.99187 539.151516 370.99187 553.075785 370.99187 564.363637 382.17383 564.363637 395.967479 564.363637 409.761129 553.075785 420.943089 539.151516 420.943089L539.151516 420.943089Z"  ></path><path d="M435.304267 228.731223C247.753485 265.454739 110.545455 429.085807 110.545455 620.747968 110.545455 841.446342 291.151073 1020.357724 513.939394 1020.357724 736.727714 1020.357724 917.333333 841.446342 917.333333 620.747968 917.333333 439.751991 790.466897 281.451823 614.578714 234.713325L601.514526 282.958931C755.689673 323.927657 866.90909 462.703942 866.90909 620.747968 866.90909 813.859044 708.879174 970.406505 513.939394 970.406505 318.999614 970.406505 160.969697 813.859044 160.969697 620.747968 160.969697 453.051149 281.04344 309.854029 445.081946 277.734351L435.304267 228.731223 435.304267 228.731223Z"  ></path><path d="M362.666667 645.723578C418.363746 645.723578 463.515151 600.995731 463.515151 545.821139 463.515151 490.646545 418.363746 445.918699 362.666667 445.918699 306.969587 445.918699 261.818182 490.646545 261.818182 545.821139 261.818182 600.995731 306.969587 645.723578 362.666667 645.723578L362.666667 645.723578ZM362.666667 595.772358C334.818127 595.772358 312.242423 573.408435 312.242423 545.821139 312.242423 518.233841 334.818127 495.869918 362.666667 495.869918 390.515206 495.869918 413.09091 518.233841 413.09091 545.821139 413.09091 573.408435 390.515206 595.772358 362.666667 595.772358L362.666667 595.772358Z"  ></path><path d="M118.336328 613.826406C133.425252 628.114569 161.465796 648.583947 201.858288 668.805011 268.590074 702.211906 346.276843 722.231443 434.022231 722.23145 514.003603 722.231454 572.571484 709.604454 639.028858 683.904301 648.371872 680.291204 677.180911 668.650494 679.666547 667.668493 693.997408 662.006803 704.553047 658.248459 714.596041 655.369997 734.812975 649.575539 752.32589 647.709033 771.083349 649.85405 784.915759 651.435861 797.423597 641.609982 799.020388 627.907332 800.61718 614.204683 790.698251 601.814178 776.865841 600.232367 751.016318 597.276331 726.88307 599.848429 700.581677 607.386775 688.670974 610.80055 676.714903 615.057519 660.987473 621.27095 658.174426 622.3823 629.605316 633.926065 620.692019 637.372983 559.708732 660.956218 507.184486 672.280235 434.022236 672.28023 354.560674 672.280224 284.56814 654.243458 224.601289 624.223187 203.727373 613.773402 185.640133 602.614946 170.445517 591.522995 161.566625 585.041472 155.775729 580.177397 153.178823 577.718308 143.113425 568.187076 127.15405 568.543561 117.53256 578.514537 107.911071 588.485513 108.27093 604.295174 118.336328 613.826406L118.336328 613.826406Z"  ></path><path d="M465.243565 277.264804 465.243565 145.31032 465.243565 120.330825 440.027522 120.33471 367.813557 120.345836 393.0296 145.321446 393.0296 55.804914 367.817478 80.780524 653.550573 80.780524 628.338451 55.804912 628.338447 147.102255 654.251853 122.13631 589.647977 120.355498 563.734571 119.641192 563.734571 145.321444 563.734571 283.089261 614.158814 283.089261 614.158814 145.321444 588.245408 170.28739 652.849284 172.068202 678.762688 172.782508 678.76269 147.102257 678.762694 55.804915 678.762697 30.829304 653.550573 30.829304 367.817478 30.829304 342.605357 30.829304 342.605357 55.804914 342.605357 145.321446 342.605357 170.30094 367.821399 170.297055 440.035364 170.285929 414.819324 145.310319 414.819322 277.264802 465.243565 277.264804 465.243565 277.264804Z"  ></path></symbol><symbol id="icon-office" viewBox="0 0 1024 1024"><path d="M335.282306 183.504536C399.587328 182.548893 442.778899 199.117283 470.183494 226.629346 479.127332 235.60826 485.691302 245.142637 490.241971 254.557311 492.795622 259.840447 494.049041 263.561299 494.358795 264.925906L493.723712 259.259077 493.723706 699.099804C493.723706 696.981894 495.816045 692.079345 503.591595 688.635633 511.039185 685.337167 515.68422 686.834726 517.176538 688.093387L500.671543 707.66237 521.297207 692.498532C514.140179 682.763631 499.631258 670.285491 476.134074 658.64086 439.577969 640.524544 390.86048 629.894921 328.491925 629.894918 265.860796 629.894918 219.424582 640.28182 186.827162 658.258419 164.977332 670.308013 152.538132 683.718827 147.220271 694.69113L170.257196 705.856258 151.035786 688.947757C152.884078 686.846639 158.307299 684.196634 167.849005 687.949566 177.092077 691.585039 179.2 696.799883 179.2 699.335548L179.2 398.950257 179.2 259.259077 175.817447 271.976979C177.078908 269.773279 180.088681 265.192189 184.828724 259.034371 192.95423 248.478476 202.792594 237.872508 214.297641 227.992039 247.526453 199.455319 287.381649 182.790944 334.514421 183.504429L335.282306 183.504536ZM335.289387 132.310295C274.661039 131.392517 223.081402 152.95915 180.940156 189.149816 156.32698 210.287473 139.975514 231.529763 131.382553 246.541175L128 252.450301 128 259.259077 128 398.950257 128 699.335548C128 736.73895 164.542545 751.111817 189.478606 722.764759L191.776657 720.152358 193.294121 717.021387C194.07832 715.403356 199.156367 709.928666 211.552092 703.092757 236.030601 689.593519 274.024879 681.094918 328.491925 681.094918 383.221547 681.094921 424.163878 690.02809 453.399258 704.516431 469.376966 712.434594 477.614626 719.519247 480.045882 722.82621L481.844905 725.27322 484.166551 727.231356C511.279708 750.0993 544.923706 735.198707 544.923706 699.099804L544.923712 259.259078 544.288627 253.592249C540.427211 236.580977 529.175531 213.302876 506.45814 190.496398 468.987716 152.87903 412.352271 131.153539 334.521502 132.310188L335.289387 132.310295Z"  ></path><path d="M0 389.973306 0 868.143132C0 904.875637 34.793167 919.400433 61.4635 894.751492L63.46242 892.684141C65.301149 890.555164 69.655573 886.137687 76.498228 880.179637 88.306297 869.898093 102.566352 859.53706 119.251411 849.825615 167.295691 821.861709 224.90855 805.049818 292.337329 805.049818 358.378978 805.04982 409.459345 824.330434 448.125308 856.35226 461.506042 867.433726 472.380655 879.265242 480.912593 891.002999 485.832384 897.771373 488.762874 902.741986 489.872527 905.022522 496.058545 917.735902 511.379537 923.027375 524.092917 916.841355 536.806298 910.655337 542.097771 895.334345 535.91175 882.620964 527.471002 865.273707 509.777717 840.932282 480.782336 816.9193 433.134118 777.458677 370.586889 753.84982 292.337329 753.849818 215.474895 753.849815 149.074727 773.225916 93.495781 805.575332 59.761154 825.210385 36.872315 845.140198 24.713677 859.218116L44.088049 875.95113 26.712598 857.150765C28.162783 855.810492 32.877261 854.053882 40.792576 857.358219 49.035365 860.799264 51.2 865.870108 51.2 868.143132L51.2 389.973306C51.2 375.834816 39.73849 364.373306 25.6 364.373306 11.46151 364.373306 0 375.834816 0 389.973306L0 389.973306Z"  ></path><path d="M696.80221 132.310188C618.971441 131.153539 562.335996 152.87903 524.86557 190.496398 502.148181 213.302876 490.896501 236.580977 487.035083 253.592249L486.4 259.259078 486.400004 699.099804C486.400006 735.198707 520.044004 750.0993 547.157161 727.231356L549.478807 725.27322 551.27783 722.82621C553.709086 719.519247 561.946746 712.434594 577.924452 704.516431 607.159834 690.02809 648.102165 681.094921 702.831787 681.094918 757.298833 681.094918 795.293111 689.593519 819.77162 703.092757 832.167345 709.928666 837.245391 715.403356 838.029591 717.021387L839.547055 720.152358 841.845105 722.764759C866.781167 751.111817 903.323712 736.73895 903.323712 699.335548L903.323712 398.950257 903.323712 259.259077 903.323712 252.450301 899.941158 246.541175C891.348196 231.529763 874.996732 210.287473 850.383556 189.149816 808.24231 152.95915 756.662673 131.392517 696.034325 132.310295L696.80221 132.310188ZM696.809291 183.504429C743.942063 182.790944 783.797257 199.455319 817.026071 227.992039 828.531119 237.872508 838.369481 248.478476 846.494989 259.034371 851.235031 265.192189 854.244804 269.773279 855.506263 271.976979L852.123712 259.259077 852.123712 398.950257 852.123712 699.335548C852.123712 696.799883 854.231635 691.585039 863.474707 687.949566 873.016412 684.196634 878.439633 686.846639 880.287925 688.947757L861.066515 705.856258 884.103441 694.69113C878.785579 683.718827 866.346381 670.308013 844.49655 658.258419 811.89913 640.28182 765.462916 629.894918 702.831785 629.894918 640.463232 629.894921 591.745741 640.524544 555.189638 658.64086 531.692454 670.285491 517.183533 682.763631 510.026502 692.498532L530.652166 707.66237 514.147172 688.093387C515.63949 686.834726 520.284527 685.337167 527.732117 688.635633 535.507665 692.079345 537.600004 696.981894 537.600004 699.099804L537.6 259.259077 536.964917 264.925906C537.274671 263.561299 538.52809 259.840447 541.081741 254.557311 545.63241 245.142637 552.196378 235.60826 561.140218 226.629346 588.544813 199.117283 631.736384 182.548893 696.041406 183.504536L696.809291 183.504429Z"  ></path><path d="M972.799998 389.973306 972.799998 868.143132C972.799998 865.870108 974.964631 860.799264 983.207422 857.358219 991.122737 854.053882 995.837214 855.810492 997.287401 857.150765L979.911949 875.95113 999.286321 859.218116C987.127682 845.140198 964.238844 825.210385 930.504218 805.575332 874.925269 773.225916 808.525103 753.849815 731.662669 753.849818 653.132708 753.84982 590.55104 778.737178 543.127755 820.261999 514.370099 845.442805 496.945662 870.897404 488.705389 888.977229 482.841769 901.842485 488.517717 917.025242 501.382974 922.888862 514.248233 928.752482 529.430987 923.076533 535.294607 910.211275 536.420563 907.740836 539.350332 902.450639 544.25735 895.282189 552.731727 882.902347 563.54464 870.438419 576.856734 858.782071 615.190044 825.216625 665.901421 805.04982 731.662669 805.049818 799.091447 805.049818 856.704307 821.861709 904.748587 849.825615 921.433645 859.53706 935.6937 869.898093 947.501771 880.179637 954.344425 886.137687 958.698848 890.555164 960.537577 892.684141L962.536497 894.751492C989.206831 919.400433 1023.999998 904.875637 1023.999998 868.143132L1023.999998 389.973306C1023.999998 375.834816 1012.538487 364.373306 998.399998 364.373306 984.261508 364.373306 972.799998 375.834816 972.799998 389.973306L972.799998 389.973306Z"  ></path></symbol><symbol id="icon-agriculture" viewBox="0 0 1024 1024"><path d="M693.837946 426.762174C757.656311 362.424623 781.490225 279.539168 737.526153 238.206722 693.562078 196.874274 609.307957 222.956186 545.489591 287.293737 481.671223 351.631285 457.837312 434.51674 501.801385 475.849188 545.765457 517.181636 630.019578 491.099723 693.837946 426.762174L693.837946 426.762174ZM657.808403 392.889308C610.655398 440.425918 554.662603 457.759185 536.594707 440.772809 518.526814 423.786432 534.366127 368.703213 581.519132 321.166601 628.672139 273.62999 684.664934 256.296723 702.732828 273.2831 720.800723 290.269476 704.96141 345.352698 657.808403 392.889308L657.808403 392.889308Z"  ></path><path d="M720.133598 606.411296C783.951964 542.073745 807.785877 459.188292 763.821805 417.855844 719.85773 376.523396 635.60361 402.605308 571.785244 466.942859 507.966876 531.28041 484.132964 614.165862 528.097037 655.49831 572.061109 696.830758 656.31523 670.748847 720.133598 606.411296L720.133598 606.411296ZM684.104055 572.53843C636.951051 620.075042 580.958255 637.408309 562.890359 620.421933 544.822466 603.435554 560.661779 548.352335 607.814784 500.815725 654.967791 453.279113 710.960587 435.945845 729.02848 452.932222 747.096375 469.918598 731.257062 525.00182 684.104055 572.53843L684.104055 572.53843Z"  ></path><path d="M650.472081 888.457933C674.792501 876.438007 698.775307 858.920787 720.133598 837.38874 783.951964 773.051189 807.785877 690.165734 763.821805 648.833289 719.85773 607.500841 635.60361 633.582752 571.785244 697.920303 507.966876 762.257852 484.132964 845.143307 528.097037 886.475755 538.046319 895.829487 553.900559 895.560073 563.508469 885.873997 573.11638 876.187923 572.839644 860.753109 562.890359 851.399375 544.822466 834.412998 560.661779 779.329779 607.814784 731.793167 654.967791 684.256557 710.960587 666.92329 729.02848 683.909666 747.096375 700.896043 731.257062 755.979264 684.104055 803.515874 666.535275 821.227584 647.033545 835.471793 627.799177 844.978029 615.466266 851.073346 610.543968 865.747883 616.804917 877.754526 623.065867 889.761171 638.13917 894.553248 650.472081 888.457933L650.472081 888.457933Z"  ></path><path d="M318.562611 392.889308C271.409605 345.352698 255.570292 290.269476 273.638186 273.2831 291.706081 256.296723 347.698877 273.62999 394.851882 321.166601 442.004887 368.703213 457.844201 423.786432 439.776307 440.772809 421.708412 457.759185 365.715616 440.425918 318.562611 392.889308L318.562611 392.889308ZM282.533069 426.762174C346.351436 491.099723 430.605557 517.181636 474.56963 475.849188 518.533702 434.51674 494.699791 351.631285 430.881423 287.293737 367.063057 222.956186 282.808936 196.874274 238.844863 238.206722 194.88079 279.539168 218.714703 362.424623 282.533069 426.762174L282.533069 426.762174Z"  ></path><path d="M435.158223 165.180952C435.158223 99.097287 463.068177 48.761905 488.185508 48.761905 513.302837 48.761905 541.212791 99.097287 541.212791 165.180952 541.212791 231.264619 513.302837 281.6 488.185508 281.6 463.068177 281.6 435.158223 231.264619 435.158223 165.180952L435.158223 165.180952ZM385.071267 165.180952C385.071267 254.620672 427.068254 330.361905 488.185508 330.361905 549.302761 330.361905 591.299748 254.620672 591.299748 165.180952 591.299748 75.741232 549.302761 0 488.185508 0 427.068254 0 385.071267 75.741232 385.071267 165.180952L385.071267 165.180952Z"  ></path><path d="M344.858263 572.53843C297.705257 525.00182 281.865944 469.918598 299.933839 452.932222 318.001733 435.945845 373.994529 453.279113 421.147534 500.815725 468.30054 548.352335 484.139853 603.435554 466.071959 620.421933 448.004064 637.408309 392.011268 620.075042 344.858263 572.53843L344.858263 572.53843ZM308.828721 606.411296C372.647088 670.748847 456.90121 696.830758 500.865282 655.49831 544.829355 614.165862 520.995443 531.28041 457.177075 466.942859 393.358709 402.605308 309.104588 376.523396 265.140515 417.855844 221.176442 459.188292 245.010355 542.073745 308.828721 606.411296L308.828721 606.411296Z"  ></path><path d="M344.858263 803.515874C297.705257 755.979264 281.865944 700.896043 299.933839 683.909666 318.001733 666.92329 373.994529 684.256557 421.147534 731.793167 468.30054 779.329779 484.139853 834.412998 466.071959 851.399375 448.004064 868.385751 392.011268 851.052484 344.858263 803.515874L344.858263 803.515874ZM308.828721 837.38874C372.647088 901.726289 456.90121 927.808203 500.865282 886.475755 544.829355 845.143307 520.995443 762.257852 457.177075 697.920303 393.358709 633.582752 309.104588 607.500841 265.140515 648.833289 221.176442 690.165734 245.010355 773.051189 308.828721 837.38874L308.828721 837.38874Z"  ></path><path d="M526.376811 993.283714 526.376811 312.339334C526.376811 298.874108 515.164465 287.958383 501.333333 287.958383 487.502202 287.958383 476.289856 298.874108 476.289856 312.339334L476.289856 993.283714C476.289856 1006.748943 487.502202 1017.664668 501.333333 1017.664668 515.164465 1017.664668 526.376811 1006.748943 526.376811 993.283714L526.376811 993.283714Z"  ></path></symbol><symbol id="icon-machinery" viewBox="0 0 1024 1024"><path d="M1013.342765 771.306451 1017.427407 514.478016 1017.739181 494.874829 998.944783 489.824625 911.908109 466.437188 930.393933 490.688288 930.393933 121.707091 930.393933 96.872116 905.756591 96.610444 551.467575 92.847571 531.226001 92.632587 526.884847 112.56181 455.019706 442.477924 479.340079 422.762291 378.060235 422.762291 360.478925 422.762291 354.595908 439.462084 213.530519 839.896508 201.730419 873.392791 236.994844 873.392796 404.799686 873.392813C418.551407 873.392815 429.699383 862.156041 429.699383 848.294778 429.699386 834.433513 418.551413 823.196736 404.799691 823.196736L236.994848 823.196717 260.459174 856.693005 401.524563 456.258579 378.060235 472.95837 479.340079 472.95837 499.365828 472.95837 503.660454 453.242737 575.525598 123.326624 550.942869 143.040863 905.231885 146.803737 880.594541 121.707091 880.594541 490.688288 880.594541 509.9721 899.080365 514.939386 986.117039 538.326825 967.634413 513.673434 963.549771 770.501869C963.329346 784.361353 974.297201 795.776796 988.047155 795.998974 1001.797111 796.221154 1013.122342 785.165935 1013.342765 771.306451L1013.342765 771.306451Z"  ></path><path d="M488.656535 938.666667C550.539285 938.666667 600.705167 888.10118 600.705167 825.725491 600.705167 763.349801 550.539285 712.784314 488.656535 712.784314 426.773783 712.784314 376.607902 763.349801 376.607902 825.725491 376.607902 888.10118 426.773783 938.666667 488.656535 938.666667L488.656535 938.666667ZM488.656535 888.470588C454.277229 888.470588 426.407294 860.378652 426.407294 825.725491 426.407294 791.072329 454.277229 762.980393 488.656535 762.980393 523.03584 762.980393 550.905775 791.072329 550.905775 825.725491 550.905775 860.378652 523.03584 888.470588 488.656535 888.470588L488.656535 888.470588Z"  ></path><path d="M787.452887 938.666667C849.335637 938.666667 899.501519 888.10118 899.501519 825.725491 899.501519 763.349801 849.335637 712.784314 787.452887 712.784314 725.570138 712.784314 675.404256 763.349801 675.404256 825.725491 675.404256 888.10118 725.570138 938.666667 787.452887 938.666667L787.452887 938.666667ZM787.452887 888.470588C753.073581 888.470588 725.203648 860.378652 725.203648 825.725491 725.203648 791.072329 753.073581 762.980393 787.452887 762.980393 821.832194 762.980393 849.702127 791.072329 849.702127 825.725491 849.702127 860.378652 821.832194 888.470588 787.452887 888.470588L787.452887 888.470588Z"  ></path><path d="M363.387354 108.04366 107.605789 817.761867 135.181 801.588051 30.730849 783.695345C17.173521 781.372924 4.315319 790.568162 2.011251 804.233483-0.292817 817.898803 8.829753 830.85943 22.387081 833.181852L126.837231 851.074558 147.318927 854.583149 154.412442 834.900745 410.194007 125.182537C414.889376 112.154278 408.217698 97.756119 395.292397 93.023349 382.367098 88.290579 368.082722 95.015401 363.387354 108.04366L363.387354 108.04366Z"  ></path><path d="M584.132527 467.052237 824.399761 467.052237 847.616186 467.052237 846.627697 443.6721 836.906871 213.750942 835.987266 192 814.390445 192.2823 626.06217 194.744013 607.834276 194.982276 604.481973 213.043549 562.263838 440.502993 557.336105 467.052237 584.132527 467.052237 584.132527 467.052237ZM584.132527 422.201572 606.001216 448.750816 648.219349 221.29137 626.639153 239.590906 814.967428 237.129194 792.450999 215.660553 802.171825 445.581709 824.399761 422.201572 584.132527 422.201572 584.132527 422.201572Z"  ></path><path d="M282.679221 692.068597 189.300603 664.548501 175.325083 712.727409 268.703701 740.247505 282.679221 692.068597 282.679221 692.068597Z"  ></path><path d="M591.36064 863.372548 714.137312 863.372548 714.137312 813.176471 591.36064 813.176471 591.36064 863.372548 591.36064 863.372548Z"  ></path></symbol><symbol id="icon-assessedbadge" viewBox="0 0 1026 1024"><path d="M704.533333 341.333333c0 4.266667-2.133333 8.533333-4.266667 12.8l-183.466667 341.333333c-8.533333 17.066667-27.733333 27.733333-49.066667 27.733333-17.066667 0-32-6.4-40.533333-19.2l-100.266667-115.2c-4.266667-4.266667-6.4-10.666667-6.4-17.066667 0-14.933333 12.8-27.733333 27.733333-27.733333 4.266667 0 8.533333 2.133333 12.8 4.266667l91.733333 49.066667 200.533333-273.066667c6.4-6.4 12.8-10.666667 23.466667-10.666667C691.733333 315.733333 704.533333 326.4 704.533333 341.333333z"  ></path><path d="M512.533333 42.666667c21.333333 0 42.666667 8.533333 57.6 23.466667l89.6 89.6 125.866667 0c44.8 0 83.2 36.266667 83.2 83.2l0 125.866667 89.6 89.6c32 32 32 85.333333 0 117.333333l-89.6 89.6 0 125.866667c0 44.8-36.266667 83.2-83.2 83.2l-125.866667 0-89.6 89.6C555.2 972.8 533.866667 981.333333 512.533333 981.333333s-42.666667-8.533333-57.6-23.466667l-89.6-89.6-125.866667 0c-44.8 0-83.2-36.266667-83.2-83.2l0-125.866667-89.6-89.6c-32-32-32-85.333333 0-117.333333l89.6-89.6 0-125.866667C156.266667 192 192.533333 155.733333 239.466667 155.733333l125.866667 0 89.6-89.6C469.866667 51.2 491.2 42.666667 512.533333 42.666667M512.533333 0c-34.133333 0-66.133333 12.8-87.466667 36.266667l-76.8 76.8-108.8 0c-68.266667 0-125.866667 55.466667-125.866667 125.866667l0 108.8-76.8 76.8c-49.066667 49.066667-49.066667 128 0 177.066667l76.8 76.8 0 108.8c0 68.266667 55.466667 125.866667 125.866667 125.866667l108.8 0 76.8 76.8C448.533333 1011.2 478.4 1024 512.533333 1024c34.133333 0 64-12.8 87.466667-36.266667l76.8-76.8 108.8 0c68.266667 0 125.866667-55.466667 125.866667-125.866667l0-108.8 76.8-76.8c49.066667-49.066667 49.066667-128 0-177.066667l-76.8-76.8 0-108.8c0-68.266667-55.466667-125.866667-125.866667-125.866667l-108.8 0-76.8-76.8C578.666667 12.8 546.666667 0 512.533333 0L512.533333 0z"  ></path></symbol><symbol id="icon-gerenzhongxin" viewBox="0 0 1025 1024"><path d="M690.366075 350.568358c0-98.876614-79.937349-179.048571-178.558027-179.048571-98.59935 0-178.515371 80.150629-178.515371 179.048571 0 98.833958 79.916021 178.963259 178.515371 178.963259C610.428726 529.531617 690.366075 449.380988 690.366075 350.568358M376.140632 350.568358c0-75.159877 60.72082-136.072649 135.667416-136.072649 74.989253 0 135.667416 60.912772 135.667416 136.072649 0 75.117221-60.678164 136.029993-135.667416 136.029993C436.861451 486.577022 376.140632 425.664251 376.140632 350.568358M197.284012 762.923936 197.284012 778.472049l15.526785 0 291.255186 0.127968L819.784387 778.472049l15.569441 0 0-15.548113c0-139.783721-136.413897-285.581938-311.026243-273.275681-10.002833 0.703824-24.740482 9.128385-34.658002 9.938849-8.573857 0.74648 13.692577 8.232609 14.396401 16.827793 9.021745-0.789136 6.313088 13.095393 15.505457 13.095393 150.597017 0 263.14488 103.07823 263.14488 224.62651l15.441473-15.590769-285.816546-0.042656-278.991585 1.81288 15.526785 15.612097c0-82.752645 75.095893-152.70849 136.861785-191.824044 7.25152-4.58552 8.659169-17.659585 4.862784-22.906273-6.846288-9.426977-19.877697-8.701825-28.046322-6.014496C285.262018 560.521203 197.284012 667.758394 197.284012 762.923936"  ></path><path d="M512.31992 1.535616c-282.766642 0-512.021328 228.89211-512.021328 511.210864 0 282.46805 229.254686 511.25352 512.021328 511.25352 117.431975 0 228.828126-39.606098 318.810964-111.204199 10.791969-8.488545 12.540865-24.22861 3.988336-34.99925-8.616513-10.770641-24.356578-12.540865-35.127218-3.94568-81.174373 64.538532-181.586603 100.241606-287.650754 100.241606-255.210864 0-462.028493-206.561693-462.028493-461.367325 0-254.762976 206.817629-461.303341 462.028493-461.303341 255.210864 0 462.092477 206.561693 462.092477 461.303341 0 87.380821-24.33525 171.093227-69.614596 243.651087-7.272848 11.645089-3.668416 27.086562 8.040657 34.35941 11.709073 7.272848 27.10789 3.62576 34.402066-7.976672 50.184787-80.406565 77.143381-173.247355 77.143381-270.055153C1024.383904 230.427726 795.10789 1.535616 512.31992 1.535616z"  ></path></symbol><symbol id="icon-jifen" viewBox="0 0 1024 1024"><path d="M512.469333 493.781333c289.130667 0 507.136-93.333333 507.136-217.173333S801.6 59.392 512.469333 59.392C223.338667 59.392 5.333333 152.768 5.333333 276.608S223.338667 493.781333 512.469333 493.781333M512.469333 114.218667c266.581333 0 452.330667 85.589333 452.330667 162.389333 0 76.8-185.749333 162.368-452.330667 162.368-266.602667 0-452.352-85.589333-452.352-162.368C60.138667 199.786667 245.888 114.218667 512.469333 114.218667M512.469333 723.904c288.341333 0 505.749333-92.8 505.749333-215.829333 0-32.490667-15.68-62.698667-43.328-89.856-0.192-0.170667-0.362667-0.405333-0.512-0.554667-0.213333-0.170667-0.341333-0.426667-0.533333-0.597333l-0.128 0.149333c-4.458667-4.074667-10.261333-6.698667-16.746667-6.698667-13.824 0-25.024 11.2-25.024 25.002667 0 7.338667 3.264 13.76 8.277333 18.282667l-0.085333 0.128c16.661333 16.746667 26.090667 37.248 26.090667 54.165333 0 77.504-186.346667 163.797333-453.738667 163.797333-267.392 0-453.738667-86.293333-453.738667-163.797333 0-19.285333 5.418667-35.818667 26.709333-54.634667 0.256-0.213333 0.512-0.448 0.768-0.682667 0.170667-0.149333 0.277333-0.277333 0.448-0.448l-0.106667-0.106667c4.096-4.416 6.72-10.261333 6.72-16.768 0-13.802667-11.178667-25.002667-25.002667-25.002667-6.912 0-13.141333 2.794667-17.664 7.338667l-0.149333-0.170667c-28.010667 27.285333-43.776 57.749333-43.776 90.453333C6.698667 631.104 224.149333 723.904 512.469333 723.904M974.634667 646.72c-0.170667-0.213333-0.341333-0.426667-0.490667-0.576l-0.170667 0.128c-4.416-4.074667-10.261333-6.698667-16.746667-6.698667-13.824 0-25.024 11.157333-25.024 24.96 0 7.338667 3.264 13.781333 8.298667 18.325333l-0.128 0.085333c16.682667 16.789333 26.112 37.290667 26.112 54.165333 0 77.504-186.346667 163.797333-453.738667 163.797333-267.392 0-453.738667-86.293333-453.738667-163.797333 0-19.242667 5.44-35.797333 26.688-54.592 0.277333-0.256 0.512-0.448 0.768-0.704 0.170667-0.128 0.298667-0.298667 0.448-0.426667L86.826667 681.322667c4.074667-4.458667 6.72-10.282667 6.72-16.832 0-13.781333-11.2-24.96-24.981333-24.96-6.890667 0-13.141333 2.794667-17.685333 7.338667l-0.128-0.170667c-28.010667 27.242667-43.754667 57.706667-43.754667 90.410667 0 123.050667 217.429333 215.872 505.749333 215.872 288.341333 0 505.749333-92.842667 505.749333-215.872 0-32.448-15.68-62.698667-43.306667-89.792C974.997333 647.104 974.826667 646.933333 974.634667 646.72"  ></path></symbol><symbol id="icon-operation" viewBox="0 0 1024 1024"><path d="M548.906667 472.170667c-3.349333-3.029333-7.296-5.482667-11.584-7.232l-140.117333-87.36 88.597333 139.370667c1.770667 4.266667 4.266667 8.149333 7.296 11.477333l1.109333 1.792 0.32-0.32c7.210667 7.146667 17.130667 11.52 28.074667 11.477333 21.930667-0.064 39.594667-17.941333 39.488-39.829333-0.042667-10.965333-4.501333-20.864-11.712-27.989333l0.256-0.256L548.906667 472.170667z"  ></path><path d="M521.088 196.8l-0.170667 0-12.501333 0.064 0.682667 151.68 0.106667 0c0.554667 13.76 11.861333 24.746667 25.770667 24.746667 14.250667 0 25.813333-11.562667 25.813333-25.792 0-0.533333-0.042667-1.045333-0.085333-1.578667l1.173333-95.488c129.088 17.984 217.344 117.141333 217.898667 251.285333 0.661333 147.136-110.144 256-257.301333 256.618667-147.157333 0.661333-254.656-109.482667-255.296-256.618667-0.341333-74.688 27.797333-141.312 77.077333-189.909333l-0.021333-0.021333c0.789333-0.618667 1.536-1.322667 2.24-2.090667 6.976-7.722667 3.84-20.266667-4.117333-27.456-7.232-6.528-24.277333-5.930667-31.402667-0.128l-0.021333-0.042667c-0.128 0.128-0.256 0.256-0.384 0.384-0.576 0.490667-1.130667 1.002667-1.642667 1.578667-0.042667 0.064-0.085333 0.128-0.128 0.170667-56.618667 55.658667-91.605333 133.184-91.242667 218.837333 0.768 168.426667 137.877333 304.32 306.304 303.573333 168.384-0.789333 304.298667-137.877333 303.552-306.282667C826.624 331.968 689.493333 196.053333 521.088 196.8z"  ></path><path d="M511.978667 11.114667C235.370667 11.114667 11.093333 235.370667 11.093333 511.978667c0 276.778667 224.277333 500.885333 500.885333 500.885333 114.88 0 223.872-38.784 311.914667-108.885333 10.517333-8.362667 12.266667-23.765333 3.904-34.304-8.448-10.538667-23.786667-12.288-34.368-3.882667-79.424 63.296-177.664 98.282667-281.408 98.282667-249.642667 0-451.989333-202.410667-451.989333-452.096 0-249.6 202.325333-451.989333 451.989333-451.989333 249.685333 0 452.032 202.389333 452.032 451.989333 0 85.589333-23.786667 167.637333-68.074667 238.72-7.082667 11.413333-3.584 26.538667 7.850667 33.664 11.434667 7.168 26.474667 3.584 33.6-7.829333 49.152-78.741333 75.498667-169.706667 75.498667-264.554667C1012.906667 235.370667 788.672 11.114667 511.978667 11.114667z"  ></path></symbol><symbol id="icon-remind1" viewBox="0 0 1024 1024"><path d="M538.566466 1023.088677C536.442301 1023.088677 534.296495 1023.023404 532.085637 1022.915658 453.644248 1018.970174 421.998927 952.558642 416.233425 918.008283 414.28268 906.196423 422.259039 895.03283 434.050197 893.061207 445.754623 890.980048 456.938872 898.999774 458.976262 910.7477 459.474802 913.435546 471.374332 976.44435 534.296495 979.608784 596.069881 983.532361 611.155621 913.196806 611.740847 910.227299 614.038393 898.479817 625.504392 890.741755 637.208818 893.19086 648.95661 895.510313 656.586167 906.932765 654.245257 918.658784 646.962498 955.441417 613.474848 1023.088677 538.566466 1023.088677L538.566466 1023.088677 538.566466 1023.088677ZM57.238985 822.166923C57.304035 822.166923 57.412408 823.856889 58.582842 825.092617 60.663619 827.26051 66.819288 829.60142 77.851798 829.60142L950.850912 829.60142C961.710045 829.60142 966.283453 827.325335 967.063743 826.54518L966.110074 823.445575 966.131714 779.748846 967.367175 777.191547C967.540597 772.487369 965.524846 743.638623 900.998697 683.68606 808.577021 597.831903 751.355358 380.042583 751.355358 227.472879 751.355358 104.749804 551.079467 86.716376 549.042032 86.564816L472.724766 86.629643C472.464656 86.716376 272.167125 104.749804 272.167125 227.472879 272.167125 361.185187 227.365126 591.133746 127.704015 683.68606 61.573964 745.112647 57.195664 774.980288 56.935551 779.748846L57.434073 781.179502 57.195664 822.275117C57.217324 822.210291 57.217324 822.166923 57.238985 822.166923L57.238985 822.166923ZM77.851798 872.950767C54.507951 872.950767 36.929651 866.318332 25.63703 853.270294 15.753293 841.825937 13.239004 827.585537 14.084298 818.004607L14.084298 787.009876C11.439979 770.797407 16.07841 728.227767 98.204521 651.932186 178.878427 576.980527 228.817333 373.25814 228.817333 227.472879 228.817333 64.889919 461.085347 44.146738 470.969083 43.345123L480.023302 43.337722 480.023302 18.029115C480.023302 8.560067 487.691443 0.883887 497.162607 0.883887L519.306723 0.883887C528.7725 0.883887 536.446027 8.563604 536.446027 18.025761L536.446027 43.291599 550.819354 43.27985C562.480459 44.146738 794.705104 64.889919 794.705104 227.472879 794.705104 371.545823 849.282468 576.482033 930.498212 651.932186 1011.86574 727.51244 1013.989862 770.732132 1009.481507 788.20224L1009.481507 816.617765C1011.453889 826.610008 1010.478541 840.67694 1001.851903 852.381501 991.751467 866.015212 974.584928 872.950767 950.850912 872.950767L77.851798 872.950767Z"  ></path></symbol><symbol id="icon-icondownload" viewBox="0 0 1024 1024"><path d="M995.84 1024 28.16 1024C12.8 1024 0 1011.2 0 995.84l0 0c0-15.36 12.8-28.16 28.16-28.16l967.68 0c15.36 0 28.16 12.8 28.16 28.16l0 0C1024 1011.2 1011.2 1024 995.84 1024z"  ></path><path d="M926.72 376.32 926.72 376.32c-10.24-10.24-30.72-10.24-40.96 0L537.6 721.92 537.6 28.16C537.6 12.8 527.36 0 512 0s-25.6 12.8-25.6 28.16l0 693.76L138.24 376.32c-10.24-10.24-30.72-10.24-40.96 0-10.24 10.24-10.24 28.16 0 40.96l394.24 394.24c2.56 2.56 2.56 2.56 5.12 2.56 0 0 2.56 2.56 2.56 2.56 7.68 2.56 15.36 2.56 23.04 0 2.56 0 2.56-2.56 2.56-2.56 2.56 0 5.12-2.56 5.12-2.56l394.24-394.24C936.96 404.48 936.96 386.56 926.72 376.32z"  ></path></symbol><symbol id="icon-map" viewBox="0 0 1024 1024"><path d="M451.673935 994.395699C478.883834 1025.019147 524.254807 1024.808979 551.400292 993.928851 553.755808 991.387908 558.821323 985.796762 565.872444 977.84835 577.572838 964.659017 590.597131 949.62432 604.615947 932.998315 644.662065 885.504506 684.708678 834.717818 722.129538 782.646447 759.658524 730.424619 792.492213 679.709274 819.314991 631.458462 868.685946 542.646317 896 465.543426 896 402.285715 896 180.109449 719.301715 0 501.333333 0 283.364952 0 106.666667 180.109449 106.666667 402.285715 106.666667 465.598716 134.05152 542.80573 183.54613 631.762622 210.371803 679.976529 243.193308 730.651876 280.699364 782.833154 318.155192 834.94455 358.239268 885.77421 398.322835 933.311031 412.354743 949.952073 425.391185 965.00073 437.102468 978.202579 444.160087 986.158466 449.230214 991.754921 451.982775 994.736706L451.673935 994.395699ZM486.822684 961.321348C484.281231 958.568254 479.425084 953.207989 472.585916 945.498359 461.135889 932.591017 448.364015 917.847761 434.602351 901.527215 395.275714 854.888073 355.949587 805.019548 319.289224 754.014863 282.808749 703.260452 250.983685 654.123578 225.158316 607.707522 179.388826 525.445805 154.50505 455.290161 154.50505 402.285715 154.50505 207.039905 309.785362 48.761905 501.333333 48.761905 692.881306 48.761905 848.161617 207.039905 848.161617 402.285715 848.161617 455.246022 823.345286 525.298263 777.693969 607.419251 751.873483 653.867066 720.038415 703.039925 683.537446 753.831262 646.912604 804.794967 607.624538 854.619674 568.335977 901.215038 554.587654 917.520243 541.828177 932.24925 530.389289 945.143797 523.556841 952.845711 518.705521 958.200435 516.166694 960.950526 507.543772 970.748911 495.255793 970.80583 487.131524 961.662353L486.822684 961.321348Z"  ></path><path d="M714.955981 467.028806C723.919106 442.627955 728.565658 416.668998 728.565658 390.095238 728.565658 268.908183 632.184774 170.666667 513.29293 170.666667 394.401086 170.666667 298.020202 268.908183 298.020202 390.095238 298.020202 511.282291 394.401086 609.52381 513.29293 609.52381 549.003859 609.52381 583.510052 600.631947 614.373097 583.874409 626.032316 577.543868 630.449257 562.77782 624.238611 550.893519 618.027966 539.009218 603.541579 534.507006 591.882359 540.837549 567.900883 553.858639 541.111735 560.761905 513.29293 560.761905 420.821495 560.761905 345.858586 484.351836 345.858586 390.095238 345.858586 295.838641 420.821495 219.428572 513.29293 219.428572 605.764365 219.428572 680.727273 295.838641 680.727273 390.095238 680.727273 410.807981 677.117041 430.977316 670.154965 449.930592 665.522846 462.540883 671.796821 476.591108 684.168282 481.312651 696.53974 486.034191 710.323861 479.639095 714.955981 467.028806L714.955981 467.028806Z"  ></path></symbol><symbol id="icon-bad" viewBox="0 0 1024 1024"><path d="M743.328 31.04c71.232 0 127.008 32.96 157.568 93.632 2.784 5.504 3.872 10.944 4.928 16.256 2.24 11.04 5.6 27.776 30.432 57.536 36.32 43.52 29.984 90.08 24.896 127.488-1.312 9.76-2.656 19.456-3.232 29.024-1.856 31.648 3.968 41.184 19.488 66.656 3.136 5.216 6.592 10.848 10.272 17.184 23.68 40.896 22.752 90.912-2.464 133.792-28.96 49.248-82.624 78.624-143.488 78.624-51.552 0-108.256-1.12-141.408-1.952 8.64 50.048 25.44 154.528 25.44 210.656 0 92.64-67.04 125.504-124.448 125.504-63.68 0-113.536-58.688-113.536-133.6 0-57.92 0-65.344-22.976-97.088-60.608-83.776-122.464-142.272-150.304-142.272L117.76 612.48c-49.056 0-88.992-39.392-88.992-87.776L28.768 118.848c0-48.416 39.904-87.808 88.992-87.808l133.888 0c12.896 0 23.392 10.368 23.392 23.104l0 512.224 39.424 0c62.176 0 144.704 101.28 188.416 161.632 31.68 43.744 31.68 63.968 31.68 123.904 0 48.192 29.92 87.424 66.784 87.424 23.296 0 77.632-7.712 77.632-79.328 0-69.824-29.344-228.704-29.664-230.304-1.28-6.848 0.64-13.92 5.28-19.2 4.608-5.28 10.688-8.288 18.464-8 0.864 0 90.72 2.656 168.672 2.656 44.032 0 82.528-20.832 103.008-55.648 16.768-28.48 17.632-61.28 2.304-87.712-3.456-6.016-6.72-11.392-9.792-16.32-16.704-27.456-28.736-47.264-26.048-93.12 0.608-10.752 2.08-21.6 3.552-32.512 4.672-34.368 8.704-64.064-14.624-92.032-32.352-38.784-37.28-63.296-40.192-77.92-0.416-1.984-0.672-3.712-1.408-5.568-15.392-30.624-47.872-67.136-115.168-67.136l-316.704 0c-12.896 0-23.392-10.336-23.392-23.072 0-12.768 10.496-23.104 23.392-23.104L743.328 31.008 743.328 31.04zM117.76 566.368l110.496 0L228.256 77.248 117.76 77.248c-23.232 0-42.176 18.656-42.176 41.632L75.584 524.8C75.552 547.712 94.496 566.368 117.76 566.368L117.76 566.368zM117.76 566.368"  ></path></symbol><symbol id="icon-good" viewBox="0 0 1024 1024"><path d="M743.328 985.536l-316.704 0c-12.896 0-23.392-10.368-23.392-23.104s10.496-23.072 23.392-23.072l316.704 0c67.296 0 99.808-36.512 115.168-67.136 0.768-1.856 1.024-3.552 1.408-5.568 2.912-14.624 7.84-39.168 40.192-77.92 23.328-27.968 19.328-57.664 14.624-92.032-1.472-10.912-2.944-21.76-3.552-32.512-2.688-45.856 9.344-65.664 26.048-93.12 3.04-4.928 6.304-10.304 9.792-16.32 15.328-26.432 14.464-59.232-2.304-87.712-20.48-34.816-59.008-55.648-103.008-55.648-77.952 0-167.808 2.656-168.672 2.656-7.776 0.288-13.888-2.72-18.464-8-4.64-5.28-6.528-12.352-5.28-19.2 0.32-1.6 29.664-160.48 29.664-230.304 0-71.616-54.336-79.328-77.632-79.328-36.832 0-66.784 39.2-66.784 87.424 0 59.936 0 80.16-31.68 123.904-43.712 60.352-126.24 161.632-188.416 161.632L275.04 450.176l0 512.224c0 12.768-10.496 23.104-23.392 23.104L117.76 985.504c-49.056 0-88.992-39.392-88.992-87.808L28.768 491.808c0-48.384 39.904-87.776 88.992-87.776l196.704 0c27.84 0 89.696-58.496 150.304-142.272 22.976-31.712 22.976-39.168 22.976-97.088 0-74.944 49.856-133.6 113.536-133.6 57.408 0 124.448 32.896 124.448 125.504 0 56.128-16.8 160.576-25.44 210.656 33.184-0.8 89.856-1.952 141.408-1.952 60.864 0 114.56 29.376 143.488 78.624 25.216 42.88 26.144 92.928 2.464 133.792-3.68 6.336-7.104 11.968-10.272 17.184-15.52 25.472-21.344 35.008-19.488 66.656 0.576 9.568 1.952 19.296 3.232 29.024 5.088 37.408 11.424 83.968-24.896 127.488-24.832 29.792-28.192 46.496-30.432 57.536-1.056 5.28-2.176 10.752-4.928 16.256C870.336 952.544 814.56 985.536 743.328 985.536L743.328 985.536zM117.76 450.208c-23.232 0-42.176 18.656-42.176 41.6l0 405.952c0 22.976 18.944 41.632 42.176 41.632l110.496 0L228.256 450.208 117.76 450.208 117.76 450.208zM117.76 450.208"  ></path></symbol><symbol id="icon-skip" viewBox="0 0 1024 1024"><path d="M1011.168 487.136c0-10.368-4.512-19.648-11.552-26.208L605.6 120.64c-6.272-5.344-14.272-8.672-23.104-8.672-19.776 0-35.744 15.968-35.744 35.712l0 150.624C245.568 346.944 33.504 568.352 12.832 852.544c0.992 12.064 10.848 21.632 23.136 21.632 4.736 0 9.184-1.44 12.896-3.872 0.064-0.064 0 0.192 0.064 0.192 52.032-36.928 96.992-64.48 132.096-83.008 63.968-35.2 154.464-65.28 258.368-84.544l0-0.16c14.848 0 26.88-12.288 26.88-27.488 0-15.168-12.032-27.488-26.88-27.488-3.456 0-6.752 0.672-9.792 1.888-166.4 32.608-275.936 85.664-361.92 147.2 55.488-204.096 191.808-387.584 512.16-447.936l0 0c14.144-2.304 24.992-14.912 24.992-30.144 0-0.384 0-0.8-0.032-1.184L604.8 317.6 604.8 202.752l331.84 284.544-328.192 280.864-2.432 0 0-138.592-0.064 0c-0.928-16-13.824-28.672-29.568-28.672-16.352 0-29.632 13.664-29.632 30.528 0 0 0 0 0 0 0 0 0 0 0 0l0 56.128 0 75.2 0 64.352c0 19.776 15.936 35.712 35.712 35.712 8.416 0 16-3.168 22.144-8.064L998.72 514.432c0-0.032-0.128-0.064-0.064-0.096C1006.304 507.808 1011.168 498.016 1011.168 487.136z"  ></path></symbol><symbol id="icon-iconfontplay2" viewBox="0 0 1024 1024"><path d="M512 0C230.4 0 0 230.4 0 512c0 281.6 230.4 512 512 512 117.76 0 227.84-38.4 320-110.08 10.24-7.68 12.8-23.04 5.12-35.84-7.68-10.24-23.04-12.8-35.84-5.12C719.36 939.52 616.96 972.8 512 972.8 256 972.8 51.2 768 51.2 512 51.2 256 256 51.2 512 51.2 768 51.2 972.8 256 972.8 512c0 87.04-25.6 171.52-69.12 243.2-7.68 12.8-2.56 28.16 7.68 33.28 12.8 7.68 28.16 2.56 33.28-7.68 51.2-79.36 76.8-174.08 76.8-271.36C1024 230.4 793.6 0 512 0z"  ></path><path d="M714.24 458.24c-17.92-15.36-245.76-222.72-245.76-222.72-10.24-10.24-25.6-7.68-35.84 2.56-5.12 5.12-7.68 12.8-7.68 17.92 0 0 0 0 0 0 0 0 0 499.2 0 512 0 15.36 10.24 25.6 25.6 25.6 5.12 0 12.8-2.56 15.36-7.68 2.56-2.56 217.6-186.88 240.64-207.36 23.04-20.48 33.28-38.4 33.28-64C742.4 491.52 732.16 473.6 714.24 458.24zM680.96 535.04c-7.68 5.12-204.8 176.64-204.8 176.64l0-399.36c0 0 186.88 166.4 202.24 181.76C696.32 512 698.88 519.68 680.96 535.04z"  ></path></symbol><symbol id="icon-iconfontstop" viewBox="0 0 1024 1024"><path d="M512 0C230.4 0 0 230.4 0 512c0 281.6 230.4 512 512 512 117.76 0 227.84-38.4 320-110.08 10.24-7.68 12.8-23.04 5.12-35.84-7.68-10.24-23.04-12.8-35.84-5.12C719.36 939.52 616.96 972.8 512 972.8 256 972.8 51.2 768 51.2 512 51.2 256 256 51.2 512 51.2 768 51.2 972.8 256 972.8 512c0 87.04-25.6 171.52-69.12 243.2-7.68 12.8-2.56 28.16 7.68 33.28 12.8 7.68 28.16 2.56 33.28-7.68 51.2-79.36 76.8-174.08 76.8-271.36C1024 230.4 793.6 0 512 0z"  ></path><path d="M686.08 307.2 337.92 307.2c-17.92 0-30.72 12.8-30.72 30.72l0 348.16c0 17.92 12.8 30.72 30.72 30.72l348.16 0c17.92 0 30.72-12.8 30.72-30.72L716.8 337.92C716.8 320 704 307.2 686.08 307.2zM665.6 657.92c0 5.12-2.56 7.68-7.68 7.68L366.08 665.6c-5.12 0-7.68-2.56-7.68-7.68L358.4 366.08c0-5.12 2.56-7.68 7.68-7.68l291.84 0c5.12 0 7.68 2.56 7.68 7.68L665.6 657.92z"  ></path></symbol><symbol id="icon-compass" viewBox="0 0 1024 1024"><path d="M512 1024C230.4 1024 0 793.6 0 512S230.4 0 512 0s512 230.4 512 512S793.6 1024 512 1024zM512 42.666667C253.866667 42.666667 42.666667 253.866667 42.666667 512s211.2 469.333333 469.333333 469.333333 469.333333-211.2 469.333333-469.333333S770.133333 42.666667 512 42.666667z"  ></path><path d="M266.666667 778.666667c-6.4 0-10.666667-2.133333-14.933333-6.4-6.4-6.4-8.533333-14.933333-4.266667-23.466667l138.666667-352c2.133333-6.4 6.4-10.666667 12.8-12.8l352-138.666667c8.533333-2.133333 17.066667-2.133333 23.466667 4.266667s8.533333 14.933333 4.266667 23.466667L640 625.066667c-4.266667 10.666667-17.066667 17.066667-27.733333 12.8-10.666667-4.266667-17.066667-17.066667-12.8-27.733333l121.6-307.2-296.533333 117.333333-117.333333 296.533333 217.6-85.333333c10.666667-4.266667 23.466667 2.133333 27.733333 12.8 4.266667 10.666667 0 23.466667-12.8 27.733333L277.333333 776.533333C270.933333 778.666667 268.8 778.666667 266.666667 778.666667z"  ></path><path d="M512 512m-36.266667 0a1.7 1.7 0 1 0 72.533333 0 1.7 1.7 0 1 0-72.533333 0Z"  ></path></symbol><symbol id="icon-security" viewBox="0 0 1024 1024"><path d="M516.266667 1024l-8.533333 0C253.866667 1024 49.066667 819.2 49.066667 565.333333L49.066667 119.466667c0-12.8 8.533333-21.333333 21.333333-21.333333l106.666667 0c87.466667 0 174.933333-21.333333 253.866667-59.733333l72.533333-36.266667c6.4-2.133333 12.8-2.133333 19.2 0l72.533333 36.266667c78.933333 38.4 166.4 59.733333 253.866667 59.733333l106.666667 0c12.8 0 21.333333 8.533333 21.333333 21.333333s-8.533333 21.333333-21.333333 21.333333l-106.666667 0c-93.866667 0-187.733333-21.333333-273.066667-64l-64-32-61.866667 32c-85.333333 42.666667-179.2 64-273.066667 64l-85.333333 0 0 424.533333C91.733333 795.733333 277.333333 981.333333 507.733333 981.333333l8.533333 0c228.266667 0 416-185.6 416-416l0-298.666667-405.333333 390.4c-8.533333 8.533333-21.333333 8.533333-29.866667 0l-200.533333-200.533333c-8.533333-8.533333-8.533333-21.333333 0-29.866667s21.333333-8.533333 29.866667 0l185.6 185.6L938.666667 202.666667c6.4-6.4 14.933333-8.533333 23.466667-4.266667 8.533333 4.266667 12.8 10.666667 12.8 19.2l0 347.733333C974.933333 819.2 770.133333 1024 516.266667 1024z"  ></path></symbol><symbol id="icon-share" viewBox="0 0 1024 1024"><path d="M697.15674 422.956522 847.731148 422.956522C884.876874 422.956522 915.087718 452.959788 915.087718 489.801828L915.087718 912.632955 915.087718 1001.739129 937.543859 979.47826 847.939848 979.47826 218.726818 979.47826C181.707983 979.47826 151.578948 949.486546 151.578948 912.632955L151.578948 489.801828C151.578948 472.785796 151.578948 472.785796 151.578948 450.127108 151.578948 442.919656 151.578948 442.919656 151.578948 435.893809 151.578948 408.715613 151.578948 408.715613 151.578948 400.695652L129.122807 422.956522C137.296139 422.956522 137.296139 422.956522 164.865734 422.956522 171.618554 422.956522 171.618554 422.956522 178.53178 422.956522 201.762058 422.956522 201.762058 422.956522 218.906254 422.956522L354.437705 422.956522C366.839887 422.956522 376.893843 412.98999 376.893843 400.695652 376.893843 388.401314 366.839887 378.434781 354.437705 378.434781L218.906254 378.434781C201.762058 378.434781 201.762058 378.434781 178.53178 378.434781 171.618554 378.434781 171.618554 378.434781 164.865734 378.434781 137.296139 378.434781 137.296139 378.434781 129.122807 378.434781 116.720624 378.434781 106.666667 388.401314 106.666667 400.695652 106.666667 408.715613 106.666667 408.715613 106.666667 435.893809 106.666667 442.919656 106.666667 442.919656 106.666667 450.127108 106.666667 472.785796 106.666667 472.785796 106.666667 489.801828L106.666667 912.632955C106.666667 974.033806 156.86164 1023.999999 218.726818 1023.999999L847.939848 1023.999999 937.543859 1023.999999C949.946043 1023.999999 960 1014.033469 960 1001.739129L960 912.632955 960 489.801828C960 428.38942 909.69975 378.434781 847.731148 378.434781L697.15674 378.434781C684.754556 378.434781 674.700599 388.401314 674.700599 400.695652 674.700599 412.98999 684.754556 422.956522 697.15674 422.956522L697.15674 422.956522Z"  ></path><path d="M347.996815 282.764936 548.760439 59.327972 515.337485 59.454466 715.839402 279.198683C724.158863 288.316569 738.359462 289.022466 747.557327 280.775347 756.755193 272.52823 757.467283 258.451114 749.147821 249.333231L548.645903 29.589012 531.863345 11.19582 515.22295 29.715506 314.459326 253.152471C306.210339 262.333062 307.030836 276.404377 316.291958 284.581634 325.55308 292.75889 339.747827 291.945527 347.996815 282.764936L347.996815 282.764936Z"  ></path><path d="M511.087716 78.416783 510.666677 782.242894C510.659322 794.53723 520.707315 804.50967 533.109495 804.516961 545.511678 804.524251 555.571595 794.563632 555.57895 782.269296L555.999989 78.443185C556.007345 66.148848 545.959351 56.176409 533.557171 56.169118 521.154989 56.161828 511.095072 66.122446 511.087716 78.416783L511.087716 78.416783Z"  ></path></symbol><symbol id="icon-store" viewBox="0 0 1024 1024"><path d="M957.866667 170.666667c-2.133333-59.733333-51.2-106.666667-110.933333-106.666667 0 0-2.133333 0-2.133333 0 0 0-2.133333 0-2.133333 0L83.2 64C78.933333 64 72.533333 66.133333 68.266667 70.4 66.133333 74.666667 61.866667 78.933333 61.866667 85.333333l0 761.6c0 0 0 0 0 0C64 908.8 113.066667 960 174.933333 960c0 0 2.133333 0 2.133333 0 0 0 2.133333 0 2.133333 0l362.666667 0c25.6 0 29.866667-10.666667 29.866667-21.333333L571.733333 554.666667l172.8 0 0 381.866667c0 6.4 4.266667 12.8 8.533333 17.066667 4.266667 4.266667 8.533333 6.4 14.933333 6.4l168.533333 0c10.666667 0 21.333333-8.533333 21.333333-21.333333 0 0 0 0 0 0 0 0 0-2.133333 0-2.133333L957.866667 172.8C957.866667 172.8 957.866667 172.8 957.866667 170.666667zM915.2 174.933333C915.2 177.066667 917.333333 177.066667 915.2 174.933333l0 134.4C915.2 354.133333 874.666667 384 829.866667 384c-44.8 0-83.2-29.866667-83.2-72.533333 0 0 0 0 0-2.133333l0 0L746.666667 106.666667l-42.666667 0 0 202.666667 0 0c0 0 0 0 0 2.133333-2.133333 44.8-42.666667 72.533333-87.466667 72.533333-44.8 0-83.2-29.866667-83.2-72.533333 0 0 0 0 0-2.133333l0 0L533.333333 106.666667l-42.666667 0 0 202.666667 0 0c0 0 0 0 0 2.133333-2.133333 44.8-42.666667 72.533333-87.466667 72.533333-44.8 0-81.066667-27.733333-83.2-72.533333L320 106.666667l-42.666667 0 0 204.8c-2.133333 44.8-42.666667 72.533333-87.466667 72.533333-46.933333 0-83.2-29.866667-83.2-74.666667L106.666667 106.666667l736 0c0 0 2.133333 0 2.133333 0 2.133333 0 2.133333 0 4.266667 0C883.2 106.666667 915.2 138.666667 915.2 174.933333zM104.533333 846.933333 104.533333 396.8C128 416 157.866667 426.666667 189.866667 426.666667c44.8 0 83.2-19.2 106.666667-51.2 23.466667 32 61.866667 51.2 106.666667 51.2 44.8 0 83.2-19.2 106.666667-51.2 23.466667 32 61.866667 51.2 106.666667 51.2 44.8 0 83.2-19.2 106.666667-51.2 23.466667 32 61.866667 51.2 106.666667 51.2 34.133333 0 64-10.666667 87.466667-29.866667L917.333333 917.333333l-128 0L789.333333 533.333333c0-12.8-8.533333-21.333333-21.333333-21.333333l-213.333333 0c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 0 0 0 0 0 0 0 0 0 0 0L533.333333 917.333333 179.2 917.333333c0 0-2.133333 0-2.133333 0-2.133333 0-2.133333 0-2.133333 0C138.666667 917.333333 104.533333 885.333333 104.533333 846.933333z"  ></path></symbol><symbol id="icon-manageorder" viewBox="0 0 1024 1024"><path d="M760.832 348.16 201.728 348.16c-12.288 0-23.552 10.24-23.552 23.552s10.24 23.552 23.552 23.552l559.104 0c12.288 0 23.552-10.24 23.552-23.552S773.12 348.16 760.832 348.16z"  ></path><path d="M762.88 200.704 203.776 200.704c-12.288 0-23.552 10.24-23.552 23.552 0 12.288 10.24 23.552 23.552 23.552l559.104 0c12.288 0 23.552-10.24 23.552-23.552C788.48 212.992 775.168 200.704 762.88 200.704z"  ></path><path d="M790.528 917.504l0-27.648c10.24-2.048 29.696-8.192 35.84-15.36 10.24-10.24 12.288-21.504 12.288-35.84s-4.096-27.648-12.288-33.792c-10.24-8.192-23.552-15.36-40.96-23.552-10.24-4.096-21.504-10.24-25.6-12.288-4.096-4.096-6.144-10.24-6.144-17.408 0-8.192 2.048-15.36 6.144-19.456 4.096-4.096 10.24-8.192 19.456-8.192s15.36 4.096 19.456 10.24c4.096 6.144 8.192 15.36 8.192 27.648l29.696 0c0-23.552-6.144-29.696-12.288-43.008-8.192-10.24-12.288-17.408-35.84-19.456l0-29.696-23.552 0 0 29.696c-10.24 2.048-25.6 8.192-31.744 15.36-8.192 10.24-10.24 21.504-10.24 33.792 0 15.36 6.144 27.648 12.288 35.84 10.24 8.192 23.552 15.36 43.008 23.552 10.24 4.096 19.456 8.192 25.6 12.288 4.096 4.096 8.192 10.24 8.192 17.408 0 8.192-2.048 15.36-8.192 19.456-6.144 4.096-12.288 8.192-23.552 8.192-10.24 0-17.408-6.144-23.552-10.24-6.144-6.144-10.24-6.144-10.24-29.696l-29.696 0c0 23.552 4.096 35.84 12.288 45.056 10.24 10.24 25.6 17.408 35.84 19.456l0 27.648L790.528 917.504 790.528 917.504zM984.064 626.688l-68.608-21.504c-4.096-2.048-8.192 0-10.24 2.048-2.048 2.048-6.144 6.144-6.144 10.24l0 51.2-45.056 0 0-72.704c0-6.144-2.048-10.24-8.192-10.24l-63.488-19.456c-2.048 0-4.096 0-6.144 0l-68.608 17.408c-6.144 2.048-8.192 6.144-8.192 10.24l0 72.704-45.056 0 0-51.2c0-4.096-2.048-8.192-4.096-10.24-2.048-2.048-6.144-2.048-10.24-2.048L570.368 624.64c-2.048 2.048-4.096 6.144-4.096 12.288L583.68 949.248c0 4.096 4.096 10.24 8.192 10.24l183.296 57.344c2.048 0 2.048 0 4.096 0 2.048 0 2.048 0 4.096 0l183.296-57.344c4.096-2.048 8.192-6.144 8.192-10.24l2.048-21.504 0 0c0-6.144-6.144-10.24-10.24-10.24-4.096 0-10.24 6.144-10.24 10.24l0 0 0 12.288-177.152 53.248-175.104-53.248-17.408-294.912 45.056-12.288 0 45.056c0 6.144 6.144 15.36 10.24 15.36l66.56 0c6.144 0 12.288-10.24 12.288-15.36l0-70.656 55.296-15.36 55.296 15.36 0 70.656c0 6.144 8.192 15.36 12.288 15.36l68.608 0c6.144 0 10.24-10.24 10.24-15.36l0-45.056 45.056 12.288-10.24 224.256 0 0c0 6.144 6.144 10.24 10.24 10.24 6.144 0 10.24-6.144 10.24-10.24l0 0L993.28 635.904C993.28 631.808 991.232 626.688 984.064 626.688L984.064 626.688 984.064 626.688z"  ></path><path d="M773.12 6.144 54.272 6.144 30.72 6.144l0 23.552 0 836.608c0 76.8 59.392 138.24 136.192 138.24l325.632 0 0 0c12.288-1.024 21.504-11.264 21.504-23.552 0-12.288-9.216-22.528-21.504-23.552l0 0-4.096 0L164.864 957.44c-47.104 0-87.04-40.96-87.04-90.112L77.824 55.296l695.296 0c47.104 0 87.04 40.96 87.04 90.112l0 360.448 0 0c0 13.312 11.264 24.576 24.576 24.576 13.312 0 24.576-11.264 24.576-24.576L909.312 145.408C910.336 68.608 849.92 6.144 773.12 6.144z"  ></path></symbol><symbol id="icon-rejectedorder" viewBox="0 0 1024 1024"><path d="M796.672 1006.592c-108.544 0-196.608-87.04-196.608-196.608S688.128 614.4 796.672 614.4 993.28 701.44 993.28 809.984C991.232 919.552 903.168 1006.592 796.672 1006.592zM796.672 658.432c-84.992 0-153.6 68.608-153.6 153.6 0 84.992 68.608 153.6 153.6 153.6s153.6-68.608 153.6-153.6C948.224 727.04 880.64 658.432 796.672 658.432z"  ></path><path d="M884.736 835.584c12.288 0 23.552-10.24 23.552-23.552 0-12.288-10.24-23.552-23.552-23.552L709.632 788.48c-12.288 0-23.552 10.24-23.552 23.552 0 12.288 10.24 23.552 23.552 23.552L884.736 835.584 884.736 835.584z"  ></path><path d="M760.832 351.232 201.728 351.232c-12.288 0-23.552 10.24-23.552 23.552s10.24 23.552 23.552 23.552l559.104 0c12.288 0 23.552-10.24 23.552-23.552S773.12 351.232 760.832 351.232z"  ></path><path d="M910.336 148.48C910.336 71.68 847.872 10.24 773.12 10.24L54.272 10.24 30.72 10.24l0 23.552L30.72 870.4c0 76.8 59.392 138.24 136.192 138.24l417.792 0 0 0c13.312-1.024 22.528-11.264 22.528-24.576 0-13.312-10.24-23.552-22.528-24.576l0 0-419.84 0c-47.104 0-87.04-40.96-87.04-90.112L77.824 59.392l695.296 0c47.104 0 87.04 40.96 87.04 90.112l0 406.528 0 0c0 0 0 0 0 0 0 13.312 11.264 24.576 24.576 24.576 13.312 0 24.576-11.264 24.576-24.576 0 0 0 0 0 0l0 0L909.312 148.48z"  ></path><path d="M762.88 204.8 203.776 204.8c-12.288 0-23.552 10.24-23.552 23.552s10.24 23.552 23.552 23.552l559.104 0c12.288 0 23.552-10.24 23.552-23.552C788.48 215.04 778.24 204.8 762.88 204.8z"  ></path></symbol><symbol id="icon-phone" viewBox="0 0 1024 1024"><path d="M942.08 738.304c-25.6-23.552-55.296-47.104-76.8-61.44-27.648-19.456-57.344-38.912-84.992-51.2-43.008-21.504-59.392-25.6-70.656-25.6-19.456 0-35.84 10.24-51.2 29.696-8.192 12.288-17.408 29.696-23.552 45.056-4.096 10.24-12.288 27.648-17.408 33.792-8.192-2.048-31.744-12.288-70.656-37.888-35.84-25.6-74.752-57.344-104.448-84.992-29.696-29.696-59.392-68.608-84.992-104.448-25.6-37.888-35.84-61.44-37.888-70.656 6.144-4.096 23.552-12.288 33.792-17.408 15.36-6.144 31.744-12.288 45.056-23.552 21.504-15.36 29.696-31.744 29.696-51.2 0-10.24-2.048-27.648-25.6-70.656-12.288-25.6-31.744-55.296-51.2-84.992-15.36-21.504-38.912-51.2-61.44-76.8-27.648-27.648-47.104-40.96-66.56-40.96-47.104 0-100.352 68.608-114.688 87.04-19.456 25.6-66.56 96.256-66.56 159.744 0 59.392 40.96 138.24 74.752 194.56 45.056 72.704 108.544 153.6 177.152 224.256l21.504 21.504 0 0c70.656 68.608 149.504 132.096 224.256 177.152 23.552 15.36 51.2 29.696 78.848 43.008l0 0c4.096 2.048 6.144 2.048 10.24 2.048 15.36 0 27.648-12.288 27.648-27.648 0-10.24-6.144-21.504-17.408-25.6-21.504-10.24-45.056-23.552-70.656-38.912-70.656-43.008-145.408-102.4-212.992-168.96l-21.504-21.504c-66.56-68.608-125.952-143.36-168.96-212.992-43.008-68.608-66.56-128-66.56-163.84 0-31.744 19.456-78.848 53.248-123.904 15.36-19.456 29.696-37.888 45.056-51.2 15.36-13.312 23.552-17.408 27.648-17.408 10.24 4.096 43.008 31.744 87.04 98.304 17.408 25.6 33.792 51.2 45.056 74.752 15.36 27.648 17.408 40.96 17.408 43.008 0 0-4.096 4.096-10.24 8.192-8.192 4.096-21.504 10.24-31.744 15.36-15.36 6.144-27.648 12.288-40.96 19.456-19.456 12.288-27.648 27.648-27.648 45.056 0 8.192 0 33.792 49.152 104.448 25.6 37.888 59.392 80.896 92.16 112.64l0 0c31.744 31.744 74.752 66.56 112.64 92.16 70.656 47.104 96.256 49.152 104.448 49.152l0 0c17.408 0 31.744-8.192 45.056-27.648 8.192-10.24 12.288-25.6 19.456-40.96 4.096-10.24 10.24-23.552 15.36-31.744 6.144-4.096 10.24-6.144 10.24-6.144 2.048 0 15.36 2.048 43.008 17.408 21.504 12.288 49.152 27.648 74.752 45.056 63.488 45.056 94.208 76.8 98.304 87.04-2.048 4.096-6.144 12.288-17.408 27.648-12.288 15.36-31.744 31.744-51.2 45.056-29.696 21.504-61.44 38.912-87.04 47.104l0 0c-10.24 4.096-17.408 15.36-17.408 25.6 0 15.36 12.288 27.648 27.648 27.648 2.048 0 4.096 0 6.144-2.048l0 0c2.048 0 2.048 0 4.096-2.048l0 0c45.056-15.36 82.944-40.96 102.4-55.296 21.504-15.36 87.04-70.656 87.04-115.712C982.016 785.408 969.728 765.952 942.08 738.304z"  ></path></symbol><symbol id="icon-bussinessman" viewBox="0 0 1024 1024"><path d="M496.64 956.416l-106.496-100.352L429.056 634.88l130.048 0 29.696 222.208L496.64 956.416zM433.152 835.584l61.44 59.392 55.296-57.344-21.504-161.792-70.656 0L433.152 835.584z"  ></path><path d="M642.048 566.272c92.16-51.2 153.6-147.456 153.6-260.096 0-163.84-132.096-296.96-293.888-296.96s-293.888 132.096-293.888 296.96 132.096 296.96 293.888 296.96c4.096 0 6.144 0 10.24 0l2.048 0c236.544 0 441.344 168.96 458.752 360.448L486.4 963.584 53.248 963.584c10.24-128 94.208-240.64 222.208-307.2 12.288-6.144 17.408-21.504 10.24-33.792s-21.504-17.408-33.792-10.24C96.256 688.128 0 830.464 0 989.184l0 25.6 25.6 0 460.8 0 512 0 25.6 0 0-25.6C1024 792.576 858.112 617.472 642.048 566.272zM256 306.176C256 172.032 364.544 62.464 499.712 62.464s243.712 108.544 243.712 242.688S633.856 548.864 499.712 548.864 256 440.32 256 306.176z"  ></path></symbol><symbol id="icon-shoes" viewBox="0 0 1229 1024"><path d="M1041.842629 983.992148C1041.574671 981.125315 1041.096008 975.625377 1040.476664 967.855506 1039.439588 954.844997 1038.401431 940.287388 1037.432102 924.54711 1034.417649 875.597343 1032.726697 826.424701 1033.041608 780.698452 1033.595712 700.240102 1040.539249 639.832622 1053.710848 612.106217 1054.575258 610.28662 1055.494344 608.442785 1056.468567 606.573292 1069.325504 581.901366 1079.541729 568.682391 1129.130509 509.15957 1199.865997 424.253752 1228.799992 373.908777 1228.8 307.108111 1228.800015 166.431798 1151.172884 9.473942 1054.290068 9.473941 1027.320425 9.47394 1020.494518 17.745794 943.645847 122.560421 865.553546 229.07125 828.143122 277.945769 772.255767 342.619052 759.180938 357.749343 746.130808 372.398403 733.069425 386.581716 622.283628 506.883661 444.325788 642.066094 386.69782 660.177172 359.410447 668.752932 337.251346 675.245932 316.579446 680.86273 305.590316 683.848607 276.836124 691.287278 273.941709 692.062861 269.993324 693.120863 266.423439 694.108255 262.964977 695.103631 240.935593 701.443889 220.249322 709.124252 186.750361 723.649347 136.419494 745.47273 80.689269 781.327368 45.237294 817.250276-5.609663 868.772667-18.137835 924.294405 31.22404 965.446623L34.244045 967.964352 37.812642 969.614961C106.845435 1001.545188 458.018816 1001.296253 577.50006 971.486451 641.39968 955.543905 663.400584 922.66282 680.645786 848.471301 697.993516 773.838684 707.996403 747.489152 742.255811 708.356882 782.727985 662.128174 818.636375 634.721574 849.143867 621.686118 858.822139 617.55072 866.903613 615.342648 873.361915 614.519572 875.221893 614.282527 876.654451 614.200223 877.656689 614.210954 877.960827 614.218844 877.960827 614.218844 877.820946 614.210819 877.667264 614.198282 877.667264 614.198282 877.40151 614.170721 877.247534 614.153436 877.247534 614.153436 877.065308 614.131021 876.968865 614.118761 876.968865 614.118761 876.865183 614.105024 876.80801 614.097321 876.80801 614.097321 876.780124 614.093504L876.719086 614.085074C892.981158 616.391352 908.102239 605.026358 910.418924 588.690245 912.735608 572.354132 901.370614 557.233052 885.034499 554.916367L884.957614 554.905567C884.85922 554.892012 884.85922 554.892012 884.791631 554.882908 884.66145 554.865656 884.66145 554.865656 884.52341 554.848102 884.235377 554.812618 884.235377 554.812618 883.915494 554.77665 883.228065 554.704794 883.228065 554.704794 882.414625 554.637455 880.60042 554.516029 880.60042 554.516029 878.296463 554.464169 874.567969 554.424246 870.397914 554.663826 865.808159 555.248765 853.838666 556.774216 840.400965 560.44575 825.666742 566.741491 786.424266 583.509289 743.386163 616.35755 697.299825 668.998948 654.603279 717.76841 641.913705 751.195195 622.447107 834.943501 609.737966 889.620193 599.905884 904.314568 563.03614 913.513331 455.550428 940.330324 117.346311 940.570066 62.896093 915.384822L69.484695 919.55316C54.166367 906.782513 58.12056 889.258514 87.764912 859.220375 117.379371 829.212529 166.76305 797.441006 210.519721 778.468186 241.820793 764.896092 260.166646 758.084675 279.490796 752.523008 282.571448 751.63637 285.793469 750.745193 289.406692 749.776998 291.92748 749.101532 320.818563 741.627448 332.246262 738.522409 353.674109 732.700209 376.582413 725.987681 404.612009 717.178657 474.269619 695.286956 659.787564 554.361623 777.021791 427.057354 790.519375 412.400369 803.987213 397.282424 817.464632 381.686249 874.728174 315.420434 912.812252 265.665823 991.832087 157.889923 1020.894784 118.251037 1034.13195 100.642716 1046.128689 86.10469 1052.847462 77.962667 1058.146598 72.16276 1061.926211 68.737964 1062.091387 68.588292 1061.01237 69.224151 1054.290068 69.224151 1106.729395 69.224151 1169.049802 195.232643 1169.049789 307.108106 1169.049784 355.006057 1145.165757 396.564119 1083.22398 470.914593 1030.081779 534.702689 1019.223457 548.752481 1003.481403 578.960829 1002.171738 581.474022 1000.924938 583.975304 999.741002 586.467512 981.526835 624.808594 973.907036 691.099436 973.292815 780.286971 972.967386 827.540362 974.703086 878.014221 977.79487 928.219727 978.787156 944.332805 979.850726 959.246781 980.915377 972.603185 981.557071 980.65346 982.059213 986.423191 982.351718 989.552643 983.887206 1005.980605 998.449459 1018.05334 1014.87742 1016.517852 1031.305382 1014.982364 1043.378117 1000.420109 1041.842629 983.992148L1041.842629 983.992148Z"  ></path></symbol><symbol id="icon-mobilephone" viewBox="0 0 1024 1024"><path d="M849.52381 974.048781 296.519747 974.048781C254.7965 974.048781 220.952381 940.537079 220.952381 899.361596L220.952381 24.97561 195.809524 49.951219 748.813585 49.951219C790.518054 49.951219 824.380951 83.595356 824.380951 124.977297L824.380951 877.099467C824.380951 890.893116 835.637792 902.075076 849.52381 902.075076 863.409826 902.075076 874.666667 890.893116 874.666667 877.099467L874.666667 124.977297C874.666667 56.010216 818.292258 0 748.813585 0L195.809524 0 170.666667 0 170.666667 24.97561 170.666667 899.361596C170.666667 968.160181 227.060385 1024 296.519747 1024L849.52381 1024C863.409826 1024 874.666667 1012.818039 874.666667 999.02439 874.666667 985.230741 863.409826 974.048781 849.52381 974.048781L849.52381 974.048781Z"  ></path><path d="M325.488889 178.210097C325.488889 165.120605 336.197087 154.501897 349.448428 154.501897L686.773794 154.501897C699.931341 154.501897 710.733333 165.242514 710.733333 178.210097L710.733333 752.651691C710.733333 765.741184 700.025135 776.359891 686.773794 776.359891L349.448428 776.359891C336.290881 776.359891 325.488889 765.619275 325.488889 752.651691L325.488889 178.210097 325.488889 178.210097ZM277.333333 178.210097 277.333333 752.651691C277.333333 792.027497 309.684774 824.195121 349.448428 824.195121L686.773794 824.195121C726.60221 824.195121 758.88889 792.178268 758.88889 752.651691L758.88889 178.210097C758.88889 138.834292 726.537449 106.666667 686.773794 106.666667L349.448428 106.666667C309.620012 106.666667 277.333333 138.68352 277.333333 178.210097L277.333333 178.210097Z"  ></path><path d="M522.666667 949.073171C550.438701 949.073171 572.952382 926.709248 572.952382 899.121952 572.952382 871.534654 550.438701 849.170731 522.666667 849.170731 494.894633 849.170731 472.380951 871.534654 472.380951 899.121952 472.380951 926.709248 494.894633 949.073171 522.666667 949.073171L522.666667 949.073171ZM522.666667 899.121952C522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952 522.666667 899.121952L522.666667 899.121952Z"  ></path></symbol><symbol id="icon-emailfilling" viewBox="0 0 1024 1024"><path d="M1023.999996 243.058404 1023.999996 192.457355C1023.999996 133.350934 976.054238 85.333333 916.910148 85.333333L5.333333 85.333333 5.333333 835.815684C5.333333 895.199398 53.279091 943.15789 112.423181 943.15789L1023.999996 943.15789 1023.999996 446.546103 1023.999996 298.302321 543.765807 562.266963C534.759245 567.206035 523.722317 566.564235 515.348943 560.614513L150.648242 301.475533C138.579558 292.900098 135.747719 276.164736 144.323152 264.096051 152.898585 252.027366 169.633949 249.195529 181.702633 257.770961L532.052621 507.75001C532.052621 507.75001 538.767125 504.064926 542.12438 502.222385 691.83606 420.056992 1008.43715 251.349911 1024 243.058402Z"  ></path></symbol><symbol id="icon-favoritesfilling" viewBox="0 0 1024 1024"><path d="M339.651042 341.097655 469.110756 58.828865C491.707678 8.534076 527.371795 8.880086 548.770042 59.60466L679.364582 341.097655M679.452297 340.474423 964.078942 371.359074C1018.894963 377.308079 1029.586705 411.333594 987.95719 447.35929L772.020879 666.738278M771.548333 663.5201 830.440373 945.270172C841.721615 999.241649 812.665359 1019.924563 765.538658 991.465092L517.688802 846.872395M517.485225 846.453572 267.723625 989.528794C219.879795 1016.935996 191.230298 995.693225 203.733911 942.078609L269.450995 660.288365M270.301116 660.710236 28.962399 447.35929C-12.667117 411.333594-1.975373 377.308079 52.840647 371.359074L338.533536 342.523883 336.275211 353.151657 338.788109 341.437007 679.762863 341.437007 771.253818 663.747471 517.557926 846.731194 270.278963 660.81351 270.301116 660.710236Z"  ></path></symbol><symbol id="icon-accountfilling" viewBox="0 0 1024 1024"><path d="M621.855287 587.643358C708.573965 540.110571 768 442.883654 768 330.666667 768 171.608659 648.609267 42.666667 501.333333 42.666667 354.057399 42.666667 234.666667 171.608659 234.666667 330.666667 234.666667 443.22333 294.453005 540.699038 381.59961 588.07363 125.9882 652.794383 21.333333 855.35859 21.333333 1002.666667L486.175439 1002.666667 1002.666667 1002.666667C1002.666667 815.459407 839.953126 634.458526 621.855287 587.643358Z"  ></path></symbol><symbol id="icon-creditlevel" viewBox="0 0 1024 1024"><path d="M998.4 369.066667 797.866667 93.866667c-4.266667-6.4-12.8-10.666667-19.2-10.666667L243.2 83.2c0 0-14.933333 2.133333-23.466667 17.066667C194.133333 142.933333 32 384 32 384L21.333333 401.066667l12.8 14.933333L469.333333 923.733333c4.266667 4.266667 6.4 6.4 10.666667 8.533333 6.4 4.266667 32 10.666667 46.933333 0 4.266667-2.133333 6.4-6.4 10.666667-8.533333l409.6-420.266667c10.666667-8.533333 10.666667-25.6 0-34.133333-8.533333-10.666667-23.466667-10.666667-32 0L561.066667 834.133333l153.6-422.4 0 0 251.733333 0c2.133333 0 19.2 0 23.466667-4.266667l2.133333-2.133333C1004.8 398.933333 1006.933333 384 998.4 369.066667zM782.933333 132.266667l-96 226.133333L341.333333 358.4l-85.333333-226.133333L782.933333 132.266667zM221.866667 181.333333l72.533333 179.2-192 0L221.866667 181.333333zM91.733333 407.466667l215.466667 0 138.666667 416L91.733333 407.466667zM503.466667 851.2l-147.2-443.733333 307.2 0L503.466667 851.2zM736 360.533333 810.666667 194.133333l119.466667 168.533333L736 362.666667z"  ></path></symbol><symbol id="icon-creditlevelfilling" viewBox="0 0 1024 1024"><path d="M1002.666667 384 812.8 119.466667 723.2 384Z"  ></path><path d="M362.666667 426.666667 512 859.733333 659.2 426.666667Z"  ></path><path d="M678.4 384 772.266667 85.333333 678.4 85.333333 362.666667 85.333333 251.733333 85.333333 347.733333 384Z"  ></path><path d="M535.466667 934.4 537.6 936.533333 1000.533333 426.666667 708.266667 426.666667Z"  ></path><path d="M209.066667 117.333333 21.333333 384 300.8 384Z"  ></path><path d="M21.333333 426.666667 486.4 940.8 486.4 932.266667 315.733333 426.666667Z"  ></path></symbol><symbol id="icon-exl" viewBox="0 0 1024 1024"><path d="M905.185809 178.844158C898.576738 172.685485 891.19337 165.824412 883.21687 158.436127 860.422682 137.322863 837.434925 116.207791 815.697647 96.487895 813.243072 94.261877 813.243072 94.261877 810.786411 92.037081 781.783552 65.781062 757.590948 44.376502 739.713617 29.293612 729.254178 20.469111 721.020606 13.860686 714.970549 9.501727 710.955023 6.608611 707.690543 4.524745 704.47155 2.998714 700.417679 1.07689 696.638044-0.094029 691.307277 0.005928 677.045677 0.273349 665.6 11.769337 665.6 26.182727L665.6 77.352844 665.6 128.522961 665.6 230.863194 665.6 256.448252 691.2 256.448252 896 256.448252 870.4 230.863194 870.4 998.414942 896 972.829884 230.381436 972.829884C187.90385 972.829884 153.6 938.623723 153.6 896.20663L153.6 26.182727 128 51.767786 588.8 51.767786C602.93849 51.767786 614.4 40.312965 614.4 26.182727 614.4 12.05249 602.93849 0.597669 588.8 0.597669L128 0.597669 102.4 0.597669 102.4 26.182727 102.4 896.20663C102.4 966.91021 159.652833 1024 230.381436 1024L896 1024 921.6 1024 921.6 998.414942 921.6 230.863194 921.6 205.278135 896 205.278135 691.2 205.278135 716.8 230.863194 716.8 128.522961 716.8 77.352844 716.8 26.182727C716.8 39.813762 705.748075 50.91427 692.267725 51.167041 687.705707 51.252584 685.069822 50.435995 682.52845 49.231204 682.259458 49.103682 683.344977 49.796618 685.029451 51.010252 689.779394 54.432502 697.145822 60.34494 706.686383 68.394196 724.009052 83.009121 747.816448 104.072869 776.413589 129.961594 778.850014 132.168064 778.850014 132.168064 781.285216 134.376514 802.876774 153.964212 825.739479 174.96442 848.413564 195.966437 856.350957 203.3185 863.697005 210.144893 870.269888 216.269843 874.209847 219.941299 877.019309 222.565641 878.499674 223.951409 888.81866 233.610931 905.019017 233.081212 914.684179 222.768247 924.349344 212.455283 923.819315 196.264383 913.500326 186.604861 911.981323 185.182945 909.155025 182.542876 905.185809 178.844158ZM102.4 461.128719 0 461.128719 0 896.074709 512 896.074709 1024 896.074709 1024 461.128719 153.6 461.128719 153.6 460.531049 102.4 460.531049 102.4 461.128719ZM349.4 673.2 229.8 673.2 229.8 762.8 369.6 762.8 369.6 803.2 179.2 803.2 179.2 512 368.2 512 368.2 552.8 229.8 552.8 229.8 633.2 349.4 633.2 349.4 673.2ZM511 617.2 572.2 512 630.6 512 542.6 656.4 632.6 803.2 573.6 803.2 511 696.4 448.2 803.2 389.4 803.2 479.6 656.4 391.4 512 449.8 512 511 617.2ZM720.6 762.8 852.8 762.8 852.8 803.2 670 803.2 670 512 720.6 512 720.6 762.8Z"  ></path></symbol><symbol id="icon-pdf" viewBox="0 0 1024 1024"><path d="M905.185809 178.844158C898.576738 172.685485 891.19337 165.824412 883.21687 158.436127 860.422682 137.322863 837.434925 116.207791 815.697647 96.487895 813.243072 94.261877 813.243072 94.261877 810.786411 92.037081 781.783552 65.781062 757.590948 44.376502 739.713617 29.293612 729.254178 20.469111 721.020606 13.860686 714.970549 9.501727 710.955023 6.608611 707.690543 4.524745 704.47155 2.998714 700.417679 1.07689 696.638044-0.094029 691.307277 0.005928 677.045677 0.273349 665.6 11.769337 665.6 26.182727L665.6 77.352844 665.6 128.522961 665.6 230.863194 665.6 256.448252 691.2 256.448252 896 256.448252 870.4 230.863194 870.4 998.414942 896 972.829884 230.381436 972.829884C187.90385 972.829884 153.6 938.623723 153.6 896.20663L153.6 26.182727 128 51.767786 588.8 51.767786C602.93849 51.767786 614.4 40.312965 614.4 26.182727 614.4 12.05249 602.93849 0.597669 588.8 0.597669L128 0.597669 102.4 0.597669 102.4 26.182727 102.4 896.20663C102.4 966.91021 159.652833 1024 230.381436 1024L896 1024 921.6 1024 921.6 998.414942 921.6 230.863194 921.6 205.278135 896 205.278135 691.2 205.278135 716.8 230.863194 716.8 128.522961 716.8 77.352844 716.8 26.182727C716.8 39.813762 705.748075 50.91427 692.267725 51.167041 687.705707 51.252584 685.069822 50.435995 682.52845 49.231204 682.259458 49.103682 683.344977 49.796618 685.029451 51.010252 689.779394 54.432502 697.145822 60.34494 706.686383 68.394196 724.009052 83.009121 747.816448 104.072869 776.413589 129.961594 778.850014 132.168064 778.850014 132.168064 781.285216 134.376514 802.876774 153.964212 825.739479 174.96442 848.413564 195.966437 856.350957 203.3185 863.697005 210.144893 870.269888 216.269843 874.209847 219.941299 877.019309 222.565641 878.499674 223.951409 888.81866 233.610931 905.019017 233.081212 914.684179 222.768247 924.349344 212.455283 923.819315 196.264383 913.500326 186.604861 911.981323 185.182945 909.155025 182.542876 905.185809 178.844158ZM102.4 461.128719 0 461.128719 0 896.074709 512 896.074709 1024 896.074709 1024 461.128719 153.6 461.128719 153.6 460.531049 102.4 460.531049 102.4 461.128719ZM208.2 711 208.2 819.2 157.6 819.2 157.6 528 269 528C301.533495 528 327.366571 536.466581 346.5 553.4 365.633429 570.333419 375.2 592.733195 375.2 620.6 375.2 649.133476 365.833427 671.333254 347.1 687.2 328.366573 703.066746 302.133502 711 268.4 711L208.2 711ZM208.2 670.4 269 670.4C287.00009 670.4 300.733286 666.166709 310.2 657.7 319.666714 649.233291 324.4 637.000079 324.4 621 324.4 605.266588 319.600047 592.700047 310 583.3 300.399951 573.899953 287.200083 569.066669 270.4 568.8L208.2 568.8 208.2 670.4ZM419.4 819.2 419.4 528 505.4 528C531.133461 528 553.966566 533.733276 573.9 545.2 593.833434 556.666724 609.266611 572.933229 620.2 594 631.133389 615.066771 636.6 639.199863 636.6 666.4L636.6 681C636.6 708.600139 631.100055 732.866562 620.1 753.8 609.099945 774.733438 593.433436 790.866609 573.1 802.2 552.766564 813.533391 529.466799 819.2 503.2 819.2L419.4 819.2ZM470 568.8 470 778.8 503 778.8C529.533466 778.8 549.89993 770.500083 564.1 753.9 578.30007 737.299917 585.533331 713.466822 585.8 682.4L585.8 666.2C585.8 634.599842 578.933402 610.46675 565.2 593.8 551.466598 577.13325 531.533463 568.8 505.4 568.8L470 568.8ZM854.8 695.8 737.6 695.8 737.6 819.2 687 819.2 687 528 872 528 872 568.8 737.6 568.8 737.6 655.4 854.8 655.4 854.8 695.8Z"  ></path></symbol><symbol id="icon-zip" viewBox="0 0 1024 1024"><path d="M905.185809 178.844158C898.576738 172.685485 891.19337 165.824412 883.21687 158.436127 860.422682 137.322863 837.434925 116.207791 815.697647 96.487895 813.243072 94.261877 813.243072 94.261877 810.786411 92.037081 781.783552 65.781062 757.590948 44.376502 739.713617 29.293612 729.254178 20.469111 721.020606 13.860686 714.970549 9.501727 710.955023 6.608611 707.690543 4.524745 704.47155 2.998714 700.417679 1.07689 696.638044-0.094029 691.307277 0.005928 677.045677 0.273349 665.6 11.769337 665.6 26.182727L665.6 77.352844 665.6 128.522961 665.6 230.863194 665.6 256.448252 691.2 256.448252 896 256.448252 870.4 230.863194 870.4 998.414942 896 972.829884 230.381436 972.829884C187.90385 972.829884 153.6 938.623723 153.6 896.20663L153.6 26.182727 128 51.767786 588.8 51.767786C602.93849 51.767786 614.4 40.312965 614.4 26.182727 614.4 12.05249 602.93849 0.597669 588.8 0.597669L128 0.597669 102.4 0.597669 102.4 26.182727 102.4 896.20663C102.4 966.91021 159.652833 1024 230.381436 1024L896 1024 921.6 1024 921.6 998.414942 921.6 230.863194 921.6 205.278135 896 205.278135 691.2 205.278135 716.8 230.863194 716.8 128.522961 716.8 77.352844 716.8 26.182727C716.8 39.813762 705.748075 50.91427 692.267725 51.167041 687.705707 51.252584 685.069822 50.435995 682.52845 49.231204 682.259458 49.103682 683.344977 49.796618 685.029451 51.010252 689.779394 54.432502 697.145822 60.34494 706.686383 68.394196 724.009052 83.009121 747.816448 104.072869 776.413589 129.961594 778.850014 132.168064 778.850014 132.168064 781.285216 134.376514 802.876774 153.964212 825.739479 174.96442 848.413564 195.966437 856.350957 203.3185 863.697005 210.144893 870.269888 216.269843 874.209847 219.941299 877.019309 222.565641 878.499674 223.951409 888.81866 233.610931 905.019017 233.081212 914.684179 222.768247 924.349344 212.455283 923.819315 196.264383 913.500326 186.604861 911.981323 185.182945 909.155025 182.542876 905.185809 178.844158ZM102.4 461.128719 0 461.128719 0 896.074709 512 896.074709 1024 896.074709 1024 461.128719 153.6 461.128719 153.6 460.531049 102.4 460.531049 102.4 461.128719ZM282 778.8 437.6 778.8 437.6 819.2 220.8 819.2 220.8 786.4 371.4 568.8 221.8 568.8 221.8 528 432.8 528 432.8 560 282 778.8ZM534.4 819.2 484 819.2 484 528 534.4 528 534.4 819.2ZM647.2 711 647.2 819.2 596.6 819.2 596.6 528 708 528C740.533495 528 766.366571 536.466581 785.5 553.4 804.633429 570.333419 814.2 592.733195 814.2 620.6 814.2 649.133476 804.833427 671.333254 786.1 687.2 767.366573 703.066746 741.133502 711 707.4 711L647.2 711ZM647.2 670.4 708 670.4C726.00009 670.4 739.733286 666.166709 749.2 657.7 758.666714 649.233291 763.4 637.000079 763.4 621 763.4 605.266588 758.600047 592.700047 749 583.3 739.399951 573.899953 726.200083 569.066669 709.4 568.8L647.2 568.8 647.2 670.4Z"  ></path></symbol><symbol id="icon-sorting" viewBox="0 0 1024 1024"><path d="M280.862942 274.570551 457.233498 99.774732C456.884459 100.120655 455.897694 100.817298 453.852297 101.634582 448.964578 103.587578 442.709018 103.852274 436.383616 101.196511 430.07642 98.54839 425.906586 93.926764 423.887388 89.116756 423.062084 87.150771 422.879851 86.052216 422.879851 85.679799L422.879851 956.425024C422.879851 973.127021 436.419497 986.666667 453.121495 986.666667 469.823492 986.666667 483.363138 973.127021 483.363138 956.425024L483.363138 85.679799C483.363138 45.207303 443.329783 28.399023 414.657568 56.815236L238.287012 231.611055C226.424075 243.368073 226.33821 262.515829 238.09523 274.378767 249.852247 286.241705 269.000004 286.327569 280.862942 274.570551L280.862942 274.570551Z"  ></path></symbol><symbol id="icon-copy" viewBox="0 0 1024 1024"><path d="M746.932 698.108"  ></path><path d="M925.731 288.698c-1.261-1.18-3.607-3.272-6.902-6.343-5.486-5.112-11.615-10.758-18.236-16.891-18.921-17.526-38.003-35.028-56.046-51.397-2.038-1.848-2.038-1.835-4.077-3.682-24.075-21.795-44.156-39.556-58.996-52.076-8.682-7.325-15.517-12.807-20.539-16.426-3.333-2.402-6.043-4.13-8.715-5.396-3.365-1.595-6.48-2.566-10.905-2.483C729.478 134.227 720 143.77 720 155.734l0 42.475 0 42.475 0 84.95L720 347l21.205 0L890 347l0 595L358.689 942C323.429 942 295 913.132 295 877.922L295 177l361.205 0c11.736 0 21.25-9.771 21.25-21.5s-9.514-21.5-21.25-21.5l-382.5 0L252 134l0 21.734L252 813l-52.421 0C166.646 813 140 786.928 140 754.678L140 72l566.286 0C739.29 72 766 98.154 766 130.404L766 134l40 0 0-3.596C806 76.596 761.271 33 706.286 33L119.958 33 100 33l0 19.506 0 702.172C100 808.463 144.642 852 199.579 852L252 852l0 25.922C252 936.612 299.979 984 358.689 984l552.515 0L932 984l0-21.237L932 325.635 932 304l0.433 0C932.432 299 930.196 292.878 925.731 288.698zM762 304l0-63.315L762 198.21l0-0.273c14 11.479 30.3 26.369 49.711 43.942 2.022 1.832 2.136 1.832 4.157 3.665 17.923 16.259 36.957 33.492 55.779 50.926 2.878 2.666 5.713 5.531 8.391 7.531L762 304.001z"  ></path><path d="M816.936 436 407.295 436c-10.996 0-19.91 8.727-19.91 19.5 0 10.77 8.914 19.5 19.91 19.5l409.641 0c11 0 19.914-8.73 19.914-19.5C836.85 444.727 827.936 436 816.936 436z"  ></path><path d="M816.936 553 407.295 553c-10.996 0-19.91 8.727-19.91 19.5 0 10.774 8.914 19.5 19.91 19.5l409.641 0c11 0 19.914-8.726 19.914-19.5C836.85 561.727 827.936 553 816.936 553z"  ></path><path d="M816.936 689 407.295 689c-10.996 0-19.91 8.729-19.91 19.503 0 10.769 8.914 19.497 19.91 19.497l409.641 0c11 0 19.914-8.729 19.914-19.497C836.85 697.729 827.936 689 816.936 689z"  ></path></symbol><symbol id="icon-save" viewBox="0 0 1024 1024"><path d="M665.6 332.8 665.6 128C665.6 113.86151 654.13849 102.4 640 102.4 625.86151 102.4 614.4 113.86151 614.4 128L614.4 332.8C614.4 346.93849 625.86151 358.4 640 358.4 654.13849 358.4 665.6 346.93849 665.6 332.8L665.6 332.8ZM640 51.2 819.2 51.2 793.6 25.6 793.6 384.133545C793.6 426.406699 759.102946 460.8 716.727898 460.8L281.672102 460.8C239.236715 460.8 204.8 426.413438 204.8 384.133545L204.8 25.6C204.8 11.46151 193.33849 0 179.2 0 165.06151 0 153.6 11.46151 153.6 25.6L153.6 384.133545C153.6 454.707134 210.976425 512 281.672102 512L716.727898 512C787.345461 512 844.8 454.718257 844.8 384.133545L844.8 25.6 844.8 0 819.2 0 640 0C625.86151 0 614.4 11.46151 614.4 25.6 614.4 39.73849 625.86151 51.2 640 51.2L640 51.2Z"  ></path><path d="M844.8 972.8 128.081132 972.8C85.544157 972.8 51.2 938.575806 51.2 896.163853L51.2 100.711064 51.2 25.6 25.6 51.2 102.4 51.2 896.233363 51.2C938.580175 51.2 972.8 85.414085 972.8 127.868001L972.8 998.4C972.8 1012.53849 984.26151 1024 998.4 1024 1012.53849 1024 1024 1012.53849 1024 998.4L1024 127.868001C1024 57.135182 966.85523 0 896.233363 0L102.4 0 25.6 0 0 0 0 25.6 0 100.711064 0 896.163853C0 966.892966 57.307204 1024 128.081132 1024L844.8 1024C858.93849 1024 870.4 1012.53849 870.4 998.4 870.4 984.26151 858.93849 972.8 844.8 972.8L844.8 972.8Z"  ></path></symbol><symbol id="icon-inquirytemplate" viewBox="0 0 1024 1024"><path d="M393.383795 974.048781 159.97786 974.048781C111.196085 974.048781 71.284553 932.770882 71.284553 881.485869L71.284553 24.97561 46.308943 49.951219 781.65338 49.951219C830.474699 49.951219 870.504064 91.403498 870.504064 142.743289L870.504064 490.133325C870.504064 503.926972 881.686027 515.108934 895.479676 515.108934 909.273323 515.108934 920.455285 503.926972 920.455285 490.133325L920.455285 142.743289C920.455285 64.199067 858.459947 0 781.65338 0L46.308943 0 21.333333 0 21.333333 24.97561 21.333333 881.485869C21.333333 959.988932 83.22553 1024 159.97786 1024L393.383795 1024C407.177444 1024 418.359405 1012.818039 418.359405 999.02439 418.359405 985.230741 407.177444 974.048781 393.383795 974.048781L393.383795 974.048781Z"  ></path><path d="M197.162104 374.634146 768.260691 374.634146C782.05434 374.634146 793.236301 363.452186 793.236301 349.658537 793.236301 335.864887 782.05434 324.682927 768.260691 324.682927L197.162104 324.682927C183.368455 324.682927 172.186494 335.864887 172.186494 349.658537 172.186494 363.452186 183.368455 374.634146 197.162104 374.634146L197.162104 374.634146Z"  ></path><path d="M199.955658 224.780489 771.054246 224.780489C784.847893 224.780489 796.029856 213.598526 796.029856 199.804878 796.029856 186.01123 784.847893 174.829268 771.054246 174.829268L199.955658 174.829268C186.16201 174.829268 174.980048 186.01123 174.980048 199.804878 174.980048 213.598526 186.16201 224.780489 199.955658 224.780489L199.955658 224.780489Z"  ></path><path d="M970.406505 798.458935 970.406505 999.02439 995.382114 974.048781 565.935198 974.048781C551.735753 974.048781 540.46042 963.003313 540.46042 949.570613L540.46042 603.814846 515.484811 628.790455 944.931725 628.790455C959.111287 628.790455 970.406505 639.844066 970.406505 653.168102L970.406505 684.232055C970.406505 698.025705 981.588465 709.207665 995.382114 709.207665 1009.175763 709.207665 1020.357724 698.025705 1020.357724 684.232055L1020.357724 653.168102C1020.357724 612.012141 986.459738 578.839236 944.931725 578.839236L515.484811 578.839236 490.509199 578.839236 490.509199 603.814846 490.509199 949.570613C490.509199 990.823518 524.376117 1024 565.935198 1024L995.382114 1024 1020.357724 1024 1020.357724 999.02439 1020.357724 798.458935C1020.357724 784.665289 1009.175763 773.483326 995.382114 773.483326 981.588465 773.483326 970.406505 784.665289 970.406505 798.458935L970.406505 798.458935Z"  ></path><path d="M613.935418 711.683334 768.879164 821.778995C776.680484 827.322242 786.96339 827.920196 795.354639 823.318551L1001.262532 710.40154C1013.356979 703.769114 1017.784823 688.587983 1011.152397 676.493536 1004.51997 664.399087 989.338839 659.971245 977.244393 666.603671L771.336499 779.520683 797.811974 781.060241 642.868228 670.96458C631.624053 662.975006 616.032021 665.613378 608.042447 676.857553 600.05287 688.101726 602.691245 703.693758 613.935418 711.683334L613.935418 711.683334Z"  ></path></symbol><symbol id="icon-templatedefault" viewBox="0 0 1024 1024"><path d="M468.310626 974.048781 159.97786 974.048781C111.196085 974.048781 71.284553 932.770882 71.284553 881.485869L71.284553 24.97561 46.308943 49.951219 781.65338 49.951219C830.474699 49.951219 870.504064 91.403498 870.504064 142.743289L870.504064 490.133325C870.504064 503.926972 881.686027 515.108934 895.479676 515.108934 909.273323 515.108934 920.455285 503.926972 920.455285 490.133325L920.455285 142.743289C920.455285 64.199067 858.459947 0 781.65338 0L46.308943 0 21.333333 0 21.333333 24.97561 21.333333 881.485869C21.333333 959.988932 83.22553 1024 159.97786 1024L468.310626 1024C482.104273 1024 493.286236 1012.818039 493.286236 999.02439 493.286236 985.230741 482.104273 974.048781 468.310626 974.048781L468.310626 974.048781Z"  ></path><path d="M197.162104 374.634146 768.260691 374.634146C782.05434 374.634146 793.236301 363.452186 793.236301 349.658537 793.236301 335.864887 782.05434 324.682927 768.260691 324.682927L197.162104 324.682927C183.368455 324.682927 172.186494 335.864887 172.186494 349.658537 172.186494 363.452186 183.368455 374.634146 197.162104 374.634146L197.162104 374.634146Z"  ></path><path d="M199.955658 224.780489 771.054246 224.780489C784.847893 224.780489 796.029856 213.598526 796.029856 199.804878 796.029856 186.01123 784.847893 174.829268 771.054246 174.829268L199.955658 174.829268C186.16201 174.829268 174.980048 186.01123 174.980048 199.804878 174.980048 213.598526 186.16201 224.780489 199.955658 224.780489L199.955658 224.780489Z"  ></path><path d="M770.601626 1024C908.53811 1024 1020.357724 912.180386 1020.357724 774.243902 1020.357724 636.307418 908.53811 524.487806 770.601626 524.487806 632.665141 524.487806 520.845527 636.307418 520.845527 774.243902 520.845527 912.180386 632.665141 1024 770.601626 1024L770.601626 1024ZM770.601626 974.048781C660.252439 974.048781 570.796749 884.59309 570.796749 774.243902 570.796749 663.894716 660.252439 574.439025 770.601626 574.439025 880.950814 574.439025 970.406505 663.894716 970.406505 774.243902 970.406505 884.59309 880.950814 974.048781 770.601626 974.048781L770.601626 974.048781Z"  ></path><path d="M628.063155 791.904326 698.708245 862.549417C718.235857 882.077028 749.784966 882.10759 769.3688 862.523757L914.030005 717.862551C923.783586 708.108969 923.783586 692.295287 914.030005 682.541705 904.276422 672.788124 888.462741 672.788124 878.709158 682.541705L734.047953 827.20291C733.98662 827.264243 734.064841 827.26432 734.029092 827.228572L663.384 756.583479C653.630417 746.829897 637.816736 746.829897 628.063155 756.583479 618.309572 766.337062 618.309572 782.150743 628.063155 791.904326L628.063155 791.904326Z"  ></path></symbol><symbol id="icon-libra" viewBox="0 0 1025 1024"><path d="M588.1088 490.3424c12.81024 109.23008 105.63072 193.9968 218.30144 193.9968s205.4912-84.76672 218.30144-193.9968c0 0-0.35328 0-0.3584 0 0.52224-4.92032-0.37376-10.04032-2.87744-14.73024l-189.68064-355.2256c-1.65376-6.85568-6.02112-13.02528-12.73344-16.60928-2.29888-1.2288-4.70528-1.9456-7.13728-2.42176-0.2048-0.04608-0.41472-0.0768-0.61952-0.11776-1.17248-0.19968-2.33472-0.3328-3.5072-0.36864-0.3584-0.01536-0.6912-0.11264-1.0496-0.11264l-269.2864 0 0-38.63552c0-17.3312-11.46368-31.38048-25.6-31.38048s-25.6 14.04928-25.6 31.38048l0 38.63552L216.97024 100.75648c-0.35328 0-0.68096 0.09216-1.02912 0.10752-0.31232 0.0256-0.62464 0.06144-0.93696 0.09728-5.10464 0.43008-9.72288 2.46784-13.4656 5.67296-0.04096 0.03584-0.0768 0.06656-0.11776 0.1024-0.9984 0.86528-1.92512 1.792-2.78016 2.816-0.50176 0.57344-0.95744 1.16736-1.40288 1.77664-0.31232 0.45056-0.61952 0.90112-0.90624 1.37216-1.5104 2.3808-2.6112 4.95616-3.27168 7.67488L3.3792 475.61728c-2.24256 4.20352-3.09248 8.74496-2.8928 13.184C0.4608 489.3184 0.3584 489.81504 0.3584 490.3424l-0.35328 0c12.81024 109.23008 105.63072 193.9968 218.30144 193.9968s205.4912-84.76672 218.30144-193.9968c0 0-0.35328 0-0.3584 0 0.52224-4.92032-0.37376-10.04032-2.87744-14.73024L260.54656 151.95648l225.7152 0 0 790.45632L216.97024 942.4128c-13.51168 0-24.46848 11.46368-24.46848 25.6s10.9568 25.6 24.46848 25.6l589.78304 0c13.51168 0 24.46848-11.46368 24.46848-25.6 0-14.14144-10.9568-25.6-24.4736-25.6l-269.2864 0L537.46176 151.95648l226.85184 0-172.8256 323.65568c-2.24256 4.20352-3.0976 8.74496-2.89792 13.184-0.0256 0.52224-0.128 1.01888-0.128 1.54624L588.1088 490.3424zM218.30656 633.1392c-75.19744 0-138.85952-49.22368-160.62464-117.1968l265.5488 0c11.60704 0 21.02272-11.46368 21.02272-25.6 0-14.14144-9.41056-25.6-21.02272-25.6l-256 0 151.1424-283.0592 166.17472 311.1936C371.04128 572.49792 301.7728 633.1392 218.30656 633.1392zM806.41024 633.1392c-75.19744 0-138.85952-49.22368-160.62464-117.1968l267.8016 0c11.68896 0 21.16608-11.46368 21.16608-25.6 0-14.14144-9.47712-25.6-21.16608-25.6l-258.25792 0 151.14752-283.0592 166.1696 311.19872C959.14496 572.49792 889.87648 633.1392 806.41024 633.1392z"  ></path></symbol><symbol id="icon-survey1" viewBox="0 0 1024 1024"><path d="M731.499531 47.014558C770.629127 47.014558 802.392705 78.618418 802.392705 117.545505L802.392744 446.638311 412.872048 846.262065 423.917326 846.262039 139.970966 846.262039C100.8091 846.262039 69.096657 814.801393 69.096657 775.971075L69.096655 47.014558 45.441945 47.014558 731.499531 47.014558ZM21.787234 0 21.787234 23.507279 21.787234 775.971075C21.787234 840.784929 74.69902 893.276596 139.970966 893.276596L423.917326 893.276596 433.836385 893.276596 440.788839 886.246008 842.918932 479.596694 849.702128 472.737265 849.702128 463.120003 849.702128 117.545505C849.702128 52.665733 796.770234 0 731.499531 0L45.441945 0 21.787234 0Z"  ></path><path d="M778.22803 636.420841 866.898308 725.091119 885.125447 744.577647 982.593479 646.374481 855.512968 518.560378 759.89601 618.825996 778.22803 636.420841ZM917.371009 643.055851 882.031912 678.622341 822.728724 621.430852 856.902924 584.309841 917.371009 643.055851Z"  ></path><path d="M772.341518 604.741944 515.869818 861.213644 510.878071 866.205391 509.49361 873.127701 486.177999 989.705748 479.319149 1024 513.613401 1017.14115 630.191448 993.825539 637.113758 992.441078 642.105505 987.449331 898.577205 730.977631 915.06383 714.491006 898.577205 698.00438 805.314769 604.741944 788.828143 588.255319 772.341518 604.741944 772.341518 604.741944 772.341518 604.741944ZM788.548057 654.71881 849.238319 714.613627 613.059177 948.099878 537.423434 964.538791 556.253326 886.787689 788.548057 654.71881Z"  ></path><path d="M154.380179 392.170213 695.321949 392.170213C708.387226 392.170213 718.978723 382.415735 718.978723 370.382979 718.978723 358.350223 708.387226 348.595745 695.321949 348.595745L154.380179 348.595745C141.314903 348.595745 130.723404 358.350223 130.723404 370.382979 130.723404 382.415735 141.314903 392.170213 154.380179 392.170213L154.380179 392.170213 154.380179 392.170213Z"  ></path><path d="M154.380179 239.659574 695.321949 239.659574C708.387226 239.659574 718.978723 229.905096 718.978723 217.87234 718.978723 205.839583 708.387226 196.085106 695.321949 196.085106L154.380179 196.085106C141.314903 196.085106 130.723404 205.839583 130.723404 217.87234 130.723404 229.905096 141.314903 239.659574 154.380179 239.659574L154.380179 239.659574 154.380179 239.659574Z"  ></path></symbol><symbol id="icon-ship" viewBox="0 0 1024 1024"><path d="M254.094204 888.715204 105.38434 479.399307 95.298022 505.547191 531.981478 274.863088 511.246884 274.415218 927.896762 518.087563 919.147567 491.063287 823.569182 707.765783C818.814532 718.545884 823.699125 731.13929 834.479226 735.893939 845.259328 740.648591 857.852732 735.763998 862.607381 724.983895L958.185766 508.281402C962.562163 498.358908 958.797909 486.731985 949.436572 481.257126L532.786694 237.584782C526.417653 233.85993 518.576041 233.69055 512.0521 237.136912L75.368645 467.821013C65.95003 472.796529 61.644922 483.957137 65.282327 493.968898L213.992191 903.284796C218.015472 914.35866 230.254127 920.074289 241.327993 916.051006 252.401858 912.027725 258.117485 899.789071 254.094204 888.715204L254.094204 888.715204Z"  ></path><path d="M501.333333 277.333333 501.333333 853.333333C501.333333 865.115407 510.884593 874.666667 522.666667 874.666667 534.44874 874.666667 544 865.115407 544 853.333333L544 277.333333C544 265.551259 534.44874 256 522.666667 256 510.884593 256 501.333333 265.551259 501.333333 277.333333L501.333333 277.333333Z"  ></path><path d="M234.666667 403.821225 234.666667 192 213.30699 213.333317 810.640322 214.070941 789.333333 192.737624 789.333333 426.666667C789.333333 438.44874 798.884593 448 810.666667 448 822.44874 448 832 438.44874 832 426.666667L832 192.737624C832 180.965836 822.464789 171.418844 810.693011 171.404307L213.359677 170.666683C201.567322 170.652121 192 180.207636 192 192L192 403.821225C192 415.603298 201.551259 425.154558 213.333333 425.154558 225.115408 425.154558 234.666667 415.603298 234.666667 403.821225L234.666667 403.821225Z"  ></path><path d="M50.808629 885.090656C59.57446 891.98755 74.359082 901.898603 93.457074 911.777417 125.833244 928.524631 158.87312 938.666667 191.200647 938.666667 194.159993 938.666667 197.125968 938.490381 200.101743 938.143554 215.160419 936.388463 229.750682 930.546782 246.981287 920.516474 253.290676 916.843642 259.67245 912.800755 268.51965 906.963369 270.933897 905.370447 279.678588 899.563123 279.334447 899.791241 283.686688 896.906313 287.021523 894.717329 290.313331 892.593978 349.341858 854.518165 394.110662 842.971332 458.251198 861.801203 499.945909 874.041609 531.81113 885.915846 562.013282 899.523206 564.427757 900.611029 610.274961 922.482718 622.334739 927.069694 643.349741 935.062818 663.178867 938.666667 689.241841 938.666667 716.338238 938.666665 728.977969 934.064819 791.184625 906.613628 871.129935 871.334541 915.734313 866.539106 969.593022 902.038165 979.430453 908.522161 992.661587 905.803663 999.145581 895.966229 1005.629577 886.128796 1002.911078 872.897664 993.073645 866.413668 923.841726 820.781903 865.884521 827.012905 773.958923 867.578775 719.179394 891.752448 707.512794 895.999998 689.241837 896 668.334466 896 653.646641 893.330558 637.503006 887.190274 627.363543 883.333696 583.439821 862.379616 579.539729 860.62246 547.579132 846.222844 513.877129 833.664147 470.269737 820.862236 392.284911 797.968066 335.65418 812.574345 267.185634 856.739356 203.418324 897.871874 210.013117 894.032902 195.162376 895.763757 193.807429 895.921677 192.489657 896 191.200647 896 166.730635 896 139.899367 887.76378 113.059968 873.88057 103.454075 868.911733 94.55576 863.578065 86.625828 858.262138 81.957097 855.132397 78.730138 852.769342 77.191371 851.558652 67.931764 844.273259 54.519391 845.873675 47.233998 855.133282 39.948604 864.39289 41.549021 877.805263 50.808629 885.090656L50.808629 885.090656Z"  ></path><path d="M362.666667 185.139587 362.666667 106.666667 341.333333 128 704 128 682.666667 106.666667 682.666667 192C682.666667 203.782075 692.217926 213.333333 704 213.333333 715.782074 213.333333 725.333333 203.782075 725.333333 192L725.333333 106.666667C725.333333 94.884592 715.782074 85.333333 704 85.333333L341.333333 85.333333C329.55126 85.333333 320 94.884592 320 106.666667L320 185.139587C320 196.921662 329.55126 206.47292 341.333333 206.47292 353.115407 206.47292 362.666667 196.921662 362.666667 185.139587L362.666667 185.139587Z"  ></path></symbol><symbol id="icon-bussinesscard" viewBox="0 0 1025 1024"><path d="M448 405.333333C448 334.640885 390.692448 277.333333 320 277.333333 249.307552 277.333333 192 334.640885 192 405.333333 192 476.025781 249.307552 533.333333 320 533.333333 390.692448 533.333333 448 476.025781 448 405.333333ZM243.2 405.333333C243.2 362.917865 277.584531 328.533333 320 328.533333 362.415469 328.533333 396.8 362.917865 396.8 405.333333 396.8 447.748802 362.415469 482.133333 320 482.133333 277.584531 482.133333 243.2 447.748802 243.2 405.333333Z"  ></path><path d="M130.808907 668.800009 130.808907 695.466675 156.69817 695.466675 328.38486 695.466675 519.147849 695.466675 545.037111 695.466675 545.037111 668.800009C545.037111 569.359543 449.055298 482.133342 337.923008 482.133342 331.301828 482.133342 324.715537 482.413289 318.179253 482.969794 303.929606 484.183021 293.332828 497.06503 294.510686 511.742569 295.688544 526.420105 300.838539 531.468314 315.088186 530.255087 320.205801 529.819369 332.725555 535.466675 337.923008 535.466675 421.801824 535.466675 493.258586 580.78224 493.258586 642.133342L328.38486 642.133342 182.587432 642.133342C182.587432 623.249623 202.863759 588.315287 240.911324 563.27005 252.959405 555.339264 256.484561 538.849914 248.784979 526.440051 241.085397 514.030191 225.076753 510.399181 213.028673 518.329967 160.669895 552.795721 130.808907 604.231546 130.808907 668.800009Z"  ></path><path d="M128.186836 824.380951C85.627327 824.380951 51.233488 790.647147 51.233488 748.813585L51.233488 178.285714 896.718133 178.285714C939.035972 178.285714 973.436282 212.088034 973.436282 253.608631L973.436282 747.054095C973.436282 760.940111 984.905289 772.196951 999.053026 772.196951 1013.200762 772.196951 1024.669769 760.940111 1024.669769 747.054095L1024.669769 253.608631C1024.669769 184.328784 967.344489 128 896.718133 128L25.616744 128 0 128 0 153.142857 0 748.813585C0 818.427115 57.33993 874.666667 128.186836 874.666667L912.213943 874.666667C926.361679 874.666667 937.830686 863.409826 937.830686 849.52381 937.830686 835.637792 926.361679 824.380951 912.213943 824.380951L128.186836 824.380951Z"  ></path><path d="M871.607934 405.333333C885.0793 405.333333 896 395.782074 896 384 896 372.217926 885.0793 362.666667 871.607934 362.666667L579.058733 362.666667C565.587366 362.666667 554.666667 372.217926 554.666667 384 554.666667 395.782074 565.587366 405.333333 579.058733 405.333333L871.607934 405.333333Z"  ></path><path d="M807.058613 512C820.833361 512 832 502.44874 832 490.666667 832 478.884593 820.833361 469.333333 807.058613 469.333333L579.608053 469.333333C565.833306 469.333333 554.666667 478.884593 554.666667 490.666667 554.666667 502.44874 565.833306 512 579.608053 512L807.058613 512Z"  ></path></symbol><symbol id="icon-hot" viewBox="0 0 1024 1024"><path d="M890.059904 543.80051C845.890699 437.043294 840.554889 347.504845 857.396326 277.57286 859.144623 270.313269 860.991676 264.022321 862.858846 258.574818 863.763607 255.935159 865.906573 250.340111 866.16406 249.467349L880.890349 199.551892 833.062903 220.069003C832.106692 220.4792 830.618069 221.105284 827.426684 222.449508 824.667648 223.619034 822.310677 224.645978 819.868514 225.755191 813.291441 228.742455 807.049466 231.909062 800.697749 235.587155 784.089623 245.204435 768.486253 257.343104 753.86285 272.966404 727.630498 300.992437 706.526618 338.233645 691.78157 386.286769 675.041103 440.842839 671.516484 484.53994 673.004574 548.060166 673.477918 568.265231 673.463923 573.802417 672.83965 577.675785 673.779618 571.843661 684.455526 562.321801 696.104608 566.804324 693.056849 565.631558 685.695898 556.987172 676.314007 534.631661 660.550914 497.07079 646.834249 435.829728 636.817284 346.649532 625.445924 245.411232 630.103925 161.271948 644.646978 94.661372 647.677924 80.778935 650.899934 68.917565 654.086773 59.095391 655.91465 53.461684 657.254607 49.905343 657.880284 48.445615L678.645286 0 628.243642 15.421969C617.409833 18.736913 599.94569 26.47761 578.105438 40.154777 542.547644 62.422374 507.199569 93.614964 474.400401 135.163224 447.596676 169.116772 423.611383 208.69939 403.118547 254.298381 378.907516 308.170805 363.003277 353.201056 353.158029 392.761538 349.274261 408.367415 346.433259 422.676373 344.1945 437.074844 343.334411 442.60647 342.592734 447.936766 341.804612 454.088156 341.502524 456.446003 340.356619 465.670449 340.073506 467.854496 337.596047 486.966707 335.848224 491.64663 329.235273 497.687132 336.081933 491.433152 343.232634 491.901773 346.608002 493.913244 344.852318 492.866987 341.598345 489.506349 337.991853 484.112851 327.030897 467.720774 317.980358 441.116838 313.690598 406.660405 311.250185 387.058402 310.203772 356.91373 310.370048 319.454675 310.480474 294.577862 311.113088 267.877521 312.099068 241.022112 312.481453 230.606987 312.891081 220.894534 313.30045 212.150825 313.545346 206.920081 313.735044 203.186895 313.84201 201.216597L317.55517 132.820512 271.360516 183.395861C270.467691 184.373355 268.852992 186.162958 266.618705 188.673705 262.927895 192.821195 258.823678 197.506249 254.407949 202.638531 241.78797 217.306394 229.164348 232.659575 217.341267 247.995964 211.724185 255.282197 206.411389 262.408655 201.450577 269.336162 176.017063 304.852695 156.617347 340.597472 138.122768 383.844503 90.841957 494.404188 76.97672 596.351294 99.261816 707.865107 126.80821 845.706261 188.553235 933.644222 278.8297 980.690336 344.19104 1014.752337 408.837235 1024 507.940695 1024 525.713007 1024 557.977207 1021.567138 590.857378 1016.462159 641.152493 1008.653331 687.496192 995.789323 726.063273 976.591044 738.155853 970.571488 743.07901 955.888702 737.059454 943.796122 731.039898 931.703543 716.357111 926.780384 704.264531 932.79994 670.855859 949.430419 629.092954 961.022897 583.352478 968.12457 552.984316 972.839535 523.228215 975.083275 507.940695 975.083275 416.16215 975.083275 357.934257 966.753754 301.436271 937.310746 224.830174 897.388723 171.977796 822.11577 147.230072 698.279055 126.99711 597.034048 139.514783 504.995189 183.099329 403.078716 200.282663 362.89785 218.020237 330.215642 241.22153 297.816282 245.831691 291.378441 250.802959 284.710101 256.082244 277.862039 267.31885 263.286404 279.402035 248.590513 291.488864 234.542319 298.732051 226.123757 304.338773 219.823287 307.478705 216.385594L264.997214 198.564858C264.883874 200.652555 264.688038 204.506489 264.43725 209.86312 264.020474 218.765035 263.603959 228.640719 263.215279 239.227375 262.21142 266.569788 261.566827 293.775586 261.453805 319.237542 261.278897 358.641182 262.385015 390.50582 265.148621 412.703791 276.058157 500.331917 322.627019 569.975503 362.226031 533.804382 379.341732 518.170302 384.756649 503.671477 388.584361 474.142814 397.932742 402.025286 407.332926 364.253175 447.736538 274.35034 466.587287 232.405182 488.484326 196.268782 512.795234 165.473004 542.034492 128.434251 573.156162 100.971215 604.068111 81.613016 614.696751 74.956971 624.472062 69.798572 633.124687 65.963437 638.02329 63.792212 641.258688 62.595009 642.556233 62.197984L612.91959 29.174337C608.658554 39.115516 602.686705 57.521384 596.856038 84.227201 581.186705 155.996406 576.231674 245.501015 588.206246 352.109655 607.295279 522.057739 638.819345 597.17443 678.537329 612.457766 701.302332 621.217655 717.731637 606.564331 721.133156 585.4593 722.475759 577.129001 722.489387 571.736597 721.907881 546.914509 720.532565 488.208147 723.691247 449.047827 738.546223 400.63645 751.151827 359.55562 768.544047 328.864237 789.576147 306.394033 809.230566 285.39571 821.725461 278.160284 852.347733 265.023883L842.705318 242.546443 819.246577 235.625536C822.235501 225.494436 813.450321 251.12537 809.839253 266.119881 790.647573 345.810953 796.611315 445.8865 844.8591 562.501668 883.105728 654.943983 874.587669 769.935076 824.002925 834.602871 815.680378 845.242455 817.558709 860.6143 828.198295 868.936847 838.837879 877.259392 854.209724 875.38106 862.532269 864.741476 924.762731 785.185737 934.658528 651.595637 890.059904 543.80051Z"  ></path></symbol><symbol id="icon-data" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 625.686419 1024 733.786972 986.820171 822.292028 919.295213 832.066406 911.83785 833.944717 897.868762 826.487354 888.094383 819.029988 878.320004 805.0609 876.441692 795.286522 883.899057 714.473916 945.555057 615.842022 979.478261 512 979.478261 253.818886 979.478261 44.521739 770.181114 44.521739 512 44.521739 253.818886 253.818886 44.521739 512 44.521739 770.181114 44.521739 979.478261 253.818886 979.478261 512 979.478261 599.047373 955.670714 682.541024 911.318368 755.201306 904.912864 765.695127 908.227102 779.394737 918.720924 785.800239 929.214746 792.205743 942.914355 788.891505 949.319857 778.397683 997.906701 698.800235 1024 607.290394 1024 512Z"  ></path><path d="M368.901888 475.575945 338.700849 478.186135 563.838502 653.907211 581.396516 667.61133 595.091066 650.045847 840.321161 335.498406C847.880329 325.802545 846.148198 311.814579 836.452335 304.255411 826.756474 296.696243 812.768508 298.428375 805.20934 308.124237L559.979243 622.671678 591.231806 618.810315 366.094153 443.089239 349.780358 430.356241 335.893114 445.699433 176.846524 621.420518C168.596353 630.535639 169.297534 644.61299 178.412655 652.863162 187.527777 661.113333 201.605128 660.412151 209.855299 651.29703L368.901888 475.575945Z"  ></path></symbol><symbol id="icon-trade" viewBox="0 0 1024 1024"><path d="M1024 512C1024 229.230208 794.769792 0 512 0 229.230208 0 0 229.230208 0 512 0 794.769792 229.230208 1024 512 1024 625.686419 1024 733.786972 986.820171 822.292028 919.295213 832.066406 911.83785 833.944717 897.868762 826.487354 888.094383 819.029988 878.320004 805.0609 876.441692 795.286522 883.899057 714.473916 945.555057 615.842022 979.478261 512 979.478261 253.818886 979.478261 44.521739 770.181114 44.521739 512 44.521739 253.818886 253.818886 44.521739 512 44.521739 770.181114 44.521739 979.478261 253.818886 979.478261 512 979.478261 599.047373 955.670714 682.541024 911.318368 755.201306 904.912864 765.695127 908.227102 779.394737 918.720924 785.800239 929.214746 792.205743 942.914355 788.891505 949.319857 778.397683 997.906701 698.800235 1024 607.290394 1024 512Z"  ></path><path d="M551.801933 843.859904C551.801933 843.859904 551.910146 860.977865 529.538995 860.977865 507.167844 860.977865 503.178743 843.859904 503.178743 843.859904L503.178743 766.939614C414.434338 757.374349 357.575004 715.792638 332.599034 642.193237 332.599034 642.193237 321.314219 616.817284 346.988612 607.420567 372.663008 598.023853 386.403381 621.070048 386.403381 621.070048 407.128124 677.133131 446.052855 707.555531 503.178743 712.338163L503.178743 527.410628C441.270221 512.531326 401.083426 493.135386 382.61715 469.222223 364.150874 445.309058 354.917875 418.739277 354.917875 389.512077 354.917875 312.458551 404.33767 265.695735 503.178743 249.222223L503.178743 183.461353C503.178743 183.461353 508.270528 165.816358 526.337227 165.816358 544.403925 165.816358 551.801933 183.461353 551.801933 183.461353L551.801933 249.222223C630.183966 256.130468 681.596497 291.202581 706.041062 354.439614 706.041062 354.439614 706.041062 374.760719 686.661534 380.219202 667.282005 385.677687 651.838163 371.975846 651.838163 371.975846 637.224565 328.666449 603.879488 305.285041 551.801933 301.830918L551.801933 472.410628C661.536781 492.072561 716.403381 541.492358 716.403381 620.671497 716.403381 654.681329 703.915584 686.232947 678.939614 715.327294 653.963644 744.421643 611.584841 761.625577 551.801933 766.939614L551.801933 843.859904ZM503.178743 301.830918C475.811458 303.956533 453.957811 312.326014 437.61715 326.939614 421.276489 341.553214 413.106281 360.019213 413.106281 382.338163 413.106281 426.178963 443.130135 453.811537 503.178743 465.236715L503.178743 301.830918ZM551.801933 712.338163C584.217553 711.009655 609.525271 702.108779 627.725845 685.635266 645.926419 669.161754 655.026571 649.367266 655.026571 626.251209 655.026571 577.096373 620.618701 547.736764 551.801933 538.171497L551.801933 712.338163Z"  ></path></symbol><symbol id="icon-onepage48" viewBox="0 0 1024 1024"><path d="M512 0C229.25 0 0 229.25 0 512c0 155.458333 69.25 294.658333 178.625 388.608333l-55.9375 96.833333 0 0.0625c-1.854167 2.6875-2.879167 6.016667-2.879167 9.470833 0 9.345833 7.4875 16.833333 16.704167 17.025l0.704167 0 374.783333 0c282.754167 0 512-229.25 512-512S794.754167 0 512 0zM297.216667 639.683333c-7.425 0-14.270833-3.904167-17.983333-10.304167-2.75-4.8625-3.520833-10.495833-2.05-15.870833 1.470833-5.3125 4.8625-9.729167 9.6625-12.479167l180.416667-104.191667c9.5375-5.566667 22.85-1.983333 28.2875 7.616667 2.75 4.8 3.520833 10.366667 2.1125 15.679167-1.408333 5.375-4.8625 9.854167-9.6625 12.608333l-180.416667 104.129167C304.45 638.720833 300.866667 639.683333 297.216667 639.683333zM353.408333 737.025c-7.425 0-14.270833-3.904167-17.983333-10.304167-5.695833-9.920833-2.304167-22.720833 7.616667-28.416667l180.479167-104.129167c9.5375-5.633333 22.720833-2.05 28.2875 7.55 2.816667 4.8 3.520833 10.433333 2.1125 15.808333-1.470833 5.3125-4.8625 9.791667-9.729167 12.545833l-180.354167 104.191667C360.641667 736.066667 357.058333 737.025 353.408333 737.025zM877.825 567.295833l-457.920833 264.258333c-3.1375 1.854167-6.720833 2.75-10.304167 2.75-7.425 0-14.270833-3.904167-17.983333-10.304167-2.75-4.8-3.520833-10.433333-2.1125-15.808333 1.408333-5.3125 4.8625-9.791667 9.6625-12.545833l428.545833-247.4875c6.975-4.033333 11.904167-10.433333 13.8875-18.1125 2.1125-7.679167 1.025-15.679167-2.945833-22.591667l-117.954167-204.416667c-5.375-9.216667-15.295833-14.9125-25.920833-14.9125-5.183333 0-10.366667 1.345833-14.85 3.966667L251.329167 539.520833c-9.470833 5.566667-22.85 1.983333-28.2875-7.616667-2.75-4.8-3.520833-10.366667-2.1125-15.679167 1.470833-5.3125 4.929167-9.791667 9.729167-12.545833l181.566667-105.345833c5.25-3.966667 6.85-10.945833 3.583333-16.575-0.833333-1.470833-1.920833-2.6875-3.329167-3.7125l-0.641667-0.383333-117.375-67.775c-4.545833-2.625-9.729167-3.966667-14.9125-3.966667-10.625 0-20.545833 5.695833-25.854167 14.9125l-2.558333 4.35-0.0625-0.0625-84.354167 146.241667c-5.504167 9.470833-18.75 13.054167-28.35 7.55-4.7375-2.75-8.191667-7.233333-9.6625-12.545833-1.408333-5.375-0.641667-11.008333 2.1125-15.808333l104.129167-180.416667c1.5375-2.495833 3.520833-4.670833 6.079167-6.4625 0-0.254167 0.254167-0.5125 0.575-0.833333 9.15-8.704167 21.8875-12.095833 34.175-9.216667 3.583333 0.833333 6.975 1.6625 10.175 3.454167l170.495833 98.433333 0.254167-0.320833 2.816667 1.345833c8 3.775 16.833333 3.904167 24.766667 0.320833l2.945833-1.345833 201.216667-116.158333c3.2-1.854167 6.654167-2.625 9.6-3.329167 3.454167-0.833333 6.4625-1.216667 9.345833-1.216667 9.408333 0 18.433333 3.65 25.345833 10.241667 2.625 2.495833 5.25 4.8625 7.104167 8.0625l151.745833 262.783333c1.983333 3.391667 2.6875 6.975 3.454167 10.175 2.879167 12.225-0.5125 25.025-9.0875 34.1125C883.266667 562.883333 881.025 565.379167 877.825 567.295833z"  ></path></symbol><symbol id="icon-weixin" viewBox="0 0 1024 1024"><path d="M499.057025 347.95532c27.691946 0 45.751911-18.661964 45.751911-45.751911 0-27.089947-18.661964-45.751911-45.751911-45.751911-26.487948 0-54.781893 17.457966-54.781893 45.751911C444.275132 329.895356 472.569077 347.95532 499.057025 347.95532z"  ></path><path d="M299.795414 301.601411c0-27.089947-18.661964-45.751911-45.751911-45.751911-26.487948 0-54.781893 17.457966-54.781893 45.751911 0 28.293945 28.293945 45.751911 54.781893 45.751911C281.73545 347.95532 299.795414 329.293357 299.795414 301.601411z"  ></path><path d="M1024 625.476778c0-67.423868-30.099941-132.439741-84.279835-183.007643-53.577895-49.965902-125.215755-80.667842-201.067607-87.28983 0-1.203998 0-2.407995 0-3.611993-31.905938-148.091711-190.833627-260.063492-370.229277-260.063492C164.947678 91.503821 0 232.973545 0 406.951205 0 499.659024 46.955908 583.938859 136.653733 649.556731l-30.70194 92.707819c-2.407995 7.223986 0 14.447972 5.417989 19.263962 5.417989 4.815991 13.845973 5.417989 19.865961 2.407995l116.787772-58.393886 13.845973 3.009994 0.601999 0c36.119929 7.223986 67.423868 13.845973 105.951793 13.845973 7.223986 0 34.915932-2.407995 43.945914-6.621987 44.547913 108.359788 163.74368 181.201646 297.387419 181.201646 33.711934 0 68.025867-7.825985 102.3398-16.253968l89.697825 48.761905c2.407995 1.203998 5.417989 2.407995 8.427984 2.407995 4.213992 0 8.427984-1.203998 11.437978-4.213992 6.019988-4.815991 7.825985-12.039976 6.019988-19.263962l-22.875955-75.249853C981.258083 772.364491 1024 698.318636 1024 625.476778zM864.470312 803.66843c-6.019988 4.213992-8.427984 12.039976-6.019988 18.661964l12.641975 42.741917-54.179894-29.497942c-2.407995-1.203998-5.417989-2.407995-8.427984-2.407995-1.203998 0-3.009994 0-4.213992 0.601999-31.303939 7.825985-63.811875 16.253968-95.717813 16.253968-146.285714 0-265.481481-100.533804-265.481481-223.943563 0-123.409759 119.195767-223.943563 265.481481-223.943563 143.877719 0 264.879483 102.3398 264.879483 223.943563C974.034098 687.482657 935.506173 750.692534 864.470312 803.66843zM181.803645 640.526749c2.407995-7.223986 0-15.049971-6.621987-19.865961C90.901822 561.664903 48.159906 490.027043 48.159906 407.553204 48.159906 258.859494 191.435626 137.857731 367.821282 137.857731c154.111699 0 291.96943 93.911817 322.069371 218.525573-164.345679 3.611993-297.387419 120.399765-297.387419 261.869489 0 18.661964 2.407995 37.925926 7.825985 57.189888-0.601999 0-1.805996 0-2.407995 0-9.631981 0.601999-19.865961 1.203998-30.099941 1.203998-34.313933 0-63.811875-6.019988-95.717813-12.641975l-19.263962-3.611993c-3.611993-0.601999-7.825985 0-11.437978 1.203998l-80.065844 40.333921L181.803645 640.526749z"  ></path><path d="M612.834803 509.893004c-18.661964 0-37.323927 18.661964-37.323927 37.323927 0 18.661964 18.661964 37.323927 37.323927 37.323927 28.293945 0 45.751911-19.263962 45.751911-37.323927C658.586714 529.156966 641.128748 509.893004 612.834803 509.893004z"  ></path><path d="M804.872428 509.893004c-18.661964 0-36.721928 18.661964-36.721928 37.323927 0 18.661964 18.059965 37.323927 36.721928 37.323927 28.293945 0 45.751911-19.263962 45.751911-37.323927C850.624339 529.156966 833.166373 509.893004 804.872428 509.893004z"  ></path></symbol><symbol id="icon-signboard" viewBox="0 0 1024 1024"><path d="M127.905952 837.407788c-42.886113 0-76.743571-33.857458-76.743571-75.238795V191.858927h844.931667c42.133725 0 76.743571 33.857458 76.743571 75.238795V759.91183c0 13.542983 11.285819 24.828802 25.581191 24.828802s25.58119-11.285819 25.58119-24.828802V267.097722c0-69.219691-57.181484-125.648788-127.905952-125.648787H0V761.416605c0 69.219691 57.181484 125.648788 127.905952 125.648788h783.235855c14.295371 0 25.58119-11.285819 25.581191-24.828802 0-13.542983-11.285819-24.828802-25.581191-24.828803H127.905952z"  ></path><path d="M889.322557 469.490081H134.677443V277.631154h754.645114v191.858927zM188.096988 416.070536h647.806024V331.050698H188.096988v85.019838z"  ></path></symbol><symbol id="icon-shuffling-banner" viewBox="0 0 1024 1024"><path d="M127.905952 834.398237c-42.886113 0-76.743571-33.857458-76.743571-75.238795V188.849375h844.931667c42.133725 0 76.743571 33.857458 76.743571 75.238795v492.814108c0 13.542983 11.285819 24.828802 25.581191 24.828802s25.58119-11.285819 25.58119-24.828802V264.08817c0-69.219691-57.181484-125.648788-127.905952-125.648787H0V758.407054c0 69.219691 57.181484 125.648788 127.905952 125.648787h783.235855c14.295371 0 25.58119-11.285819 25.581191-24.828802 0-13.542983-11.285819-24.828802-25.581191-24.828802H127.905952z"  ></path><path d="M564.290963 682.415871c19.562087 0 34.609846 15.800147 34.609845 34.609845 0 19.562087-15.800147 34.609846-34.609845 34.609846-19.562087 0-34.609846-15.800147-34.609846-34.609846s15.047759-34.609846 34.609846-34.609845z"  ></path><path d="M457.451874 717.778104m-34.609846 0a34.609846 34.609846 0 1 0 69.219691 0 34.609846 34.609846 0 1 0-69.219691 0Z"  ></path><path d="M351.365173 717.778104m-34.609846 0a34.609846 34.609846 0 1 0 69.219691 0 34.609846 34.609846 0 1 0-69.219691 0Z"  ></path><path d="M672.634827 682.415871c19.562087 0 34.609846 15.800147 34.609846 34.609845 0 19.562087-15.800147 34.609846-34.609846 34.609846-19.562087 0-34.609846-15.800147-34.609845-34.609846-0.752388-18.809699 15.047759-34.609846 34.609845-34.609845z"  ></path></symbol><symbol id="icon-component" viewBox="0 0 1024 1024"><path d="M632.404396 789.192674H330.830769c-16.504029 0-32.257875-6.001465-44.260806-18.004396-12.00293-12.00293-18.754579-27.006593-18.754578-44.260805l0.750183-72.767766c3.000733-13.503297 9.752381-24.756044 19.504762-31.507692 12.753114-9.752381 30.007326-9.752381 48.761904 1.500366l4.501099 2.250549 5.251282 1.500367c15.753846 7.501832 30.757509 6.751648 44.260806 1.500366 6.751648-3.000733 12.753114-6.751648 18.004396-12.00293 5.251282-5.251282 9.002198-11.252747 12.00293-18.004396 3.000733-6.751648 4.501099-13.503297 4.501099-21.755311 0-8.252015-1.500366-15.003663-4.501099-21.755312-3.000733-6.751648-6.751648-12.753114-12.00293-18.004395-6.001465-5.251282-11.252747-9.752381-18.754579-12.002931-13.503297-6.001465-28.50696-6.001465-44.260806 0.750183l-5.251282 2.25055c-5.251282 2.250549-10.502564 5.251282-15.003663 7.501831-6.751648 3.000733-13.503297 4.501099-19.504762 4.501099h-4.501099c-10.502564-0.750183-19.504762-6.751648-25.506227-15.753846-5.251282-7.501832-7.501832-16.504029-8.252014-30.007326v-65.265934c0-17.254212 6.751648-32.257875 18.754578-44.260806 12.00293-12.00293 27.756777-18.754579 44.260806-18.754579h57.01392c-3.750916-11.252747-6.001465-24.005861-6.001466-36.758974 0-16.504029 3.000733-32.257875 9.752381-46.511355 6.001465-14.25348 15.003663-27.006593 25.506228-37.509158s23.255678-18.754579 37.509157-25.506227c28.50696-12.753114 63.015385-12.753114 92.272527 0 14.25348 6.001465 27.006593 15.003663 37.509158 25.506227s18.754579 23.255678 25.506227 37.509158c6.001465 14.25348 9.752381 30.007326 9.752381 46.511355 0 12.753114-2.250549 24.756044-6.001465 36.758974h19.504762c17.254212 0 32.257875 6.751648 44.260806 18.754579 12.00293 12.00293 18.004396 27.756777 18.004395 44.260806v42.010256c26.25641-9.752381 57.013919-9.002198 83.27033 2.25055 14.25348 6.001465 26.25641 14.25348 36.758974 24.756044 10.502564 10.502564 18.754579 23.255678 24.756044 36.758974 6.001465 14.25348 9.002198 29.257143 9.002198 45.010989s-3.000733 31.507692-9.002198 45.761172c-6.001465 13.503297-14.25348 26.25641-24.756044 36.758975-10.502564 10.502564-23.255678 18.754579-36.758974 24.756044-26.25641 11.252747-57.013919 12.00293-83.27033 2.250549v36.758975c0 17.254212-6.001465 32.257875-18.004395 44.260805-12.753114 11.252747-28.50696 18.004396-45.010989 18.004396zM313.576557 662.411722v63.765567c0 4.501099 1.500366 8.252015 5.251282 12.002931 3.750916 3.750916 7.501832 5.251282 12.753113 5.251282h300.823444c5.251282 0 8.252015-1.500366 12.00293-5.251282 3.750916-3.750916 5.251282-6.751648 5.251282-12.002931V600.896703l37.509158 32.257876c6.001465 5.251282 13.503297 9.752381 21.755311 12.753113 15.753846 6.751648 35.258608 6.001465 51.762637-0.750183 9.002198-3.750916 16.504029-9.002198 22.505495-15.003663 6.751648-6.751648 12.00293-14.25348 15.753846-22.505494s5.251282-17.254212 5.251282-27.006594c0-9.752381-1.500366-18.754579-5.251282-27.006593-3.750916-9.002198-9.002198-16.504029-15.003663-22.505495-6.751648-6.751648-14.25348-11.252747-22.505495-15.003663-16.504029-6.751648-36.008791-7.501832-51.762637-0.750183-8.252015 3.000733-15.753846 7.501832-21.755311 12.753114l-37.509158 31.507692V429.104762c0-5.251282-1.500366-9.002198-5.251282-12.753114-3.750916-3.750916-6.751648-5.251282-12.00293-5.251282H525.128205l32.257876-37.509157c10.502564-12.753114 15.753846-27.006593 15.753846-44.260806 0-10.502564-2.250549-19.504762-6.001465-28.50696-3.750916-9.002198-9.002198-16.504029-15.753847-23.255677-6.751648-6.751648-14.25348-12.00293-23.255677-15.753847-17.254212-7.501832-38.259341-7.501832-55.513553 0-9.002198 3.750916-16.504029 9.002198-23.255678 15.753847-6.751648 6.751648-12.00293 14.25348-15.753846 23.255677-3.750916 9.002198-6.001465 18.004396-6.001465 28.50696 0 9.002198 1.500366 16.504029 4.501099 24.005861 3.000733 7.501832 6.751648 15.003663 12.00293 21.005128l29.257143 36.758974h-142.534799c-5.251282 0-9.002198 1.500366-12.00293 5.251282-3.750916 3.750916-5.251282 7.501832-5.251282 12.002931v63.015384c2.250549-1.500366 5.251282-2.250549 7.501831-3.750915 2.250549-0.750183 5.251282-2.250549 9.002198-3.750916 22.505495-10.502564 54.013187-10.502564 78.019048 0 12.00293 5.251282 23.255678 12.753114 32.257875 21.755311 9.002198 9.002198 16.504029 20.254945 21.755312 32.257876 5.251282 12.00293 8.252015 25.506227 8.252014 39.759707s-3.000733 27.756777-8.252014 39.759707c-5.251282 12.00293-12.753114 22.505495-21.755312 31.507692-9.002198 9.002198-20.254945 16.504029-32.257875 21.755311-24.756044 10.502564-53.263004 11.252747-80.269597-1.500366-3.750916-1.500366-8.252015-3.750916-14.25348-6.751648z"  ></path><path d="M1021.749451 513.875458c0-282.068864-228.805861-510.124542-510.124543-510.124542-282.068864 0-510.124542 228.055678-510.124542 510.124542s228.805861 510.124542 510.124542 510.124542c115.528205 0 221.304029-39.759707 307.575092-104.275458 3.750916-3.750916 6.001465-9.002198 6.001465-15.003663 0-12.753114-9.752381-22.505495-22.505494-22.505494-6.751648 0-12.00293 2.250549-16.50403 6.751648-76.518681 56.263736-171.041758 90.021978-273.066666 90.021978-255.062271 0-462.112821-207.050549-462.112821-462.112821S258.063004 54.76337 513.125275 54.76337 975.238095 261.813919 975.238095 516.87619c0 78.019048-18.004396 151.536996-52.51282 216.052748v0.750183c-0.750183 2.250549-1.500366 4.501099-1.500367 6.751648 0 12.753114 10.502564 22.505495 22.505495 22.505495 9.752381 0 18.004396-6.001465 21.005128-15.003663 35.258608-70.517216 57.013919-150.03663 57.01392-234.057143z"  ></path></symbol><symbol id="icon-component-filling" viewBox="0 0 1024 1024"><path d="M511.249268 510.873074m-510.873074 0a510.873074 510.873074 0 1 0 1021.746148 0 510.873074 510.873074 0 1 0-1021.746148 0Z"  ></path><path d="M632.957265 786.594277H330.941124c-16.528247 0-32.305209-6.010271-44.325752-18.030814-12.020543-12.020543-18.782098-27.046222-18.782098-44.325752l0.751284-72.874542c3.005136-13.523111 9.766691-24.79237 19.533382-31.553925 12.771827-9.766691 30.051357-9.766691 48.833456 1.502568l4.507703 2.253852 5.258988 1.502568c15.776963 7.512839 30.802641 6.761555 44.325752 1.502568 6.761555-3.005136 12.771827-6.761555 18.030814-12.020543 5.258988-5.258988 9.015407-11.269259 12.020543-18.030815 3.005136-6.761555 4.507704-13.523111 4.507704-21.787234 0-8.264123-1.502568-15.025679-4.507704-21.787234-3.005136-6.761555-6.761555-12.771827-12.020543-18.030814-5.258988-5.258988-11.269259-9.015407-18.030814-12.020543-13.523111-6.010271-28.548789-6.010271-44.325752 0.751284l-5.258988 2.253852c-5.258988 2.253852-10.517975 5.258988-15.025678 7.512839-6.761555 3.005136-13.523111 4.507704-19.533383 4.507704h-4.507703c-10.517975-0.751284-19.533382-6.761555-25.543654-15.776963-5.258988-7.512839-7.512839-16.528247-8.264123-30.051357v-65.361702c0-17.27953 6.761555-32.305209 18.782098-44.325752 12.020543-12.020543 27.797506-18.782098 44.325752-18.782099h57.097579c-3.75642-11.269259-6.010271-24.041086-6.010271-36.812912 0-16.528247 3.005136-32.305209 9.766691-46.579604 6.010271-14.274395 15.025679-27.046222 25.543653-37.564197s23.289802-18.782098 37.564197-25.543654c28.548789-12.771827 63.10785-12.771827 92.407924 0 14.274395 6.010271 27.046222 15.025679 37.564196 25.543654s18.782098 23.289802 25.543654 37.564197c6.010271 14.274395 9.766691 30.051357 9.766691 46.579604 0 12.771827-2.253852 24.79237-6.010271 36.812912h19.533382c17.27953 0 32.305209 6.761555 44.325752 18.782099 12.020543 12.020543 18.030814 27.797506 18.030814 44.325752v42.0719c26.294938-9.766691 57.097579-9.015407 83.392517 2.253852 14.274395 6.010271 26.294938 14.274395 36.812913 24.792369 10.517975 10.517975 18.782098 23.289802 24.792369 36.812913 6.010271 14.274395 9.015407 29.300073 9.015408 45.077036s-3.005136 31.553925-9.015408 45.82832c-6.010271 13.523111-14.274395 26.294938-24.792369 36.812913-10.517975 10.517975-23.289802 18.782098-36.812913 24.792369-26.294938 11.269259-57.097579 12.020543-83.392517 2.253852v36.812913c0 17.27953-6.010271 32.305209-18.030814 44.325752-13.523111 12.020543-29.300073 18.030814-45.82832 18.030814zM313.661594 660.378577v63.859134c0 4.507704 1.502568 8.264123 5.258987 12.020543 3.75642 3.75642 7.512839 5.258988 12.771827 5.258987h301.264857c5.258988 0 8.264123-1.502568 12.020543-5.258987 3.75642-3.75642 5.258988-6.761555 5.258988-12.020543V598.773294l37.564196 32.305209c6.010271 5.258988 13.523111 9.766691 21.787234 12.771827 15.776963 6.761555 35.310345 6.010271 51.838592-0.751284 9.015407-3.75642 16.528247-9.015407 22.538518-15.025678 6.761555-6.761555 12.020543-14.274395 15.776962-22.538518s5.258988-17.27953 5.258988-27.046222c0-9.766691-1.502568-18.782098-5.258988-27.046222-3.75642-9.015407-9.015407-16.528247-15.025678-22.538518-6.761555-6.761555-14.274395-11.269259-22.538518-15.025678-16.528247-6.761555-36.061629-7.512839-51.838592-0.751284-8.264123 3.005136-15.776963 7.512839-21.787234 12.771827l-37.564196 31.553925V426.729274c0-5.258988-1.502568-9.015407-5.258988-12.771827-3.75642-3.75642-6.761555-5.258988-12.020543-5.258988H525.523663l32.305209-37.564196c10.517975-12.771827 15.776963-27.046222 15.776962-44.325752 0-10.517975-2.253852-19.533382-6.010271-28.54879-3.75642-9.015407-9.015407-16.528247-15.776963-23.289802-6.761555-6.761555-14.274395-12.020543-23.289801-15.776962-17.27953-7.512839-38.315481-7.512839-55.595011 0-9.015407 3.75642-16.528247 9.015407-23.289802 15.776962-6.761555 6.761555-12.020543 14.274395-15.776963 23.289802-3.75642 9.015407-6.010271 18.030814-6.010271 28.54879 0 9.015407 1.502568 16.528247 4.507703 24.041085 3.005136 7.512839 6.761555 15.025679 12.020543 21.035951l29.300073 36.812912h-142.743947c-5.258988 0-9.015407 1.502568-12.020543 5.258988-3.75642 3.75642-5.258988 7.512839-5.258987 12.020543v63.10785c2.253852-1.502568 5.258988-2.253852 7.512839-3.75642 2.253852-0.751284 5.258988-2.253852 9.015407-3.756419 22.538518-10.517975 54.092443-10.517975 78.133529 0 12.020543 5.258988 23.289802 12.771827 32.305209 21.787234 9.015407 9.015407 16.528247 20.284666 21.787234 32.305209 5.258988 12.020543 8.264123 25.543654 8.264124 39.818048s-3.005136 27.797506-8.264124 39.818049c-5.258988 12.020543-12.771827 22.538518-21.787234 31.553925-9.015407 9.015407-20.284666 16.528247-32.305209 21.787234-24.79237 10.517975-53.341159 11.269259-80.38738-1.502568-3.75642-1.502568-9.015407-3.75642-14.274395-6.761555z"  ></path></symbol><symbol id="icon-color" viewBox="0 0 1026 1024"><path d="M811.984589 328.552129c-57.139501 0-101.497797 44.358297-101.497798 101.497798s44.358297 101.497797 101.497798 101.497797 101.497797-44.358297 101.497797-101.497797c0.751836-57.139501-44.358297-101.497797-101.497797-101.497798z m0 163.900147c-35.33627 0-62.402349-27.066079-62.40235-62.402349 0-35.33627 27.066079-62.402349 62.40235-62.40235 35.33627 0 62.402349 27.066079 62.402349 62.40235 0 35.33627-26.314244 62.402349-62.402349 62.402349zM211.267995 328.552129c-57.139501 0-101.497797 44.358297-101.497797 101.497798s44.358297 101.497797 101.497797 101.497797 101.497797-44.358297 101.497798-101.497797-44.358297-101.497797-101.497798-101.497798z m0 163.900147c-35.33627 0-62.402349-27.066079-62.402349-62.402349 0-35.33627 27.066079-62.402349 62.402349-62.40235 35.33627 0 62.402349 27.066079 62.40235 62.40235 0 35.33627-27.066079 62.402349-62.40235 62.402349zM750.334075 211.265786c0-57.139501-44.358297-101.497797-101.497798-101.497798s-101.497797 44.358297-101.497797 101.497798 44.358297 101.497797 101.497797 101.497797c56.387665 0 101.497797-44.358297 101.497798-101.497797z m-102.249633 62.402349c-35.33627 0-62.402349-27.066079-62.40235-62.402349 0-35.33627 27.066079-62.402349 62.40235-62.40235s62.402349 27.066079 62.402349 62.40235c0 35.33627-26.314244 62.402349-62.402349 62.402349zM375.168142 109.767988c-57.139501 0-101.497797 44.358297-101.497797 101.497798s44.358297 101.497797 101.497797 101.497797S476.665939 268.405286 476.665939 211.265786s-44.358297-101.497797-101.497797-101.497798z m0 163.900147c-35.33627 0-62.402349-27.066079-62.402349-62.402349 0-35.33627 27.066079-62.402349 62.402349-62.40235 35.33627 0 62.402349 27.066079 62.40235 62.40235 0 35.33627-27.066079 62.402349-62.40235 62.402349z"  ></path><path d="M272.166674 921.750367l62.402349 27.817915c54.883994 22.555066 115.030837 34.584435 177.433187 34.584435 35.33627 0 62.402349-27.066079 62.402349-62.40235 0-15.788546-6.014684-30.073421-15.788546-40.599119-18.044053-18.044053-27.817915-42.10279-27.817915-68.417034 0-57.139501 44.358297-101.497797 101.497797-101.497797h98.490456c139.84141 0 253.368576-113.527166 253.368575-253.368576 0-230.061674-212.017621-417.268722-472.152716-417.268722C251.115279 39.847283 39.849493 251.864905 39.849493 512c0 124.052863 43.606461 231.565345 121.797357 316.522761 3.759178 15.036711-3.007342 25.562408-16.540382 26.314243-9.022026 0.751836-18.795888-8.270191-18.795888-8.27019l-4.511014-3.759178c-4.511013-5.262849-8.270191-9.773862-12.781204-15.036711-67.665198-87.212922-109.016153-196.98091-109.016152-315.770925 0-281.938326 229.309838-511.248164 511.248164-511.248164s511.248164 205.251101 511.248165 457.116005c0 161.64464-131.571219 293.215859-293.215859 293.215859H632.295895c-35.33627 0-62.402349 27.066079-62.402349 62.40235 0 15.788546 6.014684 30.073421 15.788546 40.599119 18.044053 18.044053 27.817915 42.10279 27.817915 68.417034 0 57.139501-44.358297 101.497797-101.497797 101.497797-93.227606 0-180.440529-24.810573-255.624083-68.417034-0.751836-0.751836-17.292217-28.56975 15.788547-33.832599z"  ></path></symbol><symbol id="icon-color-filling" viewBox="0 0 1024 1024"><path d="M21.333333 512c0 270.592 219.925333 490.666667 490.304 490.666667 54.784 0 97.344-42.581333 97.344-97.408 0-25.258667-9.365333-48.341333-26.688-65.664-10.090667-10.112-15.125333-23.829333-15.125333-38.976 0-33.92 25.941333-59.882667 59.84-59.882667h94.442667C876.48 740.736 1002.666667 614.464 1002.666667 459.328 1002.666667 217.6 782.762667 21.333333 511.637333 21.333333 241.258667 21.333333 21.333333 241.408 21.333333 512z m202.666667 21.333333a53.333333 53.333333 0 1 0 0-106.666666 53.333333 53.333333 0 0 0 0 106.666666z m0 42.666667a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m149.333333-256a53.333333 53.333333 0 1 0 0-106.666667 53.333333 53.333333 0 0 0 0 106.666667z m0 42.666667a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m277.333334-42.666667a53.333333 53.333333 0 1 0 0-106.666667 53.333333 53.333333 0 0 0 0 106.666667z m0 42.666667a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m149.333333 170.666666a53.333333 53.333333 0 1 0 0-106.666666 53.333333 53.333333 0 0 0 0 106.666666z m0 42.666667a96 96 0 1 1 0-192 96 96 0 0 1 0 192z"  ></path></symbol><symbol id="icon-favorites" viewBox="0 0 1143 1024"><path d="M840.870698 8.239628c-80.634047 0-153.790512 31.672558-207.967256 83.134512a24.957023 24.957023 0 0 0-9.287442 19.33693 25.099907 25.099907 0 0 0 42.984186 17.598511l0.047628 0.023814c45.246512-43.341395 106.61507-69.989209 174.222884-69.989209 139.240186 0 252.094512 112.87814 252.094511 252.094512 0 67.631628-26.671628 128.952558-69.989209 174.246697l-451.322047 451.750698-451.560186-451.750698a251.165767 251.165767 0 0 1-70.013023-174.246697C50.080744 171.222326 162.958884 58.344186 302.19907 58.344186c66.917209 0 127.690419 26.171535 172.841674 68.72707l150.599442 150.456558a24.909395 24.909395 0 0 0 35.244651-35.244651l-149.14679-149.265861 0.119069-0.095255A301.127442 301.127442 0 0 0 302.19907 8.239628C135.263256 8.239628 0 143.550512 0 310.438698c0 81.443721 32.267907 155.314605 84.658605 209.658046l486.995348 486.828651 487.042977-487.138232A301.103628 301.103628 0 0 0 1143.069767 310.462512C1143.069767 143.526698 1007.782698 8.239628 840.870698 8.239628"  ></path></symbol><symbol id="icon-pic-filling" viewBox="0 0 1024 1024"><path d="M1024 506.453333v452.288H120.469333A120.533333 120.533333 0 0 1 0 838.208V85.333333h903.530667A120.597333 120.597333 0 0 1 1024 205.994667v225.216L691.413333 681.493333l-244.010666-152.533333-257.877334 257.92a30.122667 30.122667 0 0 0 42.602667 42.581333l224-224 237.866667 148.650667L1024 506.453333z m-798.122667-59.712a105.408 105.408 0 1 0 0-210.816 105.408 105.408 0 0 0 0 210.816z m0-60.224a45.184 45.184 0 1 0 0-90.368 45.184 45.184 0 0 0 0 90.368z"  ></path></symbol><symbol id="icon-RFQ" viewBox="0 0 1024 1024"><path d="M929.375 193.336l-4.875-1.333c-269.75-73.542-555-73.583-825 0l-4.875 1.333C38.917 208.544 0 259.461 0 317.211v389.583c0 57.75 38.917 108.667 94.625 123.875l4.875 1.333c134.958 36.792 273.708 55.167 412.542 55.167 138.75 0 277.542-18.375 412.417-55.167l4.917-1.333c11.375-3.083 18.083-14.792 15-26.167-3.083-11.333-14.583-17.958-26.167-15l-4.958 1.333c-262.417 71.583-539.917 71.583-802.5 0l-4.875-1.333c-37.208-10.167-63.208-44.167-63.208-82.708V317.211c0-38.542 26-72.542 63.208-82.708l4.875-1.333c262.5-71.583 540.042-71.583 802.542 0l4.875 1.333c37.208 10.125 63.167 44.167 63.167 82.708v389.583c0 11.792 9.542 21.333 21.333 21.333 11.792 0 21.333-9.542 21.333-21.333V317.211c-0.001-57.75-38.918-108.667-94.626-123.875z"  ></path><path d="M444.797 548.427H553.51c17 78.539 87.01 137.594 170.552 137.594 8.87 0 17.562-0.659 26.073-1.945V612.94a105.63 105.63 0 0 1-26.073 3.258c-57.823 0-104.703-46.883-104.703-104.706 0-57.846 46.88-104.732 104.703-104.732 57.849 0 104.734 46.885 104.734 104.732 0 8.992-1.141 17.708-3.286 26.044h71.135a173.161 173.161 0 0 0 1.948-26.044c0-96.245-78.281-174.526-174.531-174.526-44.833 0-85.766 17.008-116.708 44.898v-44.909H374.99v325.193L290.823 556.18c35.823-19.214 60.188-57.008 60.188-100.505v-2.326c0-64.245-52.068-116.331-116.312-116.352l-135.819-0.041V686.01h69.812V569.659h47.255l83.635 116.357h94.354v-0.005h50.859V548.427z m0-141.659h139.75c-16.818 22.349-28.396 48.849-32.901 77.664H444.797v-77.664z m-163.932 52.357c0 25.703-20.833 46.542-46.542 46.542h-65.63v-98.898h65.63c25.708 0 46.542 20.836 46.542 46.539v5.817z"  ></path><path d="M851.172 739.628V638.583h101.042l-64.297-64.299h-75.073l-75.781-75.789c-7.177-7.177-18.802-7.177-25.979 0s-7.177 18.802 0 25.979l75.786 75.792v75.06l64.302 64.302z"  ></path></symbol><symbol id="icon-RFQ-filling" viewBox="0 0 1024 1024"><path d="M0 715.259V308.741c0-50.375 33.716-94.518 82.316-107.773l5.12-1.396a1613.589 1613.589 0 0 1 849.127 0l5.12 1.396c48.6 13.255 82.316 57.398 82.316 107.773v406.518c0 50.375-33.716 94.518-82.316 107.773l-5.12 1.396a1613.589 1613.589 0 0 1-849.127 0l-5.12-1.396C33.716 809.777 0 765.634 0 715.259z"  ></path><path d="M745.619 335.403c-45.436 0-86.919 17.237-118.281 45.502v-45.511H391.854v329.558L306.559 557.56c36.304-19.472 61-57.773 61-101.852v-2.358c0-65.107-52.769-117.893-117.876-117.914l-137.641-0.042v353.741h70.748V571.222h47.889l84.759 117.917h95.626l-0.003-0.003h51.541V549.704h110.172c17.229 79.595 88.177 139.44 172.845 139.44 8.986 0 17.793-0.665 26.419-1.971v-72.09a107.037 107.037 0 0 1-26.419 3.302c-58.598 0-106.112-47.514-106.112-106.112 0-58.624 47.514-106.138 106.112-106.138 58.624 0 106.138 47.514 106.138 106.138 0 9.114-1.152 17.946-3.328 26.394h72.089a175.938 175.938 0 0 0 1.971-26.394c0.001-97.535-79.334-176.87-176.87-176.87z m-562.829 70.74h66.516c26.049 0 47.166 21.117 47.166 47.165v5.896c0 26.049-21.117 47.165-47.166 47.165H182.79V406.143z m279.812 0h141.626c-17.044 22.649-28.778 49.504-33.344 78.709H462.602v-78.709z"  ></path><path d="M911.668 575.907H835.59l-76.799-76.806c-7.273-7.273-19.055-7.273-26.328 0s-7.273 19.055 0 26.327l76.804 76.81v76.068l65.163 65.164v-102.4h102.4l-65.162-65.163z"  ></path></symbol><symbol id="icon-originalimage" viewBox="0 0 1024 1024"><path d="M988.362258 979.361919c-1.581185-4.743556-1.581185-4.743556-2.797482-6.932889-1.094667-1.946074-2.310963-3.648889-3.892149-5.716594-2.189334-2.797482-5.108445-6.324742-9.122223-10.703409-6.93289-7.784297-17.028151-18.609336-30.529042-32.475116-20.920299-21.893337-41.962228-43.300154-93.04668-95.114384-50.476304-51.327711-71.761492-72.977788-92.438532-94.627865-13.014372-13.62252-22.866374-23.961041-29.312745-31.25882-3.162371-3.648889-5.473334-6.324742-6.81126-7.905927 0.851408 1.581185 0.851408 1.581185 2.189334 5.473334 2.067704 7.297779 2.067704 7.297779-6.81126 24.082671C795.944156 646.826464 842.163422 539.914004 842.163422 425.460506c0-226.960922-180.741656-410.986578-403.810429-410.986578S34.542564 198.499584 34.542564 425.460506 215.28422 836.447084 438.352993 836.447084c4.865186 0 9.973631-0.243259 15.568595-0.608148 4.013778-0.364889 7.541038-0.608148 13.86578-1.337926 12.892743-1.337926 17.636299-1.702815 23.109633-1.702815 9.243853 0 23.961041-3.284 45.732747-9.365483 2.554223-0.729778 5.230075-1.459556 7.905927-2.189334 8.270816-2.310963 16.784891-4.865186 24.934078-7.419408 4.986816-1.581185 8.635705-2.675852 10.825038-3.405631 12.892743-4.135408 20.068892-18.122817 15.933484-31.258819-4.013778-13.136002-17.757928-20.433781-30.650671-16.298373-1.946074 0.608148-5.594964 1.824445-10.33852 3.284001-7.905927 2.432593-16.055113 4.865186-23.96104 7.176149-2.554223 0.729778-4.986816 1.459556-7.419409 2.067704-16.784891 4.621927-29.920893 7.541038-32.840005 7.541038-7.784297 0-13.257632 0.486519-28.096448 1.946075-5.959853 0.608148-9.243853 0.973037-12.649483 1.216296-4.500297 0.364889-8.392446 0.486519-11.919706 0.486519-195.945362 0-354.915311-161.767431-354.91531-361.240053S242.286002 64.098824 438.352993 64.098824s354.915311 161.767431 354.915311 361.240052c0 100.587718-40.624302 194.485806-110.926238 262.355149-9.000594 17.14978-9.000594 17.14978-6.811261 24.934078 1.581185 4.500297 1.581185 4.500297 2.797482 6.689631 1.094667 1.946074 2.310963 3.648889 3.892149 5.716593 2.189334 2.797482 5.108445 6.324742 9.122223 10.703409 6.93289 7.784297 17.028151 18.609336 30.529042 32.596746 20.920299 21.893337 42.205488 43.543414 92.92505 95.114384 50.841193 51.6926 71.761492 73.099418 92.560162 94.749495 13.014372 13.62252 22.866374 23.961041 29.312745 31.258819 3.162371 3.648889 5.473334 6.324742 6.68963 7.905927-0.973037-1.702815-0.973037-1.702815-2.310963-5.838223-2.067704-7.905927-2.067704-7.905927 7.905927-24.690818-10.33852 8.878964-11.554816 24.569189-2.919111 35.150968 8.757335 10.46015 24.2043 11.798076 34.54282 2.919111 9.852001-17.028151 9.852001-17.028151 7.784297-25.542226z"  ></path><path d="M435.677141 653.394465c127.954389 0 231.704478-103.750089 231.704478-231.704478S563.63153 189.985509 435.677141 189.985509 203.972663 293.735598 203.972663 421.689987c-0.12163 127.954389 103.628459 231.704478 231.704478 231.704478z m0-46.340896c-102.412163 0-185.363582-82.951419-185.363582-185.363582s82.951419-185.363582 185.363582-185.363582 185.363582 82.951419 185.363582 185.363582-83.073049 185.363582-185.363582 185.363582z"  ></path></symbol><symbol id="icon-logistic" viewBox="0 0 1024 1024"><path d="M723.2 0c-83.2 0-151.466667 68.266667-151.466667 151.466667 0 83.2 151.466667 296.533333 151.466667 296.533333S874.666667 236.8 874.666667 151.466667C874.666667 68.266667 806.4 0 723.2 0z m0 192c-36.266667 0-64-27.733333-64-64s27.733333-64 64-64 64 27.733333 64 64-29.866667 64-64 64z"  ></path><path d="M800 320s0 2.133333-2.133333 2.133333c2.133333 0 2.133333-2.133333 2.133333-2.133333z"  ></path><path d="M887.466667 247.466667c-6.4 14.933333-14.933333 29.866667-21.333334 44.8 6.4 8.533333 10.666667 19.2 17.066667 27.733333h-32c-8.533333 14.933333-17.066667 29.866667-25.6 42.666667h78.933333c19.2 46.933333 29.866667 96 34.133334 149.333333h-170.666667c0-19.2-2.133333-36.266667-4.266667-55.466667-2.133333 2.133333-4.266667 4.266667-4.266666 6.4L723.2 512H512v-149.333333h108.8c-8.533333-12.8-17.066667-27.733333-25.6-42.666667H512V110.933333c6.4 2.133333 12.8 2.133333 19.2 4.266667 4.266667-23.466667 10.666667-46.933333 21.333333-66.133333-21.333333-2.133333-40.533333-4.266667-61.866666-4.266667C219.733333 44.8 0 264.533333 0 533.333333c0 270.933333 219.733333 490.666667 490.666667 490.666667s490.666667-219.733333 490.666666-490.666667c-2.133333-106.666667-36.266667-204.8-93.866666-285.866666zM386.133333 100.266667c-61.866667 42.666667-113.066667 121.6-142.933333 219.733333H98.133333c59.733333-108.8 164.266667-189.866667 288-219.733333zM76.8 362.666667h155.733333c-10.666667 46.933333-17.066667 96-19.2 149.333333H42.666667c4.266667-53.333333 14.933333-102.4 34.133333-149.333333zM42.666667 554.666667h170.666666c2.133333 53.333333 8.533333 102.4 19.2 149.333333H76.8c-19.2-46.933333-29.866667-96-34.133333-149.333333z m53.333333 192h147.2c29.866667 100.266667 81.066667 179.2 142.933333 221.866666C262.4 938.666667 155.733333 857.6 96 746.666667zM469.333333 957.866667c-76.8-12.8-142.933333-96-181.333333-211.2H469.333333v211.2zM469.333333 704h-192c-10.666667-46.933333-19.2-96-19.2-149.333333h213.333334v149.333333z m0-192H256c2.133333-53.333333 8.533333-102.4 19.2-149.333333h192v149.333333z m0-192h-179.2c38.4-115.2 104.533333-196.266667 179.2-209.066667V320z m42.666667 234.666667h211.2c-2.133333 53.333333-8.533333 102.4-19.2 149.333333h-192v-149.333333z m0 192h179.2c-38.4 115.2-104.533333 198.4-179.2 211.2V746.666667z m81.066667 221.866666c61.866667-42.666667 113.066667-121.6 142.933333-221.866666h147.2c-59.733333 110.933333-164.266667 192-290.133333 221.866666zM746.666667 704c10.666667-46.933333 17.066667-96 19.2-149.333333h170.666666c-2.133333 53.333333-12.8 102.4-32 149.333333H746.666667z"  ></path><path d="M753.066667 394.666667s0 2.133333-2.133334 2.133333l2.133334-2.133333z"  ></path></symbol><symbol id="icon-Calculator" viewBox="0 0 1024 1024"><path d="M864.128 46.549333c38.698667 0 70.272 31.36 70.272 69.738667v764.522667c0 12.842667 10.496 23.253333 23.466667 23.253333 12.970667 0 23.466667-10.410667 23.466666-23.253333V116.266667C981.333333 52.245333 928.789333 0 864.128 0H42.666667v907.456C42.666667 971.861333 95.082667 1024 159.850667 1024H870.186667c12.970667 0 23.466667-10.410667 23.466666-23.253333 0-12.864-10.496-23.296-23.466666-23.296H159.850667A70.08 70.08 0 0 1 89.6 907.456V46.549333h774.528z"  ></path><path d="M197.696 170.666667h628.608v64H197.696V170.666667zM874.666667 128H149.333333v149.333333h725.333334V128zM174.08 469.333333h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333333s-11.093333-21.333333-24.746667-21.333333H174.08C160.426667 426.666667 149.333333 436.224 149.333333 448s11.093333 21.333333 24.746667 21.333333zM430.08 469.333333h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333333s-11.093333-21.333333-24.746667-21.333333h-163.84c-13.653333 0-24.746667 9.557333-24.746667 21.333333s11.093333 21.333333 24.746667 21.333333zM174.08 640h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333333s-11.093333-21.333333-24.746667-21.333334H174.08C160.426667 597.333333 149.333333 606.890667 149.333333 618.666667s11.093333 21.333333 24.746667 21.333333zM430.08 640h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333333s-11.093333-21.333333-24.746667-21.333334h-163.84c-13.653333 0-24.746667 9.557333-24.746667 21.333334s11.093333 21.333333 24.746667 21.333333zM174.08 746.666667h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333334s-11.093333-21.333333-24.746667-21.333333H174.08C160.426667 704 149.333333 713.557333 149.333333 725.333333s11.093333 21.333333 24.746667 21.333334zM430.08 746.666667h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333334s-11.093333-21.333333-24.746667-21.333333h-163.84c-13.653333 0-24.746667 9.557333-24.746667 21.333333s11.093333 21.333333 24.746667 21.333334zM174.08 874.666667h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333334s-11.093333-21.333333-24.746667-21.333333H174.08C160.426667 832 149.333333 841.557333 149.333333 853.333333s11.093333 21.333333 24.746667 21.333334zM430.08 874.666667h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333334s-11.093333-21.333333-24.746667-21.333333h-163.84c-13.653333 0-24.746667 9.557333-24.746667 21.333333s11.093333 21.333333 24.746667 21.333334zM686.08 469.333333h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333333s-11.093333-21.333333-24.746667-21.333333h-163.84c-13.653333 0-24.746667 9.557333-24.746667 21.333333s11.093333 21.333333 24.746667 21.333333zM686.08 640h163.84c13.653333 0 24.746667-9.557333 24.746667-21.333333s-11.093333-21.333333-24.746667-21.333334h-163.84c-13.653333 0-24.746667 9.557333-24.746667 21.333334s11.093333 21.333333 24.746667 21.333333zM708.736 752.746667c0-0.106667 118.464 0 118.464 0 0.085333 0 0.064 73.173333 0.064 73.173333 0 0.106667-118.464 0-118.464 0-0.085333 0-0.064-73.173333-0.064-73.173333z m-47.402667 0v73.173333C661.333333 852.906667 682.581333 874.666667 708.8 874.666667h118.4C853.610667 874.666667 874.666667 852.906667 874.666667 825.92v-73.173333C874.666667 725.76 853.418667 704 827.2 704h-118.4C682.389333 704 661.333333 725.76 661.333333 752.746667z"  ></path></symbol><symbol id="icon-video" viewBox="0 0 1024 1024"><path d="M49.770667 199.104H658.773333c19.925333 5.674667 33.493333 14.336 42.24 25.024 8.448 10.24 11.157333 20.117333 11.157334 25.066667v214.250666l262.357333-168.682666v414.826666l-262.357333-168.661333v148.096a24.896 24.896 0 1 0 49.770666 0v-62.442667l262.378667 174.186667V203.605333L761.92 372.266667v-123.093334c0-15.488-5.696-36.266667-22.464-56.661333-16-19.477333-39.573333-34.133333-71.104-42.368L665.258667 149.333333H0v608.96l0.768 3.029334c2.986667 11.669333 9.173333 27.989333 19.690667 44.629333 18.730667 29.653333 44.906667 48.725333 79.146666 49.066667h637.44a24.896 24.896 0 0 0 0-49.770667H99.84c-14.4-0.149333-26.752-9.130667-37.333333-25.877333a120.213333 120.213333 0 0 1-12.757334-27.690667V199.104z"  ></path><path d="M205.909333 324.48a46.506667 46.506667 0 1 1-92.992-0.042667 46.506667 46.506667 0 0 1 92.992 0.021334z"  ></path></symbol><symbol id="icon-earth" viewBox="0 0 1024 1024"><path d="M996.352 354.304c-88.064-267.776-376.832-412.672-644.096-325.12-267.776 88.064-413.184 376.32-325.12 644.096 88.064 267.776 376.832 412.672 644.096 325.12 109.568-36.352 197.632-107.008 259.584-195.072 2.56-4.608 3.072-10.24 1.024-16.384-4.096-12.288-16.384-18.432-28.672-14.336-6.656 2.048-10.752 6.144-13.312 11.776-55.296 77.312-134.144 139.264-231.424 171.008-155.136 51.2-318.464 15.36-436.224-80.896l23.04-155.648-90.624-84.992h-87.552c-21.504-82.432-19.968-165.888 2.048-243.2l131.584-22.016 41.472-103.936 82.944-41.472 19.456-137.728c8.192-3.072 16.384-6.144 24.576-8.704 93.696-30.72 189.952-30.208 277.504-3.584l-17.92 106.496-157.696 137.728-150.528 258.048 201.728 179.712 186.88-70.144-19.968-138.752 132.096-32.768 81.92 81.92 70.144-29.184c-1.024 9.216-2.048 17.92-4.096 27.136v0.512c0 2.56 0 4.608 0.512 6.656 4.096 12.288 16.896 17.92 28.672 14.336 9.216-3.072 15.36-11.264 15.36-20.992 12.8-77.824 8.704-159.744-17.408-239.616z m-793.6 378.368l-16.384 109.568c-46.08-46.592-82.944-103.424-107.008-168.448h58.368l65.024 58.88z m85.504-535.552l-77.824 38.912-38.912 96.768-88.064 14.848c39.936-101.888 115.712-189.44 217.6-241.664l-12.8 91.136zM834.56 469.504l-188.928 47.104 20.48 142.336-134.144 50.176-159.232-141.824 130.56-223.744 163.328-142.848 18.944-113.664c122.368 49.152 223.232 149.504 267.264 284.672 16.384 49.664 24.576 100.352 24.064 150.016l-63.488 26.624-78.848-78.848z"  ></path></symbol><symbol id="icon-task-management" viewBox="0 0 1024 1024"><path d="M37.298973 205.897502c6.293019 0 12.587044-2.297707 17.549971-7.001864L218.590269 44.346147c10.246041-9.644932 10.740421-25.8195 1.0532-36.086686-9.666077-10.246041-25.883941-10.761565-36.086686-1.031048L19.771154 161.777904c-10.267186 9.666077-10.740421 25.840645-1.052192 36.129982 5.047504 5.284122 11.834903 7.990623 18.580011 7.990623zM986.425141 205.897502a25.375465 25.375465 0 0 1-17.549971-7.001864L805.131831 44.346147c-10.246041-9.644932-10.739414-25.8195-1.052193-36.086686 9.666077-10.246041 25.883941-10.761565 36.086686-1.031048L1003.95296 161.777904c10.267186 9.666077 10.739414 25.840645 1.052192 36.129982-5.047504 5.284122-11.83591 7.990623-18.580011 7.990623zM514.029876 43.872912c-270.542411 0-489.898918 219.3555-489.898918 489.876767 0 270.672299 219.334356 489.920063 489.898918 489.920063 112.340956 0 218.926568-37.955461 305.040236-106.541309 10.310482-8.1628 12.028224-23.220735 3.779839-33.552362s-23.263025-12.029231-33.573507-3.780846c-77.650816 61.841746-173.773908 96.102954-275.225423 96.102954-244.165097 0-442.083052-197.961251-442.083052-442.1485 0-244.121801 197.89681-442.061908 442.083052-442.061907 244.187249 0 442.105204 197.940106 442.105203 442.061907 0 83.730376-23.284169 163.958812-66.588193 233.490124-6.938431 11.169353-3.523084 25.947375 7.668421 32.929102 11.190498 6.959575 25.905086 3.479788 32.90695-7.647277 47.987036-77.049707 73.827681-166.019902 73.827682-258.771949-0.021145-270.521266-219.3555-489.876767-489.941208-489.876767z"  ></path><path d="M816.4059 510.056716c-0.472228 0-0.966608 0.043296-1.459981 0.043296-0.215473 0-0.429939-0.021145-0.579964-0.021145H530.483351V226.19727c0-0.451084-0.021145-0.902167-0.06444-1.35325 0.043296-0.451084 0.064441-0.945463 0.06444-1.396547 0-14.52026-11.620437-26.269577-25.969526-26.269577-14.370234 0-25.990671 11.749318-25.990671 26.269577 0 0.451084 0.043296 0.923312 0.064441 1.374395-0.043296 0.451084-0.085585 0.902167-0.085585 1.375402v283.602691c-14.477971 0-26.227288 11.577141-26.24944 25.905085-0.021145 12.973687 9.516051 23.714108 22.038655 25.711764a12.898171 12.898171 0 0 0 4.081904 0.66555h0.085585v0.128881c0 0.579965 0.064441 1.267666 0.151032 1.782183 1.030041 13.597955 12.200401 24.316224 25.92623 24.316224 14.348083 0 25.947375-11.770462 25.969526-26.227288h283.860453c0.515524 0 0.987752 0 1.39554-0.043296h0.537675c14.52026 0.043296 26.291729-11.577141 26.356169-25.882934-0.022151-14.392385-11.728173-26.056118-26.249439-26.098407z"  ></path></symbol><symbol id="icon-trust" viewBox="0 0 1024 1024"><path d="M776.682667 93.589333l-151.701334 76.394667 36.693334 72.938667c-1.728 0.64-3.029333 1.728-4.522667 2.816-4.970667 3.882667-20.501333 14.250667-33.450667 16.618666-25.216 3.136-40.832-9.685333-62.592-2.581333-12.309333 3.029333-30.869333 14.250667-51.370666 29.354667-18.773333-10.581333-50.709333-27.2-69.056-29.568-15.573333-1.877333-42.517333 3.029333-49.642667 2.368-11.008-0.874667-25.472-9.28-31.722667-13.589334l39.488-78.336-151.488-76.394666L0 584.533333l151.722667 76.181334 188.181333-373.568c10.368 6.464 32.170667 17.898667 51.2 17.898666 16.170667 0 25.642667-5.013333 43.754667-2.773333 6.464 0.853333 21.589333 7.552 37.76 15.744a1837.546667 1837.546667 0 0 0-85.461334 75.541333c-30.549333 32.746667-31.018667 73.109333-7.552 100.736 27.328 34.005333 59.882667 25.621333 88.277334 13.866667l80.448-41.536c11.669333-6.165333 19.776-10.432 19.882666-10.261333l170.261334 147.178666c5.824 5.184 9.493333 12.074667 10.133333 19.861334 0.64 7.978667-1.728 15.530667-6.912 21.354666-18.346667 21.589333-31.722667 10.133333-31.722667 10.133334l-32.810666-25.237334-26.538667 34.090667s24.768 18.709333 32.597333 25.472c4.736 4.074667 5.184 7.765333 4.757334 10.794667-0.426667 6.037333-4.309333 13.376-10.794667 20.928-9.92 11.648-17.258667 14.890667-22.656 14.890666-4.970667 0-8.192-2.816-9.92-4.309333a7153.130667 7153.130667 0 0 0-38.848-28.48l-25.898667 34.538667 37.973334 28.266666c4.522667 4.309333 4.970667 7.765333 4.757333 11.008-0.64 5.824-4.757333 13.589333-11.221333 21.354667-6.912 7.765333-13.802667 13.162667-20.074667 14.890667-3.648 0.981333-6.656 1.322667-12.074667-2.816l-46.186666-37.546667-27.2 33.450667 44.245333 36.032c5.824 4.757333 6.250667 8.64 5.824 12.074666-0.64 6.037333-4.757333 13.589333-11.434667 21.376a29.184 29.184 0 0 1-19.648 10.133334c-7.765333 0.64-15.317333-1.941333-22.442666-7.765334l-206.4-173.909333c-9.706667-7.125333-23.082667-5.184-30.208 4.309333s-5.184 23.082667 4.309333 30.208l205.525333 173.056a71.594667 71.594667 0 0 0 46.613334 17.258667c26.325333-1.066667 41.6-11.605333 55.253333-25.258667 19.2-19.2 21.589333-47.04 21.589333-48.128 1.301333-0.426667 32.597333-14.890667 45.098667-29.568 18.261333-20.416 21.568-41.728 21.589333-48.341333 15.317333-3.242667 30.656-12.736 44.245334-28.693333 13.162667-15.530667 20.288-32.149333 21.141333-47.701334 0.853333-0.213333 26.88-7.829333 43.584-28.48 7.125333-8.426667 12.074667-18.133333 14.677333-28.693333 0.853333-0.426667 55.68-37.333333 55.68-37.333333l27.2 53.952L1024 584.533333 776.682667 93.589333zM132.501333 602.88l-74.453333-37.546667 208.256-413.909333 74.666667 37.546667L132.501333 602.88z m652.608-7.765333a72.704 72.704 0 0 0-18.56-24.384l-180.842666-156.458667a21.781333 21.781333 0 0 0-23.744-3.029333c-3.242667 1.514667-80.597333 42.069333-107.754667 57.792-14.72 8.448-32.277333 9.770667-42.453333-5.525334-9.770667-14.442667-5.482667-27.989333 4.117333-37.589333 59.562667-56.106667 135.914667-119.509333 155.370667-124.096 20.522667-5.696 32.234667 5.994667 60.202666 2.816 21.632-1.813333 42.944-18.133333 49.856-23.082667l144.149334 286.165334-40.341334 27.392zM683.029333 188.970667l74.453334-37.546667L965.952 565.333333l-74.666667 37.546667-208.256-413.909333z" fill="#4D4D4D" ></path></symbol><symbol id="icon-password" viewBox="0 0 1024 1024"><path d="M136.533568 460.565045V947.412741A25.599984 25.599984 0 0 0 162.176219 972.799392h691.114234c14.335991 0 25.642651-11.30666 25.642651-25.365317V460.586379a25.599984 25.599984 0 0 0-25.642651-25.365318H162.176219c-14.335991 0-25.642651 11.30666-25.642651 25.365318z m-51.199968 0A76.543952 76.543952 0 0 1 162.176219 383.99976h691.114234a76.799952 76.799952 0 0 1 76.842619 76.565285V947.412741A76.543952 76.543952 0 0 1 853.290453 1023.99936H162.176219A76.799952 76.799952 0 0 1 85.3336 947.434075V460.586379z"  ></path><path d="M290.133472 217.599864c0-91.733276 74.60262-166.399896 166.421229-166.399896H546.133312a166.442563 166.442563 0 0 1 166.421229 166.399896v91.519943s7.082662 17.557322 27.221317 17.557322c20.159987 0 23.978652-17.535989 23.978651-17.535989V217.599864C763.733176 97.429272 666.239904 0 546.111979 0H456.533368C336.362776 0 238.933504 97.663939 238.933504 217.599864v191.99988l51.199968-9.813327V217.599864z m0 0c0-91.733276 74.60262-166.399896 166.421229-166.399896H546.133312a166.442563 166.442563 0 0 1 166.421229 166.399896v91.519943h51.199968V217.599864C763.733176 97.429272 666.239904 0 546.111979 0H456.533368C336.362776 0 238.933504 97.663939 238.933504 217.599864v191.99988l51.199968-9.813327V217.599864zM495.829343 576.831639v241.130516a25.599984 25.599984 0 1 0 51.199968 0V576.831639a25.599984 25.599984 0 1 0-51.199968 0z"  ></path></symbol><symbol id="icon-column" viewBox="0 0 1024 1024"><path d="M307.2 908.8h51.2V115.2h-51.2v793.6z m332.8 0h51.2V115.2H640v793.6z m-512.021333 0A76.885333 76.885333 0 0 1 51.2 832.085333V89.6L25.6 115.2h870.528A76.672 76.672 0 0 1 972.8 192.192V846.506667a25.6 25.6 0 1 0 51.2 0V192.213333A127.872 127.872 0 0 0 896.128 64H25.6A25.6 25.6 0 0 0 0 89.6v742.485333A128.085333 128.085333 0 0 0 127.978667 960H896a25.6 25.6 0 1 0 0-51.2H127.978667z"  ></path></symbol><symbol id="icon-apparel" viewBox="0 0 1024 1024"><path d="M367.701333 415.04l4.074667 18.304-11.392 20.096 217.386667 3.669333a20.757333 20.757333 0 0 0 0.533333-41.536l-210.602667-0.533333z m301.056 11.136l-1.408 7.274667 3.52 6.528 299.242667 556.373333 18.282667-30.613333H35.648l18.090667 30.976 314.176-556.373334 3.946666-6.976-1.770666-7.808-87.978667-387.648-20.245333 25.344h87.978666l-17.493333-9.536c0.768 1.152 2.090667 3.2 4.010667 5.952a483.157333 483.157333 0 0 0 48.917333 60.074667c40.768 42.410667 82.197333 68.48 123.946667 69.184h3.136c42.282667-0.661333 82.944-26.944 121.92-69.589333a446.442667 446.442667 0 0 0 49.834666-66.282667l-17.877333 10.197333h98.304l-20.373333-24.725333-75.413334 387.648zM789.76 21.76H654.4l-6.037333 10.197333a405.504 405.504 0 0 1-44.736 59.392C571.669333 126.293333 539.690667 146.986667 511.701333 147.413333c-29.610667-0.469333-62.72-21.333333-96.512-56.469333a442.218667 442.218667 0 0 1-47.893333-59.669333l-6.122667-9.536h-125.312l5.76 25.344 87.957334 387.669333 2.176-14.805333L17.578667 976.32l-17.493334 30.954667H1023.146667l-16.469334-30.592-299.242666-556.373334 2.090666 13.802667 75.413334-387.648 4.8-24.746667z"  ></path></symbol><symbol id="icon-bags" viewBox="0 0 1024 1024"><path d="M311.616042 316.949267h389.909252c121.322641 0 219.519954 98.090646 219.519954 219.434621V951.039802c0 13.418664-10.815998 24.213328-24.362661 24.213328H116.458749a24.405328 24.405328 0 0 1-24.362662-24.213328V536.383888c0-121.109308 98.410646-219.434621 219.519955-219.434621zM43.328098 951.039802A73.173318 73.173318 0 0 0 116.480082 1023.999787h780.223838a72.959985 72.959985 0 0 0 73.130651-72.959985V536.362555c0-148.266636-120.042642-268.202611-268.287944-268.202611H311.616042c-148.053302 0-268.287944 120.149308-268.287944 268.202611V951.039802z m268.20261-512.17056c13.567997 0 24.383995 10.815998 24.383995 24.533328v72.853318c0 13.65333-10.837331 24.533328-24.383995 24.533329a24.277328 24.277328 0 0 1-24.383994-24.533329v-72.853318c0-13.65333 10.815998-24.533328 24.383994-24.533328z m-73.151984 97.386646a73.045318 73.045318 0 0 0 73.151984 73.279985c40.533325 0 73.130651-32.767993 73.130652-73.279985v-72.853318a73.045318 73.045318 0 0 0-73.130652-73.279985 73.087985 73.087985 0 0 0-73.151984 73.279985v72.853318z m438.869242-97.386646c13.567997 0 24.362662 10.815998 24.362661 24.533328v72.853318c0 13.65333-10.815998 24.533328-24.362661 24.533329a24.277328 24.277328 0 0 1-24.383995-24.533329v-72.853318c0-13.65333 10.815998-24.533328 24.383995-24.533328z m-73.151985 97.386646a73.045318 73.045318 0 0 0 73.151985 73.279985c40.533325 0 73.130651-32.767993 73.130651-73.279985v-72.853318a73.045318 73.045318 0 0 0-73.130651-73.279985 73.087985 73.087985 0 0 0-73.151985 73.279985v72.853318z m-268.181278-316.799934c0-94.186647 76.543984-170.666631 170.666631-170.666631 94.165314 0 170.666631 76.543984 170.666632 170.666631v195.050626h48.746656v-195.050626C725.994622 98.389313 627.690643 0 506.581334 0 385.536026 0 287.146714 98.30398 287.146714 219.434621v195.050626h48.767989v-195.050626zM762.666614 853.333156a24.383995 24.383995 0 1 0 0-48.76799H92.096087V853.333156h670.591861z"  ></path></symbol><symbol id="icon-folder" viewBox="0 0 1228 1024"><path d="M1228.544 306.304a153.6256 153.6256 0 0 0-153.6256-153.9072h-460.032l21.4272 8.7808L481.024 8.96 472.064 0.256H0.9472v863.36c0 85.248 68.6592 154.368 153.2928 154.368h906.4448c16.9472 0 30.72-13.824 30.72-30.8224 0-17.0496-13.7728-30.848-30.72-30.848H154.2144c-50.688 0-91.904-41.4976-91.904-92.672V31.0784l-30.72 30.8224h428.032l-21.4272-8.7552 155.264 152.192 8.9344 8.7552h472.5248a92.1088 92.1088 0 0 1 92.2368 92.2112V849.92c0 17.024 13.7216 30.8224 30.6688 30.8224 16.9728 0 30.72-13.7984 30.72-30.8224V306.304z m-61.3888 172.032l0.2048-61.696H62.4128v61.696h1104.7424z"  ></path></symbol><symbol id="icon-column1" viewBox="0 0 1024 1024"><path d="M127.978667 908.8A76.885333 76.885333 0 0 1 51.2 832.085333V89.6L25.6 115.2h870.528A76.672 76.672 0 0 1 972.8 192.192V846.506667a25.6 25.6 0 1 0 51.2 0V192.213333A127.872 127.872 0 0 0 896.128 64H25.6A25.6 25.6 0 0 0 0 89.6v742.485333A128.085333 128.085333 0 0 0 127.978667 960H896a25.6 25.6 0 1 0 0-51.2H127.978667z m102.421333 0h51.2V115.2h-51.2v793.6z m256 0h51.2V115.2h-51.2v793.6z m256 0h51.2V115.2h-51.2v793.6z"  ></path></symbol><symbol id="icon-code" viewBox="0 0 1024 1024"><path d="M335.168 520.416m-50.528 0a50.528 50.528 0 1 0 101.056 0 50.528 50.528 0 1 0-101.056 0Z"  ></path><path d="M537.248 520.416m-50.528 0a50.528 50.528 0 1 0 101.056 0 50.528 50.528 0 1 0-101.056 0Z"  ></path><path d="M739.36 520.416m-50.528 0a50.528 50.528 0 1 0 101.056 0 50.528 50.528 0 1 0-101.056 0Z"  ></path><path d="M548.192 823.232h-187.776a302.816 302.816 0 1 1 0-605.632h303.168a302.816 302.816 0 0 1 302.816 302.816v3.712a299.104 299.104 0 0 1-299.104 299.104 25.6 25.6 0 1 0 0 51.2c193.472 0 350.304-156.8 350.304-350.304v-3.712C1017.6 324.896 859.104 166.4 663.584 166.4h-303.168C164.896 166.4 6.4 324.896 6.4 520.416s158.496 354.016 354.016 354.016h187.776a25.6 25.6 0 1 0 0-51.2z"  ></path></symbol><symbol id="icon-RFQ-filling1" viewBox="0 0 1416 1024"><path d="M0 793.266508V230.733492c0-69.708108 46.655654-130.792476 113.907546-149.13453l7.084973-1.931762a2232.858292 2232.858292 0 0 1 1175.008173 0l7.084973 1.931762c67.251892 18.342054 113.907546 79.426422 113.907546 149.13453v562.533016c0 69.708108-46.655654 130.792476-113.907546 149.13453l-7.084973 1.931762a2232.858292 2232.858292 0 0 1-1175.008173 0l-7.084973-1.931762C46.655654 924.058984 0 862.974616 0 793.266508z m1031.775481-525.638573c-62.8736 0-120.277103 23.852281-163.67533 62.96493v-62.977384H542.241211v456.037016L424.211373 575.045189c50.236886-26.945038 84.410811-79.945341 84.410811-140.941146v-3.262962c0-90.094011-73.020886-163.138422-163.114898-163.167481l-190.465383-0.058119v489.50106h97.899935V593.950443h66.268021l117.28813 163.171633h132.325708l-0.004151-0.004152h71.3216V564.174184h152.454227c23.841211 110.14227 122.017903 192.954811 239.180108 192.954811 12.434681 0 24.621665-0.920216 36.558184-2.727438v-99.756973a148.116065 148.116065 0 0 1-36.558184 4.569254c-81.086962 0-146.836065-65.749103-146.836065-146.836065 0-81.122941 65.749103-146.872043 146.836065-146.872043 81.122941 0 146.872043 65.749103 146.872043 146.872043 0 12.611805-1.594119 24.833384-4.605232 36.523589h99.755589a243.460151 243.460151 0 0 0 2.727438-36.523589c0.001384-134.967351-109.781103-244.749838-244.749838-244.749838z m229.775914 332.805535H1156.275892l-106.273211-106.282897c-10.064259-10.064259-26.368-10.064259-36.432259 0s-10.064259 26.368 0 36.430876l106.280129 106.288432v105.261665l90.171503 90.172886v-141.699459h141.69946l-90.170119-90.171503z"  ></path><path d="M252.941838 365.5168h92.043762c36.046184 0 65.267546 29.221362 65.267546 65.266162v8.158789c0 36.046184-29.221362 65.266162-65.267546 65.266163H252.941838V365.5168zM640.141146 365.5168h195.979762c-23.585211 31.341319-39.82253 68.502832-46.140886 108.916238H640.141146v-108.916238z"  ></path></symbol><symbol id="icon-customs-clearance" viewBox="0 0 1024 1024"><path d="M504.128 943.264l-1.968 1.968c-84.688-88.624-141.792-179.2-173.296-273.728h126.032c3.936-13.776 7.872-27.568 13.776-39.376h-151.632c-9.84-43.328-15.744-88.624-15.744-133.92 1.968-45.28 7.872-86.64 17.712-128h362.352c5.904 25.6 11.808 51.2 13.776 76.8 11.824-1.968 25.6-3.936 39.392-3.936-1.968-25.6-7.888-49.232-13.792-72.864h210.72c11.808 41.36 19.68 84.688 19.68 129.984v9.84c13.792 9.84 25.6 23.632 37.424 35.44 1.968-15.744 1.968-29.536 1.968-45.28 0-55.152-9.856-108.32-25.6-157.552v-1.968C901.904 149.664 718.768 9.84 502.16 9.84c-216.624 0-399.76 139.824-466.72 332.8v1.968c-15.744 49.232-25.6 102.4-25.6 157.552 0 55.136 9.856 108.304 25.6 157.536v1.968c66.96 192.976 250.096 332.8 466.72 332.8 15.744 0 31.504 0 45.28-1.968a516.32 516.32 0 0 1-43.312-49.232zM921.6 332.8H712.864c-41.36-129.968-118.16-230.4-161.472-279.632 167.376 17.728 309.168 128 370.208 279.632z m-250.08 0H332.8c47.264-139.808 135.872-240.24 169.36-273.728 33.472 33.488 122.08 133.92 169.344 273.728zM452.912 51.2c-45.296 51.2-122.096 149.664-161.488 279.632H82.72C143.76 181.168 285.536 70.88 452.928 51.2zM49.232 502.16c0-45.296 5.92-88.624 19.68-129.968h210.72c-9.84 39.376-15.76 82.704-17.728 126.016-1.968 45.296 3.936 90.592 13.792 135.888H68.928c-13.792-43.328-19.696-86.656-19.696-131.936z m33.472 169.344h204.8C317.04 768 372.192 862.528 454.896 951.136c-169.36-15.744-311.136-128-372.192-279.632z" fill="#666666" ></path><path d="M758.16 502.16c-141.792 0-256 114.208-256 256 0 141.776 114.208 256 256 256 141.776 0 256-114.224 256-256 0-141.792-114.224-256-256-256z m0 472.608a216 216 0 0 1-216.624-216.608 216 216 0 0 1 216.624-216.624 216 216 0 0 1 216.608 216.624 216 216 0 0 1-216.608 216.608z" fill="#666666" ></path><path d="M917.664 754.208a15.04 15.04 0 0 0-3.936-9.84V742.4L807.392 640a19.04 19.04 0 0 0-27.584 0 19.04 19.04 0 0 0 0 27.568l68.928 68.928H602.592c-11.824 0-19.696 7.872-19.696 19.68 0 11.824 7.872 19.696 19.68 19.696H850.72l-70.88 70.896c-3.952 3.936-5.92 7.872-5.92 13.792 0 5.904 1.968 9.84 5.92 13.776 3.936 3.936 7.872 5.92 13.776 5.92 5.92 0 9.84-1.984 13.792-5.92l102.4-104.368c3.936-3.936 5.904-7.872 5.904-11.808 1.968 0 1.968-1.968 1.968-3.952z" fill="#666666" ></path></symbol><symbol id="icon-good-filling" viewBox="0 0 1024 1024"><path d="M224.16 391.36v610.08H93.44C41.92 1001.44 0 960 0 909.28V483.36c0-50.72 41.92-92 93.44-92h130.72zM1006.08 573.44c-3.84 6.72-7.52 12.64-10.88 18.08-16.16 26.72-22.4 36.8-20.32 69.92 0.48 10.08 1.92 20.32 3.36 30.4 5.28 39.36 12 88.16-26.24 133.76-25.92 31.36-29.44 48.8-31.84 60.48-1.12 5.44-2.24 11.2-5.12 16.96-32.16 63.68-90.56 98.4-165.28 98.4H272.16V391.36h27.52c29.28 0 94.24-61.44 157.76-149.28 24.16-33.28 24.16-41.12 24.16-101.92C481.6 61.6 533.92 0 600.64 0c60.32 0 130.56 34.56 130.56 131.68 0 58.88-17.6 168.48-26.72 220.96 34.88-0.8 94.4-1.92 148.48-1.92 63.84 0 120.16 30.72 150.56 82.4 26.4 44.96 27.36 97.44 2.56 140.32z"  ></path></symbol><symbol id="icon-camera" viewBox="0 0 1024 1024"><path d="M917.333333 759.466667a21.333333 21.333333 0 0 0 21.333334-21.333334V328.085333a104.384 104.384 0 0 0-104.256-104.256h-114.282667l-52.821333-106.666666H349.226667l-55.914667 106.666666H85.333333v563.648a104.362667 104.362667 0 0 0 104.234667 104.234667H917.333333a21.333333 21.333333 0 1 0 0-42.666667H189.568A61.653333 61.653333 0 0 1 128 787.477333v-520.96h191.146667l55.914666-106.666666H640.853333l52.821334 106.666666h140.757333a61.653333 61.653333 0 0 1 61.589333 61.589334V738.133333a21.290667 21.290667 0 0 0 21.312 21.333334z"  ></path><path d="M637.589333 369.408A211.669333 211.669333 0 0 0 512 328.533333c-117.632 0-213.333333 95.701333-213.333333 213.333334s95.701333 213.333333 213.333333 213.333333 213.333333-95.701333 213.333333-213.333333a214.186667 214.186667 0 0 0-87.744-172.458667zM512 712.533333c-94.101333 0-170.666667-76.565333-170.666667-170.666666s76.565333-170.666667 170.666667-170.666667c36.416 0 71.146667 11.285333 100.437333 32.661333A171.370667 171.370667 0 0 1 682.666667 541.866667c0 94.101333-76.565333 170.666667-170.666667 170.666666z"  ></path></symbol><symbol id="icon-pin-fill" viewBox="0 0 1025 1024"><path d="M320 839.68l-238.592 174.08c-8.704 6.656-19.456 9.728-29.696 9.728-12.8 0-26.112-5.12-35.84-14.848-17.92-17.92-20.48-46.08-5.12-66.56l212.992-288.256L56.32 487.424C39.936 471.04 36.864 445.44 48.128 425.472c8.192-12.8 76.8-112.64 229.376-75.264 2.56 0.512 5.12 0.512 8.192 1.024 6.144 0.512 13.312 1.024 20.992 2.56 32.256 5.12 89.6-20.48 139.264-62.976 47.616-40.448 78.336-87.552 78.336-120.32 0-7.68 0-15.872-0.512-23.552-1.024-30.72-3.072-77.824 31.744-112.64 41.472-41.472 107.52-45.056 153.088-7.68 1.024 0.512 1.536 1.536 2.56 2.56 24.576 24.064 276.48 275.968 279.04 278.528 21.504 21.504 33.792 50.688 33.792 81.408s-11.776 59.392-33.792 80.896c-34.816 34.816-82.432 33.28-113.664 31.744-7.168 0-15.36-0.512-23.04-0.512-30.72 0-67.584 21.504-103.936 60.928-50.688 55.296-81.92 126.464-79.36 158.72 1.024 10.24 3.072 28.16 3.584 30.72 36.864 149.504-62.976 217.6-74.752 225.28-20.48 12.288-46.592 9.216-62.976-7.168l-165.376-165.376-50.688 35.328z"  ></path></symbol><symbol id="icon-help-fill" viewBox="0 0 1024 1024"><path d="M1024 512c0 282.624-229.376 512-512 512S0 794.624 0 512 229.376 0 512 0s512 229.376 512 512z m-510.464 209.408c-23.552 0-43.008 19.456-43.008 43.008v9.728c0 23.552 19.456 42.496 43.008 42.496 23.552 0 43.008-18.944 43.008-42.496v-9.728c0-23.552-19.456-43.008-43.008-43.008z m10.24-481.792c-56.32-1.024-99.84 13.312-129.536 42.496-32.256 31.744-48.64 81.408-48.64 147.456v0.512c1.024 10.752 10.752 30.72 37.376 30.72 26.624 0 35.328-20.48 35.84-31.232-1.024-40.96 8.192-71.168 27.136-89.6 17.92-17.408 45.568-25.6 81.92-23.552 49.664 5.632 74.752 32.768 76.8 82.944-3.584 22.528-23.04 52.224-57.344 88.576C500.224 536.576 476.16 580.608 476.16 619.52v39.424c1.536 9.728 10.752 27.648 35.328 27.648 24.064 0 33.792-17.92 35.328-27.648v-27.648c0-29.696 22.016-66.56 66.048-108.544 48.128-44.032 72.192-85.504 72.192-123.392-4.608-101.888-58.368-155.648-161.28-159.744z"  ></path></symbol><symbol id="icon-add-account" viewBox="0 0 1024 1024"><path d="M524.8 21.504C361.984 21.504 230.4 153.6 230.4 316.928c0 111.616 61.952 209.408 153.088 259.584C166.912 628.224 0 804.352 0 998.4c0 0 0 25.6 26.624 25.6s24.576-25.6 24.576-25.6c0-200.704 212.48-385.536 460.8-385.536h12.8c162.816 0 294.4-132.608 294.4-295.936S687.616 21.504 524.8 21.504z m0 539.648C390.656 561.152 281.6 452.096 281.6 316.928c0-134.656 109.056-244.224 243.2-244.224S768 182.272 768 316.928c0 135.168-109.056 244.224-243.2 244.224zM1024.512 809.984c0 13.312-10.752 24.576-24.576 24.576h-163.84v163.84c0 13.312-10.752 24.576-24.576 24.576s-24.576-11.264-24.576-24.576v-163.84h-163.84c-13.312 0-24.576-11.264-24.576-24.576 0-13.312 11.264-24.576 24.576-24.576h163.84v-163.84c0-13.312 11.264-24.576 24.576-24.576s24.576 11.264 24.576 24.576v163.84h163.84c13.824 0 24.576 11.264 24.576 24.576z"  ></path></symbol><symbol id="icon-listing-content" viewBox="0 0 1030 1024"><path d="M366.954667 281.578667c0-55.936-44.778667-101.269333-100.010667-101.269334-55.232 0-100.010667 45.333333-100.010667 101.269334s44.778667 101.269333 100.010667 101.269333c55.232 0 100.010667-45.333333 100.010667-101.269333z m-142.869334 0c0-23.978667 19.2-43.392 42.858667-43.392 23.68 0 42.858667 19.434667 42.858667 43.392s-19.2 43.392-42.858667 43.392c-23.68 0.021333-42.858667-19.413333-42.858667-43.392zM847.914667 706.112l-107.285334-102.485333a19.306667 19.306667 0 0 0-27.818666 0 19.008 19.008 0 0 0-5.952 13.802666l0.021333 206.954667c0 5.909333 1.984 9.856 5.973333 13.781333a18.069333 18.069333 0 0 0 13.909334 5.930667c5.973333 0 9.92-1.984 13.909333-5.930667l103.317333-104.469333c3.968-3.946667 5.952-7.872 5.952-11.818667 1.984 0 1.984-1.962667 1.984-3.946666a15.061333 15.061333 0 0 0-3.989333-9.856v-1.962667z"  ></path><path d="M948.928 525.76l59.925333-48.96 11.776-8.661333V193.194667c0-79.978667-63.978667-144.853333-142.869333-144.853334H0v752.192c0 79.914667 63.978667 144.725333 142.869333 144.725334h329.792a28.928 28.928 0 1 0 0-57.856H142.869333c-47.317333 0-85.738667-38.890667-85.738666-86.848V106.197333h820.608c47.317333 0 85.717333 38.954667 85.717333 86.976v245.482667l-60.053333 48.341333a272.298667 272.298667 0 0 0-153.237334-47.018666c-90.282667 0-170.453333 43.946667-220.373333 111.530666l-57.493333-35.861333-19.264-12.181333-16.064 16.277333-228.586667 231.466667a29.184 29.184 0 0 0 0 40.917333c11.157333 11.306667 29.248 11.306667 40.405333 0l212.522667-215.189333 39.296 24.469333a271.978667 271.978667 0 0 0-24.234667 112.405333c0 150.976 122.837333 273.813333 273.813334 273.813334S1024 864.789333 1024 713.792c0-72.768-28.608-138.944-75.072-188.032z m-198.741333 405.674667c-120 0-217.642667-97.642667-217.642667-217.642667s97.642667-217.642667 217.642667-217.642667 217.642667 97.621333 217.642666 217.642667-97.642667 217.642667-217.642666 217.642667z"  ></path></symbol><symbol id="icon-warehouse-delivery" viewBox="0 0 1024 1024"><path d="M814.420577 649.150377h-161.17293a29.610593 29.610593 0 0 1-29.589259-29.589259v-161.172931c0-16.319959 13.2693-29.589259 29.589259-29.589259h161.17293c16.319959 0 29.589259 13.2693 29.58926 29.589259v161.172931c0 16.298626-13.2693 29.589259-29.58926 29.589259z m-145.578302-45.183887h129.983675v-129.983675h-129.983675v129.983675zM814.420577 903.464408h-161.17293a29.610593 29.610593 0 0 1-29.589259-29.589259v-161.172931c0-16.319959 13.2693-29.589259 29.589259-29.589259h161.17293c16.319959 0 29.589259 13.2693 29.58926 29.589259v161.172931c0 16.319959-13.2693 29.589259-29.58926 29.589259z m-145.578302-45.183887h129.983675v-129.983675h-129.983675v129.983675zM560.618545 903.464408h-161.17293a29.610593 29.610593 0 0 1-29.58926-29.589259v-161.172931c0-16.319959 13.2693-29.589259 29.58926-29.589259h161.17293c16.319959 0 29.589259 13.2693 29.589259 29.589259v161.172931c0 16.319959-13.2693 29.589259-29.589259 29.589259z m-145.578303-45.183887h129.983675v-129.983675h-129.983675v129.983675z"  ></path><path d="M948.03091 323.135192v-0.234666h-0.319999L519.530648 5.589319a27.946597 27.946597 0 0 0-33.514583 0L1.686609 378.196388l34.069248 44.138556 43.007893-32.938584v558.057271A76.458476 76.458476 0 0 0 155.862224 1023.99744h715.624877a76.565142 76.565142 0 0 0 76.543809-76.543809l-0.085333-454.548197a27.925264 27.925264 0 1 0-55.850527 0v115.903711c0 0.319999 0.085333 0.597332 0.085333 0.917331v337.727155a20.693282 20.693282 0 0 1-21.226614 20.117283H155.862224a20.671948 20.671948 0 0 1-21.226614-20.117283V346.644467L502.784023 64.810505l361.983095 265.791335v-0.405332l100.501082 73.386483v0.810665l25.215937 18.517287 31.850587-44.693222-74.303814-55.082529z"  ></path></symbol><symbol id="icon-customization" viewBox="0 0 1024 1024"><path d="M845.162667 368.597333l-200-201.642666a25.728 25.728 0 0 0-18.56-7.786667c-6.912 0-13.674667 2.88-18.56 7.786667L217.109333 561.109333a26.197333 26.197333 0 0 0-7.744 18.709334c0 6.954667 2.858667 13.802667 7.744 18.709333l200.106667 201.642667c4.885333 5.034667 11.541333 7.786667 18.56 7.786666 6.912 0 13.674667-2.88 18.56-7.786666l390.826667-394.026667c10.24-10.432 10.24-27.221333 0-37.546667zM435.669333 743.786667l-162.752-164.074667 353.706667-356.608 162.752 164.096-353.706667 356.586667zM184.512 628.288a26.282667 26.282667 0 0 0-37.226667 0l-29.738666 29.866667a27.221333 27.221333 0 0 0-6.656 11.157333L27.114667 950.954667c-2.730667 9.365333-0.362667 19.306667 6.421333 26.282666 4.992 5.162667 11.776 7.914667 18.794667 7.914667 2.368 0 4.757333-0.234667 7.018666-0.96L343.466667 903.936c4.394667-1.322667 8.341333-3.605333 11.541333-6.826667l29.397333-29.632c10.24-10.432 10.24-27.221333 0-37.546666l-199.893333-201.642667z m138.133333 226.453333L91.242667 920.128l68.16-229.098667 6.421333-6.485333 162.752 164.202667-5.930667 5.994666zM873.237333 339.093333c4.885333 5.034667 11.541333 7.786667 18.56 7.786667 6.890667 0 13.674667-2.752 18.56-7.786667l56.874667-57.322666c20.949333-21.12 42.24-46.890667 42.24-79.04 0-32.149333-21.290667-57.941333-42.24-79.04l-80.426667-81.088C865.877333 21.461333 840.298667 0 808.405333 0 776.533333 0 750.933333 21.461333 730.005333 42.581333l-56.874666 57.450667a26.794667 26.794667 0 0 0 0 37.546667l200.106666 201.514666zM767.36 80.128c18.090667-18.112 31.530667-26.986667 41.173333-26.986667s23.082667 8.746667 41.173334 26.986667l80.426666 81.088c17.962667 18.24 26.773333 31.786667 26.773334 41.493333 0 9.706667-8.682667 23.274667-26.773334 41.493334l-38.314666 38.634666-162.752-164.096 38.293333-38.613333zM985.450667 654.314667l-142.293334-143.573334a23.424 23.424 0 0 0-17.493333-7.786666c-12.970667 0-23.552 10.666667-23.552 23.744 0 6.954667 2.965333 13.312 7.850667 17.621333l132.650666 133.738667c46.037333 46.421333 46.037333 74.133333 0 120.554666l-157.056 158.208-50.090666-50.496 66.624-67.178666c4.288-4.309333 7.018667-10.304 7.018666-16.917334a23.68 23.68 0 0 0-23.552-23.744c-6.549333 0-12.373333 2.645333-16.661333 6.954667l-66.752 67.285333 25.365333 25.578667-58.666666-59.157333 83.285333-83.968c4.288-4.309333 6.890667-10.197333 6.890667-16.789334a23.68 23.68 0 0 0-23.552-23.744c-6.549333 0-12.373333 2.645333-16.661334 6.954667l-83.285333 83.968-42.944-43.306667a23.36 23.36 0 0 0-16.896-7.189333c-12.970667 0-23.552 10.666667-23.552 23.744 0 6.592 2.624 12.48 6.890667 16.789333l193.088 194.794667L785.450667 1024l200-201.642667a119.488 119.488 0 0 0 0-168.042666zM229.717333 461.312c12.970667 0 23.552-10.666667 23.552-23.744 0-6.485333-2.624-12.352-6.784-16.682667l-25.941333-26.154666 82.794667-83.477334a23.808 23.808 0 0 0-16.170667-41.024c-6.549333 0-12.373333 2.645333-16.661333 6.954667L187.242667 361.173333l-33.301334-33.578666L203.797333 277.333333c4.394667-4.330667 7.018667-10.325333 7.018667-16.917333a23.68 23.68 0 0 0-23.552-23.744c-6.549333 0-12.48 2.752-16.768 7.082667l-49.856 50.261333-49.962667-50.368 156.928-158.208c46.037333-46.421333 73.536-46.421333 119.573334 0l116.117333 117.056 0.106667-0.128c4.288 4.202667 10.112 6.826667 16.533333 6.826667a23.701333 23.701333 0 0 0 14.4-42.453334l-123.733333-124.736a117.141333 117.141333 0 0 0-166.677334 0L4.053333 243.52l208.32 210.026667c4.266667 4.778667 10.453333 7.765333 17.344 7.765333z"  ></path></symbol><symbol id="icon-inspection" viewBox="0 0 1024 1024"><path d="M973.482667 230.4c0-12.8-6.421333-19.2-19.221334-25.6L524.821333 0h-25.642666L69.738667 204.8c-6.421333 6.4-12.821333 12.8-19.242667 25.6-6.4 57.6-12.821333 166.4 12.821333 294.4 51.285333 236.8 198.698667 403.2 435.84 499.2H524.8c70.506667-32 134.592-64 192.277333-108.8 12.821333-12.8 19.221333-32 6.4-44.8-12.821333-12.8-32.042667-19.2-44.864-6.4-51.242667 38.4-102.528 70.4-166.613333 96-205.098667-89.6-339.712-236.8-384.576-448-25.642667-108.8-19.221333-198.4-12.821333-256L512 70.4 909.397333 256c6.4 57.6 12.821333 153.6-12.821333 256-6.4 38.4-19.221333 76.8-38.464 115.2-6.421333 19.2 0 32 19.221333 44.8 19.221333 6.4 32.042667 0 44.864-19.2 19.221333-38.4 32.042667-83.2 38.464-121.6 25.642667-134.4 19.221333-243.2 12.821334-300.8z"  ></path><path d="M691.456 633.6c57.685333-83.2 51.285333-198.4-19.221333-268.8-83.328-83.2-211.52-83.2-294.826667 0-83.328 83.2-83.328 211.2 0 294.4 38.464 38.4 96.149333 64 147.413333 64 44.864 0 83.328-12.8 121.770667-38.4l128.192 128c6.4 6.4 12.821333 6.4 25.642667 6.4s19.221333 0 25.642666-6.4c12.821333-12.8 12.821333-32 0-44.8l-134.613333-134.4z m-64.085333-19.2c-57.685333 51.2-147.413333 51.2-205.098667 0-57.685333-57.6-57.685333-147.2 0-204.8 25.642667-25.6 64.085333-44.8 102.549333-44.8 38.464 0 76.906667 12.8 102.549334 44.8 57.685333 57.6 57.685333 147.2 0 204.8z"  ></path></symbol><symbol id="icon-packing-labeling" viewBox="0 0 1024 1024"><path d="M495.744677 662.991042c0 13.311445 10.836882 24.212324 24.08433 24.212325h187.960168l-95.484021 94.524061a23.081705 23.081705 0 0 0 0 33.68393 23.679013 23.679013 0 0 0 34.025249 0l135.482355-134.095746c0.447981-0.383984 0.938628-0.703971 1.365276-1.13062 1.279947-1.301279 2.367901-2.687888 3.327862-4.117161 6.741052-9.5996 5.84509-22.783051-2.815883-30.270739a24.95896 24.95896 0 0 0-4.330486-3.413191l-132.538478-134.309071a23.252364 23.252364 0 0 0-33.790592 0 24.95896 24.95896 0 0 0 0 35.155869l95.164035 95.590683h-188.344152a24.148327 24.148327 0 0 0-24.105663 24.16966z"  ></path><path d="M1016.064331 303.176701L835.058539 11.050206a24.468314 24.468314 0 0 0-22.420399-10.879546C812.019499 0.149327 811.443523 0 810.80355 0H211.575184c-10.111579 0-18.793884 6.357068-22.356401 15.295363L10.836882 303.176701a26.921545 26.921545 0 0 0-2.325237 5.055789 24.020332 24.020332 0 0 0-4.309153 13.716762v96.827966c0 13.311445 10.858214 24.212324 24.105662 24.212324 13.26878 0 24.105662-10.900879 24.105662-24.212324v-60.520145c0-7.253031 4.821132-12.095496 12.052831-12.095496h892.208158c7.231699 0 12.052831 4.842465 12.052831 12.095496v605.180117c0 7.253031-4.821132 12.095496-12.052831 12.095496H64.48798c-7.231699 0-12.052831-4.842465-12.052831-12.095496v-60.520145c0-13.311445-10.858214-24.212324-24.105663-24.212324-13.26878 0-24.105662 10.900879-24.105662 24.212324v96.827966c0 13.311445 10.858214 24.212324 24.105662 24.212324h964.546478c13.26878 0 24.105662-10.900879 24.105662-24.212324V327.879672a25.172284 25.172284 0 0 0-0.917295-24.702971z m-60.925462-5.439773H71.762343L226.251906 48.424649h574.3974l154.489563 249.312279z"  ></path><path d="M36.883797 566.141744h337.223282a24.212324 24.212324 0 0 0 0-48.424649H36.883797a24.212324 24.212324 0 0 0 0 48.424649zM36.883797 687.182034h192.695971a24.212324 24.212324 0 0 0 0-48.424649H36.883797a24.212324 24.212324 0 0 0 0 48.424649zM36.883797 808.243657h72.252989a24.212324 24.212324 0 0 0 0-48.424649H36.883797a24.212324 24.212324 0 0 0 0 48.424649z"  ></path></symbol><symbol id="icon-online-tracking" viewBox="0 0 1024 1024"><path d="M761.066667 127.04c-120.704 0-218.901333 99.776-218.901334 222.421333 0 88.362667 105.877333 227.562667 168.981334 302.677334a64.981333 64.981333 0 0 0 49.92 23.424h0.021333c19.242667 0 37.44-8.533333 49.92-23.402667 63.104-75.114667 169.002667-214.336 169.002667-302.698667-0.021333-122.645333-98.218667-222.421333-218.944-222.421333z m5.056 486.592c-2.346667 2.773333-7.744 2.752-10.048 0.021333-95.616-113.792-155.008-215.04-155.008-264.192 0-89.834667 71.786667-162.922667 160.021333-162.922666v0.021333c88.213333 0 160.021333 73.088 160.042667 162.922667 0 49.152-59.413333 150.378667-155.008 264.149333z"  ></path><path d="M761.066667 233.941333a84.437333 84.437333 0 0 0-84.309334 84.330667 84.437333 84.437333 0 0 0 84.330667 84.309333h0.021333a84.501333 84.501333 0 0 0 84.288-84.330666 84.416 84.416 0 0 0-84.330666-84.309334z m0.021333 119.253334a34.944 34.944 0 0 1-0.021333-69.845334 35.029333 35.029333 0 0 1 34.944 34.922667c0 19.242667-15.658667 34.922667-34.922667 34.922667z"  ></path><path d="M1024 179.029333V141.184c0-60.544-52.714667-113.514667-112.938667-113.514667H112.938667C52.714667 27.669333 0 80.64 0 141.184v560c0 60.544 52.714667 113.514667 112.938667 113.514667h798.122666c60.245333 0 112.938667-52.970667 112.938667-113.514667v-67.968c0-15.146667-15.061333-30.272-30.122667-30.272s-30.122667 7.573333-30.122666 30.272v67.968c0 30.272-22.592 52.970667-52.714667 52.970667H112.938667c-30.122667 0-52.714667-22.698667-52.714667-52.970667V141.184c0-30.272 22.592-52.970667 52.714667-52.970667h798.122666c30.122667 0 52.714667 22.698667 52.714667 52.970667v30.272c0 15.146667 15.061333 30.272 30.122667 30.272 15.04 0 30.101333-7.573333 30.101333-22.698667z"  ></path><path d="M163.477333 649.002667h301.184c15.061333 0 30.122667-15.125333 30.122667-30.272 0-15.146667-15.061333-30.272-30.122667-30.272H163.477333c-15.061333 0-30.122667 15.125333-30.122666 30.272 0 15.146667 15.061333 30.272 30.122666 30.272zM335.082667 470.570667c15.061333 0 30.122667-15.125333 30.122666-30.272 0-15.125333-15.061333-30.272-30.122666-30.272H160.597333c-15.061333 0-30.122667 15.125333-30.122666 30.272 0 15.146667 15.061333 30.272 30.122666 30.272h174.485334zM813.184 935.786667H210.816c-15.061333 0-30.122667 15.125333-30.122667 30.272 0 15.146667 15.061333 30.272 30.122667 30.272h602.346667c15.061333 0 30.122667-15.125333 30.122666-30.272 0-15.146667-15.04-30.272-30.101333-30.272z"  ></path></symbol><symbol id="icon-play-filling" viewBox="0 0 1024 1024"><path d="M374.272 333.312v355.328c0 30.208 20.992 40.448 45.568 26.112l288.768-175.104c25.088-15.872 25.088-40.448 0-54.784L419.84 309.76c-7.68-5.12-14.336-6.656-20.992-6.656-14.336-2.56-24.576 9.216-24.576 30.208zM1024 512c0 282.624-229.376 512-512 512S0 794.624 0 512 229.376 0 512 0s512 229.376 512 512z"  ></path></symbol><symbol id="icon-nosound-filling" viewBox="0 0 1024 1024"><path d="M512 0C229.376 0 0 229.376 0 512s229.376 512 512 512 512-229.376 512-512S794.624 0 512 0z m42.496 728.576c0 9.216-5.632 17.92-13.824 22.016-3.072 1.536-6.656 2.048-10.24 2.048-5.632 0-10.752-2.048-15.36-5.632l-137.728-114.688H266.24c-6.144 0-12.288-2.56-16.896-7.168-4.608-4.608-7.168-10.752-7.168-16.896l0.512-192.512c0-6.144 2.56-12.288 7.168-16.896 4.608-4.608 10.752-7.168 16.896-7.168l110.08 0.512 138.24-115.2c7.168-6.144 16.896-7.168 25.6-3.072 8.704 4.096 13.824 12.288 13.824 22.016v432.64z m243.2-166.4c10.24 10.24 10.24 26.112 0 36.352-5.12 5.12-11.776 7.68-17.92 7.68-6.656 0-13.312-2.56-17.92-7.68l-50.176-50.176-50.176 50.176c-5.12 5.12-11.264 7.68-17.92 7.68-6.656 0-13.312-2.56-17.92-7.68-10.24-10.24-10.24-26.112 0-36.352l50.176-50.176-50.176-50.176c-10.24-9.728-10.24-26.112 0-36.352 9.728-10.24 26.112-10.24 36.352 0l50.176 50.176 50.176-50.176c10.24-10.24 26.112-10.24 36.352 0 10.24 9.728 10.24 26.112 0 36.352l-51.2 50.176 50.176 50.176z"  ></path></symbol><symbol id="icon-sound-filling" viewBox="0 0 1024 1024"><path d="M540.672 273.92c-8.192-4.096-18.432-2.56-25.6 3.072l-138.24 115.2-110.08-0.512c-6.144 0-12.288 2.56-16.896 7.168-4.608 4.608-7.168 10.752-7.168 16.896l-0.512 192.512c0 6.144 2.56 12.288 7.168 16.896 4.608 4.608 10.752 7.168 16.896 7.168h111.616l137.728 114.688c4.608 3.584 9.728 5.632 15.36 5.632 3.584 0 7.168-0.512 10.24-2.048 8.192-4.096 13.824-12.288 13.824-22.016V295.424c-0.512-9.216-5.632-17.408-14.336-21.504zM633.856 394.24c-11.776-5.632-26.112-0.512-31.744 11.264-5.632 11.776-1.024 26.112 10.752 32.256 1.536 1.024 37.376 19.456 37.376 72.704 0 56.832-33.792 75.776-34.816 76.288-11.776 6.144-16.896 20.48-10.752 32.256 4.096 8.192 12.8 13.312 21.504 13.312 3.584 0 7.168-1.024 10.752-2.56 2.56-1.024 61.44-31.744 61.44-119.296 0.512-84.992-61.952-115.2-64.512-116.224z m74.752-70.656c-11.264-7.168-25.6-4.096-33.28 7.168-7.168 11.264-4.096 26.112 7.168 33.28 2.56 1.536 64 43.52 64 147.968s-58.88 146.432-61.44 148.48c-11.264 7.168-13.824 22.528-6.656 33.28 4.608 7.168 12.288 10.752 19.968 10.752 4.608 0 9.216-1.536 13.312-4.096 3.584-2.048 82.944-56.832 82.944-188.416 0.512-132.096-82.432-186.368-86.016-188.416zM1024 512c0 282.624-229.376 512-512 512S0 794.624 0 512 229.376 0 512 0s512 229.376 512 512z"  ></path></symbol></svg>',h = (a = document.getElementsByTagName("script"))[a.length - 1].getAttribute("data-injectcss");if (h && !L.__iconfont__svg__cssinject__) {L.__iconfont__svg__cssinject__ = !0;try {document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");} catch (a) {console && console.log(a);}}!function (a) {if (document.addEventListener) {if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) setTimeout(a, 0);else {var h = function h() {document.removeEventListener("DOMContentLoaded", h, !1), a();};document.addEventListener("DOMContentLoaded", h, !1);}} else document.attachEvent && (c = a, C = L.document, p = !1, (_l = function l() {try {C.documentElement.doScroll("left");} catch (a) {return void setTimeout(_l, 50);}t();})(), C.onreadystatechange = function () {"complete" == C.readyState && (C.onreadystatechange = null, t());});function t() {p || (p = !0, c());}var c, C, p, _l;}(function () {var a, h;(a = document.createElement("div")).innerHTML = t, t = null, (h = a.getElementsByTagName("svg")[0]) && (h.setAttribute("aria-hidden", "true"), h.style.position = "absolute", h.style.width = 0, h.style.height = 0, h.style.overflow = "hidden", function (a, h) {h.firstChild ? function (a, h) {h.parentNode.insertBefore(a, h);}(a, h.firstChild) : h.appendChild(a);}(h, document.body));});}(window);
});
define('static/js/jsencrypt.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  factory(global.JSEncrypt = {});
})(void 0, function (exports) {'use strict';

  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  function int2char(n) {
    return BI_RM.charAt(n);
  }
  //#region BIT_OPERATIONS
  // (public) this & a
  function op_and(x, y) {
    return x & y;
  }
  // (public) this | a
  function op_or(x, y) {
    return x | y;
  }
  // (public) this ^ a
  function op_xor(x, y) {
    return x ^ y;
  }
  // (public) this & ~a
  function op_andnot(x, y) {
    return x & ~y;
  }
  // return index of lowest 1-bit in x, x < 2^31
  function lbit(x) {
    if (x == 0) {
      return -1;
    }
    var r = 0;
    if ((x & 0xffff) == 0) {
      x >>= 16;
      r += 16;
    }
    if ((x & 0xff) == 0) {
      x >>= 8;
      r += 8;
    }
    if ((x & 0xf) == 0) {
      x >>= 4;
      r += 4;
    }
    if ((x & 3) == 0) {
      x >>= 2;
      r += 2;
    }
    if ((x & 1) == 0) {
      ++r;
    }
    return r;
  }
  // return number of 1 bits in x
  function cbit(x) {
    var r = 0;
    while (x != 0) {
      x &= x - 1;
      ++r;
    }
    return r;
  }
  //#endregion BIT_OPERATIONS

  var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  var b64pad = "=";
  function hex2b64(h) {
    var i;
    var c;
    var ret = "";
    for (i = 0; i + 3 <= h.length; i += 3) {
      c = parseInt(h.substring(i, i + 3), 16);
      ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);
    }
    if (i + 1 == h.length) {
      c = parseInt(h.substring(i, i + 1), 16);
      ret += b64map.charAt(c << 2);
    } else
    if (i + 2 == h.length) {
      c = parseInt(h.substring(i, i + 2), 16);
      ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);
    }
    while ((ret.length & 3) > 0) {
      ret += b64pad;
    }
    return ret;
  }
  // convert a base64 string to hex
  function b64tohex(s) {
    var ret = "";
    var i;
    var k = 0; // b64 state, 0-3
    var slop = 0;
    for (i = 0; i < s.length; ++i) {
      if (s.charAt(i) == b64pad) {
        break;
      }
      var v = b64map.indexOf(s.charAt(i));
      if (v < 0) {
        continue;
      }
      if (k == 0) {
        ret += int2char(v >> 2);
        slop = v & 3;
        k = 1;
      } else
      if (k == 1) {
        ret += int2char(slop << 2 | v >> 4);
        slop = v & 0xf;
        k = 2;
      } else
      if (k == 2) {
        ret += int2char(slop);
        ret += int2char(v >> 2);
        slop = v & 3;
        k = 3;
      } else
      {
        ret += int2char(slop << 2 | v >> 4);
        ret += int2char(v & 0xf);
        k = 0;
      }
    }
    if (k == 1) {
      ret += int2char(slop << 2);
    }
    return ret;
  }

  /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0
    
    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.
    
    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
  /* global Reflect, Promise */

  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf ||
    { __proto__: [] } instanceof Array && function (d, b) {d.__proto__ = b;} ||
    function (d, b) {for (var p in b) {if (b.hasOwnProperty(p)) d[p] = b[p];}};
    return _extendStatics(d, b);
  };

  function __extends(d, b) {
    _extendStatics(d, b);
    function __() {this.constructor = d;}
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }

  // Hex JavaScript decoder
  // Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var decoder;
  var Hex = {
    decode: function decode(a) {
      var i;
      if (decoder === undefined) {
        var hex = "0123456789ABCDEF";
        var ignore = " \f\n\r\t\xA0\u2028\u2029";
        decoder = {};
        for (i = 0; i < 16; ++i) {
          decoder[hex.charAt(i)] = i;
        }
        hex = hex.toLowerCase();
        for (i = 10; i < 16; ++i) {
          decoder[hex.charAt(i)] = i;
        }
        for (i = 0; i < ignore.length; ++i) {
          decoder[ignore.charAt(i)] = -1;
        }
      }
      var out = [];
      var bits = 0;
      var char_count = 0;
      for (i = 0; i < a.length; ++i) {
        var c = a.charAt(i);
        if (c == "=") {
          break;
        }
        c = decoder[c];
        if (c == -1) {
          continue;
        }
        if (c === undefined) {
          throw new Error("Illegal character at offset " + i);
        }
        bits |= c;
        if (++char_count >= 2) {
          out[out.length] = bits;
          bits = 0;
          char_count = 0;
        } else
        {
          bits <<= 4;
        }
      }
      if (char_count) {
        throw new Error("Hex encoding incomplete: 4 bits missing");
      }
      return out;
    } };


  // Base64 JavaScript decoder
  // Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var decoder$1;
  var Base64 = {
    decode: function decode(a) {
      var i;
      if (decoder$1 === undefined) {
        var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var ignore = "= \f\n\r\t\xA0\u2028\u2029";
        decoder$1 = Object.create(null);
        for (i = 0; i < 64; ++i) {
          decoder$1[b64.charAt(i)] = i;
        }
        for (i = 0; i < ignore.length; ++i) {
          decoder$1[ignore.charAt(i)] = -1;
        }
      }
      var out = [];
      var bits = 0;
      var char_count = 0;
      for (i = 0; i < a.length; ++i) {
        var c = a.charAt(i);
        if (c == "=") {
          break;
        }
        c = decoder$1[c];
        if (c == -1) {
          continue;
        }
        if (c === undefined) {
          throw new Error("Illegal character at offset " + i);
        }
        bits |= c;
        if (++char_count >= 4) {
          out[out.length] = bits >> 16;
          out[out.length] = bits >> 8 & 0xFF;
          out[out.length] = bits & 0xFF;
          bits = 0;
          char_count = 0;
        } else
        {
          bits <<= 6;
        }
      }
      switch (char_count) {
        case 1:
          throw new Error("Base64 encoding incomplete: at least 2 bits missing");
        case 2:
          out[out.length] = bits >> 10;
          break;
        case 3:
          out[out.length] = bits >> 16;
          out[out.length] = bits >> 8 & 0xFF;
          break;}

      return out;
    },
    re: /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,
    unarmor: function unarmor(a) {
      var m = Base64.re.exec(a);
      if (m) {
        if (m[1]) {
          a = m[1];
        } else
        if (m[2]) {
          a = m[2];
        } else
        {
          throw new Error("RegExp out of sync");
        }
      }
      return Base64.decode(a);
    } };


  // Big integer base-10 printing library
  // Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256
  var Int10 = /** @class */function () {
    function Int10(value) {
      this.buf = [+value || 0];
    }
    Int10.prototype.mulAdd = function (m, c) {
      // assert(m <= 256)
      var b = this.buf;
      var l = b.length;
      var i;
      var t;
      for (i = 0; i < l; ++i) {
        t = b[i] * m + c;
        if (t < max) {
          c = 0;
        } else
        {
          c = 0 | t / max;
          t -= c * max;
        }
        b[i] = t;
      }
      if (c > 0) {
        b[i] = c;
      }
    };
    Int10.prototype.sub = function (c) {
      // assert(m <= 256)
      var b = this.buf;
      var l = b.length;
      var i;
      var t;
      for (i = 0; i < l; ++i) {
        t = b[i] - c;
        if (t < 0) {
          t += max;
          c = 1;
        } else
        {
          c = 0;
        }
        b[i] = t;
      }
      while (b[b.length - 1] === 0) {
        b.pop();
      }
    };
    Int10.prototype.toString = function (base) {
      if ((base || 10) != 10) {
        throw new Error("only base 10 is supported");
      }
      var b = this.buf;
      var s = b[b.length - 1].toString();
      for (var i = b.length - 2; i >= 0; --i) {
        s += (max + b[i]).toString().substring(1);
      }
      return s;
    };
    Int10.prototype.valueOf = function () {
      var b = this.buf;
      var v = 0;
      for (var i = b.length - 1; i >= 0; --i) {
        v = v * max + b[i];
      }
      return v;
    };
    Int10.prototype.simplify = function () {
      var b = this.buf;
      return b.length == 1 ? b[0] : this;
    };
    return Int10;
  }();

  // ASN.1 JavaScript decoder
  var ellipsis = "\u2026";
  var reTimeS = /^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
  var reTimeL = /^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
  function stringCut(str, len) {
    if (str.length > len) {
      str = str.substring(0, len) + ellipsis;
    }
    return str;
  }
  var Stream = /** @class */function () {
    function Stream(enc, pos) {
      this.hexDigits = "0123456789ABCDEF";
      if (enc instanceof Stream) {
        this.enc = enc.enc;
        this.pos = enc.pos;
      } else
      {
        // enc should be an array or a binary string
        this.enc = enc;
        this.pos = pos;
      }
    }
    Stream.prototype.get = function (pos) {
      if (pos === undefined) {
        pos = this.pos++;
      }
      if (pos >= this.enc.length) {
        throw new Error("Requesting byte offset " + pos + " on a stream of length " + this.enc.length);
      }
      return "string" === typeof this.enc ? this.enc.charCodeAt(pos) : this.enc[pos];
    };
    Stream.prototype.hexByte = function (b) {
      return this.hexDigits.charAt(b >> 4 & 0xF) + this.hexDigits.charAt(b & 0xF);
    };
    Stream.prototype.hexDump = function (start, end, raw) {
      var s = "";
      for (var i = start; i < end; ++i) {
        s += this.hexByte(this.get(i));
        if (raw !== true) {
          switch (i & 0xF) {
            case 0x7:
              s += "  ";
              break;
            case 0xF:
              s += "\n";
              break;
            default:
              s += " ";}

        }
      }
      return s;
    };
    Stream.prototype.isASCII = function (start, end) {
      for (var i = start; i < end; ++i) {
        var c = this.get(i);
        if (c < 32 || c > 176) {
          return false;
        }
      }
      return true;
    };
    Stream.prototype.parseStringISO = function (start, end) {
      var s = "";
      for (var i = start; i < end; ++i) {
        s += String.fromCharCode(this.get(i));
      }
      return s;
    };
    Stream.prototype.parseStringUTF = function (start, end) {
      var s = "";
      for (var i = start; i < end;) {
        var c = this.get(i++);
        if (c < 128) {
          s += String.fromCharCode(c);
        } else
        if (c > 191 && c < 224) {
          s += String.fromCharCode((c & 0x1F) << 6 | this.get(i++) & 0x3F);
        } else
        {
          s += String.fromCharCode((c & 0x0F) << 12 | (this.get(i++) & 0x3F) << 6 | this.get(i++) & 0x3F);
        }
      }
      return s;
    };
    Stream.prototype.parseStringBMP = function (start, end) {
      var str = "";
      var hi;
      var lo;
      for (var i = start; i < end;) {
        hi = this.get(i++);
        lo = this.get(i++);
        str += String.fromCharCode(hi << 8 | lo);
      }
      return str;
    };
    Stream.prototype.parseTime = function (start, end, shortYear) {
      var s = this.parseStringISO(start, end);
      var m = (shortYear ? reTimeS : reTimeL).exec(s);
      if (!m) {
        return "Unrecognized time: " + s;
      }
      if (shortYear) {
        // to avoid querying the timer, use the fixed range [1970, 2069]
        // it will conform with ITU X.400 [-10, +40] sliding window until 2030
        m[1] = +m[1];
        m[1] += +m[1] < 70 ? 2000 : 1900;
      }
      s = m[1] + "-" + m[2] + "-" + m[3] + " " + m[4];
      if (m[5]) {
        s += ":" + m[5];
        if (m[6]) {
          s += ":" + m[6];
          if (m[7]) {
            s += "." + m[7];
          }
        }
      }
      if (m[8]) {
        s += " UTC";
        if (m[8] != "Z") {
          s += m[8];
          if (m[9]) {
            s += ":" + m[9];
          }
        }
      }
      return s;
    };
    Stream.prototype.parseInteger = function (start, end) {
      var v = this.get(start);
      var neg = v > 127;
      var pad = neg ? 255 : 0;
      var len;
      var s = "";
      // skip unuseful bits (not allowed in DER)
      while (v == pad && ++start < end) {
        v = this.get(start);
      }
      len = end - start;
      if (len === 0) {
        return neg ? -1 : 0;
      }
      // show bit length of huge integers
      if (len > 4) {
        s = v;
        len <<= 3;
        while (((+s ^ pad) & 0x80) == 0) {
          s = +s << 1;
          --len;
        }
        s = "(" + len + " bit)\n";
      }
      // decode the integer
      if (neg) {
        v = v - 256;
      }
      var n = new Int10(v);
      for (var i = start + 1; i < end; ++i) {
        n.mulAdd(256, this.get(i));
      }
      return s + n.toString();
    };
    Stream.prototype.parseBitString = function (start, end, maxLength) {
      var unusedBit = this.get(start);
      var lenBit = (end - start - 1 << 3) - unusedBit;
      var intro = "(" + lenBit + " bit)\n";
      var s = "";
      for (var i = start + 1; i < end; ++i) {
        var b = this.get(i);
        var skip = i == end - 1 ? unusedBit : 0;
        for (var j = 7; j >= skip; --j) {
          s += b >> j & 1 ? "1" : "0";
        }
        if (s.length > maxLength) {
          return intro + stringCut(s, maxLength);
        }
      }
      return intro + s;
    };
    Stream.prototype.parseOctetString = function (start, end, maxLength) {
      if (this.isASCII(start, end)) {
        return stringCut(this.parseStringISO(start, end), maxLength);
      }
      var len = end - start;
      var s = "(" + len + " byte)\n";
      maxLength /= 2; // we work in bytes
      if (len > maxLength) {
        end = start + maxLength;
      }
      for (var i = start; i < end; ++i) {
        s += this.hexByte(this.get(i));
      }
      if (len > maxLength) {
        s += ellipsis;
      }
      return s;
    };
    Stream.prototype.parseOID = function (start, end, maxLength) {
      var s = "";
      var n = new Int10();
      var bits = 0;
      for (var i = start; i < end; ++i) {
        var v = this.get(i);
        n.mulAdd(128, v & 0x7F);
        bits += 7;
        if (!(v & 0x80)) {// finished
          if (s === "") {
            n = n.simplify();
            if (n instanceof Int10) {
              n.sub(80);
              s = "2." + n.toString();
            } else
            {
              var m = n < 80 ? n < 40 ? 0 : 1 : 2;
              s = m + "." + (n - m * 40);
            }
          } else
          {
            s += "." + n.toString();
          }
          if (s.length > maxLength) {
            return stringCut(s, maxLength);
          }
          n = new Int10();
          bits = 0;
        }
      }
      if (bits > 0) {
        s += ".incomplete";
      }
      return s;
    };
    return Stream;
  }();
  var ASN1 = /** @class */function () {
    function ASN1(stream, header, length, tag, sub) {
      if (!(tag instanceof ASN1Tag)) {
        throw new Error("Invalid tag value.");
      }
      this.stream = stream;
      this.header = header;
      this.length = length;
      this.tag = tag;
      this.sub = sub;
    }
    ASN1.prototype.typeName = function () {
      switch (this.tag.tagClass) {
        case 0: // universal
          switch (this.tag.tagNumber) {
            case 0x00:
              return "EOC";
            case 0x01:
              return "BOOLEAN";
            case 0x02:
              return "INTEGER";
            case 0x03:
              return "BIT_STRING";
            case 0x04:
              return "OCTET_STRING";
            case 0x05:
              return "NULL";
            case 0x06:
              return "OBJECT_IDENTIFIER";
            case 0x07:
              return "ObjectDescriptor";
            case 0x08:
              return "EXTERNAL";
            case 0x09:
              return "REAL";
            case 0x0A:
              return "ENUMERATED";
            case 0x0B:
              return "EMBEDDED_PDV";
            case 0x0C:
              return "UTF8String";
            case 0x10:
              return "SEQUENCE";
            case 0x11:
              return "SET";
            case 0x12:
              return "NumericString";
            case 0x13:
              return "PrintableString"; // ASCII subset
            case 0x14:
              return "TeletexString"; // aka T61String
            case 0x15:
              return "VideotexString";
            case 0x16:
              return "IA5String"; // ASCII
            case 0x17:
              return "UTCTime";
            case 0x18:
              return "GeneralizedTime";
            case 0x19:
              return "GraphicString";
            case 0x1A:
              return "VisibleString"; // ASCII subset
            case 0x1B:
              return "GeneralString";
            case 0x1C:
              return "UniversalString";
            case 0x1E:
              return "BMPString";}

          return "Universal_" + this.tag.tagNumber.toString();
        case 1:
          return "Application_" + this.tag.tagNumber.toString();
        case 2:
          return "[" + this.tag.tagNumber.toString() + "]"; // Context
        case 3:
          return "Private_" + this.tag.tagNumber.toString();}

    };
    ASN1.prototype.content = function (maxLength) {
      if (this.tag === undefined) {
        return null;
      }
      if (maxLength === undefined) {
        maxLength = Infinity;
      }
      var content = this.posContent();
      var len = Math.abs(this.length);
      if (!this.tag.isUniversal()) {
        if (this.sub !== null) {
          return "(" + this.sub.length + " elem)";
        }
        return this.stream.parseOctetString(content, content + len, maxLength);
      }
      switch (this.tag.tagNumber) {
        case 0x01: // BOOLEAN
          return this.stream.get(content) === 0 ? "false" : "true";
        case 0x02: // INTEGER
          return this.stream.parseInteger(content, content + len);
        case 0x03: // BIT_STRING
          return this.sub ? "(" + this.sub.length + " elem)" :
          this.stream.parseBitString(content, content + len, maxLength);
        case 0x04: // OCTET_STRING
          return this.sub ? "(" + this.sub.length + " elem)" :
          this.stream.parseOctetString(content, content + len, maxLength);
        // case 0x05: // NULL
        case 0x06: // OBJECT_IDENTIFIER
          return this.stream.parseOID(content, content + len, maxLength);
        // case 0x07: // ObjectDescriptor
        // case 0x08: // EXTERNAL
        // case 0x09: // REAL
        // case 0x0A: // ENUMERATED
        // case 0x0B: // EMBEDDED_PDV
        case 0x10: // SEQUENCE
        case 0x11: // SET
          if (this.sub !== null) {
            return "(" + this.sub.length + " elem)";
          } else
          {
            return "(no elem)";
          }
        case 0x0C: // UTF8String
          return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);
        case 0x12: // NumericString
        case 0x13: // PrintableString
        case 0x14: // TeletexString
        case 0x15: // VideotexString
        case 0x16: // IA5String
        // case 0x19: // GraphicString
        case 0x1A: // VisibleString
          // case 0x1B: // GeneralString
          // case 0x1C: // UniversalString
          return stringCut(this.stream.parseStringISO(content, content + len), maxLength);
        case 0x1E: // BMPString
          return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);
        case 0x17: // UTCTime
        case 0x18: // GeneralizedTime
          return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);}

      return null;
    };
    ASN1.prototype.toString = function () {
      return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + (this.sub === null ? "null" : this.sub.length) + "]";
    };
    ASN1.prototype.toPrettyString = function (indent) {
      if (indent === undefined) {
        indent = "";
      }
      var s = indent + this.typeName() + " @" + this.stream.pos;
      if (this.length >= 0) {
        s += "+";
      }
      s += this.length;
      if (this.tag.tagConstructed) {
        s += " (constructed)";
      } else
      if (this.tag.isUniversal() && (this.tag.tagNumber == 0x03 || this.tag.tagNumber == 0x04) && this.sub !== null) {
        s += " (encapsulates)";
      }
      s += "\n";
      if (this.sub !== null) {
        indent += "  ";
        for (var i = 0, max = this.sub.length; i < max; ++i) {
          s += this.sub[i].toPrettyString(indent);
        }
      }
      return s;
    };
    ASN1.prototype.posStart = function () {
      return this.stream.pos;
    };
    ASN1.prototype.posContent = function () {
      return this.stream.pos + this.header;
    };
    ASN1.prototype.posEnd = function () {
      return this.stream.pos + this.header + Math.abs(this.length);
    };
    ASN1.prototype.toHexString = function () {
      return this.stream.hexDump(this.posStart(), this.posEnd(), true);
    };
    ASN1.decodeLength = function (stream) {
      var buf = stream.get();
      var len = buf & 0x7F;
      if (len == buf) {
        return len;
      }
      // no reason to use Int10, as it would be a huge buffer anyways
      if (len > 6) {
        throw new Error("Length over 48 bits not supported at position " + (stream.pos - 1));
      }
      if (len === 0) {
        return null;
      } // undefined
      buf = 0;
      for (var i = 0; i < len; ++i) {
        buf = buf * 256 + stream.get();
      }
      return buf;
    };
    /**
        * Retrieve the hexadecimal value (as a string) of the current ASN.1 element
        * @returns {string}
        * @public
        */
    ASN1.prototype.getHexStringValue = function () {
      var hexString = this.toHexString();
      var offset = this.header * 2;
      var length = this.length * 2;
      return hexString.substr(offset, length);
    };
    ASN1.decode = function (str) {
      var stream;
      if (!(str instanceof Stream)) {
        stream = new Stream(str, 0);
      } else
      {
        stream = str;
      }
      var streamStart = new Stream(stream);
      var tag = new ASN1Tag(stream);
      var len = ASN1.decodeLength(stream);
      var start = stream.pos;
      var header = start - streamStart.pos;
      var sub = null;
      var getSub = function getSub() {
        var ret = [];
        if (len !== null) {
          // definite length
          var end = start + len;
          while (stream.pos < end) {
            ret[ret.length] = ASN1.decode(stream);
          }
          if (stream.pos != end) {
            throw new Error("Content size is not correct for container starting at offset " + start);
          }
        } else
        {
          // undefined length
          try {
            for (;;) {
              var s = ASN1.decode(stream);
              if (s.tag.isEOC()) {
                break;
              }
              ret[ret.length] = s;
            }
            len = start - stream.pos; // undefined lengths are represented as negative values
          }
          catch (e) {
            throw new Error("Exception while decoding undefined length content: " + e);
          }
        }
        return ret;
      };
      if (tag.tagConstructed) {
        // must have valid content
        sub = getSub();
      } else
      if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {
        // sometimes BitString and OctetString are used to encapsulate ASN.1
        try {
          if (tag.tagNumber == 0x03) {
            if (stream.get() != 0) {
              throw new Error("BIT STRINGs with unused bits cannot encapsulate.");
            }
          }
          sub = getSub();
          for (var i = 0; i < sub.length; ++i) {
            if (sub[i].tag.isEOC()) {
              throw new Error("EOC is not supposed to be actual content.");
            }
          }
        }
        catch (e) {
          // but silently ignore when they don't
          sub = null;
        }
      }
      if (sub === null) {
        if (len === null) {
          throw new Error("We can't skip over an invalid tag with undefined length at offset " + start);
        }
        stream.pos = start + Math.abs(len);
      }
      return new ASN1(streamStart, header, len, tag, sub);
    };
    return ASN1;
  }();
  var ASN1Tag = /** @class */function () {
    function ASN1Tag(stream) {
      var buf = stream.get();
      this.tagClass = buf >> 6;
      this.tagConstructed = (buf & 0x20) !== 0;
      this.tagNumber = buf & 0x1F;
      if (this.tagNumber == 0x1F) {// long tag
        var n = new Int10();
        do {
          buf = stream.get();
          n.mulAdd(128, buf & 0x7F);
        } while (buf & 0x80);
        this.tagNumber = n.simplify();
      }
    }
    ASN1Tag.prototype.isUniversal = function () {
      return this.tagClass === 0x00;
    };
    ASN1Tag.prototype.isEOC = function () {
      return this.tagClass === 0x00 && this.tagNumber === 0x00;
    };
    return ASN1Tag;
  }();

  // Copyright (c) 2005  Tom Wu
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = (canary & 0xffffff) == 0xefcafe;
  //#region
  var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];
  var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
  //#endregion
  // (public) Constructor
  var BigInteger = /** @class */function () {
    function BigInteger(a, b, c) {
      if (a != null) {
        if ("number" == typeof a) {
          this.fromNumber(a, b, c);
        } else
        if (b == null && "string" != typeof a) {
          this.fromString(a, 256);
        } else
        {
          this.fromString(a, b);
        }
      }
    }
    //#region PUBLIC
    // BigInteger.prototype.toString = bnToString;
    // (public) return string representation in given radix
    BigInteger.prototype.toString = function (b) {
      if (this.s < 0) {
        return "-" + this.negate().toString(b);
      }
      var k;
      if (b == 16) {
        k = 4;
      } else
      if (b == 8) {
        k = 3;
      } else
      if (b == 2) {
        k = 1;
      } else
      if (b == 32) {
        k = 5;
      } else
      if (b == 4) {
        k = 2;
      } else
      {
        return this.toRadix(b);
      }
      var km = (1 << k) - 1;
      var d;
      var m = false;
      var r = "";
      var i = this.t;
      var p = this.DB - i * this.DB % k;
      if (i-- > 0) {
        if (p < this.DB && (d = this[i] >> p) > 0) {
          m = true;
          r = int2char(d);
        }
        while (i >= 0) {
          if (p < k) {
            d = (this[i] & (1 << p) - 1) << k - p;
            d |= this[--i] >> (p += this.DB - k);
          } else
          {
            d = this[i] >> (p -= k) & km;
            if (p <= 0) {
              p += this.DB;
              --i;
            }
          }
          if (d > 0) {
            m = true;
          }
          if (m) {
            r += int2char(d);
          }
        }
      }
      return m ? r : "0";
    };
    // BigInteger.prototype.negate = bnNegate;
    // (public) -this
    BigInteger.prototype.negate = function () {
      var r = nbi();
      BigInteger.ZERO.subTo(this, r);
      return r;
    };
    // BigInteger.prototype.abs = bnAbs;
    // (public) |this|
    BigInteger.prototype.abs = function () {
      return this.s < 0 ? this.negate() : this;
    };
    // BigInteger.prototype.compareTo = bnCompareTo;
    // (public) return + if this > a, - if this < a, 0 if equal
    BigInteger.prototype.compareTo = function (a) {
      var r = this.s - a.s;
      if (r != 0) {
        return r;
      }
      var i = this.t;
      r = i - a.t;
      if (r != 0) {
        return this.s < 0 ? -r : r;
      }
      while (--i >= 0) {
        if ((r = this[i] - a[i]) != 0) {
          return r;
        }
      }
      return 0;
    };
    // BigInteger.prototype.bitLength = bnBitLength;
    // (public) return the number of bits in "this"
    BigInteger.prototype.bitLength = function () {
      if (this.t <= 0) {
        return 0;
      }
      return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
    };
    // BigInteger.prototype.mod = bnMod;
    // (public) this mod a
    BigInteger.prototype.mod = function (a) {
      var r = nbi();
      this.abs().divRemTo(a, null, r);
      if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
        a.subTo(r, r);
      }
      return r;
    };
    // BigInteger.prototype.modPowInt = bnModPowInt;
    // (public) this^e % m, 0 <= e < 2^32
    BigInteger.prototype.modPowInt = function (e, m) {
      var z;
      if (e < 256 || m.isEven()) {
        z = new Classic(m);
      } else
      {
        z = new Montgomery(m);
      }
      return this.exp(e, z);
    };
    // BigInteger.prototype.clone = bnClone;
    // (public)
    BigInteger.prototype.clone = function () {
      var r = nbi();
      this.copyTo(r);
      return r;
    };
    // BigInteger.prototype.intValue = bnIntValue;
    // (public) return value as integer
    BigInteger.prototype.intValue = function () {
      if (this.s < 0) {
        if (this.t == 1) {
          return this[0] - this.DV;
        } else
        if (this.t == 0) {
          return -1;
        }
      } else
      if (this.t == 1) {
        return this[0];
      } else
      if (this.t == 0) {
        return 0;
      }
      // assumes 16 < DB < 32
      return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
    };
    // BigInteger.prototype.byteValue = bnByteValue;
    // (public) return value as byte
    BigInteger.prototype.byteValue = function () {
      return this.t == 0 ? this.s : this[0] << 24 >> 24;
    };
    // BigInteger.prototype.shortValue = bnShortValue;
    // (public) return value as short (assumes DB>=16)
    BigInteger.prototype.shortValue = function () {
      return this.t == 0 ? this.s : this[0] << 16 >> 16;
    };
    // BigInteger.prototype.signum = bnSigNum;
    // (public) 0 if this == 0, 1 if this > 0
    BigInteger.prototype.signum = function () {
      if (this.s < 0) {
        return -1;
      } else
      if (this.t <= 0 || this.t == 1 && this[0] <= 0) {
        return 0;
      } else
      {
        return 1;
      }
    };
    // BigInteger.prototype.toByteArray = bnToByteArray;
    // (public) convert to bigendian byte array
    BigInteger.prototype.toByteArray = function () {
      var i = this.t;
      var r = [];
      r[0] = this.s;
      var p = this.DB - i * this.DB % 8;
      var d;
      var k = 0;
      if (i-- > 0) {
        if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {
          r[k++] = d | this.s << this.DB - p;
        }
        while (i >= 0) {
          if (p < 8) {
            d = (this[i] & (1 << p) - 1) << 8 - p;
            d |= this[--i] >> (p += this.DB - 8);
          } else
          {
            d = this[i] >> (p -= 8) & 0xff;
            if (p <= 0) {
              p += this.DB;
              --i;
            }
          }
          if ((d & 0x80) != 0) {
            d |= -256;
          }
          if (k == 0 && (this.s & 0x80) != (d & 0x80)) {
            ++k;
          }
          if (k > 0 || d != this.s) {
            r[k++] = d;
          }
        }
      }
      return r;
    };
    // BigInteger.prototype.equals = bnEquals;
    BigInteger.prototype.equals = function (a) {
      return this.compareTo(a) == 0;
    };
    // BigInteger.prototype.min = bnMin;
    BigInteger.prototype.min = function (a) {
      return this.compareTo(a) < 0 ? this : a;
    };
    // BigInteger.prototype.max = bnMax;
    BigInteger.prototype.max = function (a) {
      return this.compareTo(a) > 0 ? this : a;
    };
    // BigInteger.prototype.and = bnAnd;
    BigInteger.prototype.and = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_and, r);
      return r;
    };
    // BigInteger.prototype.or = bnOr;
    BigInteger.prototype.or = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_or, r);
      return r;
    };
    // BigInteger.prototype.xor = bnXor;
    BigInteger.prototype.xor = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_xor, r);
      return r;
    };
    // BigInteger.prototype.andNot = bnAndNot;
    BigInteger.prototype.andNot = function (a) {
      var r = nbi();
      this.bitwiseTo(a, op_andnot, r);
      return r;
    };
    // BigInteger.prototype.not = bnNot;
    // (public) ~this
    BigInteger.prototype.not = function () {
      var r = nbi();
      for (var i = 0; i < this.t; ++i) {
        r[i] = this.DM & ~this[i];
      }
      r.t = this.t;
      r.s = ~this.s;
      return r;
    };
    // BigInteger.prototype.shiftLeft = bnShiftLeft;
    // (public) this << n
    BigInteger.prototype.shiftLeft = function (n) {
      var r = nbi();
      if (n < 0) {
        this.rShiftTo(-n, r);
      } else
      {
        this.lShiftTo(n, r);
      }
      return r;
    };
    // BigInteger.prototype.shiftRight = bnShiftRight;
    // (public) this >> n
    BigInteger.prototype.shiftRight = function (n) {
      var r = nbi();
      if (n < 0) {
        this.lShiftTo(-n, r);
      } else
      {
        this.rShiftTo(n, r);
      }
      return r;
    };
    // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
    // (public) returns index of lowest 1-bit (or -1 if none)
    BigInteger.prototype.getLowestSetBit = function () {
      for (var i = 0; i < this.t; ++i) {
        if (this[i] != 0) {
          return i * this.DB + lbit(this[i]);
        }
      }
      if (this.s < 0) {
        return this.t * this.DB;
      }
      return -1;
    };
    // BigInteger.prototype.bitCount = bnBitCount;
    // (public) return number of set bits
    BigInteger.prototype.bitCount = function () {
      var r = 0;
      var x = this.s & this.DM;
      for (var i = 0; i < this.t; ++i) {
        r += cbit(this[i] ^ x);
      }
      return r;
    };
    // BigInteger.prototype.testBit = bnTestBit;
    // (public) true iff nth bit is set
    BigInteger.prototype.testBit = function (n) {
      var j = Math.floor(n / this.DB);
      if (j >= this.t) {
        return this.s != 0;
      }
      return (this[j] & 1 << n % this.DB) != 0;
    };
    // BigInteger.prototype.setBit = bnSetBit;
    // (public) this | (1<<n)
    BigInteger.prototype.setBit = function (n) {
      return this.changeBit(n, op_or);
    };
    // BigInteger.prototype.clearBit = bnClearBit;
    // (public) this & ~(1<<n)
    BigInteger.prototype.clearBit = function (n) {
      return this.changeBit(n, op_andnot);
    };
    // BigInteger.prototype.flipBit = bnFlipBit;
    // (public) this ^ (1<<n)
    BigInteger.prototype.flipBit = function (n) {
      return this.changeBit(n, op_xor);
    };
    // BigInteger.prototype.add = bnAdd;
    // (public) this + a
    BigInteger.prototype.add = function (a) {
      var r = nbi();
      this.addTo(a, r);
      return r;
    };
    // BigInteger.prototype.subtract = bnSubtract;
    // (public) this - a
    BigInteger.prototype.subtract = function (a) {
      var r = nbi();
      this.subTo(a, r);
      return r;
    };
    // BigInteger.prototype.multiply = bnMultiply;
    // (public) this * a
    BigInteger.prototype.multiply = function (a) {
      var r = nbi();
      this.multiplyTo(a, r);
      return r;
    };
    // BigInteger.prototype.divide = bnDivide;
    // (public) this / a
    BigInteger.prototype.divide = function (a) {
      var r = nbi();
      this.divRemTo(a, r, null);
      return r;
    };
    // BigInteger.prototype.remainder = bnRemainder;
    // (public) this % a
    BigInteger.prototype.remainder = function (a) {
      var r = nbi();
      this.divRemTo(a, null, r);
      return r;
    };
    // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
    // (public) [this/a,this%a]
    BigInteger.prototype.divideAndRemainder = function (a) {
      var q = nbi();
      var r = nbi();
      this.divRemTo(a, q, r);
      return [q, r];
    };
    // BigInteger.prototype.modPow = bnModPow;
    // (public) this^e % m (HAC 14.85)
    BigInteger.prototype.modPow = function (e, m) {
      var i = e.bitLength();
      var k;
      var r = nbv(1);
      var z;
      if (i <= 0) {
        return r;
      } else
      if (i < 18) {
        k = 1;
      } else
      if (i < 48) {
        k = 3;
      } else
      if (i < 144) {
        k = 4;
      } else
      if (i < 768) {
        k = 5;
      } else
      {
        k = 6;
      }
      if (i < 8) {
        z = new Classic(m);
      } else
      if (m.isEven()) {
        z = new Barrett(m);
      } else
      {
        z = new Montgomery(m);
      }
      // precomputation
      var g = [];
      var n = 3;
      var k1 = k - 1;
      var km = (1 << k) - 1;
      g[1] = z.convert(this);
      if (k > 1) {
        var g2 = nbi();
        z.sqrTo(g[1], g2);
        while (n <= km) {
          g[n] = nbi();
          z.mulTo(g2, g[n - 2], g[n]);
          n += 2;
        }
      }
      var j = e.t - 1;
      var w;
      var is1 = true;
      var r2 = nbi();
      var t;
      i = nbits(e[j]) - 1;
      while (j >= 0) {
        if (i >= k1) {
          w = e[j] >> i - k1 & km;
        } else
        {
          w = (e[j] & (1 << i + 1) - 1) << k1 - i;
          if (j > 0) {
            w |= e[j - 1] >> this.DB + i - k1;
          }
        }
        n = k;
        while ((w & 1) == 0) {
          w >>= 1;
          --n;
        }
        if ((i -= n) < 0) {
          i += this.DB;
          --j;
        }
        if (is1) {// ret == 1, don't bother squaring or multiplying it
          g[w].copyTo(r);
          is1 = false;
        } else
        {
          while (n > 1) {
            z.sqrTo(r, r2);
            z.sqrTo(r2, r);
            n -= 2;
          }
          if (n > 0) {
            z.sqrTo(r, r2);
          } else
          {
            t = r;
            r = r2;
            r2 = t;
          }
          z.mulTo(r2, g[w], r);
        }
        while (j >= 0 && (e[j] & 1 << i) == 0) {
          z.sqrTo(r, r2);
          t = r;
          r = r2;
          r2 = t;
          if (--i < 0) {
            i = this.DB - 1;
            --j;
          }
        }
      }
      return z.revert(r);
    };
    // BigInteger.prototype.modInverse = bnModInverse;
    // (public) 1/this % m (HAC 14.61)
    BigInteger.prototype.modInverse = function (m) {
      var ac = m.isEven();
      if (this.isEven() && ac || m.signum() == 0) {
        return BigInteger.ZERO;
      }
      var u = m.clone();
      var v = this.clone();
      var a = nbv(1);
      var b = nbv(0);
      var c = nbv(0);
      var d = nbv(1);
      while (u.signum() != 0) {
        while (u.isEven()) {
          u.rShiftTo(1, u);
          if (ac) {
            if (!a.isEven() || !b.isEven()) {
              a.addTo(this, a);
              b.subTo(m, b);
            }
            a.rShiftTo(1, a);
          } else
          if (!b.isEven()) {
            b.subTo(m, b);
          }
          b.rShiftTo(1, b);
        }
        while (v.isEven()) {
          v.rShiftTo(1, v);
          if (ac) {
            if (!c.isEven() || !d.isEven()) {
              c.addTo(this, c);
              d.subTo(m, d);
            }
            c.rShiftTo(1, c);
          } else
          if (!d.isEven()) {
            d.subTo(m, d);
          }
          d.rShiftTo(1, d);
        }
        if (u.compareTo(v) >= 0) {
          u.subTo(v, u);
          if (ac) {
            a.subTo(c, a);
          }
          b.subTo(d, b);
        } else
        {
          v.subTo(u, v);
          if (ac) {
            c.subTo(a, c);
          }
          d.subTo(b, d);
        }
      }
      if (v.compareTo(BigInteger.ONE) != 0) {
        return BigInteger.ZERO;
      }
      if (d.compareTo(m) >= 0) {
        return d.subtract(m);
      }
      if (d.signum() < 0) {
        d.addTo(m, d);
      } else
      {
        return d;
      }
      if (d.signum() < 0) {
        return d.add(m);
      } else
      {
        return d;
      }
    };
    // BigInteger.prototype.pow = bnPow;
    // (public) this^e
    BigInteger.prototype.pow = function (e) {
      return this.exp(e, new NullExp());
    };
    // BigInteger.prototype.gcd = bnGCD;
    // (public) gcd(this,a) (HAC 14.54)
    BigInteger.prototype.gcd = function (a) {
      var x = this.s < 0 ? this.negate() : this.clone();
      var y = a.s < 0 ? a.negate() : a.clone();
      if (x.compareTo(y) < 0) {
        var t = x;
        x = y;
        y = t;
      }
      var i = x.getLowestSetBit();
      var g = y.getLowestSetBit();
      if (g < 0) {
        return x;
      }
      if (i < g) {
        g = i;
      }
      if (g > 0) {
        x.rShiftTo(g, x);
        y.rShiftTo(g, y);
      }
      while (x.signum() > 0) {
        if ((i = x.getLowestSetBit()) > 0) {
          x.rShiftTo(i, x);
        }
        if ((i = y.getLowestSetBit()) > 0) {
          y.rShiftTo(i, y);
        }
        if (x.compareTo(y) >= 0) {
          x.subTo(y, x);
          x.rShiftTo(1, x);
        } else
        {
          y.subTo(x, y);
          y.rShiftTo(1, y);
        }
      }
      if (g > 0) {
        y.lShiftTo(g, y);
      }
      return y;
    };
    // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;
    // (public) test primality with certainty >= 1-.5^t
    BigInteger.prototype.isProbablePrime = function (t) {
      var i;
      var x = this.abs();
      if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
        for (i = 0; i < lowprimes.length; ++i) {
          if (x[0] == lowprimes[i]) {
            return true;
          }
        }
        return false;
      }
      if (x.isEven()) {
        return false;
      }
      i = 1;
      while (i < lowprimes.length) {
        var m = lowprimes[i];
        var j = i + 1;
        while (j < lowprimes.length && m < lplim) {
          m *= lowprimes[j++];
        }
        m = x.modInt(m);
        while (i < j) {
          if (m % lowprimes[i++] == 0) {
            return false;
          }
        }
      }
      return x.millerRabin(t);
    };
    //#endregion PUBLIC
    //#region PROTECTED
    // BigInteger.prototype.copyTo = bnpCopyTo;
    // (protected) copy this to r
    BigInteger.prototype.copyTo = function (r) {
      for (var i = this.t - 1; i >= 0; --i) {
        r[i] = this[i];
      }
      r.t = this.t;
      r.s = this.s;
    };
    // BigInteger.prototype.fromInt = bnpFromInt;
    // (protected) set from integer value x, -DV <= x < DV
    BigInteger.prototype.fromInt = function (x) {
      this.t = 1;
      this.s = x < 0 ? -1 : 0;
      if (x > 0) {
        this[0] = x;
      } else
      if (x < -1) {
        this[0] = x + this.DV;
      } else
      {
        this.t = 0;
      }
    };
    // BigInteger.prototype.fromString = bnpFromString;
    // (protected) set from string and radix
    BigInteger.prototype.fromString = function (s, b) {
      var k;
      if (b == 16) {
        k = 4;
      } else
      if (b == 8) {
        k = 3;
      } else
      if (b == 256) {
        k = 8;
        /* byte array */
      } else
      if (b == 2) {
        k = 1;
      } else
      if (b == 32) {
        k = 5;
      } else
      if (b == 4) {
        k = 2;
      } else
      {
        this.fromRadix(s, b);
        return;
      }
      this.t = 0;
      this.s = 0;
      var i = s.length;
      var mi = false;
      var sh = 0;
      while (--i >= 0) {
        var x = k == 8 ? +s[i] & 0xff : intAt(s, i);
        if (x < 0) {
          if (s.charAt(i) == "-") {
            mi = true;
          }
          continue;
        }
        mi = false;
        if (sh == 0) {
          this[this.t++] = x;
        } else
        if (sh + k > this.DB) {
          this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
          this[this.t++] = x >> this.DB - sh;
        } else
        {
          this[this.t - 1] |= x << sh;
        }
        sh += k;
        if (sh >= this.DB) {
          sh -= this.DB;
        }
      }
      if (k == 8 && (+s[0] & 0x80) != 0) {
        this.s = -1;
        if (sh > 0) {
          this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
        }
      }
      this.clamp();
      if (mi) {
        BigInteger.ZERO.subTo(this, this);
      }
    };
    // BigInteger.prototype.clamp = bnpClamp;
    // (protected) clamp off excess high words
    BigInteger.prototype.clamp = function () {
      var c = this.s & this.DM;
      while (this.t > 0 && this[this.t - 1] == c) {
        --this.t;
      }
    };
    // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    // (protected) r = this << n*DB
    BigInteger.prototype.dlShiftTo = function (n, r) {
      var i;
      for (i = this.t - 1; i >= 0; --i) {
        r[i + n] = this[i];
      }
      for (i = n - 1; i >= 0; --i) {
        r[i] = 0;
      }
      r.t = this.t + n;
      r.s = this.s;
    };
    // BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    // (protected) r = this >> n*DB
    BigInteger.prototype.drShiftTo = function (n, r) {
      for (var i = n; i < this.t; ++i) {
        r[i - n] = this[i];
      }
      r.t = Math.max(this.t - n, 0);
      r.s = this.s;
    };
    // BigInteger.prototype.lShiftTo = bnpLShiftTo;
    // (protected) r = this << n
    BigInteger.prototype.lShiftTo = function (n, r) {
      var bs = n % this.DB;
      var cbs = this.DB - bs;
      var bm = (1 << cbs) - 1;
      var ds = Math.floor(n / this.DB);
      var c = this.s << bs & this.DM;
      for (var i = this.t - 1; i >= 0; --i) {
        r[i + ds + 1] = this[i] >> cbs | c;
        c = (this[i] & bm) << bs;
      }
      for (var i = ds - 1; i >= 0; --i) {
        r[i] = 0;
      }
      r[ds] = c;
      r.t = this.t + ds + 1;
      r.s = this.s;
      r.clamp();
    };
    // BigInteger.prototype.rShiftTo = bnpRShiftTo;
    // (protected) r = this >> n
    BigInteger.prototype.rShiftTo = function (n, r) {
      r.s = this.s;
      var ds = Math.floor(n / this.DB);
      if (ds >= this.t) {
        r.t = 0;
        return;
      }
      var bs = n % this.DB;
      var cbs = this.DB - bs;
      var bm = (1 << bs) - 1;
      r[0] = this[ds] >> bs;
      for (var i = ds + 1; i < this.t; ++i) {
        r[i - ds - 1] |= (this[i] & bm) << cbs;
        r[i - ds] = this[i] >> bs;
      }
      if (bs > 0) {
        r[this.t - ds - 1] |= (this.s & bm) << cbs;
      }
      r.t = this.t - ds;
      r.clamp();
    };
    // BigInteger.prototype.subTo = bnpSubTo;
    // (protected) r = this - a
    BigInteger.prototype.subTo = function (a, r) {
      var i = 0;
      var c = 0;
      var m = Math.min(a.t, this.t);
      while (i < m) {
        c += this[i] - a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      if (a.t < this.t) {
        c -= a.s;
        while (i < this.t) {
          c += this[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += this.s;
      } else
      {
        c += this.s;
        while (i < a.t) {
          c -= a[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c -= a.s;
      }
      r.s = c < 0 ? -1 : 0;
      if (c < -1) {
        r[i++] = this.DV + c;
      } else
      if (c > 0) {
        r[i++] = c;
      }
      r.t = i;
      r.clamp();
    };
    // BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    // (protected) r = this * a, r != this,a (HAC 14.12)
    // "this" should be the larger one if appropriate.
    BigInteger.prototype.multiplyTo = function (a, r) {
      var x = this.abs();
      var y = a.abs();
      var i = x.t;
      r.t = i + y.t;
      while (--i >= 0) {
        r[i] = 0;
      }
      for (i = 0; i < y.t; ++i) {
        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
      }
      r.s = 0;
      r.clamp();
      if (this.s != a.s) {
        BigInteger.ZERO.subTo(r, r);
      }
    };
    // BigInteger.prototype.squareTo = bnpSquareTo;
    // (protected) r = this^2, r != this (HAC 14.16)
    BigInteger.prototype.squareTo = function (r) {
      var x = this.abs();
      var i = r.t = 2 * x.t;
      while (--i >= 0) {
        r[i] = 0;
      }
      for (i = 0; i < x.t - 1; ++i) {
        var c = x.am(i, x[i], r, 2 * i, 0, 1);
        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
          r[i + x.t] -= x.DV;
          r[i + x.t + 1] = 1;
        }
      }
      if (r.t > 0) {
        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
      }
      r.s = 0;
      r.clamp();
    };
    // BigInteger.prototype.divRemTo = bnpDivRemTo;
    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
    // r != q, this != m.  q or r may be null.
    BigInteger.prototype.divRemTo = function (m, q, r) {
      var pm = m.abs();
      if (pm.t <= 0) {
        return;
      }
      var pt = this.abs();
      if (pt.t < pm.t) {
        if (q != null) {
          q.fromInt(0);
        }
        if (r != null) {
          this.copyTo(r);
        }
        return;
      }
      if (r == null) {
        r = nbi();
      }
      var y = nbi();
      var ts = this.s;
      var ms = m.s;
      var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus
      if (nsh > 0) {
        pm.lShiftTo(nsh, y);
        pt.lShiftTo(nsh, r);
      } else
      {
        pm.copyTo(y);
        pt.copyTo(r);
      }
      var ys = y.t;
      var y0 = y[ys - 1];
      if (y0 == 0) {
        return;
      }
      var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
      var d1 = this.FV / yt;
      var d2 = (1 << this.F1) / yt;
      var e = 1 << this.F2;
      var i = r.t;
      var j = i - ys;
      var t = q == null ? nbi() : q;
      y.dlShiftTo(j, t);
      if (r.compareTo(t) >= 0) {
        r[r.t++] = 1;
        r.subTo(t, r);
      }
      BigInteger.ONE.dlShiftTo(ys, t);
      t.subTo(y, y); // "negative" y so we can replace sub with am later
      while (y.t < ys) {
        y[y.t++] = 0;
      }
      while (--j >= 0) {
        // Estimate quotient digit
        var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {// Try it out
          y.dlShiftTo(j, t);
          r.subTo(t, r);
          while (r[i] < --qd) {
            r.subTo(t, r);
          }
        }
      }
      if (q != null) {
        r.drShiftTo(ys, q);
        if (ts != ms) {
          BigInteger.ZERO.subTo(q, q);
        }
      }
      r.t = ys;
      r.clamp();
      if (nsh > 0) {
        r.rShiftTo(nsh, r);
      } // Denormalize remainder
      if (ts < 0) {
        BigInteger.ZERO.subTo(r, r);
      }
    };
    // BigInteger.prototype.invDigit = bnpInvDigit;
    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
    // justification:
    //         xy == 1 (mod m)
    //         xy =  1+km
    //   xy(2-xy) = (1+km)(1-km)
    // x[y(2-xy)] = 1-k^2m^2
    // x[y(2-xy)] == 1 (mod m^2)
    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
    // JS multiply "overflows" differently from C/C++, so care is needed here.
    BigInteger.prototype.invDigit = function () {
      if (this.t < 1) {
        return 0;
      }
      var x = this[0];
      if ((x & 1) == 0) {
        return 0;
      }
      var y = x & 3; // y == 1/x mod 2^2
      y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4
      y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8
      y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16
      // last step - calculate inverse mod DV directly;
      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
      y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits
      // we really want the negative inverse, and -DV < y < DV
      return y > 0 ? this.DV - y : -y;
    };
    // BigInteger.prototype.isEven = bnpIsEven;
    // (protected) true iff this is even
    BigInteger.prototype.isEven = function () {
      return (this.t > 0 ? this[0] & 1 : this.s) == 0;
    };
    // BigInteger.prototype.exp = bnpExp;
    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
    BigInteger.prototype.exp = function (e, z) {
      if (e > 0xffffffff || e < 1) {
        return BigInteger.ONE;
      }
      var r = nbi();
      var r2 = nbi();
      var g = z.convert(this);
      var i = nbits(e) - 1;
      g.copyTo(r);
      while (--i >= 0) {
        z.sqrTo(r, r2);
        if ((e & 1 << i) > 0) {
          z.mulTo(r2, g, r);
        } else
        {
          var t = r;
          r = r2;
          r2 = t;
        }
      }
      return z.revert(r);
    };
    // BigInteger.prototype.chunkSize = bnpChunkSize;
    // (protected) return x s.t. r^x < DV
    BigInteger.prototype.chunkSize = function (r) {
      return Math.floor(Math.LN2 * this.DB / Math.log(r));
    };
    // BigInteger.prototype.toRadix = bnpToRadix;
    // (protected) convert to radix string
    BigInteger.prototype.toRadix = function (b) {
      if (b == null) {
        b = 10;
      }
      if (this.signum() == 0 || b < 2 || b > 36) {
        return "0";
      }
      var cs = this.chunkSize(b);
      var a = Math.pow(b, cs);
      var d = nbv(a);
      var y = nbi();
      var z = nbi();
      var r = "";
      this.divRemTo(d, y, z);
      while (y.signum() > 0) {
        r = (a + z.intValue()).toString(b).substr(1) + r;
        y.divRemTo(d, y, z);
      }
      return z.intValue().toString(b) + r;
    };
    // BigInteger.prototype.fromRadix = bnpFromRadix;
    // (protected) convert from radix string
    BigInteger.prototype.fromRadix = function (s, b) {
      this.fromInt(0);
      if (b == null) {
        b = 10;
      }
      var cs = this.chunkSize(b);
      var d = Math.pow(b, cs);
      var mi = false;
      var j = 0;
      var w = 0;
      for (var i = 0; i < s.length; ++i) {
        var x = intAt(s, i);
        if (x < 0) {
          if (s.charAt(i) == "-" && this.signum() == 0) {
            mi = true;
          }
          continue;
        }
        w = b * w + x;
        if (++j >= cs) {
          this.dMultiply(d);
          this.dAddOffset(w, 0);
          j = 0;
          w = 0;
        }
      }
      if (j > 0) {
        this.dMultiply(Math.pow(b, j));
        this.dAddOffset(w, 0);
      }
      if (mi) {
        BigInteger.ZERO.subTo(this, this);
      }
    };
    // BigInteger.prototype.fromNumber = bnpFromNumber;
    // (protected) alternate constructor
    BigInteger.prototype.fromNumber = function (a, b, c) {
      if ("number" == typeof b) {
        // new BigInteger(int,int,RNG)
        if (a < 2) {
          this.fromInt(1);
        } else
        {
          this.fromNumber(a, c);
          if (!this.testBit(a - 1)) {
            // force MSB set
            this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
          }
          if (this.isEven()) {
            this.dAddOffset(1, 0);
          } // force odd
          while (!this.isProbablePrime(b)) {
            this.dAddOffset(2, 0);
            if (this.bitLength() > a) {
              this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
            }
          }
        }
      } else
      {
        // new BigInteger(int,RNG)
        var x = [];
        var t = a & 7;
        x.length = (a >> 3) + 1;
        b.nextBytes(x);
        if (t > 0) {
          x[0] &= (1 << t) - 1;
        } else
        {
          x[0] = 0;
        }
        this.fromString(x, 256);
      }
    };
    // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
    // (protected) r = this op a (bitwise)
    BigInteger.prototype.bitwiseTo = function (a, op, r) {
      var i;
      var f;
      var m = Math.min(a.t, this.t);
      for (i = 0; i < m; ++i) {
        r[i] = op(this[i], a[i]);
      }
      if (a.t < this.t) {
        f = a.s & this.DM;
        for (i = m; i < this.t; ++i) {
          r[i] = op(this[i], f);
        }
        r.t = this.t;
      } else
      {
        f = this.s & this.DM;
        for (i = m; i < a.t; ++i) {
          r[i] = op(f, a[i]);
        }
        r.t = a.t;
      }
      r.s = op(this.s, a.s);
      r.clamp();
    };
    // BigInteger.prototype.changeBit = bnpChangeBit;
    // (protected) this op (1<<n)
    BigInteger.prototype.changeBit = function (n, op) {
      var r = BigInteger.ONE.shiftLeft(n);
      this.bitwiseTo(r, op, r);
      return r;
    };
    // BigInteger.prototype.addTo = bnpAddTo;
    // (protected) r = this + a
    BigInteger.prototype.addTo = function (a, r) {
      var i = 0;
      var c = 0;
      var m = Math.min(a.t, this.t);
      while (i < m) {
        c += this[i] + a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      if (a.t < this.t) {
        c += a.s;
        while (i < this.t) {
          c += this[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += this.s;
      } else
      {
        c += this.s;
        while (i < a.t) {
          c += a[i];
          r[i++] = c & this.DM;
          c >>= this.DB;
        }
        c += a.s;
      }
      r.s = c < 0 ? -1 : 0;
      if (c > 0) {
        r[i++] = c;
      } else
      if (c < -1) {
        r[i++] = this.DV + c;
      }
      r.t = i;
      r.clamp();
    };
    // BigInteger.prototype.dMultiply = bnpDMultiply;
    // (protected) this *= n, this >= 0, 1 < n < DV
    BigInteger.prototype.dMultiply = function (n) {
      this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
      ++this.t;
      this.clamp();
    };
    // BigInteger.prototype.dAddOffset = bnpDAddOffset;
    // (protected) this += n << w words, this >= 0
    BigInteger.prototype.dAddOffset = function (n, w) {
      if (n == 0) {
        return;
      }
      while (this.t <= w) {
        this[this.t++] = 0;
      }
      this[w] += n;
      while (this[w] >= this.DV) {
        this[w] -= this.DV;
        if (++w >= this.t) {
          this[this.t++] = 0;
        }
        ++this[w];
      }
    };
    // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
    // (protected) r = lower n words of "this * a", a.t <= n
    // "this" should be the larger one if appropriate.
    BigInteger.prototype.multiplyLowerTo = function (a, n, r) {
      var i = Math.min(this.t + a.t, n);
      r.s = 0; // assumes a,this >= 0
      r.t = i;
      while (i > 0) {
        r[--i] = 0;
      }
      for (var j = r.t - this.t; i < j; ++i) {
        r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
      }
      for (var j = Math.min(a.t, n); i < j; ++i) {
        this.am(0, a[i], r, i, 0, n - i);
      }
      r.clamp();
    };
    // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
    // (protected) r = "this * a" without lower n words, n > 0
    // "this" should be the larger one if appropriate.
    BigInteger.prototype.multiplyUpperTo = function (a, n, r) {
      --n;
      var i = r.t = this.t + a.t - n;
      r.s = 0; // assumes a,this >= 0
      while (--i >= 0) {
        r[i] = 0;
      }
      for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
        r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
      }
      r.clamp();
      r.drShiftTo(1, r);
    };
    // BigInteger.prototype.modInt = bnpModInt;
    // (protected) this % n, n < 2^26
    BigInteger.prototype.modInt = function (n) {
      if (n <= 0) {
        return 0;
      }
      var d = this.DV % n;
      var r = this.s < 0 ? n - 1 : 0;
      if (this.t > 0) {
        if (d == 0) {
          r = this[0] % n;
        } else
        {
          for (var i = this.t - 1; i >= 0; --i) {
            r = (d * r + this[i]) % n;
          }
        }
      }
      return r;
    };
    // BigInteger.prototype.millerRabin = bnpMillerRabin;
    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
    BigInteger.prototype.millerRabin = function (t) {
      var n1 = this.subtract(BigInteger.ONE);
      var k = n1.getLowestSetBit();
      if (k <= 0) {
        return false;
      }
      var r = n1.shiftRight(k);
      t = t + 1 >> 1;
      if (t > lowprimes.length) {
        t = lowprimes.length;
      }
      var a = nbi();
      for (var i = 0; i < t; ++i) {
        // Pick bases at random, instead of starting at 2
        a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
        var y = a.modPow(r, this);
        if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
          var j = 1;
          while (j++ < k && y.compareTo(n1) != 0) {
            y = y.modPowInt(2, this);
            if (y.compareTo(BigInteger.ONE) == 0) {
              return false;
            }
          }
          if (y.compareTo(n1) != 0) {
            return false;
          }
        }
      }
      return true;
    };
    // BigInteger.prototype.square = bnSquare;
    // (public) this^2
    BigInteger.prototype.square = function () {
      var r = nbi();
      this.squareTo(r);
      return r;
    };
    //#region ASYNC
    // Public API method
    BigInteger.prototype.gcda = function (a, callback) {
      var x = this.s < 0 ? this.negate() : this.clone();
      var y = a.s < 0 ? a.negate() : a.clone();
      if (x.compareTo(y) < 0) {
        var t = x;
        x = y;
        y = t;
      }
      var i = x.getLowestSetBit();
      var g = y.getLowestSetBit();
      if (g < 0) {
        callback(x);
        return;
      }
      if (i < g) {
        g = i;
      }
      if (g > 0) {
        x.rShiftTo(g, x);
        y.rShiftTo(g, y);
      }
      // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.
      var gcda1 = function gcda1() {
        if ((i = x.getLowestSetBit()) > 0) {
          x.rShiftTo(i, x);
        }
        if ((i = y.getLowestSetBit()) > 0) {
          y.rShiftTo(i, y);
        }
        if (x.compareTo(y) >= 0) {
          x.subTo(y, x);
          x.rShiftTo(1, x);
        } else
        {
          y.subTo(x, y);
          y.rShiftTo(1, y);
        }
        if (!(x.signum() > 0)) {
          if (g > 0) {
            y.lShiftTo(g, y);
          }
          setTimeout(function () {callback(y);}, 0); // escape
        } else
        {
          setTimeout(gcda1, 0);
        }
      };
      setTimeout(gcda1, 10);
    };
    // (protected) alternate constructor
    BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {
      if ("number" == typeof b) {
        if (a < 2) {
          this.fromInt(1);
        } else
        {
          this.fromNumber(a, c);
          if (!this.testBit(a - 1)) {
            this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
          }
          if (this.isEven()) {
            this.dAddOffset(1, 0);
          }
          var bnp_1 = this;
          var bnpfn1_1 = function bnpfn1_1() {
            bnp_1.dAddOffset(2, 0);
            if (bnp_1.bitLength() > a) {
              bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);
            }
            if (bnp_1.isProbablePrime(b)) {
              setTimeout(function () {callback();}, 0); // escape
            } else
            {
              setTimeout(bnpfn1_1, 0);
            }
          };
          setTimeout(bnpfn1_1, 0);
        }
      } else
      {
        var x = [];
        var t = a & 7;
        x.length = (a >> 3) + 1;
        b.nextBytes(x);
        if (t > 0) {
          x[0] &= (1 << t) - 1;
        } else
        {
          x[0] = 0;
        }
        this.fromString(x, 256);
      }
    };
    return BigInteger;
  }();
  //#region REDUCERS
  //#region NullExp
  var NullExp = /** @class */function () {
    function NullExp() {
    }
    // NullExp.prototype.convert = nNop;
    NullExp.prototype.convert = function (x) {
      return x;
    };
    // NullExp.prototype.revert = nNop;
    NullExp.prototype.revert = function (x) {
      return x;
    };
    // NullExp.prototype.mulTo = nMulTo;
    NullExp.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
    };
    // NullExp.prototype.sqrTo = nSqrTo;
    NullExp.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
    };
    return NullExp;
  }();
  // Modular reduction using "classic" algorithm
  var Classic = /** @class */function () {
    function Classic(m) {
      this.m = m;
    }
    // Classic.prototype.convert = cConvert;
    Classic.prototype.convert = function (x) {
      if (x.s < 0 || x.compareTo(this.m) >= 0) {
        return x.mod(this.m);
      } else
      {
        return x;
      }
    };
    // Classic.prototype.revert = cRevert;
    Classic.prototype.revert = function (x) {
      return x;
    };
    // Classic.prototype.reduce = cReduce;
    Classic.prototype.reduce = function (x) {
      x.divRemTo(this.m, null, x);
    };
    // Classic.prototype.mulTo = cMulTo;
    Classic.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    };
    // Classic.prototype.sqrTo = cSqrTo;
    Classic.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
      this.reduce(r);
    };
    return Classic;
  }();
  //#endregion
  //#region Montgomery
  // Montgomery reduction
  var Montgomery = /** @class */function () {
    function Montgomery(m) {
      this.m = m;
      this.mp = m.invDigit();
      this.mpl = this.mp & 0x7fff;
      this.mph = this.mp >> 15;
      this.um = (1 << m.DB - 15) - 1;
      this.mt2 = 2 * m.t;
    }
    // Montgomery.prototype.convert = montConvert;
    // xR mod m
    Montgomery.prototype.convert = function (x) {
      var r = nbi();
      x.abs().dlShiftTo(this.m.t, r);
      r.divRemTo(this.m, null, r);
      if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
        this.m.subTo(r, r);
      }
      return r;
    };
    // Montgomery.prototype.revert = montRevert;
    // x/R mod m
    Montgomery.prototype.revert = function (x) {
      var r = nbi();
      x.copyTo(r);
      this.reduce(r);
      return r;
    };
    // Montgomery.prototype.reduce = montReduce;
    // x = x/R mod m (HAC 14.32)
    Montgomery.prototype.reduce = function (x) {
      while (x.t <= this.mt2) {
        // pad x so am has enough room later
        x[x.t++] = 0;
      }
      for (var i = 0; i < this.m.t; ++i) {
        // faster way of calculating u0 = x[i]*mp mod DV
        var j = x[i] & 0x7fff;
        var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
        // use am to combine the multiply-shift-add into one call
        j = i + this.m.t;
        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
        // propagate carry
        while (x[j] >= x.DV) {
          x[j] -= x.DV;
          x[++j]++;
        }
      }
      x.clamp();
      x.drShiftTo(this.m.t, x);
      if (x.compareTo(this.m) >= 0) {
        x.subTo(this.m, x);
      }
    };
    // Montgomery.prototype.mulTo = montMulTo;
    // r = "xy/R mod m"; x,y != r
    Montgomery.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    };
    // Montgomery.prototype.sqrTo = montSqrTo;
    // r = "x^2/R mod m"; x != r
    Montgomery.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
      this.reduce(r);
    };
    return Montgomery;
  }();
  //#endregion Montgomery
  //#region Barrett
  // Barrett modular reduction
  var Barrett = /** @class */function () {
    function Barrett(m) {
      this.m = m;
      // setup Barrett
      this.r2 = nbi();
      this.q3 = nbi();
      BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
      this.mu = this.r2.divide(m);
    }
    // Barrett.prototype.convert = barrettConvert;
    Barrett.prototype.convert = function (x) {
      if (x.s < 0 || x.t > 2 * this.m.t) {
        return x.mod(this.m);
      } else
      if (x.compareTo(this.m) < 0) {
        return x;
      } else
      {
        var r = nbi();
        x.copyTo(r);
        this.reduce(r);
        return r;
      }
    };
    // Barrett.prototype.revert = barrettRevert;
    Barrett.prototype.revert = function (x) {
      return x;
    };
    // Barrett.prototype.reduce = barrettReduce;
    // x = x mod m (HAC 14.42)
    Barrett.prototype.reduce = function (x) {
      x.drShiftTo(this.m.t - 1, this.r2);
      if (x.t > this.m.t + 1) {
        x.t = this.m.t + 1;
        x.clamp();
      }
      this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
      this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
      while (x.compareTo(this.r2) < 0) {
        x.dAddOffset(1, this.m.t + 1);
      }
      x.subTo(this.r2, x);
      while (x.compareTo(this.m) >= 0) {
        x.subTo(this.m, x);
      }
    };
    // Barrett.prototype.mulTo = barrettMulTo;
    // r = x*y mod m; x,y != r
    Barrett.prototype.mulTo = function (x, y, r) {
      x.multiplyTo(y, r);
      this.reduce(r);
    };
    // Barrett.prototype.sqrTo = barrettSqrTo;
    // r = x^2 mod m; x != r
    Barrett.prototype.sqrTo = function (x, r) {
      x.squareTo(r);
      this.reduce(r);
    };
    return Barrett;
  }();
  //#endregion
  //#endregion REDUCERS
  // return new, unset BigInteger
  function nbi() {return new BigInteger(null);}
  function parseBigInt(str, r) {
    return new BigInteger(str, r);
  }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i, x, w, j, c, n) {
    while (--n >= 0) {
      var v = x * this[i++] + w[j] + c;
      c = Math.floor(v / 0x4000000);
      w[j++] = v & 0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i, x, w, j, c, n) {
    var xl = x & 0x7fff;
    var xh = x >> 15;
    while (--n >= 0) {
      var l = this[i] & 0x7fff;
      var h = this[i++] >> 15;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
      w[j++] = l & 0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i, x, w, j, c, n) {
    var xl = x & 0x3fff;
    var xh = x >> 14;
    while (--n >= 0) {
      var l = this[i] & 0x3fff;
      var h = this[i++] >> 14;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
      c = (l >> 28) + (m >> 14) + xh * h;
      w[j++] = l & 0xfffffff;
    }
    return c;
  }
  if (j_lm && navigator.appName == "Microsoft Internet Explorer") {
    BigInteger.prototype.am = am2;
    dbits = 30;
  } else
  if (j_lm && navigator.appName != "Netscape") {
    BigInteger.prototype.am = am1;
    dbits = 26;
  } else
  {// Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = (1 << dbits) - 1;
  BigInteger.prototype.DV = 1 << dbits;
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2, BI_FP);
  BigInteger.prototype.F1 = BI_FP - dbits;
  BigInteger.prototype.F2 = 2 * dbits - BI_FP;
  // Digit conversions
  var BI_RC = [];
  var rr;
  var vv;
  rr = "0".charCodeAt(0);
  for (vv = 0; vv <= 9; ++vv) {
    BI_RC[rr++] = vv;
  }
  rr = "a".charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }
  rr = "A".charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }
  function intAt(s, i) {
    var c = BI_RC[s.charCodeAt(i)];
    return c == null ? -1 : c;
  }
  // return bigint initialized to value
  function nbv(i) {
    var r = nbi();
    r.fromInt(i);
    return r;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1;
    var t;
    if ((t = x >>> 16) != 0) {
      x = t;
      r += 16;
    }
    if ((t = x >> 8) != 0) {
      x = t;
      r += 8;
    }
    if ((t = x >> 4) != 0) {
      x = t;
      r += 4;
    }
    if ((t = x >> 2) != 0) {
      x = t;
      r += 2;
    }
    if ((t = x >> 1) != 0) {
      x = t;
      r += 1;
    }
    return r;
  }
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // prng4.js - uses Arcfour as a PRNG
  var Arcfour = /** @class */function () {
    function Arcfour() {
      this.i = 0;
      this.j = 0;
      this.S = [];
    }
    // Arcfour.prototype.init = ARC4init;
    // Initialize arcfour context from key, an array of ints, each from [0..255]
    Arcfour.prototype.init = function (key) {
      var i;
      var j;
      var t;
      for (i = 0; i < 256; ++i) {
        this.S[i] = i;
      }
      j = 0;
      for (i = 0; i < 256; ++i) {
        j = j + this.S[i] + key[i % key.length] & 255;
        t = this.S[i];
        this.S[i] = this.S[j];
        this.S[j] = t;
      }
      this.i = 0;
      this.j = 0;
    };
    // Arcfour.prototype.next = ARC4next;
    Arcfour.prototype.next = function () {
      var t;
      this.i = this.i + 1 & 255;
      this.j = this.j + this.S[this.i] & 255;
      t = this.S[this.i];
      this.S[this.i] = this.S[this.j];
      this.S[this.j] = t;
      return this.S[t + this.S[this.i] & 255];
    };
    return Arcfour;
  }();
  // Plug in your RNG constructor here
  function prng_newstate() {
    return new Arcfour();
  }
  // Pool size must be a multiple of 4 and greater than 32.
  // An array of bytes the size of the pool will be passed to init()
  var rng_psize = 256;

  // Random number generator - requires a PRNG backend, e.g. prng4.js
  var rng_state;
  var rng_pool = null;
  var rng_pptr;
  // Initialize the pool with junk if needed.
  if (rng_pool == null) {
    rng_pool = [];
    rng_pptr = 0;
    var t = void 0;
    if (window.crypto && window.crypto.getRandomValues) {
      // Extract entropy (2048 bits) from RNG if available
      var z = new Uint32Array(256);
      window.crypto.getRandomValues(z);
      for (t = 0; t < z.length; ++t) {
        rng_pool[rng_pptr++] = z[t] & 255;
      }
    }
    // Use mouse events for entropy, if we do not have enough entropy by the time
    // we need it, entropy will be generated by Math.random.
    var onMouseMoveListener_1 = function onMouseMoveListener_1(ev) {
      this.count = this.count || 0;
      if (this.count >= 256 || rng_pptr >= rng_psize) {
        if (window.removeEventListener) {
          window.removeEventListener("mousemove", onMouseMoveListener_1, false);
        } else
        if (window.detachEvent) {
          window.detachEvent("onmousemove", onMouseMoveListener_1);
        }
        return;
      }
      try {
        var mouseCoordinates = ev.x + ev.y;
        rng_pool[rng_pptr++] = mouseCoordinates & 255;
        this.count += 1;
      }
      catch (e) {
        // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.
      }
    };
    if (window.addEventListener) {
      window.addEventListener("mousemove", onMouseMoveListener_1, false);
    } else
    if (window.attachEvent) {
      window.attachEvent("onmousemove", onMouseMoveListener_1);
    }
  }
  function rng_get_byte() {
    if (rng_state == null) {
      rng_state = prng_newstate();
      // At this point, we may not have collected enough entropy.  If not, fall back to Math.random
      while (rng_pptr < rng_psize) {
        var random = Math.floor(65536 * Math.random());
        rng_pool[rng_pptr++] = random & 255;
      }
      rng_state.init(rng_pool);
      for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
        rng_pool[rng_pptr] = 0;
      }
      rng_pptr = 0;
    }
    // TODO: allow reseeding after first request
    return rng_state.next();
  }
  var SecureRandom = /** @class */function () {
    function SecureRandom() {
    }
    SecureRandom.prototype.nextBytes = function (ba) {
      for (var i = 0; i < ba.length; ++i) {
        ba[i] = rng_get_byte();
      }
    };
    return SecureRandom;
  }();

  // Depends on jsbn.js and rng.js
  // function linebrk(s,n) {
  //   var ret = "";
  //   var i = 0;
  //   while(i + n < s.length) {
  //     ret += s.substring(i,i+n) + "\n";
  //     i += n;
  //   }
  //   return ret + s.substring(i,s.length);
  // }
  // function byte2Hex(b) {
  //   if(b < 0x10)
  //     return "0" + b.toString(16);
  //   else
  //     return b.toString(16);
  // }
  function pkcs1pad1(s, n) {
    if (n < s.length + 22) {
      console.error("Message too long for RSA");
      return null;
    }
    var len = n - s.length - 6;
    var filler = "";
    for (var f = 0; f < len; f += 2) {
      filler += "ff";
    }
    var m = "0001" + filler + "00" + s;
    return parseBigInt(m, 16);
  }
  // PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint
  function pkcs1pad2(s, n) {
    if (n < s.length + 11) {// TODO: fix for utf-8
      console.error("Message too long for RSA");
      return null;
    }
    var ba = [];
    var i = s.length - 1;
    while (i >= 0 && n > 0) {
      var c = s.charCodeAt(i--);
      if (c < 128) {// encode using utf-8
        ba[--n] = c;
      } else
      if (c > 127 && c < 2048) {
        ba[--n] = c & 63 | 128;
        ba[--n] = c >> 6 | 192;
      } else
      {
        ba[--n] = c & 63 | 128;
        ba[--n] = c >> 6 & 63 | 128;
        ba[--n] = c >> 12 | 224;
      }
    }
    ba[--n] = 0;
    var rng = new SecureRandom();
    var x = [];
    while (n > 2) {// random non-zero pad
      x[0] = 0;
      while (x[0] == 0) {
        rng.nextBytes(x);
      }
      ba[--n] = x[0];
    }
    ba[--n] = 2;
    ba[--n] = 0;
    return new BigInteger(ba);
  }
  // "empty" RSA key constructor
  var RSAKey = /** @class */function () {
    function RSAKey() {
      this.n = null;
      this.e = 0;
      this.d = null;
      this.p = null;
      this.q = null;
      this.dmp1 = null;
      this.dmq1 = null;
      this.coeff = null;
    }
    //#region PROTECTED
    // protected
    // RSAKey.prototype.doPublic = RSADoPublic;
    // Perform raw public operation on "x": return x^e (mod n)
    RSAKey.prototype.doPublic = function (x) {
      return x.modPowInt(this.e, this.n);
    };
    // RSAKey.prototype.doPrivate = RSADoPrivate;
    // Perform raw private operation on "x": return x^d (mod n)
    RSAKey.prototype.doPrivate = function (x) {
      if (this.p == null || this.q == null) {
        return x.modPow(this.d, this.n);
      }
      // TODO: re-calculate any missing CRT params
      var xp = x.mod(this.p).modPow(this.dmp1, this.p);
      var xq = x.mod(this.q).modPow(this.dmq1, this.q);
      while (xp.compareTo(xq) < 0) {
        xp = xp.add(this.p);
      }
      return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);
    };
    //#endregion PROTECTED
    //#region PUBLIC
    // RSAKey.prototype.setPublic = RSASetPublic;
    // Set the public key fields N and e from hex strings
    RSAKey.prototype.setPublic = function (N, E) {
      if (N != null && E != null && N.length > 0 && E.length > 0) {
        this.n = parseBigInt(N, 16);
        this.e = parseInt(E, 16);
      } else
      {
        console.error("Invalid RSA public key");
      }
    };
    // RSAKey.prototype.encrypt = RSAEncrypt;
    // Return the PKCS#1 RSA encryption of "text" as an even-length hex string
    RSAKey.prototype.encrypt = function (text) {
      var m = pkcs1pad2(text, this.n.bitLength() + 7 >> 3);
      if (m == null) {
        return null;
      }
      var c = this.doPublic(m);
      if (c == null) {
        return null;
      }
      var h = c.toString(16);
      if ((h.length & 1) == 0) {
        return h;
      } else
      {
        return "0" + h;
      }
    };
    // RSAKey.prototype.setPrivate = RSASetPrivate;
    // Set the private key fields N, e, and d from hex strings
    RSAKey.prototype.setPrivate = function (N, E, D) {
      if (N != null && E != null && N.length > 0 && E.length > 0) {
        this.n = parseBigInt(N, 16);
        this.e = parseInt(E, 16);
        this.d = parseBigInt(D, 16);
      } else
      {
        console.error("Invalid RSA private key");
      }
    };
    // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;
    // Set the private key fields N, e, d and CRT params from hex strings
    RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {
      if (N != null && E != null && N.length > 0 && E.length > 0) {
        this.n = parseBigInt(N, 16);
        this.e = parseInt(E, 16);
        this.d = parseBigInt(D, 16);
        this.p = parseBigInt(P, 16);
        this.q = parseBigInt(Q, 16);
        this.dmp1 = parseBigInt(DP, 16);
        this.dmq1 = parseBigInt(DQ, 16);
        this.coeff = parseBigInt(C, 16);
      } else
      {
        console.error("Invalid RSA private key");
      }
    };
    // RSAKey.prototype.generate = RSAGenerate;
    // Generate a new random private key B bits long, using public expt E
    RSAKey.prototype.generate = function (B, E) {
      var rng = new SecureRandom();
      var qs = B >> 1;
      this.e = parseInt(E, 16);
      var ee = new BigInteger(E, 16);
      for (;;) {
        for (;;) {
          this.p = new BigInteger(B - qs, 1, rng);
          if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {
            break;
          }
        }
        for (;;) {
          this.q = new BigInteger(qs, 1, rng);
          if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {
            break;
          }
        }
        if (this.p.compareTo(this.q) <= 0) {
          var t = this.p;
          this.p = this.q;
          this.q = t;
        }
        var p1 = this.p.subtract(BigInteger.ONE);
        var q1 = this.q.subtract(BigInteger.ONE);
        var phi = p1.multiply(q1);
        if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {
          this.n = this.p.multiply(this.q);
          this.d = ee.modInverse(phi);
          this.dmp1 = this.d.mod(p1);
          this.dmq1 = this.d.mod(q1);
          this.coeff = this.q.modInverse(this.p);
          break;
        }
      }
    };
    // RSAKey.prototype.decrypt = RSADecrypt;
    // Return the PKCS#1 RSA decryption of "ctext".
    // "ctext" is an even-length hex string and the output is a plain string.
    RSAKey.prototype.decrypt = function (ctext) {
      var c = parseBigInt(ctext, 16);
      var m = this.doPrivate(c);
      if (m == null) {
        return null;
      }
      return pkcs1unpad2(m, this.n.bitLength() + 7 >> 3);
    };
    // Generate a new random private key B bits long, using public expt E
    RSAKey.prototype.generateAsync = function (B, E, callback) {
      var rng = new SecureRandom();
      var qs = B >> 1;
      this.e = parseInt(E, 16);
      var ee = new BigInteger(E, 16);
      var rsa = this;
      // These functions have non-descript names because they were originally for(;;) loops.
      // I don't know about cryptography to give them better names than loop1-4.
      var loop1 = function loop1() {
        var loop4 = function loop4() {
          if (rsa.p.compareTo(rsa.q) <= 0) {
            var t = rsa.p;
            rsa.p = rsa.q;
            rsa.q = t;
          }
          var p1 = rsa.p.subtract(BigInteger.ONE);
          var q1 = rsa.q.subtract(BigInteger.ONE);
          var phi = p1.multiply(q1);
          if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {
            rsa.n = rsa.p.multiply(rsa.q);
            rsa.d = ee.modInverse(phi);
            rsa.dmp1 = rsa.d.mod(p1);
            rsa.dmq1 = rsa.d.mod(q1);
            rsa.coeff = rsa.q.modInverse(rsa.p);
            setTimeout(function () {callback();}, 0); // escape
          } else
          {
            setTimeout(loop1, 0);
          }
        };
        var loop3 = function loop3() {
          rsa.q = nbi();
          rsa.q.fromNumberAsync(qs, 1, rng, function () {
            rsa.q.subtract(BigInteger.ONE).gcda(ee, function (r) {
              if (r.compareTo(BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {
                setTimeout(loop4, 0);
              } else
              {
                setTimeout(loop3, 0);
              }
            });
          });
        };
        var loop2 = function loop2() {
          rsa.p = nbi();
          rsa.p.fromNumberAsync(B - qs, 1, rng, function () {
            rsa.p.subtract(BigInteger.ONE).gcda(ee, function (r) {
              if (r.compareTo(BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {
                setTimeout(loop3, 0);
              } else
              {
                setTimeout(loop2, 0);
              }
            });
          });
        };
        setTimeout(loop2, 0);
      };
      setTimeout(loop1, 0);
    };
    RSAKey.prototype.sign = function (text, digestMethod, digestName) {
      var header = getDigestHeader(digestName);
      var digest = header + digestMethod(text).toString();
      var m = pkcs1pad1(digest, this.n.bitLength() / 4);
      if (m == null) {
        return null;
      }
      var c = this.doPrivate(m);
      if (c == null) {
        return null;
      }
      var h = c.toString(16);
      if ((h.length & 1) == 0) {
        return h;
      } else
      {
        return "0" + h;
      }
    };
    RSAKey.prototype.verify = function (text, signature, digestMethod) {
      var c = parseBigInt(signature, 16);
      var m = this.doPublic(c);
      if (m == null) {
        return null;
      }
      var unpadded = m.toString(16).replace(/^1f+00/, "");
      var digest = removeDigestHeader(unpadded);
      return digest == digestMethod(text).toString();
    };
    return RSAKey;
  }();
  // Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext
  function pkcs1unpad2(d, n) {
    var b = d.toByteArray();
    var i = 0;
    while (i < b.length && b[i] == 0) {
      ++i;
    }
    if (b.length - i != n - 1 || b[i] != 2) {
      return null;
    }
    ++i;
    while (b[i] != 0) {
      if (++i >= b.length) {
        return null;
      }
    }
    var ret = "";
    while (++i < b.length) {
      var c = b[i] & 255;
      if (c < 128) {// utf-8 decode
        ret += String.fromCharCode(c);
      } else
      if (c > 191 && c < 224) {
        ret += String.fromCharCode((c & 31) << 6 | b[i + 1] & 63);
        ++i;
      } else
      {
        ret += String.fromCharCode((c & 15) << 12 | (b[i + 1] & 63) << 6 | b[i + 2] & 63);
        i += 2;
      }
    }
    return ret;
  }
  // https://tools.ietf.org/html/rfc3447#page-43
  var DIGEST_HEADERS = {
    md2: "3020300c06082a864886f70d020205000410",
    md5: "3020300c06082a864886f70d020505000410",
    sha1: "3021300906052b0e03021a05000414",
    sha224: "302d300d06096086480165030402040500041c",
    sha256: "3031300d060960864801650304020105000420",
    sha384: "3041300d060960864801650304020205000430",
    sha512: "3051300d060960864801650304020305000440",
    ripemd160: "3021300906052b2403020105000414" };

  function getDigestHeader(name) {
    return DIGEST_HEADERS[name] || "";
  }
  function removeDigestHeader(str) {
    for (var name_1 in DIGEST_HEADERS) {
      if (DIGEST_HEADERS.hasOwnProperty(name_1)) {
        var header = DIGEST_HEADERS[name_1];
        var len = header.length;
        if (str.substr(0, len) == header) {
          return str.substr(len);
        }
      }
    }
    return str;
  }
  // Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
  // function RSAEncryptB64(text) {
  //  var h = this.encrypt(text);
  //  if(h) return hex2b64(h); else return null;
  // }
  // public
  // RSAKey.prototype.encrypt_b64 = RSAEncryptB64;

  /*!
  Copyright (c) 2011, Yahoo! Inc. All rights reserved.
  Code licensed under the BSD License:
  http://developer.yahoo.com/yui/license.html
  version: 2.9.0
  */
  var YAHOO = {};
  YAHOO.lang = {
    /**
                  * Utility to set up the prototype, constructor and superclass properties to
                  * support an inheritance strategy that can chain constructors and methods.
                  * Static members will not be inherited.
                  *
                  * @method extend
                  * @static
                  * @param {Function} subc   the object to modify
                  * @param {Function} superc the object to inherit
                  * @param {Object} overrides  additional properties/methods to add to the
                  *                              subclass prototype.  These will override the
                  *                              matching items obtained from the superclass
                  *                              if present.
                  */
    extend: function extend(subc, superc, overrides) {
      if (!superc || !subc) {
        throw new Error("YAHOO.lang.extend failed, please check that " +
        "all dependencies are included.");
      }

      var F = function F() {};
      F.prototype = superc.prototype;
      subc.prototype = new F();
      subc.prototype.constructor = subc;
      subc.superclass = superc.prototype;

      if (superc.prototype.constructor == Object.prototype.constructor) {
        superc.prototype.constructor = superc;
      }

      if (overrides) {
        var i;
        for (i in overrides) {
          subc.prototype[i] = overrides[i];
        }

        /*
           * IE will not enumerate native functions in a derived object even if the
           * function was overridden.  This is a workaround for specific functions
           * we care about on the Object prototype.
           * @property _IEEnumFix
           * @param {Function} r  the object to receive the augmentation
           * @param {Function} s  the object that supplies the properties to augment
           * @static
           * @private
           */
        var _IEEnumFix = function _IEEnumFix() {},
        ADD = ["toString", "valueOf"];
        try {
          if (/MSIE/.test(navigator.userAgent)) {
            _IEEnumFix = function _IEEnumFix(r, s) {
              for (i = 0; i < ADD.length; i = i + 1) {
                var fname = ADD[i],f = s[fname];
                if (typeof f === 'function' && f != Object.prototype[fname]) {
                  r[fname] = f;
                }
              }
            };
          }
        } catch (ex) {}_IEEnumFix(subc.prototype, overrides);
      }
    } };


  /* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license
          */

  /**
              * @fileOverview
              * @name asn1-1.0.js
              * @author Kenji Urushima kenji.urushima@gmail.com
              * @version asn1 1.0.13 (2017-Jun-02)
              * @since jsrsasign 2.1
              * @license <a href="https://kjur.github.io/jsrsasign/license/">MIT License</a>
              */

  /**
                  * kjur's class library name space
                  * <p>
                  * This name space provides following name spaces:
                  * <ul>
                  * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>
                  * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>
                  * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature
                  * class and utilities</li>
                  * </ul>
                  * </p>
                  * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.
                  * @name KJUR
                  * @namespace kjur's class library name space
                  */
  var KJUR = {};

  /**
                  * kjur's ASN.1 class library name space
                  * <p>
                  * This is ITU-T X.690 ASN.1 DER encoder class library and
                  * class structure and methods is very similar to
                  * org.bouncycastle.asn1 package of
                  * well known BouncyCaslte Cryptography Library.
                  * <h4>PROVIDING ASN.1 PRIMITIVES</h4>
                  * Here are ASN.1 DER primitive classes.
                  * <ul>
                  * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>
                  * <li>0x02 {@link KJUR.asn1.DERInteger}</li>
                  * <li>0x03 {@link KJUR.asn1.DERBitString}</li>
                  * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>
                  * <li>0x05 {@link KJUR.asn1.DERNull}</li>
                  * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>
                  * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>
                  * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>
                  * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>
                  * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>
                  * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>
                  * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>
                  * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>
                  * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>
                  * <li>0x30 {@link KJUR.asn1.DERSequence}</li>
                  * <li>0x31 {@link KJUR.asn1.DERSet}</li>
                  * </ul>
                  * <h4>OTHER ASN.1 CLASSES</h4>
                  * <ul>
                  * <li>{@link KJUR.asn1.ASN1Object}</li>
                  * <li>{@link KJUR.asn1.DERAbstractString}</li>
                  * <li>{@link KJUR.asn1.DERAbstractTime}</li>
                  * <li>{@link KJUR.asn1.DERAbstractStructured}</li>
                  * <li>{@link KJUR.asn1.DERTaggedObject}</li>
                  * </ul>
                  * <h4>SUB NAME SPACES</h4>
                  * <ul>
                  * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>
                  * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>
                  * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>
                  * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>
                  * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>
                  * </ul>
                  * </p>
                  * NOTE: Please ignore method summary and document of this namespace.
                  * This caused by a bug of jsdoc2.
                  * @name KJUR.asn1
                  * @namespace
                  */
  if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) KJUR.asn1 = {};

  /**
                                                                      * ASN1 utilities class
                                                                      * @name KJUR.asn1.ASN1Util
                                                                      * @class ASN1 utilities class
                                                                      * @since asn1 1.0.2
                                                                      */
  KJUR.asn1.ASN1Util = new function () {
    this.integerToByteHex = function (i) {
      var h = i.toString(16);
      if (h.length % 2 == 1) h = '0' + h;
      return h;
    };
    this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {
      var h = bigIntegerValue.toString(16);
      if (h.substr(0, 1) != '-') {
        if (h.length % 2 == 1) {
          h = '0' + h;
        } else {
          if (!h.match(/^[0-7]/)) {
            h = '00' + h;
          }
        }
      } else {
        var hPos = h.substr(1);
        var xorLen = hPos.length;
        if (xorLen % 2 == 1) {
          xorLen += 1;
        } else {
          if (!h.match(/^[0-7]/)) {
            xorLen += 2;
          }
        }
        var hMask = '';
        for (var i = 0; i < xorLen; i++) {
          hMask += 'f';
        }
        var biMask = new BigInteger(hMask, 16);
        var biNeg = biMask.xor(bigIntegerValue).add(BigInteger.ONE);
        h = biNeg.toString(16).replace(/^-/, '');
      }
      return h;
    };
    /**
        * get PEM string from hexadecimal data and header string
        * @name getPEMStringFromHex
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {String} dataHex hexadecimal string of PEM body
        * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')
        * @return {String} PEM formatted string of input data
        * @description
        * This method converts a hexadecimal string to a PEM string with
        * a specified header. Its line break will be CRLF("\r\n").
        * @example
        * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');
        * // value of pem will be:
        * -----BEGIN PRIVATE KEY-----
        * YWFh
        * -----END PRIVATE KEY-----
        */
    this.getPEMStringFromHex = function (dataHex, pemHeader) {
      return hextopem(dataHex, pemHeader);
    };

    /**
        * generate ASN1Object specifed by JSON parameters
        * @name newObject
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {Array} param JSON parameter to generate ASN1Object
        * @return {KJUR.asn1.ASN1Object} generated object
        * @since asn1 1.0.3
        * @description
        * generate any ASN1Object specified by JSON param
        * including ASN.1 primitive or structured.
        * Generally 'param' can be described as follows:
        * <blockquote>
        * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}
        * </blockquote>
        * 'TYPE-OF-ASN1OBJ' can be one of following symbols:
        * <ul>
        * <li>'bool' - DERBoolean</li>
        * <li>'int' - DERInteger</li>
        * <li>'bitstr' - DERBitString</li>
        * <li>'octstr' - DEROctetString</li>
        * <li>'null' - DERNull</li>
        * <li>'oid' - DERObjectIdentifier</li>
        * <li>'enum' - DEREnumerated</li>
        * <li>'utf8str' - DERUTF8String</li>
        * <li>'numstr' - DERNumericString</li>
        * <li>'prnstr' - DERPrintableString</li>
        * <li>'telstr' - DERTeletexString</li>
        * <li>'ia5str' - DERIA5String</li>
        * <li>'utctime' - DERUTCTime</li>
        * <li>'gentime' - DERGeneralizedTime</li>
        * <li>'seq' - DERSequence</li>
        * <li>'set' - DERSet</li>
        * <li>'tag' - DERTaggedObject</li>
        * </ul>
        * @example
        * newObject({'prnstr': 'aaa'});
        * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})
        * // ASN.1 Tagged Object
        * newObject({'tag': {'tag': 'a1',
        *                    'explicit': true,
        *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});
        * // more simple representation of ASN.1 Tagged Object
        * newObject({'tag': ['a1',
        *                    true,
        *                    {'seq': [
        *                      {'int': 3},
        *                      {'prnstr': 'aaa'}]}
        *                   ]});
        */
    this.newObject = function (param) {
      var _KJUR = KJUR,
      _KJUR_asn1 = _KJUR.asn1,
      _DERBoolean = _KJUR_asn1.DERBoolean,
      _DERInteger = _KJUR_asn1.DERInteger,
      _DERBitString = _KJUR_asn1.DERBitString,
      _DEROctetString = _KJUR_asn1.DEROctetString,
      _DERNull = _KJUR_asn1.DERNull,
      _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier,
      _DEREnumerated = _KJUR_asn1.DEREnumerated,
      _DERUTF8String = _KJUR_asn1.DERUTF8String,
      _DERNumericString = _KJUR_asn1.DERNumericString,
      _DERPrintableString = _KJUR_asn1.DERPrintableString,
      _DERTeletexString = _KJUR_asn1.DERTeletexString,
      _DERIA5String = _KJUR_asn1.DERIA5String,
      _DERUTCTime = _KJUR_asn1.DERUTCTime,
      _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime,
      _DERSequence = _KJUR_asn1.DERSequence,
      _DERSet = _KJUR_asn1.DERSet,
      _DERTaggedObject = _KJUR_asn1.DERTaggedObject,
      _newObject = _KJUR_asn1.ASN1Util.newObject;

      var keys = Object.keys(param);
      if (keys.length != 1)
      throw "key of param shall be only one.";
      var key = keys[0];

      if (":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":" + key + ":") == -1)
      throw "undefined key: " + key;

      if (key == "bool") return new _DERBoolean(param[key]);
      if (key == "int") return new _DERInteger(param[key]);
      if (key == "bitstr") return new _DERBitString(param[key]);
      if (key == "octstr") return new _DEROctetString(param[key]);
      if (key == "null") return new _DERNull(param[key]);
      if (key == "oid") return new _DERObjectIdentifier(param[key]);
      if (key == "enum") return new _DEREnumerated(param[key]);
      if (key == "utf8str") return new _DERUTF8String(param[key]);
      if (key == "numstr") return new _DERNumericString(param[key]);
      if (key == "prnstr") return new _DERPrintableString(param[key]);
      if (key == "telstr") return new _DERTeletexString(param[key]);
      if (key == "ia5str") return new _DERIA5String(param[key]);
      if (key == "utctime") return new _DERUTCTime(param[key]);
      if (key == "gentime") return new _DERGeneralizedTime(param[key]);

      if (key == "seq") {
        var paramList = param[key];
        var a = [];
        for (var i = 0; i < paramList.length; i++) {
          var asn1Obj = _newObject(paramList[i]);
          a.push(asn1Obj);
        }
        return new _DERSequence({ 'array': a });
      }

      if (key == "set") {
        var paramList = param[key];
        var a = [];
        for (var i = 0; i < paramList.length; i++) {
          var asn1Obj = _newObject(paramList[i]);
          a.push(asn1Obj);
        }
        return new _DERSet({ 'array': a });
      }

      if (key == "tag") {
        var tagParam = param[key];
        if (Object.prototype.toString.call(tagParam) === '[object Array]' &&
        tagParam.length == 3) {
          var obj = _newObject(tagParam[2]);
          return new _DERTaggedObject({ tag: tagParam[0],
            explicit: tagParam[1],
            obj: obj });
        } else {
          var newParam = {};
          if (tagParam.explicit !== undefined)
          newParam.explicit = tagParam.explicit;
          if (tagParam.tag !== undefined)
          newParam.tag = tagParam.tag;
          if (tagParam.obj === undefined)
          throw "obj shall be specified for 'tag'.";
          newParam.obj = _newObject(tagParam.obj);
          return new _DERTaggedObject(newParam);
        }
      }
    };

    /**
        * get encoded hexadecimal string of ASN1Object specifed by JSON parameters
        * @name jsonToASN1HEX
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {Array} param JSON parameter to generate ASN1Object
        * @return hexadecimal string of ASN1Object
        * @since asn1 1.0.4
        * @description
        * As for ASN.1 object representation of JSON object,
        * please see {@link newObject}.
        * @example
        * jsonToASN1HEX({'prnstr': 'aaa'});
        */
    this.jsonToASN1HEX = function (param) {
      var asn1Obj = this.newObject(param);
      return asn1Obj.getEncodedHex();
    };
  }();

  /**
        * get dot noted oid number string from hexadecimal value of OID
        * @name oidHexToInt
        * @memberOf KJUR.asn1.ASN1Util
        * @function
        * @param {String} hex hexadecimal value of object identifier
        * @return {String} dot noted string of object identifier
        * @since jsrsasign 4.8.3 asn1 1.0.7
        * @description
        * This static method converts from hexadecimal string representation of
        * ASN.1 value of object identifier to oid number string.
        * @example
        * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; "2.5.4.6"
        */
  KJUR.asn1.ASN1Util.oidHexToInt = function (hex) {
    var s = "";
    var i01 = parseInt(hex.substr(0, 2), 16);
    var i0 = Math.floor(i01 / 40);
    var i1 = i01 % 40;
    var s = i0 + "." + i1;

    var binbuf = "";
    for (var i = 2; i < hex.length; i += 2) {
      var value = parseInt(hex.substr(i, 2), 16);
      var bin = ("00000000" + value.toString(2)).slice(-8);
      binbuf = binbuf + bin.substr(1, 7);
      if (bin.substr(0, 1) == "0") {
        var bi = new BigInteger(binbuf, 2);
        s = s + "." + bi.toString(10);
        binbuf = "";
      }
    }
    return s;
  };

  /**
      * get hexadecimal value of object identifier from dot noted oid value
      * @name oidIntToHex
      * @memberOf KJUR.asn1.ASN1Util
      * @function
      * @param {String} oidString dot noted string of object identifier
      * @return {String} hexadecimal value of object identifier
      * @since jsrsasign 4.8.3 asn1 1.0.7
      * @description
      * This static method converts from object identifier value string.
      * to hexadecimal string representation of it.
      * @example
      * KJUR.asn1.ASN1Util.oidIntToHex("2.5.4.6") &rarr; "550406"
      */
  KJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {
    var itox = function itox(i) {
      var h = i.toString(16);
      if (h.length == 1) h = '0' + h;
      return h;
    };

    var roidtox = function roidtox(roid) {
      var h = '';
      var bi = new BigInteger(roid, 10);
      var b = bi.toString(2);
      var padLen = 7 - b.length % 7;
      if (padLen == 7) padLen = 0;
      var bPad = '';
      for (var i = 0; i < padLen; i++) {bPad += '0';}
      b = bPad + b;
      for (var i = 0; i < b.length - 1; i += 7) {
        var b8 = b.substr(i, 7);
        if (i != b.length - 7) b8 = '1' + b8;
        h += itox(parseInt(b8, 2));
      }
      return h;
    };

    if (!oidString.match(/^[0-9.]+$/)) {
      throw "malformed oid string: " + oidString;
    }
    var h = '';
    var a = oidString.split('.');
    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
    h += itox(i0);
    a.splice(0, 2);
    for (var i = 0; i < a.length; i++) {
      h += roidtox(a[i]);
    }
    return h;
  };


  // ********************************************************************
  //  Abstract ASN.1 Classes
  // ********************************************************************

  // ********************************************************************

  /**
   * base class for ASN.1 DER encoder object
   * @name KJUR.asn1.ASN1Object
   * @class base class for ASN.1 DER encoder object
   * @property {Boolean} isModified flag whether internal data was changed
   * @property {String} hTLV hexadecimal string of ASN.1 TLV
   * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)
   * @property {String} hL hexadecimal string of ASN.1 TLV length(L)
   * @property {String} hV hexadecimal string of ASN.1 TLV value(V)
   * @description
   */
  KJUR.asn1.ASN1Object = function () {
    var hV = '';

    /**
                  * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)
                  * @name getLengthHexFromValue
                  * @memberOf KJUR.asn1.ASN1Object#
                  * @function
                  * @return {String} hexadecimal string of ASN.1 TLV length(L)
                  */
    this.getLengthHexFromValue = function () {
      if (typeof this.hV == "undefined" || this.hV == null) {
        throw "this.hV is null or undefined.";
      }
      if (this.hV.length % 2 == 1) {
        throw "value hex must be even length: n=" + hV.length + ",v=" + this.hV;
      }
      var n = this.hV.length / 2;
      var hN = n.toString(16);
      if (hN.length % 2 == 1) {
        hN = "0" + hN;
      }
      if (n < 128) {
        return hN;
      } else {
        var hNlen = hN.length / 2;
        if (hNlen > 15) {
          throw "ASN.1 length too long to represent by 8x: n = " + n.toString(16);
        }
        var head = 128 + hNlen;
        return head.toString(16) + hN;
      }
    };

    /**
        * get hexadecimal string of ASN.1 TLV bytes
        * @name getEncodedHex
        * @memberOf KJUR.asn1.ASN1Object#
        * @function
        * @return {String} hexadecimal string of ASN.1 TLV
        */
    this.getEncodedHex = function () {
      if (this.hTLV == null || this.isModified) {
        this.hV = this.getFreshValueHex();
        this.hL = this.getLengthHexFromValue();
        this.hTLV = this.hT + this.hL + this.hV;
        this.isModified = false;
        //alert("first time: " + this.hTLV);
      }
      return this.hTLV;
    };

    /**
        * get hexadecimal string of ASN.1 TLV value(V) bytes
        * @name getValueHex
        * @memberOf KJUR.asn1.ASN1Object#
        * @function
        * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes
        */
    this.getValueHex = function () {
      this.getEncodedHex();
      return this.hV;
    };

    this.getFreshValueHex = function () {
      return '';
    };
  };

  // == BEGIN DERAbstractString ================================================
  /**
   * base class for ASN.1 DER string classes
   * @name KJUR.asn1.DERAbstractString
   * @class base class for ASN.1 DER string classes
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @property {String} s internal string of value
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERAbstractString = function (params) {
    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);

    /**
                                                                    * get string value of this string object
                                                                    * @name getString
                                                                    * @memberOf KJUR.asn1.DERAbstractString#
                                                                    * @function
                                                                    * @return {String} string value of this string object
                                                                    */
    this.getString = function () {
      return this.s;
    };

    /**
        * set value by a string
        * @name setString
        * @memberOf KJUR.asn1.DERAbstractString#
        * @function
        * @param {String} newS value by a string to set
        */
    this.setString = function (newS) {
      this.hTLV = null;
      this.isModified = true;
      this.s = newS;
      this.hV = stohex(this.s);
    };

    /**
        * set value by a hexadecimal string
        * @name setStringHex
        * @memberOf KJUR.asn1.DERAbstractString#
        * @function
        * @param {String} newHexString value by a hexadecimal string to set
        */
    this.setStringHex = function (newHexString) {
      this.hTLV = null;
      this.isModified = true;
      this.s = null;
      this.hV = newHexString;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params == "string") {
        this.setString(params);
      } else if (typeof params['str'] != "undefined") {
        this.setString(params['str']);
      } else if (typeof params['hex'] != "undefined") {
        this.setStringHex(params['hex']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);
  // == END   DERAbstractString ================================================

  // == BEGIN DERAbstractTime ==================================================
  /**
   * base class for ASN.1 DER Generalized/UTCTime class
   * @name KJUR.asn1.DERAbstractTime
   * @class base class for ASN.1 DER Generalized/UTCTime class
   * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERAbstractTime = function (params) {
    KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);

    // --- PRIVATE METHODS --------------------
    this.localDateToUTC = function (d) {
      utc = d.getTime() + d.getTimezoneOffset() * 60000;
      var utcDate = new Date(utc);
      return utcDate;
    };

    /*
        * format date string by Data object
        * @name formatDate
        * @memberOf KJUR.asn1.AbstractTime;
        * @param {Date} dateObject
        * @param {string} type 'utc' or 'gen'
        * @param {boolean} withMillis flag for with millisections or not
        * @description
        * 'withMillis' flag is supported from asn1 1.0.6.
        */
    this.formatDate = function (dateObject, type, withMillis) {
      var pad = this.zeroPadding;
      var d = this.localDateToUTC(dateObject);
      var year = String(d.getFullYear());
      if (type == 'utc') year = year.substr(2, 2);
      var month = pad(String(d.getMonth() + 1), 2);
      var day = pad(String(d.getDate()), 2);
      var hour = pad(String(d.getHours()), 2);
      var min = pad(String(d.getMinutes()), 2);
      var sec = pad(String(d.getSeconds()), 2);
      var s = year + month + day + hour + min + sec;
      if (withMillis === true) {
        var millis = d.getMilliseconds();
        if (millis != 0) {
          var sMillis = pad(String(millis), 3);
          sMillis = sMillis.replace(/[0]+$/, "");
          s = s + "." + sMillis;
        }
      }
      return s + "Z";
    };

    this.zeroPadding = function (s, len) {
      if (s.length >= len) return s;
      return new Array(len - s.length + 1).join('0') + s;
    };

    // --- PUBLIC METHODS --------------------
    /**
     * get string value of this string object
     * @name getString
     * @memberOf KJUR.asn1.DERAbstractTime#
     * @function
     * @return {String} string value of this time object
     */
    this.getString = function () {
      return this.s;
    };

    /**
        * set value by a string
        * @name setString
        * @memberOf KJUR.asn1.DERAbstractTime#
        * @function
        * @param {String} newS value by a string to set such like "130430235959Z"
        */
    this.setString = function (newS) {
      this.hTLV = null;
      this.isModified = true;
      this.s = newS;
      this.hV = stohex(newS);
    };

    /**
        * set value by a Date object
        * @name setByDateValue
        * @memberOf KJUR.asn1.DERAbstractTime#
        * @function
        * @param {Integer} year year of date (ex. 2013)
        * @param {Integer} month month of date between 1 and 12 (ex. 12)
        * @param {Integer} day day of month
        * @param {Integer} hour hours of date
        * @param {Integer} min minutes of date
        * @param {Integer} sec seconds of date
        */
    this.setByDateValue = function (year, month, day, hour, min, sec) {
      var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));
      this.setByDate(dateObject);
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);
  // == END   DERAbstractTime ==================================================

  // == BEGIN DERAbstractStructured ============================================
  /**
   * base class for ASN.1 DER structured class
   * @name KJUR.asn1.DERAbstractStructured
   * @class base class for ASN.1 DER structured class
   * @property {Array} asn1Array internal array of ASN1Object
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERAbstractStructured = function (params) {
    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);

    /**
                                                                    * set value by array of ASN1Object
                                                                    * @name setByASN1ObjectArray
                                                                    * @memberOf KJUR.asn1.DERAbstractStructured#
                                                                    * @function
                                                                    * @param {array} asn1ObjectArray array of ASN1Object to set
                                                                    */
    this.setByASN1ObjectArray = function (asn1ObjectArray) {
      this.hTLV = null;
      this.isModified = true;
      this.asn1Array = asn1ObjectArray;
    };

    /**
        * append an ASN1Object to internal array
        * @name appendASN1Object
        * @memberOf KJUR.asn1.DERAbstractStructured#
        * @function
        * @param {ASN1Object} asn1Object to add
        */
    this.appendASN1Object = function (asn1Object) {
      this.hTLV = null;
      this.isModified = true;
      this.asn1Array.push(asn1Object);
    };

    this.asn1Array = new Array();
    if (typeof params != "undefined") {
      if (typeof params['array'] != "undefined") {
        this.asn1Array = params['array'];
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);


  // ********************************************************************
  //  ASN.1 Object Classes
  // ********************************************************************

  // ********************************************************************
  /**
   * class for ASN.1 DER Boolean
   * @name KJUR.asn1.DERBoolean
   * @class class for ASN.1 DER Boolean
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERBoolean = function () {
    KJUR.asn1.DERBoolean.superclass.constructor.call(this);
    this.hT = "01";
    this.hTLV = "0101ff";
  };
  YAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER Integer
   * @name KJUR.asn1.DERInteger
   * @class class for ASN.1 DER Integer
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>int - specify initial ASN.1 value(V) by integer value</li>
   * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERInteger = function (params) {
    KJUR.asn1.DERInteger.superclass.constructor.call(this);
    this.hT = "02";

    /**
                     * set value by Tom Wu's BigInteger object
                     * @name setByBigInteger
                     * @memberOf KJUR.asn1.DERInteger#
                     * @function
                     * @param {BigInteger} bigIntegerValue to set
                     */
    this.setByBigInteger = function (bigIntegerValue) {
      this.hTLV = null;
      this.isModified = true;
      this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
    };

    /**
        * set value by integer value
        * @name setByInteger
        * @memberOf KJUR.asn1.DERInteger
        * @function
        * @param {Integer} integer value to set
        */
    this.setByInteger = function (intValue) {
      var bi = new BigInteger(String(intValue), 10);
      this.setByBigInteger(bi);
    };

    /**
        * set value by integer value
        * @name setValueHex
        * @memberOf KJUR.asn1.DERInteger#
        * @function
        * @param {String} hexadecimal string of integer value
        * @description
        * <br/>
        * NOTE: Value shall be represented by minimum octet length of
        * two's complement representation.
        * @example
        * new KJUR.asn1.DERInteger(123);
        * new KJUR.asn1.DERInteger({'int': 123});
        * new KJUR.asn1.DERInteger({'hex': '1fad'});
        */
    this.setValueHex = function (newHexString) {
      this.hV = newHexString;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params['bigint'] != "undefined") {
        this.setByBigInteger(params['bigint']);
      } else if (typeof params['int'] != "undefined") {
        this.setByInteger(params['int']);
      } else if (typeof params == "number") {
        this.setByInteger(params);
      } else if (typeof params['hex'] != "undefined") {
        this.setValueHex(params['hex']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER encoded BitString primitive
   * @name KJUR.asn1.DERBitString
   * @class class for ASN.1 DER encoded BitString primitive
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>bin - specify binary string (ex. '10111')</li>
   * <li>array - specify array of boolean (ex. [true,false,true,true])</li>
   * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>
   * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}
   * argument for "BitString encapsulates" structure.</li>
   * </ul>
   * NOTE1: 'params' can be omitted.<br/>
   * NOTE2: 'obj' parameter have been supported since
   * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>
   * @example
   * // default constructor
   * o = new KJUR.asn1.DERBitString();
   * // initialize with binary string
   * o = new KJUR.asn1.DERBitString({bin: "1011"});
   * // initialize with boolean array
   * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});
   * // initialize with hexadecimal string (04 is unused bits)
   * o = new KJUR.asn1.DEROctetString({hex: "04bac0"});
   * // initialize with ASN1Util.newObject argument for encapsulated
   * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
   * // above generates a ASN.1 data like this:
   * // BIT STRING, encapsulates {
   * //   SEQUENCE {
   * //     INTEGER 3
   * //     PrintableString 'aaa'
   * //     }
   * //   }
   */
  KJUR.asn1.DERBitString = function (params) {
    if (params !== undefined && typeof params.obj !== "undefined") {
      var o = KJUR.asn1.ASN1Util.newObject(params.obj);
      params.hex = "00" + o.getEncodedHex();
    }
    KJUR.asn1.DERBitString.superclass.constructor.call(this);
    this.hT = "03";

    /**
                     * set ASN.1 value(V) by a hexadecimal string including unused bits
                     * @name setHexValueIncludingUnusedBits
                     * @memberOf KJUR.asn1.DERBitString#
                     * @function
                     * @param {String} newHexStringIncludingUnusedBits
                     */
    this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {
      this.hTLV = null;
      this.isModified = true;
      this.hV = newHexStringIncludingUnusedBits;
    };

    /**
        * set ASN.1 value(V) by unused bit and hexadecimal string of value
        * @name setUnusedBitsAndHexValue
        * @memberOf KJUR.asn1.DERBitString#
        * @function
        * @param {Integer} unusedBits
        * @param {String} hValue
        */
    this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {
      if (unusedBits < 0 || 7 < unusedBits) {
        throw "unused bits shall be from 0 to 7: u = " + unusedBits;
      }
      var hUnusedBits = "0" + unusedBits;
      this.hTLV = null;
      this.isModified = true;
      this.hV = hUnusedBits + hValue;
    };

    /**
        * set ASN.1 DER BitString by binary string<br/>
        * @name setByBinaryString
        * @memberOf KJUR.asn1.DERBitString#
        * @function
        * @param {String} binaryString binary value string (i.e. '10111')
        * @description
        * Its unused bits will be calculated automatically by length of
        * 'binaryValue'. <br/>
        * NOTE: Trailing zeros '0' will be ignored.
        * @example
        * o = new KJUR.asn1.DERBitString();
        * o.setByBooleanArray("01011");
        */
    this.setByBinaryString = function (binaryString) {
      binaryString = binaryString.replace(/0+$/, '');
      var unusedBits = 8 - binaryString.length % 8;
      if (unusedBits == 8) unusedBits = 0;
      for (var i = 0; i <= unusedBits; i++) {
        binaryString += '0';
      }
      var h = '';
      for (var i = 0; i < binaryString.length - 1; i += 8) {
        var b = binaryString.substr(i, 8);
        var x = parseInt(b, 2).toString(16);
        if (x.length == 1) x = '0' + x;
        h += x;
      }
      this.hTLV = null;
      this.isModified = true;
      this.hV = '0' + unusedBits + h;
    };

    /**
        * set ASN.1 TLV value(V) by an array of boolean<br/>
        * @name setByBooleanArray
        * @memberOf KJUR.asn1.DERBitString#
        * @function
        * @param {array} booleanArray array of boolean (ex. [true, false, true])
        * @description
        * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.
        * @example
        * o = new KJUR.asn1.DERBitString();
        * o.setByBooleanArray([false, true, false, true, true]);
        */
    this.setByBooleanArray = function (booleanArray) {
      var s = '';
      for (var i = 0; i < booleanArray.length; i++) {
        if (booleanArray[i] == true) {
          s += '1';
        } else {
          s += '0';
        }
      }
      this.setByBinaryString(s);
    };

    /**
        * generate an array of falses with specified length<br/>
        * @name newFalseArray
        * @memberOf KJUR.asn1.DERBitString
        * @function
        * @param {Integer} nLength length of array to generate
        * @return {array} array of boolean falses
        * @description
        * This static method may be useful to initialize boolean array.
        * @example
        * o = new KJUR.asn1.DERBitString();
        * o.newFalseArray(3) &rarr; [false, false, false]
        */
    this.newFalseArray = function (nLength) {
      var a = new Array(nLength);
      for (var i = 0; i < nLength; i++) {
        a[i] = false;
      }
      return a;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params == "string" && params.toLowerCase().match(/^[0-9a-f]+$/)) {
        this.setHexValueIncludingUnusedBits(params);
      } else if (typeof params['hex'] != "undefined") {
        this.setHexValueIncludingUnusedBits(params['hex']);
      } else if (typeof params['bin'] != "undefined") {
        this.setByBinaryString(params['bin']);
      } else if (typeof params['array'] != "undefined") {
        this.setByBooleanArray(params['array']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER OctetString<br/>
   * @name KJUR.asn1.DEROctetString
   * @class class for ASN.1 DER OctetString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * This class provides ASN.1 OctetString simple type.<br/>
   * Supported "params" attributes are:
   * <ul>
   * <li>str - to set a string as a value</li>
   * <li>hex - to set a hexadecimal string as a value</li>
   * <li>obj - to set a encapsulated ASN.1 value by JSON object
   * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>
   * </ul>
   * NOTE: A parameter 'obj' have been supported
   * for "OCTET STRING, encapsulates" structure.
   * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).
   * @see KJUR.asn1.DERAbstractString - superclass
   * @example
   * // default constructor
   * o = new KJUR.asn1.DEROctetString();
   * // initialize with string
   * o = new KJUR.asn1.DEROctetString({str: "aaa"});
   * // initialize with hexadecimal string
   * o = new KJUR.asn1.DEROctetString({hex: "616161"});
   * // initialize with ASN1Util.newObject argument
   * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
   * // above generates a ASN.1 data like this:
   * // OCTET STRING, encapsulates {
   * //   SEQUENCE {
   * //     INTEGER 3
   * //     PrintableString 'aaa'
   * //     }
   * //   }
   */
  KJUR.asn1.DEROctetString = function (params) {
    if (params !== undefined && typeof params.obj !== "undefined") {
      var o = KJUR.asn1.ASN1Util.newObject(params.obj);
      params.hex = o.getEncodedHex();
    }
    KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);
    this.hT = "04";
  };
  YAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER Null
   * @name KJUR.asn1.DERNull
   * @class class for ASN.1 DER Null
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERNull = function () {
    KJUR.asn1.DERNull.superclass.constructor.call(this);
    this.hT = "05";
    this.hTLV = "0500";
  };
  YAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER ObjectIdentifier
   * @name KJUR.asn1.DERObjectIdentifier
   * @class class for ASN.1 DER ObjectIdentifier
   * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERObjectIdentifier = function (params) {
    var itox = function itox(i) {
      var h = i.toString(16);
      if (h.length == 1) h = '0' + h;
      return h;
    };
    var roidtox = function roidtox(roid) {
      var h = '';
      var bi = new BigInteger(roid, 10);
      var b = bi.toString(2);
      var padLen = 7 - b.length % 7;
      if (padLen == 7) padLen = 0;
      var bPad = '';
      for (var i = 0; i < padLen; i++) {bPad += '0';}
      b = bPad + b;
      for (var i = 0; i < b.length - 1; i += 7) {
        var b8 = b.substr(i, 7);
        if (i != b.length - 7) b8 = '1' + b8;
        h += itox(parseInt(b8, 2));
      }
      return h;
    };

    KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);
    this.hT = "06";

    /**
                     * set value by a hexadecimal string
                     * @name setValueHex
                     * @memberOf KJUR.asn1.DERObjectIdentifier#
                     * @function
                     * @param {String} newHexString hexadecimal value of OID bytes
                     */
    this.setValueHex = function (newHexString) {
      this.hTLV = null;
      this.isModified = true;
      this.s = null;
      this.hV = newHexString;
    };

    /**
        * set value by a OID string<br/>
        * @name setValueOidString
        * @memberOf KJUR.asn1.DERObjectIdentifier#
        * @function
        * @param {String} oidString OID string (ex. 2.5.4.13)
        * @example
        * o = new KJUR.asn1.DERObjectIdentifier();
        * o.setValueOidString("2.5.4.13");
        */
    this.setValueOidString = function (oidString) {
      if (!oidString.match(/^[0-9.]+$/)) {
        throw "malformed oid string: " + oidString;
      }
      var h = '';
      var a = oidString.split('.');
      var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
      h += itox(i0);
      a.splice(0, 2);
      for (var i = 0; i < a.length; i++) {
        h += roidtox(a[i]);
      }
      this.hTLV = null;
      this.isModified = true;
      this.s = null;
      this.hV = h;
    };

    /**
        * set value by a OID name
        * @name setValueName
        * @memberOf KJUR.asn1.DERObjectIdentifier#
        * @function
        * @param {String} oidName OID name (ex. 'serverAuth')
        * @since 1.0.1
        * @description
        * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.
        * Otherwise raise error.
        * @example
        * o = new KJUR.asn1.DERObjectIdentifier();
        * o.setValueName("serverAuth");
        */
    this.setValueName = function (oidName) {
      var oid = KJUR.asn1.x509.OID.name2oid(oidName);
      if (oid !== '') {
        this.setValueOidString(oid);
      } else {
        throw "DERObjectIdentifier oidName undefined: " + oidName;
      }
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (params !== undefined) {
      if (typeof params === "string") {
        if (params.match(/^[0-2].[0-9.]+$/)) {
          this.setValueOidString(params);
        } else {
          this.setValueName(params);
        }
      } else if (params.oid !== undefined) {
        this.setValueOidString(params.oid);
      } else if (params.hex !== undefined) {
        this.setValueHex(params.hex);
      } else if (params.name !== undefined) {
        this.setValueName(params.name);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER Enumerated
   * @name KJUR.asn1.DEREnumerated
   * @class class for ASN.1 DER Enumerated
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>int - specify initial ASN.1 value(V) by integer value</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   * @example
   * new KJUR.asn1.DEREnumerated(123);
   * new KJUR.asn1.DEREnumerated({int: 123});
   * new KJUR.asn1.DEREnumerated({hex: '1fad'});
   */
  KJUR.asn1.DEREnumerated = function (params) {
    KJUR.asn1.DEREnumerated.superclass.constructor.call(this);
    this.hT = "0a";

    /**
                     * set value by Tom Wu's BigInteger object
                     * @name setByBigInteger
                     * @memberOf KJUR.asn1.DEREnumerated#
                     * @function
                     * @param {BigInteger} bigIntegerValue to set
                     */
    this.setByBigInteger = function (bigIntegerValue) {
      this.hTLV = null;
      this.isModified = true;
      this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
    };

    /**
        * set value by integer value
        * @name setByInteger
        * @memberOf KJUR.asn1.DEREnumerated#
        * @function
        * @param {Integer} integer value to set
        */
    this.setByInteger = function (intValue) {
      var bi = new BigInteger(String(intValue), 10);
      this.setByBigInteger(bi);
    };

    /**
        * set value by integer value
        * @name setValueHex
        * @memberOf KJUR.asn1.DEREnumerated#
        * @function
        * @param {String} hexadecimal string of integer value
        * @description
        * <br/>
        * NOTE: Value shall be represented by minimum octet length of
        * two's complement representation.
        */
    this.setValueHex = function (newHexString) {
      this.hV = newHexString;
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params['int'] != "undefined") {
        this.setByInteger(params['int']);
      } else if (typeof params == "number") {
        this.setByInteger(params);
      } else if (typeof params['hex'] != "undefined") {
        this.setValueHex(params['hex']);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);

  // ********************************************************************
  /**
   * class for ASN.1 DER UTF8String
   * @name KJUR.asn1.DERUTF8String
   * @class class for ASN.1 DER UTF8String
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERUTF8String = function (params) {
    KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);
    this.hT = "0c";
  };
  YAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER NumericString
   * @name KJUR.asn1.DERNumericString
   * @class class for ASN.1 DER NumericString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERNumericString = function (params) {
    KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);
    this.hT = "12";
  };
  YAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER PrintableString
   * @name KJUR.asn1.DERPrintableString
   * @class class for ASN.1 DER PrintableString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERPrintableString = function (params) {
    KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);
    this.hT = "13";
  };
  YAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER TeletexString
   * @name KJUR.asn1.DERTeletexString
   * @class class for ASN.1 DER TeletexString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERTeletexString = function (params) {
    KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);
    this.hT = "14";
  };
  YAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER IA5String
   * @name KJUR.asn1.DERIA5String
   * @class class for ASN.1 DER IA5String
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERIA5String = function (params) {
    KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);
    this.hT = "16";
  };
  YAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);

  // ********************************************************************
  /**
   * class for ASN.1 DER UTCTime
   * @name KJUR.asn1.DERUTCTime
   * @class class for ASN.1 DER UTCTime
   * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
   * @extends KJUR.asn1.DERAbstractTime
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * <li>date - specify Date object.</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   * <h4>EXAMPLES</h4>
   * @example
   * d1 = new KJUR.asn1.DERUTCTime();
   * d1.setString('130430125959Z');
   *
   * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});
   * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});
   * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');
   */
  KJUR.asn1.DERUTCTime = function (params) {
    KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);
    this.hT = "17";

    /**
                     * set value by a Date object<br/>
                     * @name setByDate
                     * @memberOf KJUR.asn1.DERUTCTime#
                     * @function
                     * @param {Date} dateObject Date object to set ASN.1 value(V)
                     * @example
                     * o = new KJUR.asn1.DERUTCTime();
                     * o.setByDate(new Date("2016/12/31"));
                     */
    this.setByDate = function (dateObject) {
      this.hTLV = null;
      this.isModified = true;
      this.date = dateObject;
      this.s = this.formatDate(this.date, 'utc');
      this.hV = stohex(this.s);
    };

    this.getFreshValueHex = function () {
      if (typeof this.date == "undefined" && typeof this.s == "undefined") {
        this.date = new Date();
        this.s = this.formatDate(this.date, 'utc');
        this.hV = stohex(this.s);
      }
      return this.hV;
    };

    if (params !== undefined) {
      if (params.str !== undefined) {
        this.setString(params.str);
      } else if (typeof params == "string" && params.match(/^[0-9]{12}Z$/)) {
        this.setString(params);
      } else if (params.hex !== undefined) {
        this.setStringHex(params.hex);
      } else if (params.date !== undefined) {
        this.setByDate(params.date);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);

  // ********************************************************************
  /**
   * class for ASN.1 DER GeneralizedTime
   * @name KJUR.asn1.DERGeneralizedTime
   * @class class for ASN.1 DER GeneralizedTime
   * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})
   * @property {Boolean} withMillis flag to show milliseconds or not
   * @extends KJUR.asn1.DERAbstractTime
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * <li>date - specify Date object.</li>
   * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>
   * </ul>
   * NOTE1: 'params' can be omitted.
   * NOTE2: 'withMillis' property is supported from asn1 1.0.6.
   */
  KJUR.asn1.DERGeneralizedTime = function (params) {
    KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);
    this.hT = "18";
    this.withMillis = false;

    /**
                              * set value by a Date object
                              * @name setByDate
                              * @memberOf KJUR.asn1.DERGeneralizedTime#
                              * @function
                              * @param {Date} dateObject Date object to set ASN.1 value(V)
                              * @example
                              * When you specify UTC time, use 'Date.UTC' method like this:<br/>
                              * o1 = new DERUTCTime();
                              * o1.setByDate(date);
                              *
                              * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59
                              */
    this.setByDate = function (dateObject) {
      this.hTLV = null;
      this.isModified = true;
      this.date = dateObject;
      this.s = this.formatDate(this.date, 'gen', this.withMillis);
      this.hV = stohex(this.s);
    };

    this.getFreshValueHex = function () {
      if (this.date === undefined && this.s === undefined) {
        this.date = new Date();
        this.s = this.formatDate(this.date, 'gen', this.withMillis);
        this.hV = stohex(this.s);
      }
      return this.hV;
    };

    if (params !== undefined) {
      if (params.str !== undefined) {
        this.setString(params.str);
      } else if (typeof params == "string" && params.match(/^[0-9]{14}Z$/)) {
        this.setString(params);
      } else if (params.hex !== undefined) {
        this.setStringHex(params.hex);
      } else if (params.date !== undefined) {
        this.setByDate(params.date);
      }
      if (params.millis === true) {
        this.withMillis = true;
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);

  // ********************************************************************
  /**
   * class for ASN.1 DER Sequence
   * @name KJUR.asn1.DERSequence
   * @class class for ASN.1 DER Sequence
   * @extends KJUR.asn1.DERAbstractStructured
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>array - specify array of ASN1Object to set elements of content</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERSequence = function (params) {
    KJUR.asn1.DERSequence.superclass.constructor.call(this, params);
    this.hT = "30";
    this.getFreshValueHex = function () {
      var h = '';
      for (var i = 0; i < this.asn1Array.length; i++) {
        var asn1Obj = this.asn1Array[i];
        h += asn1Obj.getEncodedHex();
      }
      this.hV = h;
      return this.hV;
    };
  };
  YAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);

  // ********************************************************************
  /**
   * class for ASN.1 DER Set
   * @name KJUR.asn1.DERSet
   * @class class for ASN.1 DER Set
   * @extends KJUR.asn1.DERAbstractStructured
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>array - specify array of ASN1Object to set elements of content</li>
   * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>
   * </ul>
   * NOTE1: 'params' can be omitted.<br/>
   * NOTE2: sortflag is supported since 1.0.5.
   */
  KJUR.asn1.DERSet = function (params) {
    KJUR.asn1.DERSet.superclass.constructor.call(this, params);
    this.hT = "31";
    this.sortFlag = true; // item shall be sorted only in ASN.1 DER
    this.getFreshValueHex = function () {
      var a = new Array();
      for (var i = 0; i < this.asn1Array.length; i++) {
        var asn1Obj = this.asn1Array[i];
        a.push(asn1Obj.getEncodedHex());
      }
      if (this.sortFlag == true) a.sort();
      this.hV = a.join('');
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params.sortflag != "undefined" &&
      params.sortflag == false)
      this.sortFlag = false;
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);

  // ********************************************************************
  /**
   * class for ASN.1 DER TaggedObject
   * @name KJUR.asn1.DERTaggedObject
   * @class class for ASN.1 DER TaggedObject
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.
   * For example, if you find '[1]' tag in a ASN.1 dump,
   * 'tagNoHex' will be 'a1'.
   * <br/>
   * As for optional argument 'params' for constructor, you can specify *ANY* of
   * following properties:
   * <ul>
   * <li>explicit - specify true if this is explicit tag otherwise false
   *     (default is 'true').</li>
   * <li>tag - specify tag (default is 'a0' which means [0])</li>
   * <li>obj - specify ASN1Object which is tagged</li>
   * </ul>
   * @example
   * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});
   * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});
   * hex = d2.getEncodedHex();
   */
  KJUR.asn1.DERTaggedObject = function (params) {
    KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);
    this.hT = "a0";
    this.hV = '';
    this.isExplicit = true;
    this.asn1Object = null;

    /**
                             * set value by an ASN1Object
                             * @name setString
                             * @memberOf KJUR.asn1.DERTaggedObject#
                             * @function
                             * @param {Boolean} isExplicitFlag flag for explicit/implicit tag
                             * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag
                             * @param {ASN1Object} asn1Object ASN.1 to encapsulate
                             */
    this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {
      this.hT = tagNoHex;
      this.isExplicit = isExplicitFlag;
      this.asn1Object = asn1Object;
      if (this.isExplicit) {
        this.hV = this.asn1Object.getEncodedHex();
        this.hTLV = null;
        this.isModified = true;
      } else {
        this.hV = null;
        this.hTLV = asn1Object.getEncodedHex();
        this.hTLV = this.hTLV.replace(/^../, tagNoHex);
        this.isModified = false;
      }
    };

    this.getFreshValueHex = function () {
      return this.hV;
    };

    if (typeof params != "undefined") {
      if (typeof params['tag'] != "undefined") {
        this.hT = params['tag'];
      }
      if (typeof params['explicit'] != "undefined") {
        this.isExplicit = params['explicit'];
      }
      if (typeof params['obj'] != "undefined") {
        this.asn1Object = params['obj'];
        this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);
      }
    }
  };
  YAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);

  /**
                                                                       * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.
                                                                       * This object is just a decorator for parsing the key parameter
                                                                       * @param {string|Object} key - The key in string format, or an object containing
                                                                       * the parameters needed to build a RSAKey object.
                                                                       * @constructor
                                                                       */
  var JSEncryptRSAKey = /** @class */function (_super) {
    __extends(JSEncryptRSAKey, _super);
    function JSEncryptRSAKey(key) {
      var _this = _super.call(this) || this;
      // Call the super constructor.
      //  RSAKey.call(this);
      // If a key key was provided.
      if (key) {
        // If this is a string...
        if (typeof key === "string") {
          _this.parseKey(key);
        } else
        if (JSEncryptRSAKey.hasPrivateKeyProperty(key) ||
        JSEncryptRSAKey.hasPublicKeyProperty(key)) {
          // Set the values for the key.
          _this.parsePropertiesFrom(key);
        }
      }
      return _this;
    }
    /**
       * Method to parse a pem encoded string containing both a public or private key.
       * The method will translate the pem encoded string in a der encoded string and
       * will parse private key and public key parameters. This method accepts public key
       * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).
       *
       * @todo Check how many rsa formats use the same format of pkcs #1.
       *
       * The format is defined as:
       * PublicKeyInfo ::= SEQUENCE {
       *   algorithm       AlgorithmIdentifier,
       *   PublicKey       BIT STRING
       * }
       * Where AlgorithmIdentifier is:
       * AlgorithmIdentifier ::= SEQUENCE {
       *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
       *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
       * }
       * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
       * RSAPublicKey ::= SEQUENCE {
       *   modulus           INTEGER,  -- n
       *   publicExponent    INTEGER   -- e
       * }
       * it's possible to examine the structure of the keys obtained from openssl using
       * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/
       * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer
       * @private
       */
    JSEncryptRSAKey.prototype.parseKey = function (pem) {
      try {
        var modulus = 0;
        var public_exponent = 0;
        var reHex = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/;
        var der = reHex.test(pem) ? Hex.decode(pem) : Base64.unarmor(pem);
        var asn1 = ASN1.decode(der);
        // Fixes a bug with OpenSSL 1.0+ private keys
        if (asn1.sub.length === 3) {
          asn1 = asn1.sub[2].sub[0];
        }
        if (asn1.sub.length === 9) {
          // Parse the private key.
          modulus = asn1.sub[1].getHexStringValue(); // bigint
          this.n = parseBigInt(modulus, 16);
          public_exponent = asn1.sub[2].getHexStringValue(); // int
          this.e = parseInt(public_exponent, 16);
          var private_exponent = asn1.sub[3].getHexStringValue(); // bigint
          this.d = parseBigInt(private_exponent, 16);
          var prime1 = asn1.sub[4].getHexStringValue(); // bigint
          this.p = parseBigInt(prime1, 16);
          var prime2 = asn1.sub[5].getHexStringValue(); // bigint
          this.q = parseBigInt(prime2, 16);
          var exponent1 = asn1.sub[6].getHexStringValue(); // bigint
          this.dmp1 = parseBigInt(exponent1, 16);
          var exponent2 = asn1.sub[7].getHexStringValue(); // bigint
          this.dmq1 = parseBigInt(exponent2, 16);
          var coefficient = asn1.sub[8].getHexStringValue(); // bigint
          this.coeff = parseBigInt(coefficient, 16);
        } else
        if (asn1.sub.length === 2) {
          // Parse the public key.
          var bit_string = asn1.sub[1];
          var sequence = bit_string.sub[0];
          modulus = sequence.sub[0].getHexStringValue();
          this.n = parseBigInt(modulus, 16);
          public_exponent = sequence.sub[1].getHexStringValue();
          this.e = parseInt(public_exponent, 16);
        } else
        {
          return false;
        }
        return true;
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Translate rsa parameters in a hex encoded string representing the rsa key.
        *
        * The translation follow the ASN.1 notation :
        * RSAPrivateKey ::= SEQUENCE {
        *   version           Version,
        *   modulus           INTEGER,  -- n
        *   publicExponent    INTEGER,  -- e
        *   privateExponent   INTEGER,  -- d
        *   prime1            INTEGER,  -- p
        *   prime2            INTEGER,  -- q
        *   exponent1         INTEGER,  -- d mod (p1)
        *   exponent2         INTEGER,  -- d mod (q-1)
        *   coefficient       INTEGER,  -- (inverse of q) mod p
        * }
        * @returns {string}  DER Encoded String representing the rsa private key
        * @private
        */
    JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {
      var options = {
        array: [
        new KJUR.asn1.DERInteger({ int: 0 }),
        new KJUR.asn1.DERInteger({ bigint: this.n }),
        new KJUR.asn1.DERInteger({ int: this.e }),
        new KJUR.asn1.DERInteger({ bigint: this.d }),
        new KJUR.asn1.DERInteger({ bigint: this.p }),
        new KJUR.asn1.DERInteger({ bigint: this.q }),
        new KJUR.asn1.DERInteger({ bigint: this.dmp1 }),
        new KJUR.asn1.DERInteger({ bigint: this.dmq1 }),
        new KJUR.asn1.DERInteger({ bigint: this.coeff })] };


      var seq = new KJUR.asn1.DERSequence(options);
      return seq.getEncodedHex();
    };
    /**
        * base64 (pem) encoded version of the DER encoded representation
        * @returns {string} pem encoded representation without header and footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {
      return hex2b64(this.getPrivateBaseKey());
    };
    /**
        * Translate rsa parameters in a hex encoded string representing the rsa public key.
        * The representation follow the ASN.1 notation :
        * PublicKeyInfo ::= SEQUENCE {
        *   algorithm       AlgorithmIdentifier,
        *   PublicKey       BIT STRING
        * }
        * Where AlgorithmIdentifier is:
        * AlgorithmIdentifier ::= SEQUENCE {
        *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
        *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
        * }
        * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
        * RSAPublicKey ::= SEQUENCE {
        *   modulus           INTEGER,  -- n
        *   publicExponent    INTEGER   -- e
        * }
        * @returns {string} DER Encoded String representing the rsa public key
        * @private
        */
    JSEncryptRSAKey.prototype.getPublicBaseKey = function () {
      var first_sequence = new KJUR.asn1.DERSequence({
        array: [
        new KJUR.asn1.DERObjectIdentifier({ oid: "1.2.840.113549.1.1.1" }),
        new KJUR.asn1.DERNull()] });


      var second_sequence = new KJUR.asn1.DERSequence({
        array: [
        new KJUR.asn1.DERInteger({ bigint: this.n }),
        new KJUR.asn1.DERInteger({ int: this.e })] });


      var bit_string = new KJUR.asn1.DERBitString({
        hex: "00" + second_sequence.getEncodedHex() });

      var seq = new KJUR.asn1.DERSequence({
        array: [
        first_sequence,
        bit_string] });


      return seq.getEncodedHex();
    };
    /**
        * base64 (pem) encoded version of the DER encoded representation
        * @returns {string} pem encoded representation without header and footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {
      return hex2b64(this.getPublicBaseKey());
    };
    /**
        * wrap the string in block of width chars. The default value for rsa keys is 64
        * characters.
        * @param {string} str the pem encoded string without header and footer
        * @param {Number} [width=64] - the length the string has to be wrapped at
        * @returns {string}
        * @private
        */
    JSEncryptRSAKey.wordwrap = function (str, width) {
      width = width || 64;
      if (!str) {
        return str;
      }
      var regex = "(.{1," + width + "})( +|$\n?)|(.{1," + width + "})";
      return str.match(RegExp(regex, "g")).join("\n");
    };
    /**
        * Retrieve the pem encoded private key
        * @returns {string} the pem encoded private key with header/footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPrivateKey = function () {
      var key = "-----BEGIN RSA PRIVATE KEY-----\n";
      key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + "\n";
      key += "-----END RSA PRIVATE KEY-----";
      return key;
    };
    /**
        * Retrieve the pem encoded public key
        * @returns {string} the pem encoded public key with header/footer
        * @public
        */
    JSEncryptRSAKey.prototype.getPublicKey = function () {
      var key = "-----BEGIN PUBLIC KEY-----\n";
      key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + "\n";
      key += "-----END PUBLIC KEY-----";
      return key;
    };
    /**
        * Check if the object contains the necessary parameters to populate the rsa modulus
        * and public exponent parameters.
        * @param {Object} [obj={}] - An object that may contain the two public key
        * parameters
        * @returns {boolean} true if the object contains both the modulus and the public exponent
        * properties (n and e)
        * @todo check for types of n and e. N should be a parseable bigInt object, E should
        * be a parseable integer number
        * @private
        */
    JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {
      obj = obj || {};
      return obj.hasOwnProperty("n") &&
      obj.hasOwnProperty("e");
    };
    /**
        * Check if the object contains ALL the parameters of an RSA key.
        * @param {Object} [obj={}] - An object that may contain nine rsa key
        * parameters
        * @returns {boolean} true if the object contains all the parameters needed
        * @todo check for types of the parameters all the parameters but the public exponent
        * should be parseable bigint objects, the public exponent should be a parseable integer number
        * @private
        */
    JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {
      obj = obj || {};
      return obj.hasOwnProperty("n") &&
      obj.hasOwnProperty("e") &&
      obj.hasOwnProperty("d") &&
      obj.hasOwnProperty("p") &&
      obj.hasOwnProperty("q") &&
      obj.hasOwnProperty("dmp1") &&
      obj.hasOwnProperty("dmq1") &&
      obj.hasOwnProperty("coeff");
    };
    /**
        * Parse the properties of obj in the current rsa object. Obj should AT LEAST
        * include the modulus and public exponent (n, e) parameters.
        * @param {Object} obj - the object containing rsa parameters
        * @private
        */
    JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {
      this.n = obj.n;
      this.e = obj.e;
      if (obj.hasOwnProperty("d")) {
        this.d = obj.d;
        this.p = obj.p;
        this.q = obj.q;
        this.dmp1 = obj.dmp1;
        this.dmq1 = obj.dmq1;
        this.coeff = obj.coeff;
      }
    };
    return JSEncryptRSAKey;
  }(RSAKey);

  /**
              *
              * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour
              * possible parameters are:
              * - default_key_size        {number}  default: 1024 the key size in bit
              * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent
              * - log                     {boolean} default: false whether log warn/error or not
              * @constructor
              */
  var JSEncrypt = /** @class */function () {
    function JSEncrypt(options) {
      options = options || {};
      this.default_key_size = parseInt(options.default_key_size, 10) || 1024;
      this.default_public_exponent = options.default_public_exponent || "010001"; // 65537 default openssl public exponent for rsa key type
      this.log = options.log || false;
      // The private and public key.
      this.key = null;
    }
    /**
       * Method to set the rsa key parameter (one method is enough to set both the public
       * and the private key, since the private key contains the public key paramenters)
       * Log a warning if logs are enabled
       * @param {Object|string} key the pem encoded string or an object (with or without header/footer)
       * @public
       */
    JSEncrypt.prototype.setKey = function (key) {
      if (this.log && this.key) {
        console.warn("A key was already set, overriding existing.");
      }
      this.key = new JSEncryptRSAKey(key);
    };
    /**
        * Proxy method for setKey, for api compatibility
        * @see setKey
        * @public
        */
    JSEncrypt.prototype.setPrivateKey = function (privkey) {
      // Create the key.
      this.setKey(privkey);
    };
    /**
        * Proxy method for setKey, for api compatibility
        * @see setKey
        * @public
        */
    JSEncrypt.prototype.setPublicKey = function (pubkey) {
      // Sets the public key.
      this.setKey(pubkey);
    };
    /**
        * Proxy method for RSAKey object's decrypt, decrypt the string using the private
        * components of the rsa key object. Note that if the object was not set will be created
        * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
        * @param {string} str base64 encoded crypted string to decrypt
        * @return {string} the decrypted string
        * @public
        */
    JSEncrypt.prototype.decrypt = function (str) {
      // Return the decrypted string.
      try {
        return this.getKey().decrypt(b64tohex(str));
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Proxy method for RSAKey object's encrypt, encrypt the string using the public
        * components of the rsa key object. Note that if the object was not set will be created
        * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
        * @param {string} str the string to encrypt
        * @return {string} the encrypted string encoded in base64
        * @public
        */
    JSEncrypt.prototype.encrypt = function (str) {
      // Return the encrypted string.
      try {
        return hex2b64(this.getKey().encrypt(str));
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Proxy method for RSAKey object's sign.
        * @param {string} str the string to sign
        * @param {function} digestMethod hash method
        * @param {string} digestName the name of the hash algorithm
        * @return {string} the signature encoded in base64
        * @public
        */
    JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {
      // return the RSA signature of 'str' in 'hex' format.
      try {
        return hex2b64(this.getKey().sign(str, digestMethod, digestName));
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Proxy method for RSAKey object's verify.
        * @param {string} str the string to verify
        * @param {string} signature the signature encoded in base64 to compare the string to
        * @param {function} digestMethod hash method
        * @return {boolean} whether the data and signature match
        * @public
        */
    JSEncrypt.prototype.verify = function (str, signature, digestMethod) {
      // Return the decrypted 'digest' of the signature.
      try {
        return this.getKey().verify(str, b64tohex(signature), digestMethod);
      }
      catch (ex) {
        return false;
      }
    };
    /**
        * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object
        * will be created and returned
        * @param {callback} [cb] the callback to be called if we want the key to be generated
        * in an async fashion
        * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object
        * @public
        */
    JSEncrypt.prototype.getKey = function (cb) {
      // Only create new if it does not exist.
      if (!this.key) {
        // Get a new private key.
        this.key = new JSEncryptRSAKey();
        if (cb && {}.toString.call(cb) === "[object Function]") {
          this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);
          return;
        }
        // Generate the key.
        this.key.generate(this.default_key_size, this.default_public_exponent);
      }
      return this.key;
    };
    /**
        * Returns the pem encoded representation of the private key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the private key WITH header and footer
        * @public
        */
    JSEncrypt.prototype.getPrivateKey = function () {
      // Return the private representation of this key.
      return this.getKey().getPrivateKey();
    };
    /**
        * Returns the pem encoded representation of the private key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the private key WITHOUT header and footer
        * @public
        */
    JSEncrypt.prototype.getPrivateKeyB64 = function () {
      // Return the private representation of this key.
      return this.getKey().getPrivateBaseKeyB64();
    };
    /**
        * Returns the pem encoded representation of the public key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the public key WITH header and footer
        * @public
        */
    JSEncrypt.prototype.getPublicKey = function () {
      // Return the private representation of this key.
      return this.getKey().getPublicKey();
    };
    /**
        * Returns the pem encoded representation of the public key
        * If the key doesn't exists a new key will be created
        * @returns {string} pem encoded representation of the public key WITHOUT header and footer
        * @public
        */
    JSEncrypt.prototype.getPublicKeyB64 = function () {
      // Return the private representation of this key.
      return this.getKey().getPublicBaseKeyB64();
    };
    JSEncrypt.version = "3.0.0-rc.1";
    return JSEncrypt;
  }();

  window.JSEncrypt = JSEncrypt;

  exports.JSEncrypt = JSEncrypt;
  exports.default = JSEncrypt;

  Object.defineProperty(exports, '__esModule', { value: true });

});
});
define('static/js/security.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /*
              * RSA, a suite of routines for performing RSA public-key computations in JavaScript.
              * Copyright 1998-2005 David Shapiro.
              * Dave Shapiro
              * dave@ohdave.com 
              * changed by Fuchun, 2010-05-06
              * fcrpg2005@gmail.com
              */

(function ($w) {

  if (typeof $w.RSAUtils === 'undefined')
  var RSAUtils = $w.RSAUtils = {};

  var biRadixBase = 2;
  var biRadixBits = 16;
  var bitsPerDigit = biRadixBits;
  var biRadix = 1 << 16; // = 2^16 = 65536
  var biHalfRadix = biRadix >>> 1;
  var biRadixSquared = biRadix * biRadix;
  var maxDigitVal = biRadix - 1;
  var maxInteger = 9999999999999998;

  //maxDigits:
  //Change this to accommodate your largest number size. Use setMaxDigits()
  //to change it!
  //
  //In general, if you're working with numbers of size N bits, you'll need 2*N
  //bits of storage. Each digit holds 16 bits. So, a 1024-bit key will need
  //
  //1024 * 2 / 16 = 128 digits of storage.
  //
  var maxDigits;
  var ZERO_ARRAY;
  var bigZero, bigOne;

  var BigInt = $w.BigInt = function (flag) {
    if (typeof flag == "boolean" && flag == true) {
      this.digits = null;
    } else {
      this.digits = ZERO_ARRAY.slice(0);
    }
    this.isNeg = false;
  };

  RSAUtils.setMaxDigits = function (value) {
    maxDigits = value;
    ZERO_ARRAY = new Array(maxDigits);
    for (var iza = 0; iza < ZERO_ARRAY.length; iza++) {ZERO_ARRAY[iza] = 0;}
    bigZero = new BigInt();
    bigOne = new BigInt();
    bigOne.digits[0] = 1;
  };
  RSAUtils.setMaxDigits(20);

  //The maximum number of digits in base 10 you can convert to an
  //integer without JavaScript throwing up on you.
  var dpl10 = 15;

  RSAUtils.biFromNumber = function (i) {
    var result = new BigInt();
    result.isNeg = i < 0;
    i = Math.abs(i);
    var j = 0;
    while (i > 0) {
      result.digits[j++] = i & maxDigitVal;
      i = Math.floor(i / biRadix);
    }
    return result;
  };

  //lr10 = 10 ^ dpl10
  var lr10 = RSAUtils.biFromNumber(1000000000000000);

  RSAUtils.biFromDecimal = function (s) {
    var isNeg = s.charAt(0) == '-';
    var i = isNeg ? 1 : 0;
    var result;
    // Skip leading zeros.
    while (i < s.length && s.charAt(i) == '0') {++i;}
    if (i == s.length) {
      result = new BigInt();
    } else
    {
      var digitCount = s.length - i;
      var fgl = digitCount % dpl10;
      if (fgl == 0) fgl = dpl10;
      result = RSAUtils.biFromNumber(Number(s.substr(i, fgl)));
      i += fgl;
      while (i < s.length) {
        result = RSAUtils.biAdd(RSAUtils.biMultiply(result, lr10),
        RSAUtils.biFromNumber(Number(s.substr(i, dpl10))));
        i += dpl10;
      }
      result.isNeg = isNeg;
    }
    return result;
  };

  RSAUtils.biCopy = function (bi) {
    var result = new BigInt(true);
    result.digits = bi.digits.slice(0);
    result.isNeg = bi.isNeg;
    return result;
  };

  RSAUtils.reverseStr = function (s) {
    var result = "";
    for (var i = s.length - 1; i > -1; --i) {
      result += s.charAt(i);
    }
    return result;
  };

  var hexatrigesimalToChar = [
  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
  'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
  'u', 'v', 'w', 'x', 'y', 'z'];


  RSAUtils.biToString = function (x, radix) {// 2 <= radix <= 36
    var b = new BigInt();
    b.digits[0] = radix;
    var qr = RSAUtils.biDivideModulo(x, b);
    var result = hexatrigesimalToChar[qr[1].digits[0]];
    while (RSAUtils.biCompare(qr[0], bigZero) == 1) {
      qr = RSAUtils.biDivideModulo(qr[0], b);
      digit = qr[1].digits[0];
      result += hexatrigesimalToChar[qr[1].digits[0]];
    }
    return (x.isNeg ? "-" : "") + RSAUtils.reverseStr(result);
  };

  RSAUtils.biToDecimal = function (x) {
    var b = new BigInt();
    b.digits[0] = 10;
    var qr = RSAUtils.biDivideModulo(x, b);
    var result = String(qr[1].digits[0]);
    while (RSAUtils.biCompare(qr[0], bigZero) == 1) {
      qr = RSAUtils.biDivideModulo(qr[0], b);
      result += String(qr[1].digits[0]);
    }
    return (x.isNeg ? "-" : "") + RSAUtils.reverseStr(result);
  };

  var hexToChar = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
  'a', 'b', 'c', 'd', 'e', 'f'];

  RSAUtils.digitToHex = function (n) {
    var mask = 0xf;
    var result = "";
    for (i = 0; i < 4; ++i) {
      result += hexToChar[n & mask];
      n >>>= 4;
    }
    return RSAUtils.reverseStr(result);
  };

  RSAUtils.biToHex = function (x) {
    var result = "";
    var n = RSAUtils.biHighIndex(x);
    for (var i = RSAUtils.biHighIndex(x); i > -1; --i) {
      result += RSAUtils.digitToHex(x.digits[i]);
    }
    return result;
  };

  RSAUtils.charToHex = function (c) {
    var ZERO = 48;
    var NINE = ZERO + 9;
    var littleA = 97;
    var littleZ = littleA + 25;
    var bigA = 65;
    var bigZ = 65 + 25;
    var result;

    if (c >= ZERO && c <= NINE) {
      result = c - ZERO;
    } else if (c >= bigA && c <= bigZ) {
      result = 10 + c - bigA;
    } else if (c >= littleA && c <= littleZ) {
      result = 10 + c - littleA;
    } else {
      result = 0;
    }
    return result;
  };

  RSAUtils.hexToDigit = function (s) {
    var result = 0;
    var sl = Math.min(s.length, 4);
    for (var i = 0; i < sl; ++i) {
      result <<= 4;
      result |= RSAUtils.charToHex(s.charCodeAt(i));
    }
    return result;
  };

  RSAUtils.biFromHex = function (s) {
    var result = new BigInt();
    var sl = s.length;
    for (var i = sl, j = 0; i > 0; i -= 4, ++j) {
      result.digits[j] = RSAUtils.hexToDigit(s.substr(Math.max(i - 4, 0), Math.min(i, 4)));
    }
    return result;
  };

  RSAUtils.biFromString = function (s, radix) {
    var isNeg = s.charAt(0) == '-';
    var istop = isNeg ? 1 : 0;
    var result = new BigInt();
    var place = new BigInt();
    place.digits[0] = 1; // radix^0
    for (var i = s.length - 1; i >= istop; i--) {
      var c = s.charCodeAt(i);
      var digit = RSAUtils.charToHex(c);
      var biDigit = RSAUtils.biMultiplyDigit(place, digit);
      result = RSAUtils.biAdd(result, biDigit);
      place = RSAUtils.biMultiplyDigit(place, radix);
    }
    result.isNeg = isNeg;
    return result;
  };

  RSAUtils.biDump = function (b) {
    return (b.isNeg ? "-" : "") + b.digits.join(" ");
  };

  RSAUtils.biAdd = function (x, y) {
    var result;

    if (x.isNeg != y.isNeg) {
      y.isNeg = !y.isNeg;
      result = RSAUtils.biSubtract(x, y);
      y.isNeg = !y.isNeg;
    } else
    {
      result = new BigInt();
      var c = 0;
      var n;
      for (var i = 0; i < x.digits.length; ++i) {
        n = x.digits[i] + y.digits[i] + c;
        result.digits[i] = n % biRadix;
        c = Number(n >= biRadix);
      }
      result.isNeg = x.isNeg;
    }
    return result;
  };

  RSAUtils.biSubtract = function (x, y) {
    var result;
    if (x.isNeg != y.isNeg) {
      y.isNeg = !y.isNeg;
      result = RSAUtils.biAdd(x, y);
      y.isNeg = !y.isNeg;
    } else {
      result = new BigInt();
      var n, c;
      c = 0;
      for (var i = 0; i < x.digits.length; ++i) {
        n = x.digits[i] - y.digits[i] + c;
        result.digits[i] = n % biRadix;
        // Stupid non-conforming modulus operation.
        if (result.digits[i] < 0) result.digits[i] += biRadix;
        c = 0 - Number(n < 0);
      }
      // Fix up the negative sign, if any.
      if (c == -1) {
        c = 0;
        for (var i = 0; i < x.digits.length; ++i) {
          n = 0 - result.digits[i] + c;
          result.digits[i] = n % biRadix;
          // Stupid non-conforming modulus operation.
          if (result.digits[i] < 0) result.digits[i] += biRadix;
          c = 0 - Number(n < 0);
        }
        // Result is opposite sign of arguments.
        result.isNeg = !x.isNeg;
      } else {
        // Result is same sign.
        result.isNeg = x.isNeg;
      }
    }
    return result;
  };

  RSAUtils.biHighIndex = function (x) {
    var result = x.digits.length - 1;
    while (result > 0 && x.digits[result] == 0) {--result;}
    return result;
  };

  RSAUtils.biNumBits = function (x) {
    var n = RSAUtils.biHighIndex(x);
    var d = x.digits[n];
    var m = (n + 1) * bitsPerDigit;
    var result;
    for (result = m; result > m - bitsPerDigit; --result) {
      if ((d & 0x8000) != 0) break;
      d <<= 1;
    }
    return result;
  };

  RSAUtils.biMultiply = function (x, y) {
    var result = new BigInt();
    var c;
    var n = RSAUtils.biHighIndex(x);
    var t = RSAUtils.biHighIndex(y);
    var u, uv, k;

    for (var i = 0; i <= t; ++i) {
      c = 0;
      k = i;
      for (j = 0; j <= n; ++j, ++k) {
        uv = result.digits[k] + x.digits[j] * y.digits[i] + c;
        result.digits[k] = uv & maxDigitVal;
        c = uv >>> biRadixBits;
        //c = Math.floor(uv / biRadix);
      }
      result.digits[i + n + 1] = c;
    }
    // Someone give me a logical xor, please.
    result.isNeg = x.isNeg != y.isNeg;
    return result;
  };

  RSAUtils.biMultiplyDigit = function (x, y) {
    var n, c, uv;

    result = new BigInt();
    n = RSAUtils.biHighIndex(x);
    c = 0;
    for (var j = 0; j <= n; ++j) {
      uv = result.digits[j] + x.digits[j] * y + c;
      result.digits[j] = uv & maxDigitVal;
      c = uv >>> biRadixBits;
      //c = Math.floor(uv / biRadix);
    }
    result.digits[1 + n] = c;
    return result;
  };

  RSAUtils.arrayCopy = function (src, srcStart, dest, destStart, n) {
    var m = Math.min(srcStart + n, src.length);
    for (var i = srcStart, j = destStart; i < m; ++i, ++j) {
      dest[j] = src[i];
    }
  };

  var highBitMasks = [0x0000, 0x8000, 0xC000, 0xE000, 0xF000, 0xF800,
  0xFC00, 0xFE00, 0xFF00, 0xFF80, 0xFFC0, 0xFFE0,
  0xFFF0, 0xFFF8, 0xFFFC, 0xFFFE, 0xFFFF];

  RSAUtils.biShiftLeft = function (x, n) {
    var digitCount = Math.floor(n / bitsPerDigit);
    var result = new BigInt();
    RSAUtils.arrayCopy(x.digits, 0, result.digits, digitCount,
    result.digits.length - digitCount);
    var bits = n % bitsPerDigit;
    var rightBits = bitsPerDigit - bits;
    for (var i = result.digits.length - 1, i1 = i - 1; i > 0; --i, --i1) {
      result.digits[i] = result.digits[i] << bits & maxDigitVal |
      (result.digits[i1] & highBitMasks[bits]) >>>
      rightBits;
    }
    result.digits[0] = result.digits[i] << bits & maxDigitVal;
    result.isNeg = x.isNeg;
    return result;
  };

  var lowBitMasks = [0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,
  0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,
  0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF];

  RSAUtils.biShiftRight = function (x, n) {
    var digitCount = Math.floor(n / bitsPerDigit);
    var result = new BigInt();
    RSAUtils.arrayCopy(x.digits, digitCount, result.digits, 0,
    x.digits.length - digitCount);
    var bits = n % bitsPerDigit;
    var leftBits = bitsPerDigit - bits;
    for (var i = 0, i1 = i + 1; i < result.digits.length - 1; ++i, ++i1) {
      result.digits[i] = result.digits[i] >>> bits |
      (result.digits[i1] & lowBitMasks[bits]) << leftBits;
    }
    result.digits[result.digits.length - 1] >>>= bits;
    result.isNeg = x.isNeg;
    return result;
  };

  RSAUtils.biMultiplyByRadixPower = function (x, n) {
    var result = new BigInt();
    RSAUtils.arrayCopy(x.digits, 0, result.digits, n, result.digits.length - n);
    return result;
  };

  RSAUtils.biDivideByRadixPower = function (x, n) {
    var result = new BigInt();
    RSAUtils.arrayCopy(x.digits, n, result.digits, 0, result.digits.length - n);
    return result;
  };

  RSAUtils.biModuloByRadixPower = function (x, n) {
    var result = new BigInt();
    RSAUtils.arrayCopy(x.digits, 0, result.digits, 0, n);
    return result;
  };

  RSAUtils.biCompare = function (x, y) {
    if (x.isNeg != y.isNeg) {
      return 1 - 2 * Number(x.isNeg);
    }
    for (var i = x.digits.length - 1; i >= 0; --i) {
      if (x.digits[i] != y.digits[i]) {
        if (x.isNeg) {
          return 1 - 2 * Number(x.digits[i] > y.digits[i]);
        } else {
          return 1 - 2 * Number(x.digits[i] < y.digits[i]);
        }
      }
    }
    return 0;
  };

  RSAUtils.biDivideModulo = function (x, y) {
    var nb = RSAUtils.biNumBits(x);
    var tb = RSAUtils.biNumBits(y);
    var origYIsNeg = y.isNeg;
    var q, r;
    if (nb < tb) {
      // |x| < |y|
      if (x.isNeg) {
        q = RSAUtils.biCopy(bigOne);
        q.isNeg = !y.isNeg;
        x.isNeg = false;
        y.isNeg = false;
        r = biSubtract(y, x);
        // Restore signs, 'cause they're references.
        x.isNeg = true;
        y.isNeg = origYIsNeg;
      } else {
        q = new BigInt();
        r = RSAUtils.biCopy(x);
      }
      return [q, r];
    }

    q = new BigInt();
    r = x;

    // Normalize Y.
    var t = Math.ceil(tb / bitsPerDigit) - 1;
    var lambda = 0;
    while (y.digits[t] < biHalfRadix) {
      y = RSAUtils.biShiftLeft(y, 1);
      ++lambda;
      ++tb;
      t = Math.ceil(tb / bitsPerDigit) - 1;
    }
    // Shift r over to keep the quotient constant. We'll shift the
    // remainder back at the end.
    r = RSAUtils.biShiftLeft(r, lambda);
    nb += lambda; // Update the bit count for x.
    var n = Math.ceil(nb / bitsPerDigit) - 1;

    var b = RSAUtils.biMultiplyByRadixPower(y, n - t);
    while (RSAUtils.biCompare(r, b) != -1) {
      ++q.digits[n - t];
      r = RSAUtils.biSubtract(r, b);
    }
    for (var i = n; i > t; --i) {
      var ri = i >= r.digits.length ? 0 : r.digits[i];
      var ri1 = i - 1 >= r.digits.length ? 0 : r.digits[i - 1];
      var ri2 = i - 2 >= r.digits.length ? 0 : r.digits[i - 2];
      var yt = t >= y.digits.length ? 0 : y.digits[t];
      var yt1 = t - 1 >= y.digits.length ? 0 : y.digits[t - 1];
      if (ri == yt) {
        q.digits[i - t - 1] = maxDigitVal;
      } else {
        q.digits[i - t - 1] = Math.floor((ri * biRadix + ri1) / yt);
      }

      var c1 = q.digits[i - t - 1] * (yt * biRadix + yt1);
      var c2 = ri * biRadixSquared + (ri1 * biRadix + ri2);
      while (c1 > c2) {
        --q.digits[i - t - 1];
        c1 = q.digits[i - t - 1] * (yt * biRadix | yt1);
        c2 = ri * biRadix * biRadix + (ri1 * biRadix + ri2);
      }

      b = RSAUtils.biMultiplyByRadixPower(y, i - t - 1);
      r = RSAUtils.biSubtract(r, RSAUtils.biMultiplyDigit(b, q.digits[i - t - 1]));
      if (r.isNeg) {
        r = RSAUtils.biAdd(r, b);
        --q.digits[i - t - 1];
      }
    }
    r = RSAUtils.biShiftRight(r, lambda);
    // Fiddle with the signs and stuff to make sure that 0 <= r < y.
    q.isNeg = x.isNeg != origYIsNeg;
    if (x.isNeg) {
      if (origYIsNeg) {
        q = RSAUtils.biAdd(q, bigOne);
      } else {
        q = RSAUtils.biSubtract(q, bigOne);
      }
      y = RSAUtils.biShiftRight(y, lambda);
      r = RSAUtils.biSubtract(y, r);
    }
    // Check for the unbelievably stupid degenerate case of r == -0.
    if (r.digits[0] == 0 && RSAUtils.biHighIndex(r) == 0) r.isNeg = false;

    return [q, r];
  };

  RSAUtils.biDivide = function (x, y) {
    return RSAUtils.biDivideModulo(x, y)[0];
  };

  RSAUtils.biModulo = function (x, y) {
    return RSAUtils.biDivideModulo(x, y)[1];
  };

  RSAUtils.biMultiplyMod = function (x, y, m) {
    return RSAUtils.biModulo(RSAUtils.biMultiply(x, y), m);
  };

  RSAUtils.biPow = function (x, y) {
    var result = bigOne;
    var a = x;
    while (true) {
      if ((y & 1) != 0) result = RSAUtils.biMultiply(result, a);
      y >>= 1;
      if (y == 0) break;
      a = RSAUtils.biMultiply(a, a);
    }
    return result;
  };

  RSAUtils.biPowMod = function (x, y, m) {
    var result = bigOne;
    var a = x;
    var k = y;
    while (true) {
      if ((k.digits[0] & 1) != 0) result = RSAUtils.biMultiplyMod(result, a, m);
      k = RSAUtils.biShiftRight(k, 1);
      if (k.digits[0] == 0 && RSAUtils.biHighIndex(k) == 0) break;
      a = RSAUtils.biMultiplyMod(a, a, m);
    }
    return result;
  };


  $w.BarrettMu = function (m) {
    this.modulus = RSAUtils.biCopy(m);
    this.k = RSAUtils.biHighIndex(this.modulus) + 1;
    var b2k = new BigInt();
    b2k.digits[2 * this.k] = 1; // b2k = b^(2k)
    this.mu = RSAUtils.biDivide(b2k, this.modulus);
    this.bkplus1 = new BigInt();
    this.bkplus1.digits[this.k + 1] = 1; // bkplus1 = b^(k+1)
    this.modulo = BarrettMu_modulo;
    this.multiplyMod = BarrettMu_multiplyMod;
    this.powMod = BarrettMu_powMod;
  };

  function BarrettMu_modulo(x) {
    var $dmath = RSAUtils;
    var q1 = $dmath.biDivideByRadixPower(x, this.k - 1);
    var q2 = $dmath.biMultiply(q1, this.mu);
    var q3 = $dmath.biDivideByRadixPower(q2, this.k + 1);
    var r1 = $dmath.biModuloByRadixPower(x, this.k + 1);
    var r2term = $dmath.biMultiply(q3, this.modulus);
    var r2 = $dmath.biModuloByRadixPower(r2term, this.k + 1);
    var r = $dmath.biSubtract(r1, r2);
    if (r.isNeg) {
      r = $dmath.biAdd(r, this.bkplus1);
    }
    var rgtem = $dmath.biCompare(r, this.modulus) >= 0;
    while (rgtem) {
      r = $dmath.biSubtract(r, this.modulus);
      rgtem = $dmath.biCompare(r, this.modulus) >= 0;
    }
    return r;
  }

  function BarrettMu_multiplyMod(x, y) {
    /*
                                        x = this.modulo(x);
                                        y = this.modulo(y);
                                        */
    var xy = RSAUtils.biMultiply(x, y);
    return this.modulo(xy);
  }

  function BarrettMu_powMod(x, y) {
    var result = new BigInt();
    result.digits[0] = 1;
    var a = x;
    var k = y;
    while (true) {
      if ((k.digits[0] & 1) != 0) result = this.multiplyMod(result, a);
      k = RSAUtils.biShiftRight(k, 1);
      if (k.digits[0] == 0 && RSAUtils.biHighIndex(k) == 0) break;
      a = this.multiplyMod(a, a);
    }
    return result;
  }

  var RSAKeyPair = function RSAKeyPair(encryptionExponent, decryptionExponent, modulus) {
    var $dmath = RSAUtils;
    this.e = $dmath.biFromHex(encryptionExponent);
    this.d = $dmath.biFromHex(decryptionExponent);
    this.m = $dmath.biFromHex(modulus);
    // We can do two bytes per digit, so
    // chunkSize = 2 * (number of digits in modulus - 1).
    // Since biHighIndex returns the high index, not the number of digits, 1 has
    // already been subtracted.
    this.chunkSize = 2 * $dmath.biHighIndex(this.m);
    this.radix = 16;
    this.barrett = new $w.BarrettMu(this.m);
  };

  RSAUtils.getKeyPair = function (encryptionExponent, decryptionExponent, modulus) {
    return new RSAKeyPair(encryptionExponent, decryptionExponent, modulus);
  };

  if (typeof $w.twoDigit === 'undefined') {
    $w.twoDigit = function (n) {
      return (n < 10 ? "0" : "") + String(n);
    };
  }

  // Altered by Rob Saunders (rob@robsaunders.net). New routine pads the
  // string after it has been converted to an array. This fixes an
  // incompatibility with Flash MX's ActionScript.
  RSAUtils.encryptedString = function (key, s) {
    var a = [];
    var sl = s.length;
    var i = 0;
    while (i < sl) {
      a[i] = s.charCodeAt(i);
      i++;
    }

    while (a.length % key.chunkSize != 0) {
      a[i++] = 0;
    }

    var al = a.length;
    var result = "";
    var j, k, block;
    for (i = 0; i < al; i += key.chunkSize) {
      block = new BigInt();
      j = 0;
      for (k = i; k < i + key.chunkSize; ++j) {
        block.digits[j] = a[k++];
        block.digits[j] += a[k++] << 8;
      }
      var crypt = key.barrett.powMod(block, key.e);
      var text = key.radix == 16 ? RSAUtils.biToHex(crypt) : RSAUtils.biToString(crypt, key.radix);
      result += text + " ";
    }
    return result.substring(0, result.length - 1); // Remove last space.
  };

  RSAUtils.decryptedString = function (key, s) {
    var blocks = s.split(" ");
    var result = "";
    var i, j, block;
    for (i = 0; i < blocks.length; ++i) {
      var bi;
      if (key.radix == 16) {
        bi = RSAUtils.biFromHex(blocks[i]);
      } else
      {
        bi = RSAUtils.biFromString(blocks[i], key.radix);
      }
      block = key.barrett.powMod(bi, key.d);
      for (j = 0; j <= RSAUtils.biHighIndex(block); ++j) {
        result += String.fromCharCode(block.digits[j] & 255,
        block.digits[j] >> 8);
      }
    }
    // Remove trailing null, if any.
    if (result.charCodeAt(result.length - 1) == 0) {
      result = result.substring(0, result.length - 1);
    }
    return result;
  };

  RSAUtils.setMaxDigits(130);

})(window);
});
define('static/js/socket.io-client/dist/socket.io.dev.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /*!
               * Socket.IO v2.2.0
               * (c) 2014-2018 Guillermo Rauch
               * Released under the MIT License.
               */
(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === 'object' && typeof module === 'object')
  module.exports = factory();else
  if (typeof define === 'function' && define.amd)
  define([], factory);else
  if (typeof exports === 'object')
  exports["io"] = factory();else

  root["io"] = factory();
})(void 0, function () {
  return (/******/function (modules) {// webpackBootstrap
      /******/ // The module cache
      /******/var installedModules = {};
      /******/
      /******/ // The require function
      /******/function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/if (installedModules[moduleId])
          /******/return installedModules[moduleId].exports;
        /******/
        /******/ // Create a new module (and put it into the cache)
        /******/var module = installedModules[moduleId] = {
          /******/exports: {},
          /******/id: moduleId,
          /******/loaded: false
          /******/ };
        /******/
        /******/ // Execute the module function
        /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ // Flag the module as loaded
        /******/module.loaded = true;
        /******/
        /******/ // Return the exports of the module
        /******/return module.exports;
        /******/}
      /******/
      /******/
      /******/ // expose the modules object (__webpack_modules__)
      /******/__webpack_require__.m = modules;
      /******/
      /******/ // expose the module cache
      /******/__webpack_require__.c = installedModules;
      /******/
      /******/ // __webpack_public_path__
      /******/__webpack_require__.p = "";
      /******/
      /******/ // Load entry module and return exports
      /******/return __webpack_require__(0);
      /******/}(
    /************************************************************************/
    /******/[
    /* 0 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};

      /**
                                                                                                                                                                                                                                                                                 * Module dependencies.
                                                                                                                                                                                                                                                                                 */

      var url = __webpack_require__(1);
      var parser = __webpack_require__(7);
      var Manager = __webpack_require__(12);
      var debug = __webpack_require__(3)('socket.io-client');

      /**
                                                               * Module exports.
                                                               */

      module.exports = exports = lookup;

      /**
                                          * Managers cache.
                                          */

      var cache = exports.managers = {};

      /**
                                          * Looks up an existing `Manager` for multiplexing.
                                          * If the user summons:
                                          *
                                          *   `io('http://localhost/a');`
                                          *   `io('http://localhost/b');`
                                          *
                                          * We reuse the existing instance based on same scheme/port/host,
                                          * and we initialize sockets for each namespace.
                                          *
                                          * @api public
                                          */

      function lookup(uri, opts) {
        if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) === 'object') {
          opts = uri;
          uri = undefined;
        }

        opts = opts || {};

        var parsed = url(uri);
        var source = parsed.source;
        var id = parsed.id;
        var path = parsed.path;
        var sameNamespace = cache[id] && path in cache[id].nsps;
        var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;

        var io;

        if (newConnection) {
          debug('ignoring socket cache for %s', source);
          io = Manager(source, opts);
        } else {
          if (!cache[id]) {
            debug('new io instance for %s', source);
            cache[id] = Manager(source, opts);
          }
          io = cache[id];
        }
        if (parsed.query && !opts.query) {
          opts.query = parsed.query;
        }
        return io.socket(parsed.path, opts);
      }

      /**
         * Protocol version.
         *
         * @api public
         */

      exports.protocol = parser.protocol;

      /**
                                           * `connect`.
                                           *
                                           * @param {String} uri
                                           * @api public
                                           */

      exports.connect = lookup;

      /**
                                 * Expose constructors for standalone build.
                                 *
                                 * @api public
                                 */

      exports.Manager = __webpack_require__(12);
      exports.Socket = __webpack_require__(36);

      /***/},
    /* 1 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      /**
                     * Module dependencies.
                     */

      var parseuri = __webpack_require__(2);
      var debug = __webpack_require__(3)('socket.io-client:url');

      /**
                                                                   * Module exports.
                                                                   */

      module.exports = url;

      /**
                             * URL parser.
                             *
                             * @param {String} url
                             * @param {Object} An object meant to mimic window.location.
                             *                 Defaults to window.location.
                             * @api public
                             */

      function url(uri, loc) {
        var obj = uri;

        // default to window.location
        loc = loc || typeof location !== 'undefined' && location;
        if (null == uri) uri = loc.protocol + '//' + loc.host;

        // relative path support
        if ('string' === typeof uri) {
          if ('/' === uri.charAt(0)) {
            if ('/' === uri.charAt(1)) {
              uri = loc.protocol + uri;
            } else {
              uri = loc.host + uri;
            }
          }

          if (!/^(https?|wss?):\/\//.test(uri)) {
            debug('protocol-less url %s', uri);
            if ('undefined' !== typeof loc) {
              uri = loc.protocol + '//' + uri;
            } else {
              uri = 'https://' + uri;
            }
          }

          // parse
          debug('parse %s', uri);
          obj = parseuri(uri);
        }

        // make sure we treat `localhost:80` and `localhost` equally
        if (!obj.port) {
          if (/^(http|ws)$/.test(obj.protocol)) {
            obj.port = '80';
          } else if (/^(http|ws)s$/.test(obj.protocol)) {
            obj.port = '443';
          }
        }

        obj.path = obj.path || '/';

        var ipv6 = obj.host.indexOf(':') !== -1;
        var host = ipv6 ? '[' + obj.host + ']' : obj.host;

        // define unique id
        obj.id = obj.protocol + '://' + host + ':' + obj.port;
        // define href
        obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);

        return obj;
      }

      /***/},
    /* 2 */
    /***/function (module, exports) {

      /**
                                      * Parses an URI
                                      *
                                      * @author Steven Levithan <stevenlevithan.com> (MIT license)
                                      * @api private
                                      */

      var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

      var parts = [
      'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];


      module.exports = function parseuri(str) {
        var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

        if (b != -1 && e != -1) {
          str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
        }

        var m = re.exec(str || ''),
        uri = {},
        i = 14;

        while (i--) {
          uri[parts[i]] = m[i] || '';
        }

        if (b != -1 && e != -1) {
          uri.source = src;
          uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
          uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
          uri.ipv6uri = true;
        }

        return uri;
      };


      /***/},
    /* 3 */
    /***/function (module, exports, __webpack_require__) {

      /* WEBPACK VAR INJECTION */(function (process) {/**
                                                      * This is the web browser implementation of `debug()`.
                                                      *
                                                      * Expose `debug()` as the module.
                                                      */

        exports = module.exports = __webpack_require__(5);
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage = 'undefined' != typeof chrome &&
        'undefined' != typeof chrome.storage ?
        chrome.storage.local :
        localstorage();

        /**
                         * Colors.
                         */

        exports.colors = [
        '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
        '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
        '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
        '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
        '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
        '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
        '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
        '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
        '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
        '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
        '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];


        /**
                                                                            * Currently only WebKit-based Web Inspectors, Firefox >= v31,
                                                                            * and the Firebug extension (any Firefox version) are known
                                                                            * to support "%c" CSS customizations.
                                                                            *
                                                                            * TODO: add a `localStorage` variable to explicitly enable/disable colors
                                                                            */

        function useColors() {
          // NB: In an Electron preload script, document will be defined but not fully
          // initialized. Since we know we're in Chrome, we'll just detect this case
          // explicitly
          if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
            return true;
          }

          // Internet Explorer and Edge do not support colors.
          if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
            return false;
          }

          // is webkit? http://stackoverflow.com/a/16459606/376773
          // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
          return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||
          // is firebug? http://stackoverflow.com/a/398120/376773
          typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||
          // is firefox >= v31?
          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
          typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||
          // double check webkit in userAgent just in case we are in a worker
          typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }

        /**
           * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
           */

        exports.formatters.j = function (v) {
          try {
            return JSON.stringify(v);
          } catch (err) {
            return '[UnexpectedJSONParseError]: ' + err.message;
          }
        };


        /**
            * Colorize log arguments if enabled.
            *
            * @api public
            */

        function formatArgs(args) {
          var useColors = this.useColors;

          args[0] = (useColors ? '%c' : '') +
          this.namespace + (
          useColors ? ' %c' : ' ') +
          args[0] + (
          useColors ? '%c ' : ' ') +
          '+' + exports.humanize(this.diff);

          if (!useColors) return;

          var c = 'color: ' + this.color;
          args.splice(1, 0, c, 'color: inherit');

          // the final "%c" is somewhat tricky, because there could be other
          // arguments passed either before or after the %c, so we need to
          // figure out the correct index to insert the CSS into
          var index = 0;
          var lastC = 0;
          args[0].replace(/%[a-zA-Z%]/g, function (match) {
            if ('%%' === match) return;
            index++;
            if ('%c' === match) {
              // we only are interested in the *last* %c
              // (the user may have provided their own)
              lastC = index;
            }
          });

          args.splice(lastC, 0, c);
        }

        /**
           * Invokes `console.log()` when available.
           * No-op when `console.log` is not a "function".
           *
           * @api public
           */

        function log() {
          // this hackery is required for IE8/9, where
          // the `console.log` function doesn't have 'apply'
          return 'object' === typeof console &&
          console.log &&
          Function.prototype.apply.call(console.log, console, arguments);
        }

        /**
           * Save `namespaces`.
           *
           * @param {String} namespaces
           * @api private
           */

        function save(namespaces) {
          try {
            if (null == namespaces) {
              exports.storage.removeItem('debug');
            } else {
              exports.storage.debug = namespaces;
            }
          } catch (e) {}
        }

        /**
           * Load `namespaces`.
           *
           * @return {String} returns the previously persisted debug modes
           * @api private
           */

        function load() {
          var r;
          try {
            r = exports.storage.debug;
          } catch (e) {}

          // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
          if (!r && typeof process !== 'undefined' && 'env' in process) {
            r = process.env.DEBUG;
          }

          return r;
        }

        /**
           * Enable namespaces listed in `localStorage.debug` initially.
           */

        exports.enable(load());

        /**
                                 * Localstorage attempts to return the localstorage.
                                 *
                                 * This is necessary because safari throws
                                 * when a user disables cookies/localstorage
                                 * and you attempt to access it.
                                 *
                                 * @return {LocalStorage}
                                 * @api private
                                 */

        function localstorage() {
          try {
            return window.localStorage;
          } catch (e) {}
        }

        /* WEBPACK VAR INJECTION */}).call(exports, __webpack_require__(4));

      /***/},
    /* 4 */
    /***/function (module, exports) {

      // shim for using process in browser
      var process = module.exports = {};

      // cached from whatever global is present so that test runners that stub it
      // don't break things.  But we need to wrap it in a try catch in case it is
      // wrapped in strict mode code which doesn't define any globals.  It's inside a
      // function because try/catches deoptimize in certain engines.

      var cachedSetTimeout;
      var cachedClearTimeout;

      function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
      }
      function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
      }
      (function () {
        try {
          if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }
        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
          }
        }


      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }
        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
          }
        }



      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;

      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }

      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }

      process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };

      // v8 likes predictible objects
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function () {
        this.fun.apply(null, this.array);
      };
      process.title = 'browser';
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = ''; // empty string to avoid regexp issues
      process.versions = {};

      function noop() {}

      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;
      process.prependListener = noop;
      process.prependOnceListener = noop;

      process.listeners = function (name) {return [];};

      process.binding = function (name) {
        throw new Error('process.binding is not supported');
      };

      process.cwd = function () {return '/';};
      process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
      };
      process.umask = function () {return 0;};


      /***/},
    /* 5 */
    /***/function (module, exports, __webpack_require__) {


      /**
                                                           * This is the common logic for both the Node.js and web browser
                                                           * implementations of `debug()`.
                                                           *
                                                           * Expose `debug()` as the module.
                                                           */

      exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
      exports.coerce = coerce;
      exports.disable = disable;
      exports.enable = enable;
      exports.enabled = enabled;
      exports.humanize = __webpack_require__(6);

      /**
                                                  * Active `debug` instances.
                                                  */
      exports.instances = [];

      /**
                               * The currently active debug mode names, and names to skip.
                               */

      exports.names = [];
      exports.skips = [];

      /**
                           * Map of special "%n" handling functions, for the debug "format" argument.
                           *
                           * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
                           */

      exports.formatters = {};

      /**
                                * Select a color.
                                * @param {String} namespace
                                * @return {Number}
                                * @api private
                                */

      function selectColor(namespace) {
        var hash = 0,i;

        for (i in namespace) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0; // Convert to 32bit integer
        }

        return exports.colors[Math.abs(hash) % exports.colors.length];
      }

      /**
         * Create a debugger with the given `namespace`.
         *
         * @param {String} namespace
         * @return {Function}
         * @api public
         */

      function createDebug(namespace) {

        var prevTime;

        function debug() {
          // disabled?
          if (!debug.enabled) return;

          var self = debug;

          // set `diff` timestamp
          var curr = +new Date();
          var ms = curr - (prevTime || curr);
          self.diff = ms;
          self.prev = prevTime;
          self.curr = curr;
          prevTime = curr;

          // turn the `arguments` into a proper Array
          var args = new Array(arguments.length);
          for (var i = 0; i < args.length; i++) {
            args[i] = arguments[i];
          }

          args[0] = exports.coerce(args[0]);

          if ('string' !== typeof args[0]) {
            // anything else let's inspect with %O
            args.unshift('%O');
          }

          // apply any `formatters` transformations
          var index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
            // if we encounter an escaped % then don't increase the array index
            if (match === '%%') return match;
            index++;
            var formatter = exports.formatters[format];
            if ('function' === typeof formatter) {
              var val = args[index];
              match = formatter.call(self, val);

              // now we need to remove `args[index]` since it's inlined in the `format`
              args.splice(index, 1);
              index--;
            }
            return match;
          });

          // apply env-specific formatting (colors, etc.)
          exports.formatArgs.call(self, args);

          var logFn = debug.log || exports.log || console.log.bind(console);
          logFn.apply(self, args);
        }

        debug.namespace = namespace;
        debug.enabled = exports.enabled(namespace);
        debug.useColors = exports.useColors();
        debug.color = selectColor(namespace);
        debug.destroy = destroy;

        // env-specific initialization logic for debug instances
        if ('function' === typeof exports.init) {
          exports.init(debug);
        }

        exports.instances.push(debug);

        return debug;
      }

      function destroy() {
        var index = exports.instances.indexOf(this);
        if (index !== -1) {
          exports.instances.splice(index, 1);
          return true;
        } else {
          return false;
        }
      }

      /**
         * Enables a debug mode by namespaces. This can include modes
         * separated by a colon and wildcards.
         *
         * @param {String} namespaces
         * @api public
         */

      function enable(namespaces) {
        exports.save(namespaces);

        exports.names = [];
        exports.skips = [];

        var i;
        var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
        var len = split.length;

        for (i = 0; i < len; i++) {
          if (!split[i]) continue; // ignore empty strings
          namespaces = split[i].replace(/\*/g, '.*?');
          if (namespaces[0] === '-') {
            exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
          } else {
            exports.names.push(new RegExp('^' + namespaces + '$'));
          }
        }

        for (i = 0; i < exports.instances.length; i++) {
          var instance = exports.instances[i];
          instance.enabled = exports.enabled(instance.namespace);
        }
      }

      /**
         * Disable debug output.
         *
         * @api public
         */

      function disable() {
        exports.enable('');
      }

      /**
         * Returns true if the given mode name is enabled, false otherwise.
         *
         * @param {String} name
         * @return {Boolean}
         * @api public
         */

      function enabled(name) {
        if (name[name.length - 1] === '*') {
          return true;
        }
        var i, len;
        for (i = 0, len = exports.skips.length; i < len; i++) {
          if (exports.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = exports.names.length; i < len; i++) {
          if (exports.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }

      /**
         * Coerce `val`.
         *
         * @param {Mixed} val
         * @return {Mixed}
         * @api private
         */

      function coerce(val) {
        if (val instanceof Error) return val.stack || val.message;
        return val;
      }


      /***/},
    /* 6 */
    /***/function (module, exports) {

      /**
                                      * Helpers.
                                      */

      var s = 1000;
      var m = s * 60;
      var h = m * 60;
      var d = h * 24;
      var y = d * 365.25;

      /**
                           * Parse or format the given `val`.
                           *
                           * Options:
                           *
                           *  - `long` verbose formatting [false]
                           *
                           * @param {String|Number} val
                           * @param {Object} [options]
                           * @throws {Error} throw an error if val is not a non-empty string or a number
                           * @return {String|Number}
                           * @api public
                           */

      module.exports = function (val, options) {
        options = options || {};
        var type = typeof val;
        if (type === 'string' && val.length > 0) {
          return parse(val);
        } else if (type === 'number' && isNaN(val) === false) {
          return options.long ? fmtLong(val) : fmtShort(val);
        }
        throw new Error(
        'val is not a non-empty string or a valid number. val=' +
        JSON.stringify(val));

      };

      /**
          * Parse the given `str` and return milliseconds.
          *
          * @param {String} str
          * @return {Number}
          * @api private
          */

      function parse(str) {
        str = String(str);
        if (str.length > 100) {
          return;
        }
        var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
        str);

        if (!match) {
          return;
        }
        var n = parseFloat(match[1]);
        var type = (match[2] || 'ms').toLowerCase();
        switch (type) {
          case 'years':
          case 'year':
          case 'yrs':
          case 'yr':
          case 'y':
            return n * y;
          case 'days':
          case 'day':
          case 'd':
            return n * d;
          case 'hours':
          case 'hour':
          case 'hrs':
          case 'hr':
          case 'h':
            return n * h;
          case 'minutes':
          case 'minute':
          case 'mins':
          case 'min':
          case 'm':
            return n * m;
          case 'seconds':
          case 'second':
          case 'secs':
          case 'sec':
          case 's':
            return n * s;
          case 'milliseconds':
          case 'millisecond':
          case 'msecs':
          case 'msec':
          case 'ms':
            return n;
          default:
            return undefined;}

      }

      /**
         * Short format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

      function fmtShort(ms) {
        if (ms >= d) {
          return Math.round(ms / d) + 'd';
        }
        if (ms >= h) {
          return Math.round(ms / h) + 'h';
        }
        if (ms >= m) {
          return Math.round(ms / m) + 'm';
        }
        if (ms >= s) {
          return Math.round(ms / s) + 's';
        }
        return ms + 'ms';
      }

      /**
         * Long format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

      function fmtLong(ms) {
        return plural(ms, d, 'day') ||
        plural(ms, h, 'hour') ||
        plural(ms, m, 'minute') ||
        plural(ms, s, 'second') ||
        ms + ' ms';
      }

      /**
         * Pluralization helper.
         */

      function plural(ms, n, name) {
        if (ms < n) {
          return;
        }
        if (ms < n * 1.5) {
          return Math.floor(ms / n) + ' ' + name;
        }
        return Math.ceil(ms / n) + ' ' + name + 's';
      }


      /***/},
    /* 7 */
    /***/function (module, exports, __webpack_require__) {


      /**
                                                           * Module dependencies.
                                                           */

      var debug = __webpack_require__(3)('socket.io-parser');
      var Emitter = __webpack_require__(8);
      var binary = __webpack_require__(9);
      var isArray = __webpack_require__(10);
      var isBuf = __webpack_require__(11);

      /**
                                            * Protocol version.
                                            *
                                            * @api public
                                            */

      exports.protocol = 4;

      /**
                             * Packet types.
                             *
                             * @api public
                             */

      exports.types = [
      'CONNECT',
      'DISCONNECT',
      'EVENT',
      'ACK',
      'ERROR',
      'BINARY_EVENT',
      'BINARY_ACK'];


      /**
                      * Packet type `connect`.
                      *
                      * @api public
                      */

      exports.CONNECT = 0;

      /**
                            * Packet type `disconnect`.
                            *
                            * @api public
                            */

      exports.DISCONNECT = 1;

      /**
                               * Packet type `event`.
                               *
                               * @api public
                               */

      exports.EVENT = 2;

      /**
                          * Packet type `ack`.
                          *
                          * @api public
                          */

      exports.ACK = 3;

      /**
                        * Packet type `error`.
                        *
                        * @api public
                        */

      exports.ERROR = 4;

      /**
                          * Packet type 'binary event'
                          *
                          * @api public
                          */

      exports.BINARY_EVENT = 5;

      /**
                                 * Packet type `binary ack`. For acks with binary arguments.
                                 *
                                 * @api public
                                 */

      exports.BINARY_ACK = 6;

      /**
                               * Encoder constructor.
                               *
                               * @api public
                               */

      exports.Encoder = Encoder;

      /**
                                  * Decoder constructor.
                                  *
                                  * @api public
                                  */

      exports.Decoder = Decoder;

      /**
                                  * A socket.io Encoder instance
                                  *
                                  * @api public
                                  */

      function Encoder() {}

      var ERROR_PACKET = exports.ERROR + '"encode error"';

      /**
                                                            * Encode a packet as a single string if non-binary, or as a
                                                            * buffer sequence, depending on packet type.
                                                            *
                                                            * @param {Object} obj - packet object
                                                            * @param {Function} callback - function to handle encodings (likely engine.write)
                                                            * @return Calls callback with Array of encodings
                                                            * @api public
                                                            */

      Encoder.prototype.encode = function (obj, callback) {
        debug('encoding packet %j', obj);

        if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
          encodeAsBinary(obj, callback);
        } else {
          var encoding = encodeAsString(obj);
          callback([encoding]);
        }
      };

      /**
          * Encode packet as string.
          *
          * @param {Object} packet
          * @return {String} encoded
          * @api private
          */

      function encodeAsString(obj) {

        // first is type
        var str = '' + obj.type;

        // attachments if we have them
        if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
          str += obj.attachments + '-';
        }

        // if we have a namespace other than `/`
        // we append it followed by a comma `,`
        if (obj.nsp && '/' !== obj.nsp) {
          str += obj.nsp + ',';
        }

        // immediately followed by the id
        if (null != obj.id) {
          str += obj.id;
        }

        // json data
        if (null != obj.data) {
          var payload = tryStringify(obj.data);
          if (payload !== false) {
            str += payload;
          } else {
            return ERROR_PACKET;
          }
        }

        debug('encoded %j as %s', obj, str);
        return str;
      }

      function tryStringify(str) {
        try {
          return JSON.stringify(str);
        } catch (e) {
          return false;
        }
      }

      /**
         * Encode packet as 'buffer sequence' by removing blobs, and
         * deconstructing packet into object with placeholders and
         * a list of buffers.
         *
         * @param {Object} packet
         * @return {Buffer} encoded
         * @api private
         */

      function encodeAsBinary(obj, callback) {

        function writeEncoding(bloblessData) {
          var deconstruction = binary.deconstructPacket(bloblessData);
          var pack = encodeAsString(deconstruction.packet);
          var buffers = deconstruction.buffers;

          buffers.unshift(pack); // add packet info to beginning of data list
          callback(buffers); // write all the buffers
        }

        binary.removeBlobs(obj, writeEncoding);
      }

      /**
         * A socket.io Decoder instance
         *
         * @return {Object} decoder
         * @api public
         */

      function Decoder() {
        this.reconstructor = null;
      }

      /**
         * Mix in `Emitter` with Decoder.
         */

      Emitter(Decoder.prototype);

      /**
                                   * Decodes an encoded packet string into packet JSON.
                                   *
                                   * @param {String} obj - encoded packet
                                   * @return {Object} packet
                                   * @api public
                                   */

      Decoder.prototype.add = function (obj) {
        var packet;
        if (typeof obj === 'string') {
          packet = decodeString(obj);
          if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {// binary packet's json
            this.reconstructor = new BinaryReconstructor(packet);

            // no attachments, labeled binary but no binary data to follow
            if (this.reconstructor.reconPack.attachments === 0) {
              this.emit('decoded', packet);
            }
          } else {// non-binary full packet
            this.emit('decoded', packet);
          }
        } else if (isBuf(obj) || obj.base64) {// raw binary data
          if (!this.reconstructor) {
            throw new Error('got binary data when not reconstructing a packet');
          } else {
            packet = this.reconstructor.takeBinaryData(obj);
            if (packet) {// received final buffer
              this.reconstructor = null;
              this.emit('decoded', packet);
            }
          }
        } else {
          throw new Error('Unknown type: ' + obj);
        }
      };

      /**
          * Decode a packet String (JSON data)
          *
          * @param {String} str
          * @return {Object} packet
          * @api private
          */

      function decodeString(str) {
        var i = 0;
        // look up type
        var p = {
          type: Number(str.charAt(0)) };


        if (null == exports.types[p.type]) {
          return error('unknown packet type ' + p.type);
        }

        // look up attachments if type binary
        if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
          var buf = '';
          while (str.charAt(++i) !== '-') {
            buf += str.charAt(i);
            if (i == str.length) break;
          }
          if (buf != Number(buf) || str.charAt(i) !== '-') {
            throw new Error('Illegal attachments');
          }
          p.attachments = Number(buf);
        }

        // look up namespace (if any)
        if ('/' === str.charAt(i + 1)) {
          p.nsp = '';
          while (++i) {
            var c = str.charAt(i);
            if (',' === c) break;
            p.nsp += c;
            if (i === str.length) break;
          }
        } else {
          p.nsp = '/';
        }

        // look up id
        var next = str.charAt(i + 1);
        if ('' !== next && Number(next) == next) {
          p.id = '';
          while (++i) {
            var c = str.charAt(i);
            if (null == c || Number(c) != c) {
              --i;
              break;
            }
            p.id += str.charAt(i);
            if (i === str.length) break;
          }
          p.id = Number(p.id);
        }

        // look up json data
        if (str.charAt(++i)) {
          var payload = tryParse(str.substr(i));
          var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
          if (isPayloadValid) {
            p.data = payload;
          } else {
            return error('invalid payload');
          }
        }

        debug('decoded %s as %j', str, p);
        return p;
      }

      function tryParse(str) {
        try {
          return JSON.parse(str);
        } catch (e) {
          return false;
        }
      }

      /**
         * Deallocates a parser's resources
         *
         * @api public
         */

      Decoder.prototype.destroy = function () {
        if (this.reconstructor) {
          this.reconstructor.finishedReconstruction();
        }
      };

      /**
          * A manager of a binary event's 'buffer sequence'. Should
          * be constructed whenever a packet of type BINARY_EVENT is
          * decoded.
          *
          * @param {Object} packet
          * @return {BinaryReconstructor} initialized reconstructor
          * @api private
          */

      function BinaryReconstructor(packet) {
        this.reconPack = packet;
        this.buffers = [];
      }

      /**
         * Method to be called when binary data received from connection
         * after a BINARY_EVENT packet.
         *
         * @param {Buffer | ArrayBuffer} binData - the raw binary data received
         * @return {null | Object} returns null if more binary data is expected or
         *   a reconstructed packet object if all buffers have been received.
         * @api private
         */

      BinaryReconstructor.prototype.takeBinaryData = function (binData) {
        this.buffers.push(binData);
        if (this.buffers.length === this.reconPack.attachments) {// done with buffer list
          var packet = binary.reconstructPacket(this.reconPack, this.buffers);
          this.finishedReconstruction();
          return packet;
        }
        return null;
      };

      /**
          * Cleans up binary packet reconstruction variables.
          *
          * @api private
          */

      BinaryReconstructor.prototype.finishedReconstruction = function () {
        this.reconPack = null;
        this.buffers = [];
      };

      function error(msg) {
        return {
          type: exports.ERROR,
          data: 'parser error: ' + msg };

      }


      /***/},
    /* 8 */
    /***/function (module, exports, __webpack_require__) {


      /**
                                                           * Expose `Emitter`.
                                                           */

      if (true) {
        module.exports = Emitter;
      }

      /**
         * Initialize a new `Emitter`.
         *
         * @api public
         */

      function Emitter(obj) {
        if (obj) return mixin(obj);
      };

      /**
          * Mixin the emitter properties.
          *
          * @param {Object} obj
          * @return {Object}
          * @api private
          */

      function mixin(obj) {
        for (var key in Emitter.prototype) {
          obj[key] = Emitter.prototype[key];
        }
        return obj;
      }

      /**
         * Listen on the given `event` with `fn`.
         *
         * @param {String} event
         * @param {Function} fn
         * @return {Emitter}
         * @api public
         */

      Emitter.prototype.on =
      Emitter.prototype.addEventListener = function (event, fn) {
        this._callbacks = this._callbacks || {};
        (this._callbacks['$' + event] = this._callbacks['$' + event] || []).
        push(fn);
        return this;
      };

      /**
          * Adds an `event` listener that will be invoked a single
          * time then automatically removed.
          *
          * @param {String} event
          * @param {Function} fn
          * @return {Emitter}
          * @api public
          */

      Emitter.prototype.once = function (event, fn) {
        function on() {
          this.off(event, on);
          fn.apply(this, arguments);
        }

        on.fn = fn;
        this.on(event, on);
        return this;
      };

      /**
          * Remove the given callback for `event` or all
          * registered callbacks.
          *
          * @param {String} event
          * @param {Function} fn
          * @return {Emitter}
          * @api public
          */

      Emitter.prototype.off =
      Emitter.prototype.removeListener =
      Emitter.prototype.removeAllListeners =
      Emitter.prototype.removeEventListener = function (event, fn) {
        this._callbacks = this._callbacks || {};

        // all
        if (0 == arguments.length) {
          this._callbacks = {};
          return this;
        }

        // specific event
        var callbacks = this._callbacks['$' + event];
        if (!callbacks) return this;

        // remove all handlers
        if (1 == arguments.length) {
          delete this._callbacks['$' + event];
          return this;
        }

        // remove specific handler
        var cb;
        for (var i = 0; i < callbacks.length; i++) {
          cb = callbacks[i];
          if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1);
            break;
          }
        }
        return this;
      };

      /**
          * Emit `event` with the given args.
          *
          * @param {String} event
          * @param {Mixed} ...
          * @return {Emitter}
          */

      Emitter.prototype.emit = function (event) {
        this._callbacks = this._callbacks || {};
        var args = [].slice.call(arguments, 1),
        callbacks = this._callbacks['$' + event];

        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) {
            callbacks[i].apply(this, args);
          }
        }

        return this;
      };

      /**
          * Return array of callbacks for `event`.
          *
          * @param {String} event
          * @return {Array}
          * @api public
          */

      Emitter.prototype.listeners = function (event) {
        this._callbacks = this._callbacks || {};
        return this._callbacks['$' + event] || [];
      };

      /**
          * Check if this emitter has `event` handlers.
          *
          * @param {String} event
          * @return {Boolean}
          * @api public
          */

      Emitter.prototype.hasListeners = function (event) {
        return !!this.listeners(event).length;
      };


      /***/},
    /* 9 */
    /***/function (module, exports, __webpack_require__) {

      /*global Blob,File*/

      /**
                            * Module requirements
                            */

      var isArray = __webpack_require__(10);
      var isBuf = __webpack_require__(11);
      var toString = Object.prototype.toString;
      var withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
      var withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

      /**
                                                                                                                                             * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
                                                                                                                                             * Anything with blobs or files should be fed through removeBlobs before coming
                                                                                                                                             * here.
                                                                                                                                             *
                                                                                                                                             * @param {Object} packet - socket.io event packet
                                                                                                                                             * @return {Object} with deconstructed packet and list of buffers
                                                                                                                                             * @api public
                                                                                                                                             */

      exports.deconstructPacket = function (packet) {
        var buffers = [];
        var packetData = packet.data;
        var pack = packet;
        pack.data = _deconstructPacket(packetData, buffers);
        pack.attachments = buffers.length; // number of binary 'attachments'
        return { packet: pack, buffers: buffers };
      };

      function _deconstructPacket(data, buffers) {
        if (!data) return data;

        if (isBuf(data)) {
          var placeholder = { _placeholder: true, num: buffers.length };
          buffers.push(data);
          return placeholder;
        } else if (isArray(data)) {
          var newData = new Array(data.length);
          for (var i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
          }
          return newData;
        } else if (typeof data === 'object' && !(data instanceof Date)) {
          var newData = {};
          for (var key in data) {
            newData[key] = _deconstructPacket(data[key], buffers);
          }
          return newData;
        }
        return data;
      }

      /**
         * Reconstructs a binary packet from its placeholder packet and buffers
         *
         * @param {Object} packet - event packet with placeholders
         * @param {Array} buffers - binary buffers to put in placeholder positions
         * @return {Object} reconstructed packet
         * @api public
         */

      exports.reconstructPacket = function (packet, buffers) {
        packet.data = _reconstructPacket(packet.data, buffers);
        packet.attachments = undefined; // no longer useful
        return packet;
      };

      function _reconstructPacket(data, buffers) {
        if (!data) return data;

        if (data && data._placeholder) {
          return buffers[data.num]; // appropriate buffer (should be natural order anyway)
        } else if (isArray(data)) {
          for (var i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
          }
        } else if (typeof data === 'object') {
          for (var key in data) {
            data[key] = _reconstructPacket(data[key], buffers);
          }
        }

        return data;
      }

      /**
         * Asynchronously removes Blobs or Files from data via
         * FileReader's readAsArrayBuffer method. Used before encoding
         * data as msgpack. Calls callback with the blobless data.
         *
         * @param {Object} data
         * @param {Function} callback
         * @api private
         */

      exports.removeBlobs = function (data, callback) {
        function _removeBlobs(obj, curKey, containingObject) {
          if (!obj) return obj;

          // convert any blob
          if (withNativeBlob && obj instanceof Blob ||
          withNativeFile && obj instanceof File) {
            pendingBlobs++;

            // async filereader
            var fileReader = new FileReader();
            fileReader.onload = function () {// this.result == arraybuffer
              if (containingObject) {
                containingObject[curKey] = this.result;
              } else
              {
                bloblessData = this.result;
              }

              // if nothing pending its callback time
              if (! --pendingBlobs) {
                callback(bloblessData);
              }
            };

            fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
          } else if (isArray(obj)) {// handle array
            for (var i = 0; i < obj.length; i++) {
              _removeBlobs(obj[i], i, obj);
            }
          } else if (typeof obj === 'object' && !isBuf(obj)) {// and object
            for (var key in obj) {
              _removeBlobs(obj[key], key, obj);
            }
          }
        }

        var pendingBlobs = 0;
        var bloblessData = data;
        _removeBlobs(bloblessData);
        if (!pendingBlobs) {
          callback(bloblessData);
        }
      };


      /***/},
    /* 10 */
    /***/function (module, exports) {

      var toString = {}.toString;

      module.exports = Array.isArray || function (arr) {
        return toString.call(arr) == '[object Array]';
      };


      /***/},
    /* 11 */
    /***/function (module, exports) {


      module.exports = isBuf;

      var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
      var withNativeArrayBuffer = typeof ArrayBuffer === 'function';

      var isView = function isView(obj) {
        return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;
      };

      /**
          * Returns true if obj is a buffer or an arraybuffer.
          *
          * @api private
          */

      function isBuf(obj) {
        return withNativeBuffer && Buffer.isBuffer(obj) ||
        withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));
      }


      /***/},
    /* 12 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};

      /**
                                                                                                                                                                                                                                                                                 * Module dependencies.
                                                                                                                                                                                                                                                                                 */

      var eio = __webpack_require__(13);
      var Socket = __webpack_require__(36);
      var Emitter = __webpack_require__(8);
      var parser = __webpack_require__(7);
      var on = __webpack_require__(38);
      var bind = __webpack_require__(39);
      var debug = __webpack_require__(3)('socket.io-client:manager');
      var indexOf = __webpack_require__(35);
      var Backoff = __webpack_require__(40);

      /**
                                              * IE6+ hasOwnProperty
                                              */

      var has = Object.prototype.hasOwnProperty;

      /**
                                                  * Module exports
                                                  */

      module.exports = Manager;

      /**
                                 * `Manager` constructor.
                                 *
                                 * @param {String} engine instance or engine uri/opts
                                 * @param {Object} options
                                 * @api public
                                 */

      function Manager(uri, opts) {
        if (!(this instanceof Manager)) return new Manager(uri, opts);
        if (uri && 'object' === (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {
          opts = uri;
          uri = undefined;
        }
        opts = opts || {};

        opts.path = opts.path || '/socket.io';
        this.nsps = {};
        this.subs = [];
        this.opts = opts;
        this.reconnection(opts.reconnection !== false);
        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
        this.reconnectionDelay(opts.reconnectionDelay || 1000);
        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
        this.randomizationFactor(opts.randomizationFactor || 0.5);
        this.backoff = new Backoff({
          min: this.reconnectionDelay(),
          max: this.reconnectionDelayMax(),
          jitter: this.randomizationFactor() });

        this.timeout(null == opts.timeout ? 20000 : opts.timeout);
        this.readyState = 'closed';
        this.uri = uri;
        this.connecting = [];
        this.lastPing = null;
        this.encoding = false;
        this.packetBuffer = [];
        var _parser = opts.parser || parser;
        this.encoder = new _parser.Encoder();
        this.decoder = new _parser.Decoder();
        this.autoConnect = opts.autoConnect !== false;
        if (this.autoConnect) this.open();
      }

      /**
         * Propagate given event to sockets and emit on `this`
         *
         * @api private
         */

      Manager.prototype.emitAll = function () {
        this.emit.apply(this, arguments);
        for (var nsp in this.nsps) {
          if (has.call(this.nsps, nsp)) {
            this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
          }
        }
      };

      /**
          * Update `socket.id` of all sockets
          *
          * @api private
          */

      Manager.prototype.updateSocketIds = function () {
        for (var nsp in this.nsps) {
          if (has.call(this.nsps, nsp)) {
            this.nsps[nsp].id = this.generateId(nsp);
          }
        }
      };

      /**
          * generate `socket.id` for the given `nsp`
          *
          * @param {String} nsp
          * @return {String}
          * @api private
          */

      Manager.prototype.generateId = function (nsp) {
        return (nsp === '/' ? '' : nsp + '#') + this.engine.id;
      };

      /**
          * Mix in `Emitter`.
          */

      Emitter(Manager.prototype);

      /**
                                   * Sets the `reconnection` config.
                                   *
                                   * @param {Boolean} true/false if it should automatically reconnect
                                   * @return {Manager} self or value
                                   * @api public
                                   */

      Manager.prototype.reconnection = function (v) {
        if (!arguments.length) return this._reconnection;
        this._reconnection = !!v;
        return this;
      };

      /**
          * Sets the reconnection attempts config.
          *
          * @param {Number} max reconnection attempts before giving up
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.reconnectionAttempts = function (v) {
        if (!arguments.length) return this._reconnectionAttempts;
        this._reconnectionAttempts = v;
        return this;
      };

      /**
          * Sets the delay between reconnections.
          *
          * @param {Number} delay
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.reconnectionDelay = function (v) {
        if (!arguments.length) return this._reconnectionDelay;
        this._reconnectionDelay = v;
        this.backoff && this.backoff.setMin(v);
        return this;
      };

      Manager.prototype.randomizationFactor = function (v) {
        if (!arguments.length) return this._randomizationFactor;
        this._randomizationFactor = v;
        this.backoff && this.backoff.setJitter(v);
        return this;
      };

      /**
          * Sets the maximum delay between reconnections.
          *
          * @param {Number} delay
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.reconnectionDelayMax = function (v) {
        if (!arguments.length) return this._reconnectionDelayMax;
        this._reconnectionDelayMax = v;
        this.backoff && this.backoff.setMax(v);
        return this;
      };

      /**
          * Sets the connection timeout. `false` to disable
          *
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.timeout = function (v) {
        if (!arguments.length) return this._timeout;
        this._timeout = v;
        return this;
      };

      /**
          * Starts trying to reconnect if reconnection is enabled and we have not
          * started reconnecting yet
          *
          * @api private
          */

      Manager.prototype.maybeReconnectOnOpen = function () {
        // Only try to reconnect if it's the first time we're connecting
        if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
          // keeps reconnection from firing twice for the same reconnection loop
          this.reconnect();
        }
      };

      /**
          * Sets the current transport `socket`.
          *
          * @param {Function} optional, callback
          * @return {Manager} self
          * @api public
          */

      Manager.prototype.open = Manager.prototype.connect = function (fn, opts) {
        debug('readyState %s', this.readyState);
        if (~this.readyState.indexOf('open')) return this;

        debug('opening %s', this.uri);
        this.engine = eio(this.uri, this.opts);
        var socket = this.engine;
        var self = this;
        this.readyState = 'opening';
        this.skipReconnect = false;

        // emit `open`
        var openSub = on(socket, 'open', function () {
          self.onopen();
          fn && fn();
        });

        // emit `connect_error`
        var errorSub = on(socket, 'error', function (data) {
          debug('connect_error');
          self.cleanup();
          self.readyState = 'closed';
          self.emitAll('connect_error', data);
          if (fn) {
            var err = new Error('Connection error');
            err.data = data;
            fn(err);
          } else {
            // Only do this if there is no fn to handle the error
            self.maybeReconnectOnOpen();
          }
        });

        // emit `connect_timeout`
        if (false !== this._timeout) {
          var timeout = this._timeout;
          debug('connect attempt will timeout after %d', timeout);

          // set timer
          var timer = setTimeout(function () {
            debug('connect attempt timed out after %d', timeout);
            openSub.destroy();
            socket.close();
            socket.emit('error', 'timeout');
            self.emitAll('connect_timeout', timeout);
          }, timeout);

          this.subs.push({
            destroy: function destroy() {
              clearTimeout(timer);
            } });

        }

        this.subs.push(openSub);
        this.subs.push(errorSub);

        return this;
      };

      /**
          * Called upon transport open.
          *
          * @api private
          */

      Manager.prototype.onopen = function () {
        debug('open');

        // clear old subs
        this.cleanup();

        // mark as open
        this.readyState = 'open';
        this.emit('open');

        // add new subs
        var socket = this.engine;
        this.subs.push(on(socket, 'data', bind(this, 'ondata')));
        this.subs.push(on(socket, 'ping', bind(this, 'onping')));
        this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
        this.subs.push(on(socket, 'error', bind(this, 'onerror')));
        this.subs.push(on(socket, 'close', bind(this, 'onclose')));
        this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
      };

      /**
          * Called upon a ping.
          *
          * @api private
          */

      Manager.prototype.onping = function () {
        this.lastPing = new Date();
        this.emitAll('ping');
      };

      /**
          * Called upon a packet.
          *
          * @api private
          */

      Manager.prototype.onpong = function () {
        this.emitAll('pong', new Date() - this.lastPing);
      };

      /**
          * Called with data.
          *
          * @api private
          */

      Manager.prototype.ondata = function (data) {
        this.decoder.add(data);
      };

      /**
          * Called when parser fully decodes a packet.
          *
          * @api private
          */

      Manager.prototype.ondecoded = function (packet) {
        this.emit('packet', packet);
      };

      /**
          * Called upon socket error.
          *
          * @api private
          */

      Manager.prototype.onerror = function (err) {
        debug('error', err);
        this.emitAll('error', err);
      };

      /**
          * Creates a new socket for the given `nsp`.
          *
          * @return {Socket}
          * @api public
          */

      Manager.prototype.socket = function (nsp, opts) {
        var socket = this.nsps[nsp];
        if (!socket) {
          socket = new Socket(this, nsp, opts);
          this.nsps[nsp] = socket;
          var self = this;
          socket.on('connecting', onConnecting);
          socket.on('connect', function () {
            socket.id = self.generateId(nsp);
          });

          if (this.autoConnect) {
            // manually call here since connecting event is fired before listening
            onConnecting();
          }
        }

        function onConnecting() {
          if (!~indexOf(self.connecting, socket)) {
            self.connecting.push(socket);
          }
        }

        return socket;
      };

      /**
          * Called upon a socket close.
          *
          * @param {Socket} socket
          */

      Manager.prototype.destroy = function (socket) {
        var index = indexOf(this.connecting, socket);
        if (~index) this.connecting.splice(index, 1);
        if (this.connecting.length) return;

        this.close();
      };

      /**
          * Writes a packet.
          *
          * @param {Object} packet
          * @api private
          */

      Manager.prototype.packet = function (packet) {
        debug('writing packet %j', packet);
        var self = this;
        if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

        if (!self.encoding) {
          // encode, then write to engine with result
          self.encoding = true;
          this.encoder.encode(packet, function (encodedPackets) {
            for (var i = 0; i < encodedPackets.length; i++) {
              self.engine.write(encodedPackets[i], packet.options);
            }
            self.encoding = false;
            self.processPacketQueue();
          });
        } else {
          // add packet to the queue
          self.packetBuffer.push(packet);
        }
      };

      /**
          * If packet buffer is non-empty, begins encoding the
          * next packet in line.
          *
          * @api private
          */

      Manager.prototype.processPacketQueue = function () {
        if (this.packetBuffer.length > 0 && !this.encoding) {
          var pack = this.packetBuffer.shift();
          this.packet(pack);
        }
      };

      /**
          * Clean up transport subscriptions and packet buffer.
          *
          * @api private
          */

      Manager.prototype.cleanup = function () {
        debug('cleanup');

        var subsLength = this.subs.length;
        for (var i = 0; i < subsLength; i++) {
          var sub = this.subs.shift();
          sub.destroy();
        }

        this.packetBuffer = [];
        this.encoding = false;
        this.lastPing = null;

        this.decoder.destroy();
      };

      /**
          * Close the current socket.
          *
          * @api private
          */

      Manager.prototype.close = Manager.prototype.disconnect = function () {
        debug('disconnect');
        this.skipReconnect = true;
        this.reconnecting = false;
        if ('opening' === this.readyState) {
          // `onclose` will not fire because
          // an open event never happened
          this.cleanup();
        }
        this.backoff.reset();
        this.readyState = 'closed';
        if (this.engine) this.engine.close();
      };

      /**
          * Called upon engine close.
          *
          * @api private
          */

      Manager.prototype.onclose = function (reason) {
        debug('onclose');

        this.cleanup();
        this.backoff.reset();
        this.readyState = 'closed';
        this.emit('close', reason);

        if (this._reconnection && !this.skipReconnect) {
          this.reconnect();
        }
      };

      /**
          * Attempt a reconnection.
          *
          * @api private
          */

      Manager.prototype.reconnect = function () {
        if (this.reconnecting || this.skipReconnect) return this;

        var self = this;

        if (this.backoff.attempts >= this._reconnectionAttempts) {
          debug('reconnect failed');
          this.backoff.reset();
          this.emitAll('reconnect_failed');
          this.reconnecting = false;
        } else {
          var delay = this.backoff.duration();
          debug('will wait %dms before reconnect attempt', delay);

          this.reconnecting = true;
          var timer = setTimeout(function () {
            if (self.skipReconnect) return;

            debug('attempting reconnect');
            self.emitAll('reconnect_attempt', self.backoff.attempts);
            self.emitAll('reconnecting', self.backoff.attempts);

            // check again for the case socket closed in above events
            if (self.skipReconnect) return;

            self.open(function (err) {
              if (err) {
                debug('reconnect attempt error');
                self.reconnecting = false;
                self.reconnect();
                self.emitAll('reconnect_error', err.data);
              } else {
                debug('reconnect success');
                self.onreconnect();
              }
            });
          }, delay);

          this.subs.push({
            destroy: function destroy() {
              clearTimeout(timer);
            } });

        }
      };

      /**
          * Called upon successful reconnect.
          *
          * @api private
          */

      Manager.prototype.onreconnect = function () {
        var attempt = this.backoff.attempts;
        this.reconnecting = false;
        this.backoff.reset();
        this.updateSocketIds();
        this.emitAll('reconnect', attempt);
      };

      /***/},
    /* 13 */
    /***/function (module, exports, __webpack_require__) {


      module.exports = __webpack_require__(14);

      /**
                                                 * Exports parser
                                                 *
                                                 * @api public
                                                 *
                                                 */
      module.exports.parser = __webpack_require__(21);


      /***/},
    /* 14 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var transports = __webpack_require__(15);
      var Emitter = __webpack_require__(8);
      var debug = __webpack_require__(3)('engine.io-client:socket');
      var index = __webpack_require__(35);
      var parser = __webpack_require__(21);
      var parseuri = __webpack_require__(2);
      var parseqs = __webpack_require__(29);

      /**
                                              * Module exports.
                                              */

      module.exports = Socket;

      /**
                                * Socket constructor.
                                *
                                * @param {String|Object} uri or options
                                * @param {Object} options
                                * @api public
                                */

      function Socket(uri, opts) {
        if (!(this instanceof Socket)) return new Socket(uri, opts);

        opts = opts || {};

        if (uri && 'object' === typeof uri) {
          opts = uri;
          uri = null;
        }

        if (uri) {
          uri = parseuri(uri);
          opts.hostname = uri.host;
          opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
          opts.port = uri.port;
          if (uri.query) opts.query = uri.query;
        } else if (opts.host) {
          opts.hostname = parseuri(opts.host).host;
        }

        this.secure = null != opts.secure ? opts.secure :
        typeof location !== 'undefined' && 'https:' === location.protocol;

        if (opts.hostname && !opts.port) {
          // if no port is specified manually, use the protocol default
          opts.port = this.secure ? '443' : '80';
        }

        this.agent = opts.agent || false;
        this.hostname = opts.hostname || (
        typeof location !== 'undefined' ? location.hostname : 'localhost');
        this.port = opts.port || (typeof location !== 'undefined' && location.port ?
        location.port :
        this.secure ? 443 : 80);
        this.query = opts.query || {};
        if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
        this.upgrade = false !== opts.upgrade;
        this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
        this.forceJSONP = !!opts.forceJSONP;
        this.jsonp = false !== opts.jsonp;
        this.forceBase64 = !!opts.forceBase64;
        this.enablesXDR = !!opts.enablesXDR;
        this.timestampParam = opts.timestampParam || 't';
        this.timestampRequests = opts.timestampRequests;
        this.transports = opts.transports || ['polling', 'websocket'];
        this.transportOptions = opts.transportOptions || {};
        this.readyState = '';
        this.writeBuffer = [];
        this.prevBufferLen = 0;
        this.policyPort = opts.policyPort || 843;
        this.rememberUpgrade = opts.rememberUpgrade || false;
        this.binaryType = null;
        this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
        this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;

        if (true === this.perMessageDeflate) this.perMessageDeflate = {};
        if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
          this.perMessageDeflate.threshold = 1024;
        }

        // SSL options for Node.js client
        this.pfx = opts.pfx || null;
        this.key = opts.key || null;
        this.passphrase = opts.passphrase || null;
        this.cert = opts.cert || null;
        this.ca = opts.ca || null;
        this.ciphers = opts.ciphers || null;
        this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
        this.forceNode = !!opts.forceNode;

        // detect ReactNative environment
        this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';

        // other options for Node.js or ReactNative client
        if (typeof self === 'undefined' || this.isReactNative) {
          if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
            this.extraHeaders = opts.extraHeaders;
          }

          if (opts.localAddress) {
            this.localAddress = opts.localAddress;
          }
        }

        // set on handshake
        this.id = null;
        this.upgrades = null;
        this.pingInterval = null;
        this.pingTimeout = null;

        // set on heartbeat
        this.pingIntervalTimer = null;
        this.pingTimeoutTimer = null;

        this.open();
      }

      Socket.priorWebsocketSuccess = false;

      /**
                                             * Mix in `Emitter`.
                                             */

      Emitter(Socket.prototype);

      /**
                                  * Protocol version.
                                  *
                                  * @api public
                                  */

      Socket.protocol = parser.protocol; // this is an int

      /**
       * Expose deps for legacy compatibility
       * and standalone browser access.
       */

      Socket.Socket = Socket;
      Socket.Transport = __webpack_require__(20);
      Socket.transports = __webpack_require__(15);
      Socket.parser = __webpack_require__(21);

      /**
                                                * Creates transport of the given type.
                                                *
                                                * @param {String} transport name
                                                * @return {Transport}
                                                * @api private
                                                */

      Socket.prototype.createTransport = function (name) {
        debug('creating transport "%s"', name);
        var query = clone(this.query);

        // append engine.io protocol identifier
        query.EIO = parser.protocol;

        // transport name
        query.transport = name;

        // per-transport options
        var options = this.transportOptions[name] || {};

        // session id if we already have one
        if (this.id) query.sid = this.id;

        var transport = new transports[name]({
          query: query,
          socket: this,
          agent: options.agent || this.agent,
          hostname: options.hostname || this.hostname,
          port: options.port || this.port,
          secure: options.secure || this.secure,
          path: options.path || this.path,
          forceJSONP: options.forceJSONP || this.forceJSONP,
          jsonp: options.jsonp || this.jsonp,
          forceBase64: options.forceBase64 || this.forceBase64,
          enablesXDR: options.enablesXDR || this.enablesXDR,
          timestampRequests: options.timestampRequests || this.timestampRequests,
          timestampParam: options.timestampParam || this.timestampParam,
          policyPort: options.policyPort || this.policyPort,
          pfx: options.pfx || this.pfx,
          key: options.key || this.key,
          passphrase: options.passphrase || this.passphrase,
          cert: options.cert || this.cert,
          ca: options.ca || this.ca,
          ciphers: options.ciphers || this.ciphers,
          rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
          perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
          extraHeaders: options.extraHeaders || this.extraHeaders,
          forceNode: options.forceNode || this.forceNode,
          localAddress: options.localAddress || this.localAddress,
          requestTimeout: options.requestTimeout || this.requestTimeout,
          protocols: options.protocols || void 0,
          isReactNative: this.isReactNative });


        return transport;
      };

      function clone(obj) {
        var o = {};
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            o[i] = obj[i];
          }
        }
        return o;
      }

      /**
         * Initializes transport to use and starts probe.
         *
         * @api private
         */
      Socket.prototype.open = function () {
        var transport;
        if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
          transport = 'websocket';
        } else if (0 === this.transports.length) {
          // Emit error on next tick so it can be listened to
          var self = this;
          setTimeout(function () {
            self.emit('error', 'No transports available');
          }, 0);
          return;
        } else {
          transport = this.transports[0];
        }
        this.readyState = 'opening';

        // Retry with the next transport if the transport is disabled (jsonp: false)
        try {
          transport = this.createTransport(transport);
        } catch (e) {
          this.transports.shift();
          this.open();
          return;
        }

        transport.open();
        this.setTransport(transport);
      };

      /**
          * Sets the current transport. Disables the existing one (if any).
          *
          * @api private
          */

      Socket.prototype.setTransport = function (transport) {
        debug('setting transport %s', transport.name);
        var self = this;

        if (this.transport) {
          debug('clearing existing transport %s', this.transport.name);
          this.transport.removeAllListeners();
        }

        // set up transport
        this.transport = transport;

        // set up transport listeners
        transport.
        on('drain', function () {
          self.onDrain();
        }).
        on('packet', function (packet) {
          self.onPacket(packet);
        }).
        on('error', function (e) {
          self.onError(e);
        }).
        on('close', function () {
          self.onClose('transport close');
        });
      };

      /**
          * Probes a transport.
          *
          * @param {String} transport name
          * @api private
          */

      Socket.prototype.probe = function (name) {
        debug('probing transport "%s"', name);
        var transport = this.createTransport(name, { probe: 1 });
        var failed = false;
        var self = this;

        Socket.priorWebsocketSuccess = false;

        function onTransportOpen() {
          if (self.onlyBinaryUpgrades) {
            var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
            failed = failed || upgradeLosesBinary;
          }
          if (failed) return;

          debug('probe transport "%s" opened', name);
          transport.send([{ type: 'ping', data: 'probe' }]);
          transport.once('packet', function (msg) {
            if (failed) return;
            if ('pong' === msg.type && 'probe' === msg.data) {
              debug('probe transport "%s" pong', name);
              self.upgrading = true;
              self.emit('upgrading', transport);
              if (!transport) return;
              Socket.priorWebsocketSuccess = 'websocket' === transport.name;

              debug('pausing current transport "%s"', self.transport.name);
              self.transport.pause(function () {
                if (failed) return;
                if ('closed' === self.readyState) return;
                debug('changing transport and sending upgrade packet');

                cleanup();

                self.setTransport(transport);
                transport.send([{ type: 'upgrade' }]);
                self.emit('upgrade', transport);
                transport = null;
                self.upgrading = false;
                self.flush();
              });
            } else {
              debug('probe transport "%s" failed', name);
              var err = new Error('probe error');
              err.transport = transport.name;
              self.emit('upgradeError', err);
            }
          });
        }

        function freezeTransport() {
          if (failed) return;

          // Any callback called by transport should be ignored since now
          failed = true;

          cleanup();

          transport.close();
          transport = null;
        }

        // Handle any error that happens while probing
        function onerror(err) {
          var error = new Error('probe error: ' + err);
          error.transport = transport.name;

          freezeTransport();

          debug('probe transport "%s" failed because of error: %s', name, err);

          self.emit('upgradeError', error);
        }

        function onTransportClose() {
          onerror('transport closed');
        }

        // When the socket is closed while we're probing
        function onclose() {
          onerror('socket closed');
        }

        // When the socket is upgraded while we're probing
        function onupgrade(to) {
          if (transport && to.name !== transport.name) {
            debug('"%s" works - aborting "%s"', to.name, transport.name);
            freezeTransport();
          }
        }

        // Remove all listeners on the transport and on self
        function cleanup() {
          transport.removeListener('open', onTransportOpen);
          transport.removeListener('error', onerror);
          transport.removeListener('close', onTransportClose);
          self.removeListener('close', onclose);
          self.removeListener('upgrading', onupgrade);
        }

        transport.once('open', onTransportOpen);
        transport.once('error', onerror);
        transport.once('close', onTransportClose);

        this.once('close', onclose);
        this.once('upgrading', onupgrade);

        transport.open();
      };

      /**
          * Called when connection is deemed open.
          *
          * @api public
          */

      Socket.prototype.onOpen = function () {
        debug('socket open');
        this.readyState = 'open';
        Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
        this.emit('open');
        this.flush();

        // we check for `readyState` in case an `open`
        // listener already closed the socket
        if ('open' === this.readyState && this.upgrade && this.transport.pause) {
          debug('starting upgrade probes');
          for (var i = 0, l = this.upgrades.length; i < l; i++) {
            this.probe(this.upgrades[i]);
          }
        }
      };

      /**
          * Handles a packet.
          *
          * @api private
          */

      Socket.prototype.onPacket = function (packet) {
        if ('opening' === this.readyState || 'open' === this.readyState ||
        'closing' === this.readyState) {
          debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

          this.emit('packet', packet);

          // Socket is live - any packet counts
          this.emit('heartbeat');

          switch (packet.type) {
            case 'open':
              this.onHandshake(JSON.parse(packet.data));
              break;

            case 'pong':
              this.setPing();
              this.emit('pong');
              break;

            case 'error':
              var err = new Error('server error');
              err.code = packet.data;
              this.onError(err);
              break;

            case 'message':
              this.emit('data', packet.data);
              this.emit('message', packet.data);
              break;}

        } else {
          debug('packet received with socket readyState "%s"', this.readyState);
        }
      };

      /**
          * Called upon handshake completion.
          *
          * @param {Object} handshake obj
          * @api private
          */

      Socket.prototype.onHandshake = function (data) {
        this.emit('handshake', data);
        this.id = data.sid;
        this.transport.query.sid = data.sid;
        this.upgrades = this.filterUpgrades(data.upgrades);
        this.pingInterval = data.pingInterval;
        this.pingTimeout = data.pingTimeout;
        this.onOpen();
        // In case open handler closes socket
        if ('closed' === this.readyState) return;
        this.setPing();

        // Prolong liveness of socket on heartbeat
        this.removeListener('heartbeat', this.onHeartbeat);
        this.on('heartbeat', this.onHeartbeat);
      };

      /**
          * Resets ping timeout.
          *
          * @api private
          */

      Socket.prototype.onHeartbeat = function (timeout) {
        clearTimeout(this.pingTimeoutTimer);
        var self = this;
        self.pingTimeoutTimer = setTimeout(function () {
          if ('closed' === self.readyState) return;
          self.onClose('ping timeout');
        }, timeout || self.pingInterval + self.pingTimeout);
      };

      /**
          * Pings server every `this.pingInterval` and expects response
          * within `this.pingTimeout` or closes connection.
          *
          * @api private
          */

      Socket.prototype.setPing = function () {
        var self = this;
        clearTimeout(self.pingIntervalTimer);
        self.pingIntervalTimer = setTimeout(function () {
          debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
          self.ping();
          self.onHeartbeat(self.pingTimeout);
        }, self.pingInterval);
      };

      /**
         * Sends a ping packet.
         *
         * @api private
         */

      Socket.prototype.ping = function () {
        var self = this;
        this.sendPacket('ping', function () {
          self.emit('ping');
        });
      };

      /**
          * Called on `drain` event
          *
          * @api private
          */

      Socket.prototype.onDrain = function () {
        this.writeBuffer.splice(0, this.prevBufferLen);

        // setting prevBufferLen = 0 is very important
        // for example, when upgrading, upgrade packet is sent over,
        // and a nonzero prevBufferLen could cause problems on `drain`
        this.prevBufferLen = 0;

        if (0 === this.writeBuffer.length) {
          this.emit('drain');
        } else {
          this.flush();
        }
      };

      /**
          * Flush write buffers.
          *
          * @api private
          */

      Socket.prototype.flush = function () {
        if ('closed' !== this.readyState && this.transport.writable &&
        !this.upgrading && this.writeBuffer.length) {
          debug('flushing %d packets in socket', this.writeBuffer.length);
          this.transport.send(this.writeBuffer);
          // keep track of current length of writeBuffer
          // splice writeBuffer and callbackBuffer on `drain`
          this.prevBufferLen = this.writeBuffer.length;
          this.emit('flush');
        }
      };

      /**
          * Sends a message.
          *
          * @param {String} message.
          * @param {Function} callback function.
          * @param {Object} options.
          * @return {Socket} for chaining.
          * @api public
          */

      Socket.prototype.write =
      Socket.prototype.send = function (msg, options, fn) {
        this.sendPacket('message', msg, options, fn);
        return this;
      };

      /**
          * Sends a packet.
          *
          * @param {String} packet type.
          * @param {String} data.
          * @param {Object} options.
          * @param {Function} callback function.
          * @api private
          */

      Socket.prototype.sendPacket = function (type, data, options, fn) {
        if ('function' === typeof data) {
          fn = data;
          data = undefined;
        }

        if ('function' === typeof options) {
          fn = options;
          options = null;
        }

        if ('closing' === this.readyState || 'closed' === this.readyState) {
          return;
        }

        options = options || {};
        options.compress = false !== options.compress;

        var packet = {
          type: type,
          data: data,
          options: options };

        this.emit('packetCreate', packet);
        this.writeBuffer.push(packet);
        if (fn) this.once('flush', fn);
        this.flush();
      };

      /**
          * Closes the connection.
          *
          * @api private
          */

      Socket.prototype.close = function () {
        if ('opening' === this.readyState || 'open' === this.readyState) {
          this.readyState = 'closing';

          var self = this;

          if (this.writeBuffer.length) {
            this.once('drain', function () {
              if (this.upgrading) {
                waitForUpgrade();
              } else {
                close();
              }
            });
          } else if (this.upgrading) {
            waitForUpgrade();
          } else {
            close();
          }
        }

        function close() {
          self.onClose('forced close');
          debug('socket closing - telling transport to close');
          self.transport.close();
        }

        function cleanupAndClose() {
          self.removeListener('upgrade', cleanupAndClose);
          self.removeListener('upgradeError', cleanupAndClose);
          close();
        }

        function waitForUpgrade() {
          // wait for upgrade to finish since we can't send packets while pausing a transport
          self.once('upgrade', cleanupAndClose);
          self.once('upgradeError', cleanupAndClose);
        }

        return this;
      };

      /**
          * Called upon transport error
          *
          * @api private
          */

      Socket.prototype.onError = function (err) {
        debug('socket error %j', err);
        Socket.priorWebsocketSuccess = false;
        this.emit('error', err);
        this.onClose('transport error', err);
      };

      /**
          * Called upon transport close.
          *
          * @api private
          */

      Socket.prototype.onClose = function (reason, desc) {
        if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
          debug('socket close with reason: "%s"', reason);
          var self = this;

          // clear timers
          clearTimeout(this.pingIntervalTimer);
          clearTimeout(this.pingTimeoutTimer);

          // stop event from firing again for transport
          this.transport.removeAllListeners('close');

          // ensure transport won't stay open
          this.transport.close();

          // ignore further transport communication
          this.transport.removeAllListeners();

          // set ready state
          this.readyState = 'closed';

          // clear session id
          this.id = null;

          // emit close event
          this.emit('close', reason, desc);

          // clean buffers after, so users can still
          // grab the buffers on `close` event
          self.writeBuffer = [];
          self.prevBufferLen = 0;
        }
      };

      /**
          * Filters upgrades, returning only those matching client transports.
          *
          * @param {Array} server upgrades
          * @api private
          *
          */

      Socket.prototype.filterUpgrades = function (upgrades) {
        var filteredUpgrades = [];
        for (var i = 0, j = upgrades.length; i < j; i++) {
          if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
        }
        return filteredUpgrades;
      };


      /***/},
    /* 15 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies
                                                           */

      var XMLHttpRequest = __webpack_require__(16);
      var XHR = __webpack_require__(18);
      var JSONP = __webpack_require__(32);
      var websocket = __webpack_require__(33);

      /**
                                                * Export transports.
                                                */

      exports.polling = polling;
      exports.websocket = websocket;

      /**
                                      * Polling transport polymorphic constructor.
                                      * Decides on xhr vs jsonp based on feature detection.
                                      *
                                      * @api private
                                      */

      function polling(opts) {
        var xhr;
        var xd = false;
        var xs = false;
        var jsonp = false !== opts.jsonp;

        if (typeof location !== 'undefined') {
          var isSSL = 'https:' === location.protocol;
          var port = location.port;

          // some user agents have empty `location.port`
          if (!port) {
            port = isSSL ? 443 : 80;
          }

          xd = opts.hostname !== location.hostname || port !== opts.port;
          xs = opts.secure !== isSSL;
        }

        opts.xdomain = xd;
        opts.xscheme = xs;
        xhr = new XMLHttpRequest(opts);

        if ('open' in xhr && !opts.forceJSONP) {
          return new XHR(opts);
        } else {
          if (!jsonp) throw new Error('JSONP disabled');
          return new JSONP(opts);
        }
      }


      /***/},
    /* 16 */
    /***/function (module, exports, __webpack_require__) {

      // browser shim for xmlhttprequest module

      var hasCORS = __webpack_require__(17);

      module.exports = function (opts) {
        var xdomain = opts.xdomain;

        // scheme must be same when usign XDomainRequest
        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
        var xscheme = opts.xscheme;

        // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
        // https://github.com/Automattic/engine.io-client/pull/217
        var enablesXDR = opts.enablesXDR;

        // XMLHttpRequest can be disabled on IE
        try {
          if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
            return new XMLHttpRequest();
          }
        } catch (e) {}

        // Use XDomainRequest for IE8 if enablesXDR is true
        // because loading bar keeps flashing when using jsonp-polling
        // https://github.com/yujiosaka/socke.io-ie8-loading-example
        try {
          if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
            return new XDomainRequest();
          }
        } catch (e) {}

        if (!xdomain) {
          try {
            return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
          } catch (e) {}
        }
      };


      /***/},
    /* 17 */
    /***/function (module, exports) {


      /**
                                      * Module exports.
                                      *
                                      * Logic borrowed from Modernizr:
                                      *
                                      *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
                                      */

      try {
        module.exports = typeof XMLHttpRequest !== 'undefined' &&
        'withCredentials' in new XMLHttpRequest();
      } catch (err) {
        // if XMLHttp support is disabled in IE then it will throw
        // when trying to create
        module.exports = false;
      }


      /***/},
    /* 18 */
    /***/function (module, exports, __webpack_require__) {

      /* global attachEvent */

      /**
                                * Module requirements.
                                */

      var XMLHttpRequest = __webpack_require__(16);
      var Polling = __webpack_require__(19);
      var Emitter = __webpack_require__(8);
      var inherit = __webpack_require__(30);
      var debug = __webpack_require__(3)('engine.io-client:polling-xhr');

      /**
                                                                           * Module exports.
                                                                           */

      module.exports = XHR;
      module.exports.Request = Request;

      /**
                                         * Empty function
                                         */

      function empty() {}

      /**
                           * XHR Polling constructor.
                           *
                           * @param {Object} opts
                           * @api public
                           */

      function XHR(opts) {
        Polling.call(this, opts);
        this.requestTimeout = opts.requestTimeout;
        this.extraHeaders = opts.extraHeaders;

        if (typeof location !== 'undefined') {
          var isSSL = 'https:' === location.protocol;
          var port = location.port;

          // some user agents have empty `location.port`
          if (!port) {
            port = isSSL ? 443 : 80;
          }

          this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname ||
          port !== opts.port;
          this.xs = opts.secure !== isSSL;
        }
      }

      /**
         * Inherits from Polling.
         */

      inherit(XHR, Polling);

      /**
                              * XHR supports binary
                              */

      XHR.prototype.supportsBinary = true;

      /**
                                            * Creates a request.
                                            *
                                            * @param {String} method
                                            * @api private
                                            */

      XHR.prototype.request = function (opts) {
        opts = opts || {};
        opts.uri = this.uri();
        opts.xd = this.xd;
        opts.xs = this.xs;
        opts.agent = this.agent || false;
        opts.supportsBinary = this.supportsBinary;
        opts.enablesXDR = this.enablesXDR;

        // SSL options for Node.js client
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;
        opts.requestTimeout = this.requestTimeout;

        // other options for Node.js client
        opts.extraHeaders = this.extraHeaders;

        return new Request(opts);
      };

      /**
          * Sends data.
          *
          * @param {String} data to send.
          * @param {Function} called upon flush.
          * @api private
          */

      XHR.prototype.doWrite = function (data, fn) {
        var isBinary = typeof data !== 'string' && data !== undefined;
        var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
        var self = this;
        req.on('success', fn);
        req.on('error', function (err) {
          self.onError('xhr post error', err);
        });
        this.sendXhr = req;
      };

      /**
          * Starts a poll cycle.
          *
          * @api private
          */

      XHR.prototype.doPoll = function () {
        debug('xhr poll');
        var req = this.request();
        var self = this;
        req.on('data', function (data) {
          self.onData(data);
        });
        req.on('error', function (err) {
          self.onError('xhr poll error', err);
        });
        this.pollXhr = req;
      };

      /**
          * Request constructor
          *
          * @param {Object} options
          * @api public
          */

      function Request(opts) {
        this.method = opts.method || 'GET';
        this.uri = opts.uri;
        this.xd = !!opts.xd;
        this.xs = !!opts.xs;
        this.async = false !== opts.async;
        this.data = undefined !== opts.data ? opts.data : null;
        this.agent = opts.agent;
        this.isBinary = opts.isBinary;
        this.supportsBinary = opts.supportsBinary;
        this.enablesXDR = opts.enablesXDR;
        this.requestTimeout = opts.requestTimeout;

        // SSL options for Node.js client
        this.pfx = opts.pfx;
        this.key = opts.key;
        this.passphrase = opts.passphrase;
        this.cert = opts.cert;
        this.ca = opts.ca;
        this.ciphers = opts.ciphers;
        this.rejectUnauthorized = opts.rejectUnauthorized;

        // other options for Node.js client
        this.extraHeaders = opts.extraHeaders;

        this.create();
      }

      /**
         * Mix in `Emitter`.
         */

      Emitter(Request.prototype);

      /**
                                   * Creates the XHR object and sends the request.
                                   *
                                   * @api private
                                   */

      Request.prototype.create = function () {
        var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

        // SSL options for Node.js client
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;

        var xhr = this.xhr = new XMLHttpRequest(opts);
        var self = this;

        try {
          debug('xhr open %s: %s', this.method, this.uri);
          xhr.open(this.method, this.uri, this.async);
          try {
            if (this.extraHeaders) {
              xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
              for (var i in this.extraHeaders) {
                if (this.extraHeaders.hasOwnProperty(i)) {
                  xhr.setRequestHeader(i, this.extraHeaders[i]);
                }
              }
            }
          } catch (e) {}

          if ('POST' === this.method) {
            try {
              if (this.isBinary) {
                xhr.setRequestHeader('Content-type', 'application/octet-stream');
              } else {
                xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
              }
            } catch (e) {}
          }

          try {
            xhr.setRequestHeader('Accept', '*/*');
          } catch (e) {}

          // ie6 check
          if ('withCredentials' in xhr) {
            xhr.withCredentials = true;
          }

          if (this.requestTimeout) {
            xhr.timeout = this.requestTimeout;
          }

          if (this.hasXDR()) {
            xhr.onload = function () {
              self.onLoad();
            };
            xhr.onerror = function () {
              self.onError(xhr.responseText);
            };
          } else {
            xhr.onreadystatechange = function () {
              if (xhr.readyState === 2) {
                try {
                  var contentType = xhr.getResponseHeader('Content-Type');
                  if (self.supportsBinary && contentType === 'application/octet-stream') {
                    xhr.responseType = 'arraybuffer';
                  }
                } catch (e) {}
              }
              if (4 !== xhr.readyState) return;
              if (200 === xhr.status || 1223 === xhr.status) {
                self.onLoad();
              } else {
                // make sure the `error` event handler that's user-set
                // does not throw in the same tick and gets caught here
                setTimeout(function () {
                  self.onError(xhr.status);
                }, 0);
              }
            };
          }

          debug('xhr data %s', this.data);
          xhr.send(this.data);
        } catch (e) {
          // Need to defer since .create() is called directly fhrom the constructor
          // and thus the 'error' event can only be only bound *after* this exception
          // occurs.  Therefore, also, we cannot throw here at all.
          setTimeout(function () {
            self.onError(e);
          }, 0);
          return;
        }

        if (typeof document !== 'undefined') {
          this.index = Request.requestsCount++;
          Request.requests[this.index] = this;
        }
      };

      /**
          * Called upon successful response.
          *
          * @api private
          */

      Request.prototype.onSuccess = function () {
        this.emit('success');
        this.cleanup();
      };

      /**
          * Called if we have data.
          *
          * @api private
          */

      Request.prototype.onData = function (data) {
        this.emit('data', data);
        this.onSuccess();
      };

      /**
          * Called upon error.
          *
          * @api private
          */

      Request.prototype.onError = function (err) {
        this.emit('error', err);
        this.cleanup(true);
      };

      /**
          * Cleans up house.
          *
          * @api private
          */

      Request.prototype.cleanup = function (fromError) {
        if ('undefined' === typeof this.xhr || null === this.xhr) {
          return;
        }
        // xmlhttprequest
        if (this.hasXDR()) {
          this.xhr.onload = this.xhr.onerror = empty;
        } else {
          this.xhr.onreadystatechange = empty;
        }

        if (fromError) {
          try {
            this.xhr.abort();
          } catch (e) {}
        }

        if (typeof document !== 'undefined') {
          delete Request.requests[this.index];
        }

        this.xhr = null;
      };

      /**
          * Called upon load.
          *
          * @api private
          */

      Request.prototype.onLoad = function () {
        var data;
        try {
          var contentType;
          try {
            contentType = this.xhr.getResponseHeader('Content-Type');
          } catch (e) {}
          if (contentType === 'application/octet-stream') {
            data = this.xhr.response || this.xhr.responseText;
          } else {
            data = this.xhr.responseText;
          }
        } catch (e) {
          this.onError(e);
        }
        if (null != data) {
          this.onData(data);
        }
      };

      /**
          * Check if it has XDomainRequest.
          *
          * @api private
          */

      Request.prototype.hasXDR = function () {
        return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
      };

      /**
          * Aborts the request.
          *
          * @api public
          */

      Request.prototype.abort = function () {
        this.cleanup();
      };

      /**
          * Aborts pending requests when unloading the window. This is needed to prevent
          * memory leaks (e.g. when using IE) and to ensure that no spurious error is
          * emitted.
          */

      Request.requestsCount = 0;
      Request.requests = {};

      if (typeof document !== 'undefined') {
        if (typeof attachEvent === 'function') {
          attachEvent('onunload', unloadHandler);
        } else if (typeof addEventListener === 'function') {
          var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';
          addEventListener(terminationEvent, unloadHandler, false);
        }
      }

      function unloadHandler() {
        for (var i in Request.requests) {
          if (Request.requests.hasOwnProperty(i)) {
            Request.requests[i].abort();
          }
        }
      }


      /***/},
    /* 19 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var Transport = __webpack_require__(20);
      var parseqs = __webpack_require__(29);
      var parser = __webpack_require__(21);
      var inherit = __webpack_require__(30);
      var yeast = __webpack_require__(31);
      var debug = __webpack_require__(3)('engine.io-client:polling');

      /**
                                                                       * Module exports.
                                                                       */

      module.exports = Polling;

      /**
                                 * Is XHR2 supported?
                                 */

      var hasXHR2 = function () {
        var XMLHttpRequest = __webpack_require__(16);
        var xhr = new XMLHttpRequest({ xdomain: false });
        return null != xhr.responseType;
      }();

      /**
            * Polling interface.
            *
            * @param {Object} opts
            * @api private
            */

      function Polling(opts) {
        var forceBase64 = opts && opts.forceBase64;
        if (!hasXHR2 || forceBase64) {
          this.supportsBinary = false;
        }
        Transport.call(this, opts);
      }

      /**
         * Inherits from Transport.
         */

      inherit(Polling, Transport);

      /**
                                    * Transport name.
                                    */

      Polling.prototype.name = 'polling';

      /**
                                           * Opens the socket (triggers polling). We write a PING message to determine
                                           * when the transport is open.
                                           *
                                           * @api private
                                           */

      Polling.prototype.doOpen = function () {
        this.poll();
      };

      /**
          * Pauses polling.
          *
          * @param {Function} callback upon buffers are flushed and transport is paused
          * @api private
          */

      Polling.prototype.pause = function (onPause) {
        var self = this;

        this.readyState = 'pausing';

        function pause() {
          debug('paused');
          self.readyState = 'paused';
          onPause();
        }

        if (this.polling || !this.writable) {
          var total = 0;

          if (this.polling) {
            debug('we are currently polling - waiting to pause');
            total++;
            this.once('pollComplete', function () {
              debug('pre-pause polling complete');
              --total || pause();
            });
          }

          if (!this.writable) {
            debug('we are currently writing - waiting to pause');
            total++;
            this.once('drain', function () {
              debug('pre-pause writing complete');
              --total || pause();
            });
          }
        } else {
          pause();
        }
      };

      /**
          * Starts polling cycle.
          *
          * @api public
          */

      Polling.prototype.poll = function () {
        debug('polling');
        this.polling = true;
        this.doPoll();
        this.emit('poll');
      };

      /**
          * Overloads onData to detect payloads.
          *
          * @api private
          */

      Polling.prototype.onData = function (data) {
        var self = this;
        debug('polling got data %s', data);
        var callback = function callback(packet, index, total) {
          // if its the first message we consider the transport open
          if ('opening' === self.readyState) {
            self.onOpen();
          }

          // if its a close packet, we close the ongoing requests
          if ('close' === packet.type) {
            self.onClose();
            return false;
          }

          // otherwise bypass onData and handle the message
          self.onPacket(packet);
        };

        // decode payload
        parser.decodePayload(data, this.socket.binaryType, callback);

        // if an event did not trigger closing
        if ('closed' !== this.readyState) {
          // if we got data we're not polling
          this.polling = false;
          this.emit('pollComplete');

          if ('open' === this.readyState) {
            this.poll();
          } else {
            debug('ignoring poll - transport state "%s"', this.readyState);
          }
        }
      };

      /**
          * For polling, send a close packet.
          *
          * @api private
          */

      Polling.prototype.doClose = function () {
        var self = this;

        function close() {
          debug('writing close packet');
          self.write([{ type: 'close' }]);
        }

        if ('open' === this.readyState) {
          debug('transport open - closing');
          close();
        } else {
          // in case we're trying to close while
          // handshaking is in progress (GH-164)
          debug('transport not open - deferring close');
          this.once('open', close);
        }
      };

      /**
          * Writes a packets payload.
          *
          * @param {Array} data packets
          * @param {Function} drain callback
          * @api private
          */

      Polling.prototype.write = function (packets) {
        var self = this;
        this.writable = false;
        var callbackfn = function callbackfn() {
          self.writable = true;
          self.emit('drain');
        };

        parser.encodePayload(packets, this.supportsBinary, function (data) {
          self.doWrite(data, callbackfn);
        });
      };

      /**
          * Generates uri for connection.
          *
          * @api private
          */

      Polling.prototype.uri = function () {
        var query = this.query || {};
        var schema = this.secure ? 'https' : 'http';
        var port = '';

        // cache busting is forced
        if (false !== this.timestampRequests) {
          query[this.timestampParam] = yeast();
        }

        if (!this.supportsBinary && !query.sid) {
          query.b64 = 1;
        }

        query = parseqs.encode(query);

        // avoid port if default for schema
        if (this.port && ('https' === schema && Number(this.port) !== 443 ||
        'http' === schema && Number(this.port) !== 80)) {
          port = ':' + this.port;
        }

        // prepend ? to query
        if (query.length) {
          query = '?' + query;
        }

        var ipv6 = this.hostname.indexOf(':') !== -1;
        return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
      };


      /***/},
    /* 20 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var parser = __webpack_require__(21);
      var Emitter = __webpack_require__(8);

      /**
                                             * Module exports.
                                             */

      module.exports = Transport;

      /**
                                   * Transport abstract constructor.
                                   *
                                   * @param {Object} options.
                                   * @api private
                                   */

      function Transport(opts) {
        this.path = opts.path;
        this.hostname = opts.hostname;
        this.port = opts.port;
        this.secure = opts.secure;
        this.query = opts.query;
        this.timestampParam = opts.timestampParam;
        this.timestampRequests = opts.timestampRequests;
        this.readyState = '';
        this.agent = opts.agent || false;
        this.socket = opts.socket;
        this.enablesXDR = opts.enablesXDR;

        // SSL options for Node.js client
        this.pfx = opts.pfx;
        this.key = opts.key;
        this.passphrase = opts.passphrase;
        this.cert = opts.cert;
        this.ca = opts.ca;
        this.ciphers = opts.ciphers;
        this.rejectUnauthorized = opts.rejectUnauthorized;
        this.forceNode = opts.forceNode;

        // results of ReactNative environment detection
        this.isReactNative = opts.isReactNative;

        // other options for Node.js client
        this.extraHeaders = opts.extraHeaders;
        this.localAddress = opts.localAddress;
      }

      /**
         * Mix in `Emitter`.
         */

      Emitter(Transport.prototype);

      /**
                                     * Emits an error.
                                     *
                                     * @param {String} str
                                     * @return {Transport} for chaining
                                     * @api public
                                     */

      Transport.prototype.onError = function (msg, desc) {
        var err = new Error(msg);
        err.type = 'TransportError';
        err.description = desc;
        this.emit('error', err);
        return this;
      };

      /**
          * Opens the transport.
          *
          * @api public
          */

      Transport.prototype.open = function () {
        if ('closed' === this.readyState || '' === this.readyState) {
          this.readyState = 'opening';
          this.doOpen();
        }

        return this;
      };

      /**
          * Closes the transport.
          *
          * @api private
          */

      Transport.prototype.close = function () {
        if ('opening' === this.readyState || 'open' === this.readyState) {
          this.doClose();
          this.onClose();
        }

        return this;
      };

      /**
          * Sends multiple packets.
          *
          * @param {Array} packets
          * @api private
          */

      Transport.prototype.send = function (packets) {
        if ('open' === this.readyState) {
          this.write(packets);
        } else {
          throw new Error('Transport not open');
        }
      };

      /**
          * Called upon open
          *
          * @api private
          */

      Transport.prototype.onOpen = function () {
        this.readyState = 'open';
        this.writable = true;
        this.emit('open');
      };

      /**
          * Called with data.
          *
          * @param {String} data
          * @api private
          */

      Transport.prototype.onData = function (data) {
        var packet = parser.decodePacket(data, this.socket.binaryType);
        this.onPacket(packet);
      };

      /**
          * Called with a decoded packet.
          */

      Transport.prototype.onPacket = function (packet) {
        this.emit('packet', packet);
      };

      /**
          * Called upon close.
          *
          * @api private
          */

      Transport.prototype.onClose = function () {
        this.readyState = 'closed';
        this.emit('close');
      };


      /***/},
    /* 21 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var keys = __webpack_require__(22);
      var hasBinary = __webpack_require__(23);
      var sliceBuffer = __webpack_require__(24);
      var after = __webpack_require__(25);
      var utf8 = __webpack_require__(26);

      var base64encoder;
      if (typeof ArrayBuffer !== 'undefined') {
        base64encoder = __webpack_require__(27);
      }

      /**
         * Check if we are running an android browser. That requires us to use
         * ArrayBuffer with polling transports...
         *
         * http://ghinda.net/jpeg-blob-ajax-android/
         */

      var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

      /**
                                                                                                 * Check if we are running in PhantomJS.
                                                                                                 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
                                                                                                 * https://github.com/ariya/phantomjs/issues/11395
                                                                                                 * @type boolean
                                                                                                 */
      var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

      /**
                                                                                                     * When true, avoids using Blobs to encode payloads.
                                                                                                     * @type boolean
                                                                                                     */
      var dontSendBlobs = isAndroid || isPhantomJS;

      /**
                                                     * Current protocol version.
                                                     */

      exports.protocol = 3;

      /**
                             * Packet types.
                             */

      var packets = exports.packets = {
        open: 0 // non-ws
        , close: 1 // non-ws
        , ping: 2,
        pong: 3,
        message: 4,
        upgrade: 5,
        noop: 6 };


      var packetslist = keys(packets);

      /**
                                        * Premade error packet.
                                        */

      var err = { type: 'error', data: 'parser error' };

      /**
                                                          * Create a blob api even for blob builder when vendor prefixes exist
                                                          */

      var Blob = __webpack_require__(28);

      /**
                                           * Encodes a packet.
                                           *
                                           *     <packet type id> [ <data> ]
                                           *
                                           * Example:
                                           *
                                           *     5hello world
                                           *     3
                                           *     4
                                           *
                                           * Binary is encoded in an identical principle
                                           *
                                           * @api private
                                           */

      exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
        if (typeof supportsBinary === 'function') {
          callback = supportsBinary;
          supportsBinary = false;
        }

        if (typeof utf8encode === 'function') {
          callback = utf8encode;
          utf8encode = null;
        }

        var data = packet.data === undefined ?
        undefined :
        packet.data.buffer || packet.data;

        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
          return encodeArrayBuffer(packet, supportsBinary, callback);
        } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
          return encodeBlob(packet, supportsBinary, callback);
        }

        // might be an object with { base64: true, data: dataAsBase64String }
        if (data && data.base64) {
          return encodeBase64Object(packet, callback);
        }

        // Sending data as a utf-8 string
        var encoded = packets[packet.type];

        // data fragment is optional
        if (undefined !== packet.data) {
          encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
        }

        return callback('' + encoded);

      };

      function encodeBase64Object(packet, callback) {
        // packet data is an object { base64: true, data: dataAsBase64String }
        var message = 'b' + exports.packets[packet.type] + packet.data.data;
        return callback(message);
      }

      /**
         * Encode packet helpers for binary types
         */

      function encodeArrayBuffer(packet, supportsBinary, callback) {
        if (!supportsBinary) {
          return exports.encodeBase64Packet(packet, callback);
        }

        var data = packet.data;
        var contentArray = new Uint8Array(data);
        var resultBuffer = new Uint8Array(1 + data.byteLength);

        resultBuffer[0] = packets[packet.type];
        for (var i = 0; i < contentArray.length; i++) {
          resultBuffer[i + 1] = contentArray[i];
        }

        return callback(resultBuffer.buffer);
      }

      function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
        if (!supportsBinary) {
          return exports.encodeBase64Packet(packet, callback);
        }

        var fr = new FileReader();
        fr.onload = function () {
          exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);
        };
        return fr.readAsArrayBuffer(packet.data);
      }

      function encodeBlob(packet, supportsBinary, callback) {
        if (!supportsBinary) {
          return exports.encodeBase64Packet(packet, callback);
        }

        if (dontSendBlobs) {
          return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
        }

        var length = new Uint8Array(1);
        length[0] = packets[packet.type];
        var blob = new Blob([length.buffer, packet.data]);

        return callback(blob);
      }

      /**
         * Encodes a packet with binary data in a base64 string
         *
         * @param {Object} packet, has `type` and `data`
         * @return {String} base64 encoded message
         */

      exports.encodeBase64Packet = function (packet, callback) {
        var message = 'b' + exports.packets[packet.type];
        if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
          var fr = new FileReader();
          fr.onload = function () {
            var b64 = fr.result.split(',')[1];
            callback(message + b64);
          };
          return fr.readAsDataURL(packet.data);
        }

        var b64data;
        try {
          b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
        } catch (e) {
          // iPhone Safari doesn't let you apply with typed arrays
          var typed = new Uint8Array(packet.data);
          var basic = new Array(typed.length);
          for (var i = 0; i < typed.length; i++) {
            basic[i] = typed[i];
          }
          b64data = String.fromCharCode.apply(null, basic);
        }
        message += btoa(b64data);
        return callback(message);
      };

      /**
          * Decodes a packet. Changes format to Blob if requested.
          *
          * @return {Object} with `type` and `data` (if any)
          * @api private
          */

      exports.decodePacket = function (data, binaryType, utf8decode) {
        if (data === undefined) {
          return err;
        }
        // String data
        if (typeof data === 'string') {
          if (data.charAt(0) === 'b') {
            return exports.decodeBase64Packet(data.substr(1), binaryType);
          }

          if (utf8decode) {
            data = tryDecode(data);
            if (data === false) {
              return err;
            }
          }
          var type = data.charAt(0);

          if (Number(type) != type || !packetslist[type]) {
            return err;
          }

          if (data.length > 1) {
            return { type: packetslist[type], data: data.substring(1) };
          } else {
            return { type: packetslist[type] };
          }
        }

        var asArray = new Uint8Array(data);
        var type = asArray[0];
        var rest = sliceBuffer(data, 1);
        if (Blob && binaryType === 'blob') {
          rest = new Blob([rest]);
        }
        return { type: packetslist[type], data: rest };
      };

      function tryDecode(data) {
        try {
          data = utf8.decode(data, { strict: false });
        } catch (e) {
          return false;
        }
        return data;
      }

      /**
         * Decodes a packet encoded in a base64 string
         *
         * @param {String} base64 encoded message
         * @return {Object} with `type` and `data` (if any)
         */

      exports.decodeBase64Packet = function (msg, binaryType) {
        var type = packetslist[msg.charAt(0)];
        if (!base64encoder) {
          return { type: type, data: { base64: true, data: msg.substr(1) } };
        }

        var data = base64encoder.decode(msg.substr(1));

        if (binaryType === 'blob' && Blob) {
          data = new Blob([data]);
        }

        return { type: type, data: data };
      };

      /**
          * Encodes multiple messages (payload).
          *
          *     <length>:data
          *
          * Example:
          *
          *     11:hello world2:hi
          *
          * If any contents are binary, they will be encoded as base64 strings. Base64
          * encoded strings are marked with a b before the length specifier
          *
          * @param {Array} packets
          * @api private
          */

      exports.encodePayload = function (packets, supportsBinary, callback) {
        if (typeof supportsBinary === 'function') {
          callback = supportsBinary;
          supportsBinary = null;
        }

        var isBinary = hasBinary(packets);

        if (supportsBinary && isBinary) {
          if (Blob && !dontSendBlobs) {
            return exports.encodePayloadAsBlob(packets, callback);
          }

          return exports.encodePayloadAsArrayBuffer(packets, callback);
        }

        if (!packets.length) {
          return callback('0:');
        }

        function setLengthHeader(message) {
          return message.length + ':' + message;
        }

        function encodeOne(packet, doneCallback) {
          exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {
            doneCallback(null, setLengthHeader(message));
          });
        }

        map(packets, encodeOne, function (err, results) {
          return callback(results.join(''));
        });
      };

      /**
          * Async array map using after
          */

      function map(ary, each, done) {
        var result = new Array(ary.length);
        var next = after(ary.length, done);

        var eachWithIndex = function eachWithIndex(i, el, cb) {
          each(el, function (error, msg) {
            result[i] = msg;
            cb(error, result);
          });
        };

        for (var i = 0; i < ary.length; i++) {
          eachWithIndex(i, ary[i], next);
        }
      }

      /*
         * Decodes data when a payload is maybe expected. Possible binary contents are
         * decoded from their base64 representation
         *
         * @param {String} data, callback method
         * @api public
         */

      exports.decodePayload = function (data, binaryType, callback) {
        if (typeof data !== 'string') {
          return exports.decodePayloadAsBinary(data, binaryType, callback);
        }

        if (typeof binaryType === 'function') {
          callback = binaryType;
          binaryType = null;
        }

        var packet;
        if (data === '') {
          // parser error - ignoring payload
          return callback(err, 0, 1);
        }

        var length = '',n,msg;

        for (var i = 0, l = data.length; i < l; i++) {
          var chr = data.charAt(i);

          if (chr !== ':') {
            length += chr;
            continue;
          }

          if (length === '' || length != (n = Number(length))) {
            // parser error - ignoring payload
            return callback(err, 0, 1);
          }

          msg = data.substr(i + 1, n);

          if (length != msg.length) {
            // parser error - ignoring payload
            return callback(err, 0, 1);
          }

          if (msg.length) {
            packet = exports.decodePacket(msg, binaryType, false);

            if (err.type === packet.type && err.data === packet.data) {
              // parser error in individual packet - ignoring payload
              return callback(err, 0, 1);
            }

            var ret = callback(packet, i + n, l);
            if (false === ret) return;
          }

          // advance cursor
          i += n;
          length = '';
        }

        if (length !== '') {
          // parser error - ignoring payload
          return callback(err, 0, 1);
        }

      };

      /**
          * Encodes multiple messages (payload) as binary.
          *
          * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
          * 255><data>
          *
          * Example:
          * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
          *
          * @param {Array} packets
          * @return {ArrayBuffer} encoded payload
          * @api private
          */

      exports.encodePayloadAsArrayBuffer = function (packets, callback) {
        if (!packets.length) {
          return callback(new ArrayBuffer(0));
        }

        function encodeOne(packet, doneCallback) {
          exports.encodePacket(packet, true, true, function (data) {
            return doneCallback(null, data);
          });
        }

        map(packets, encodeOne, function (err, encodedPackets) {
          var totalLength = encodedPackets.reduce(function (acc, p) {
            var len;
            if (typeof p === 'string') {
              len = p.length;
            } else {
              len = p.byteLength;
            }
            return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
          }, 0);

          var resultArray = new Uint8Array(totalLength);

          var bufferIndex = 0;
          encodedPackets.forEach(function (p) {
            var isString = typeof p === 'string';
            var ab = p;
            if (isString) {
              var view = new Uint8Array(p.length);
              for (var i = 0; i < p.length; i++) {
                view[i] = p.charCodeAt(i);
              }
              ab = view.buffer;
            }

            if (isString) {// not true binary
              resultArray[bufferIndex++] = 0;
            } else {// true binary
              resultArray[bufferIndex++] = 1;
            }

            var lenStr = ab.byteLength.toString();
            for (var i = 0; i < lenStr.length; i++) {
              resultArray[bufferIndex++] = parseInt(lenStr[i]);
            }
            resultArray[bufferIndex++] = 255;

            var view = new Uint8Array(ab);
            for (var i = 0; i < view.length; i++) {
              resultArray[bufferIndex++] = view[i];
            }
          });

          return callback(resultArray.buffer);
        });
      };

      /**
          * Encode as Blob
          */

      exports.encodePayloadAsBlob = function (packets, callback) {
        function encodeOne(packet, doneCallback) {
          exports.encodePacket(packet, true, true, function (encoded) {
            var binaryIdentifier = new Uint8Array(1);
            binaryIdentifier[0] = 1;
            if (typeof encoded === 'string') {
              var view = new Uint8Array(encoded.length);
              for (var i = 0; i < encoded.length; i++) {
                view[i] = encoded.charCodeAt(i);
              }
              encoded = view.buffer;
              binaryIdentifier[0] = 0;
            }

            var len = encoded instanceof ArrayBuffer ?
            encoded.byteLength :
            encoded.size;

            var lenStr = len.toString();
            var lengthAry = new Uint8Array(lenStr.length + 1);
            for (var i = 0; i < lenStr.length; i++) {
              lengthAry[i] = parseInt(lenStr[i]);
            }
            lengthAry[lenStr.length] = 255;

            if (Blob) {
              var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
              doneCallback(null, blob);
            }
          });
        }

        map(packets, encodeOne, function (err, results) {
          return callback(new Blob(results));
        });
      };

      /*
          * Decodes data when a payload is maybe expected. Strings are decoded by
          * interpreting each byte as a key code for entries marked to start with 0. See
          * description of encodePayloadAsBinary
          *
          * @param {ArrayBuffer} data, callback method
          * @api public
          */

      exports.decodePayloadAsBinary = function (data, binaryType, callback) {
        if (typeof binaryType === 'function') {
          callback = binaryType;
          binaryType = null;
        }

        var bufferTail = data;
        var buffers = [];

        while (bufferTail.byteLength > 0) {
          var tailArray = new Uint8Array(bufferTail);
          var isString = tailArray[0] === 0;
          var msgLength = '';

          for (var i = 1;; i++) {
            if (tailArray[i] === 255) break;

            // 310 = char length of Number.MAX_VALUE
            if (msgLength.length > 310) {
              return callback(err, 0, 1);
            }

            msgLength += tailArray[i];
          }

          bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
          msgLength = parseInt(msgLength);

          var msg = sliceBuffer(bufferTail, 0, msgLength);
          if (isString) {
            try {
              msg = String.fromCharCode.apply(null, new Uint8Array(msg));
            } catch (e) {
              // iPhone Safari doesn't let you apply to typed arrays
              var typed = new Uint8Array(msg);
              msg = '';
              for (var i = 0; i < typed.length; i++) {
                msg += String.fromCharCode(typed[i]);
              }
            }
          }

          buffers.push(msg);
          bufferTail = sliceBuffer(bufferTail, msgLength);
        }

        var total = buffers.length;
        buffers.forEach(function (buffer, i) {
          callback(exports.decodePacket(buffer, binaryType, true), i, total);
        });
      };


      /***/},
    /* 22 */
    /***/function (module, exports) {


      /**
                                      * Gets the keys for an object.
                                      *
                                      * @return {Array} keys
                                      * @api private
                                      */

      module.exports = Object.keys || function keys(obj) {
        var arr = [];
        var has = Object.prototype.hasOwnProperty;

        for (var i in obj) {
          if (has.call(obj, i)) {
            arr.push(i);
          }
        }
        return arr;
      };


      /***/},
    /* 23 */
    /***/function (module, exports, __webpack_require__) {

      /* global Blob File */

      /*
                              * Module requirements.
                              */

      var isArray = __webpack_require__(10);

      var toString = Object.prototype.toString;
      var withNativeBlob = typeof Blob === 'function' ||
      typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
      var withNativeFile = typeof File === 'function' ||
      typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

      /**
                                                                                          * Module exports.
                                                                                          */

      module.exports = hasBinary;

      /**
                                   * Checks for binary data.
                                   *
                                   * Supports Buffer, ArrayBuffer, Blob and File.
                                   *
                                   * @param {Object} anything
                                   * @api public
                                   */

      function hasBinary(obj) {
        if (!obj || typeof obj !== 'object') {
          return false;
        }

        if (isArray(obj)) {
          for (var i = 0, l = obj.length; i < l; i++) {
            if (hasBinary(obj[i])) {
              return true;
            }
          }
          return false;
        }

        if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) ||
        typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer ||
        withNativeBlob && obj instanceof Blob ||
        withNativeFile && obj instanceof File)
        {
          return true;
        }

        // see: https://github.com/Automattic/has-binary/pull/4
        if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
          return hasBinary(obj.toJSON(), true);
        }

        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
            return true;
          }
        }

        return false;
      }


      /***/},
    /* 24 */
    /***/function (module, exports) {

      /**
                                      * An abstraction for slicing an arraybuffer even when
                                      * ArrayBuffer.prototype.slice is not supported
                                      *
                                      * @api public
                                      */

      module.exports = function (arraybuffer, start, end) {
        var bytes = arraybuffer.byteLength;
        start = start || 0;
        end = end || bytes;

        if (arraybuffer.slice) {return arraybuffer.slice(start, end);}

        if (start < 0) {start += bytes;}
        if (end < 0) {end += bytes;}
        if (end > bytes) {end = bytes;}

        if (start >= bytes || start >= end || bytes === 0) {
          return new ArrayBuffer(0);
        }

        var abv = new Uint8Array(arraybuffer);
        var result = new Uint8Array(end - start);
        for (var i = start, ii = 0; i < end; i++, ii++) {
          result[ii] = abv[i];
        }
        return result.buffer;
      };


      /***/},
    /* 25 */
    /***/function (module, exports) {

      module.exports = after;

      function after(count, callback, err_cb) {
        var bail = false;
        err_cb = err_cb || noop;
        proxy.count = count;

        return count === 0 ? callback() : proxy;

        function proxy(err, result) {
          if (proxy.count <= 0) {
            throw new Error('after called too many times');
          }
          --proxy.count;

          // after first error, rest are passed to err_cb
          if (err) {
            bail = true;
            callback(err);
            // future error callbacks will go to error handler
            callback = err_cb;
          } else if (proxy.count === 0 && !bail) {
            callback(null, result);
          }
        }
      }

      function noop() {}


      /***/},
    /* 26 */
    /***/function (module, exports) {

      /*! https://mths.be/utf8js v2.1.2 by @mathias */

      var stringFromCharCode = String.fromCharCode;

      // Taken from https://mths.be/punycode
      function ucs2decode(string) {
        var output = [];
        var counter = 0;
        var length = string.length;
        var value;
        var extra;
        while (counter < length) {
          value = string.charCodeAt(counter++);
          if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
            // high surrogate, and there is a next character
            extra = string.charCodeAt(counter++);
            if ((extra & 0xFC00) == 0xDC00) {// low surrogate
              output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
            } else {
              // unmatched surrogate; only append this code unit, in case the next
              // code unit is the high surrogate of a surrogate pair
              output.push(value);
              counter--;
            }
          } else {
            output.push(value);
          }
        }
        return output;
      }

      // Taken from https://mths.be/punycode
      function ucs2encode(array) {
        var length = array.length;
        var index = -1;
        var value;
        var output = '';
        while (++index < length) {
          value = array[index];
          if (value > 0xFFFF) {
            value -= 0x10000;
            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
            value = 0xDC00 | value & 0x3FF;
          }
          output += stringFromCharCode(value);
        }
        return output;
      }

      function checkScalarValue(codePoint, strict) {
        if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
          if (strict) {
            throw Error(
            'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
            ' is not a scalar value');

          }
          return false;
        }
        return true;
      }
      /*--------------------------------------------------------------------------*/

      function createByte(codePoint, shift) {
        return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);
      }

      function encodeCodePoint(codePoint, strict) {
        if ((codePoint & 0xFFFFFF80) == 0) {// 1-byte sequence
          return stringFromCharCode(codePoint);
        }
        var symbol = '';
        if ((codePoint & 0xFFFFF800) == 0) {// 2-byte sequence
          symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);
        } else
        if ((codePoint & 0xFFFF0000) == 0) {// 3-byte sequence
          if (!checkScalarValue(codePoint, strict)) {
            codePoint = 0xFFFD;
          }
          symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);
          symbol += createByte(codePoint, 6);
        } else
        if ((codePoint & 0xFFE00000) == 0) {// 4-byte sequence
          symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);
          symbol += createByte(codePoint, 12);
          symbol += createByte(codePoint, 6);
        }
        symbol += stringFromCharCode(codePoint & 0x3F | 0x80);
        return symbol;
      }

      function utf8encode(string, opts) {
        opts = opts || {};
        var strict = false !== opts.strict;

        var codePoints = ucs2decode(string);
        var length = codePoints.length;
        var index = -1;
        var codePoint;
        var byteString = '';
        while (++index < length) {
          codePoint = codePoints[index];
          byteString += encodeCodePoint(codePoint, strict);
        }
        return byteString;
      }

      /*--------------------------------------------------------------------------*/

      function readContinuationByte() {
        if (byteIndex >= byteCount) {
          throw Error('Invalid byte index');
        }

        var continuationByte = byteArray[byteIndex] & 0xFF;
        byteIndex++;

        if ((continuationByte & 0xC0) == 0x80) {
          return continuationByte & 0x3F;
        }

        // If we end up here, it’s not a continuation byte
        throw Error('Invalid continuation byte');
      }

      function decodeSymbol(strict) {
        var byte1;
        var byte2;
        var byte3;
        var byte4;
        var codePoint;

        if (byteIndex > byteCount) {
          throw Error('Invalid byte index');
        }

        if (byteIndex == byteCount) {
          return false;
        }

        // Read first byte
        byte1 = byteArray[byteIndex] & 0xFF;
        byteIndex++;

        // 1-byte sequence (no continuation bytes)
        if ((byte1 & 0x80) == 0) {
          return byte1;
        }

        // 2-byte sequence
        if ((byte1 & 0xE0) == 0xC0) {
          byte2 = readContinuationByte();
          codePoint = (byte1 & 0x1F) << 6 | byte2;
          if (codePoint >= 0x80) {
            return codePoint;
          } else {
            throw Error('Invalid continuation byte');
          }
        }

        // 3-byte sequence (may include unpaired surrogates)
        if ((byte1 & 0xF0) == 0xE0) {
          byte2 = readContinuationByte();
          byte3 = readContinuationByte();
          codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;
          if (codePoint >= 0x0800) {
            return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
          } else {
            throw Error('Invalid continuation byte');
          }
        }

        // 4-byte sequence
        if ((byte1 & 0xF8) == 0xF0) {
          byte2 = readContinuationByte();
          byte3 = readContinuationByte();
          byte4 = readContinuationByte();
          codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C |
          byte3 << 0x06 | byte4;
          if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
            return codePoint;
          }
        }

        throw Error('Invalid UTF-8 detected');
      }

      var byteArray;
      var byteCount;
      var byteIndex;
      function utf8decode(byteString, opts) {
        opts = opts || {};
        var strict = false !== opts.strict;

        byteArray = ucs2decode(byteString);
        byteCount = byteArray.length;
        byteIndex = 0;
        var codePoints = [];
        var tmp;
        while ((tmp = decodeSymbol(strict)) !== false) {
          codePoints.push(tmp);
        }
        return ucs2encode(codePoints);
      }

      module.exports = {
        version: '2.1.2',
        encode: utf8encode,
        decode: utf8decode };



      /***/},
    /* 27 */
    /***/function (module, exports) {

      /*
                                      * base64-arraybuffer
                                      * https://github.com/niklasvh/base64-arraybuffer
                                      *
                                      * Copyright (c) 2012 Niklas von Hertzen
                                      * Licensed under the MIT license.
                                      */
      (function () {
        "use strict";

        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        // Use a lookup table to find the index.
        var lookup = new Uint8Array(256);
        for (var i = 0; i < chars.length; i++) {
          lookup[chars.charCodeAt(i)] = i;
        }

        exports.encode = function (arraybuffer) {
          var bytes = new Uint8Array(arraybuffer),
          i,len = bytes.length,base64 = "";

          for (i = 0; i < len; i += 3) {
            base64 += chars[bytes[i] >> 2];
            base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
            base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
            base64 += chars[bytes[i + 2] & 63];
          }

          if (len % 3 === 2) {
            base64 = base64.substring(0, base64.length - 1) + "=";
          } else if (len % 3 === 1) {
            base64 = base64.substring(0, base64.length - 2) + "==";
          }

          return base64;
        };

        exports.decode = function (base64) {
          var bufferLength = base64.length * 0.75,
          len = base64.length,i,p = 0,
          encoded1,encoded2,encoded3,encoded4;

          if (base64[base64.length - 1] === "=") {
            bufferLength--;
            if (base64[base64.length - 2] === "=") {
              bufferLength--;
            }
          }

          var arraybuffer = new ArrayBuffer(bufferLength),
          bytes = new Uint8Array(arraybuffer);

          for (i = 0; i < len; i += 4) {
            encoded1 = lookup[base64.charCodeAt(i)];
            encoded2 = lookup[base64.charCodeAt(i + 1)];
            encoded3 = lookup[base64.charCodeAt(i + 2)];
            encoded4 = lookup[base64.charCodeAt(i + 3)];

            bytes[p++] = encoded1 << 2 | encoded2 >> 4;
            bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
            bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
          }

          return arraybuffer;
        };
      })();


      /***/},
    /* 28 */
    /***/function (module, exports) {

      /**
                                      * Create a blob builder even when vendor prefixes exist
                                      */

      var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :
      typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :
      typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :
      typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :
      false;

      /**
              * Check if Blob constructor is supported
              */

      var blobSupported = function () {
        try {
          var a = new Blob(['hi']);
          return a.size === 2;
        } catch (e) {
          return false;
        }
      }();

      /**
            * Check if Blob constructor supports ArrayBufferViews
            * Fails in Safari 6, so we need to map to ArrayBuffers there.
            */

      var blobSupportsArrayBufferView = blobSupported && function () {
        try {
          var b = new Blob([new Uint8Array([1, 2])]);
          return b.size === 2;
        } catch (e) {
          return false;
        }
      }();

      /**
            * Check if BlobBuilder is supported
            */

      var blobBuilderSupported = BlobBuilder &&
      BlobBuilder.prototype.append &&
      BlobBuilder.prototype.getBlob;

      /**
                                      * Helper function that maps ArrayBufferViews to ArrayBuffers
                                      * Used by BlobBuilder constructor and old browsers that didn't
                                      * support it in the Blob constructor.
                                      */

      function mapArrayBufferViews(ary) {
        return ary.map(function (chunk) {
          if (chunk.buffer instanceof ArrayBuffer) {
            var buf = chunk.buffer;

            // if this is a subarray, make a copy so we only
            // include the subarray region from the underlying buffer
            if (chunk.byteLength !== buf.byteLength) {
              var copy = new Uint8Array(chunk.byteLength);
              copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
              buf = copy.buffer;
            }

            return buf;
          }

          return chunk;
        });
      }

      function BlobBuilderConstructor(ary, options) {
        options = options || {};

        var bb = new BlobBuilder();
        mapArrayBufferViews(ary).forEach(function (part) {
          bb.append(part);
        });

        return options.type ? bb.getBlob(options.type) : bb.getBlob();
      };

      function BlobConstructor(ary, options) {
        return new Blob(mapArrayBufferViews(ary), options || {});
      };

      if (typeof Blob !== 'undefined') {
        BlobBuilderConstructor.prototype = Blob.prototype;
        BlobConstructor.prototype = Blob.prototype;
      }

      module.exports = function () {
        if (blobSupported) {
          return blobSupportsArrayBufferView ? Blob : BlobConstructor;
        } else if (blobBuilderSupported) {
          return BlobBuilderConstructor;
        } else {
          return undefined;
        }
      }();


      /***/},
    /* 29 */
    /***/function (module, exports) {

      /**
                                      * Compiles a querystring
                                      * Returns string representation of the object
                                      *
                                      * @param {Object}
                                      * @api private
                                      */

      exports.encode = function (obj) {
        var str = '';

        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            if (str.length) str += '&';
            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
          }
        }

        return str;
      };

      /**
          * Parses a simple querystring into an object
          *
          * @param {String} qs
          * @api private
          */

      exports.decode = function (qs) {
        var qry = {};
        var pairs = qs.split('&');
        for (var i = 0, l = pairs.length; i < l; i++) {
          var pair = pairs[i].split('=');
          qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
        return qry;
      };


      /***/},
    /* 30 */
    /***/function (module, exports) {


      module.exports = function (a, b) {
        var fn = function fn() {};
        fn.prototype = b.prototype;
        a.prototype = new fn();
        a.prototype.constructor = a;
      };

      /***/},
    /* 31 */
    /***/function (module, exports) {

      'use strict';

      var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),
      length = 64,
      map = {},
      seed = 0,
      i = 0,
      prev;

      /**
             * Return a string representing the specified number.
             *
             * @param {Number} num The number to convert.
             * @returns {String} The string representation of the number.
             * @api public
             */
      function encode(num) {
        var encoded = '';

        do {
          encoded = alphabet[num % length] + encoded;
          num = Math.floor(num / length);
        } while (num > 0);

        return encoded;
      }

      /**
         * Return the integer value specified by the given string.
         *
         * @param {String} str The string to convert.
         * @returns {Number} The integer value represented by the string.
         * @api public
         */
      function decode(str) {
        var decoded = 0;

        for (i = 0; i < str.length; i++) {
          decoded = decoded * length + map[str.charAt(i)];
        }

        return decoded;
      }

      /**
         * Yeast: A tiny growing id generator.
         *
         * @returns {String} A unique id.
         * @api public
         */
      function yeast() {
        var now = encode(+new Date());

        if (now !== prev) return seed = 0, prev = now;
        return now + '.' + encode(seed++);
      }

      //
      // Map each character to its index.
      //
      for (; i < length; i++) {map[alphabet[i]] = i;}

      //
      // Expose the `yeast`, `encode` and `decode` functions.
      //
      yeast.encode = encode;
      yeast.decode = decode;
      module.exports = yeast;


      /***/},
    /* 32 */
    /***/function (module, exports, __webpack_require__) {

      /* WEBPACK VAR INJECTION */(function (global) {/**
                                                     * Module requirements.
                                                     */

        var Polling = __webpack_require__(19);
        var inherit = __webpack_require__(30);

        /**
                                                * Module exports.
                                                */

        module.exports = JSONPPolling;

        /**
                                        * Cached regular expressions.
                                        */

        var rNewline = /\n/g;
        var rEscapedNewline = /\\n/g;

        /**
                                       * Global JSONP callbacks.
                                       */

        var callbacks;

        /**
                        * Noop.
                        */

        function empty() {}

        /**
                             * Until https://github.com/tc39/proposal-global is shipped.
                             */
        function glob() {
          return typeof self !== 'undefined' ? self :
          typeof window !== 'undefined' ? window :
          typeof global !== 'undefined' ? global : {};
        }

        /**
           * JSONP Polling constructor.
           *
           * @param {Object} opts.
           * @api public
           */

        function JSONPPolling(opts) {
          Polling.call(this, opts);

          this.query = this.query || {};

          // define global callbacks array if not present
          // we do this here (lazily) to avoid unneeded global pollution
          if (!callbacks) {
            // we need to consider multiple engines in the same page
            var global = glob();
            callbacks = global.___eio = global.___eio || [];
          }

          // callback identifier
          this.index = callbacks.length;

          // add callback to jsonp global
          var self = this;
          callbacks.push(function (msg) {
            self.onData(msg);
          });

          // append to query string
          this.query.j = this.index;

          // prevent spurious errors from being emitted when the window is unloaded
          if (typeof addEventListener === 'function') {
            addEventListener('beforeunload', function () {
              if (self.script) self.script.onerror = empty;
            }, false);
          }
        }

        /**
           * Inherits from Polling.
           */

        inherit(JSONPPolling, Polling);

        /*
                                         * JSONP only supports binary as base64 encoded strings
                                         */

        JSONPPolling.prototype.supportsBinary = false;

        /**
                                                        * Closes the socket.
                                                        *
                                                        * @api private
                                                        */

        JSONPPolling.prototype.doClose = function () {
          if (this.script) {
            this.script.parentNode.removeChild(this.script);
            this.script = null;
          }

          if (this.form) {
            this.form.parentNode.removeChild(this.form);
            this.form = null;
            this.iframe = null;
          }

          Polling.prototype.doClose.call(this);
        };

        /**
            * Starts a poll cycle.
            *
            * @api private
            */

        JSONPPolling.prototype.doPoll = function () {
          var self = this;
          var script = document.createElement('script');

          if (this.script) {
            this.script.parentNode.removeChild(this.script);
            this.script = null;
          }

          script.async = true;
          script.src = this.uri();
          script.onerror = function (e) {
            self.onError('jsonp poll error', e);
          };

          var insertAt = document.getElementsByTagName('script')[0];
          if (insertAt) {
            insertAt.parentNode.insertBefore(script, insertAt);
          } else {
            (document.head || document.body).appendChild(script);
          }
          this.script = script;

          var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

          if (isUAgecko) {
            setTimeout(function () {
              var iframe = document.createElement('iframe');
              document.body.appendChild(iframe);
              document.body.removeChild(iframe);
            }, 100);
          }
        };

        /**
            * Writes with a hidden iframe.
            *
            * @param {String} data to send
            * @param {Function} called upon flush.
            * @api private
            */

        JSONPPolling.prototype.doWrite = function (data, fn) {
          var self = this;

          if (!this.form) {
            var form = document.createElement('form');
            var area = document.createElement('textarea');
            var id = this.iframeId = 'eio_iframe_' + this.index;
            var iframe;

            form.className = 'socketio';
            form.style.position = 'absolute';
            form.style.top = '-1000px';
            form.style.left = '-1000px';
            form.target = id;
            form.method = 'POST';
            form.setAttribute('accept-charset', 'utf-8');
            area.name = 'd';
            form.appendChild(area);
            document.body.appendChild(form);

            this.form = form;
            this.area = area;
          }

          this.form.action = this.uri();

          function complete() {
            initIframe();
            fn();
          }

          function initIframe() {
            if (self.iframe) {
              try {
                self.form.removeChild(self.iframe);
              } catch (e) {
                self.onError('jsonp polling iframe removal error', e);
              }
            }

            try {
              // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
              var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
              iframe = document.createElement(html);
            } catch (e) {
              iframe = document.createElement('iframe');
              iframe.name = self.iframeId;
              iframe.src = 'javascript:0';
            }

            iframe.id = self.iframeId;

            self.form.appendChild(iframe);
            self.iframe = iframe;
          }

          initIframe();

          // escape \n to prevent it from being converted into \r\n by some UAs
          // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
          data = data.replace(rEscapedNewline, '\\\n');
          this.area.value = data.replace(rNewline, '\\n');

          try {
            this.form.submit();
          } catch (e) {}

          if (this.iframe.attachEvent) {
            this.iframe.onreadystatechange = function () {
              if (self.iframe.readyState === 'complete') {
                complete();
              }
            };
          } else {
            this.iframe.onload = complete;
          }
        };

        /* WEBPACK VAR INJECTION */}).call(exports, function () {return this;}());

      /***/},
    /* 33 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var Transport = __webpack_require__(20);
      var parser = __webpack_require__(21);
      var parseqs = __webpack_require__(29);
      var inherit = __webpack_require__(30);
      var yeast = __webpack_require__(31);
      var debug = __webpack_require__(3)('engine.io-client:websocket');
      var BrowserWebSocket, NodeWebSocket;
      if (typeof self === 'undefined') {
        try {
          NodeWebSocket = __webpack_require__(34);
        } catch (e) {}
      } else {
        BrowserWebSocket = self.WebSocket || self.MozWebSocket;
      }

      /**
         * Get either the `WebSocket` or `MozWebSocket` globals
         * in the browser or try to resolve WebSocket-compatible
         * interface exposed by `ws` for Node-like environment.
         */

      var WebSocket = BrowserWebSocket || NodeWebSocket;

      /**
                                                          * Module exports.
                                                          */

      module.exports = WS;

      /**
                            * WebSocket transport constructor.
                            *
                            * @api {Object} connection options
                            * @api public
                            */

      function WS(opts) {
        var forceBase64 = opts && opts.forceBase64;
        if (forceBase64) {
          this.supportsBinary = false;
        }
        this.perMessageDeflate = opts.perMessageDeflate;
        this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
        this.protocols = opts.protocols;
        if (!this.usingBrowserWebSocket) {
          WebSocket = NodeWebSocket;
        }
        Transport.call(this, opts);
      }

      /**
         * Inherits from Transport.
         */

      inherit(WS, Transport);

      /**
                               * Transport name.
                               *
                               * @api public
                               */

      WS.prototype.name = 'websocket';

      /*
                                        * WebSockets support binary
                                        */

      WS.prototype.supportsBinary = true;

      /**
                                           * Opens socket.
                                           *
                                           * @api private
                                           */

      WS.prototype.doOpen = function () {
        if (!this.check()) {
          // let probe timeout
          return;
        }

        var uri = this.uri();
        var protocols = this.protocols;
        var opts = {
          agent: this.agent,
          perMessageDeflate: this.perMessageDeflate };


        // SSL options for Node.js client
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;
        if (this.extraHeaders) {
          opts.headers = this.extraHeaders;
        }
        if (this.localAddress) {
          opts.localAddress = this.localAddress;
        }

        try {
          this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);
        } catch (err) {
          return this.emit('error', err);
        }

        if (this.ws.binaryType === undefined) {
          this.supportsBinary = false;
        }

        if (this.ws.supports && this.ws.supports.binary) {
          this.supportsBinary = true;
          this.ws.binaryType = 'nodebuffer';
        } else {
          this.ws.binaryType = 'arraybuffer';
        }

        this.addEventListeners();
      };

      /**
          * Adds event listeners to the socket
          *
          * @api private
          */

      WS.prototype.addEventListeners = function () {
        var self = this;

        this.ws.onopen = function () {
          self.onOpen();
        };
        this.ws.onclose = function () {
          self.onClose();
        };
        this.ws.onmessage = function (ev) {
          self.onData(ev.data);
        };
        this.ws.onerror = function (e) {
          self.onError('websocket error', e);
        };
      };

      /**
          * Writes data to socket.
          *
          * @param {Array} array of packets.
          * @api private
          */

      WS.prototype.write = function (packets) {
        var self = this;
        this.writable = false;

        // encodePacket efficient as it uses WS framing
        // no need for encodePayload
        var total = packets.length;
        for (var i = 0, l = total; i < l; i++) {
          (function (packet) {
            parser.encodePacket(packet, self.supportsBinary, function (data) {
              if (!self.usingBrowserWebSocket) {
                // always create a new object (GH-437)
                var opts = {};
                if (packet.options) {
                  opts.compress = packet.options.compress;
                }

                if (self.perMessageDeflate) {
                  var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
                  if (len < self.perMessageDeflate.threshold) {
                    opts.compress = false;
                  }
                }
              }

              // Sometimes the websocket has already been closed but the browser didn't
              // have a chance of informing us about it yet, in that case send will
              // throw an error
              try {
                if (self.usingBrowserWebSocket) {
                  // TypeError is thrown when passing the second argument on Safari
                  self.ws.send(data);
                } else {
                  self.ws.send(data, opts);
                }
              } catch (e) {
                debug('websocket closed before onclose event');
              }

              --total || done();
            });
          })(packets[i]);
        }

        function done() {
          self.emit('flush');

          // fake drain
          // defer to next tick to allow Socket to clear writeBuffer
          setTimeout(function () {
            self.writable = true;
            self.emit('drain');
          }, 0);
        }
      };

      /**
          * Called upon close
          *
          * @api private
          */

      WS.prototype.onClose = function () {
        Transport.prototype.onClose.call(this);
      };

      /**
          * Closes socket.
          *
          * @api private
          */

      WS.prototype.doClose = function () {
        if (typeof this.ws !== 'undefined') {
          this.ws.close();
        }
      };

      /**
          * Generates uri for connection.
          *
          * @api private
          */

      WS.prototype.uri = function () {
        var query = this.query || {};
        var schema = this.secure ? 'wss' : 'ws';
        var port = '';

        // avoid port if default for schema
        if (this.port && ('wss' === schema && Number(this.port) !== 443 ||
        'ws' === schema && Number(this.port) !== 80)) {
          port = ':' + this.port;
        }

        // append timestamp to URI
        if (this.timestampRequests) {
          query[this.timestampParam] = yeast();
        }

        // communicate binary support capabilities
        if (!this.supportsBinary) {
          query.b64 = 1;
        }

        query = parseqs.encode(query);

        // prepend ? to query
        if (query.length) {
          query = '?' + query;
        }

        var ipv6 = this.hostname.indexOf(':') !== -1;
        return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
      };

      /**
          * Feature detection for WebSocket.
          *
          * @return {Boolean} whether this transport is available.
          * @api public
          */

      WS.prototype.check = function () {
        return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
      };


      /***/},
    /* 34 */
    /***/function (module, exports) {

      /* (ignored) */

      /***/},
    /* 35 */
    /***/function (module, exports) {


      var indexOf = [].indexOf;

      module.exports = function (arr, obj) {
        if (indexOf) return arr.indexOf(obj);
        for (var i = 0; i < arr.length; ++i) {
          if (arr[i] === obj) return i;
        }
        return -1;
      };

      /***/},
    /* 36 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};

      /**
                                                                                                                                                                                                                                                                                 * Module dependencies.
                                                                                                                                                                                                                                                                                 */

      var parser = __webpack_require__(7);
      var Emitter = __webpack_require__(8);
      var toArray = __webpack_require__(37);
      var on = __webpack_require__(38);
      var bind = __webpack_require__(39);
      var debug = __webpack_require__(3)('socket.io-client:socket');
      var parseqs = __webpack_require__(29);
      var hasBin = __webpack_require__(23);

      /**
                                             * Module exports.
                                             */

      module.exports = exports = Socket;

      /**
                                          * Internal events (blacklisted).
                                          * These events can't be emitted by the user.
                                          *
                                          * @api private
                                          */

      var events = {
        connect: 1,
        connect_error: 1,
        connect_timeout: 1,
        connecting: 1,
        disconnect: 1,
        error: 1,
        reconnect: 1,
        reconnect_attempt: 1,
        reconnect_failed: 1,
        reconnect_error: 1,
        reconnecting: 1,
        ping: 1,
        pong: 1 };


      /**
                    * Shortcut to `Emitter#emit`.
                    */

      var emit = Emitter.prototype.emit;

      /**
                                          * `Socket` constructor.
                                          *
                                          * @api public
                                          */

      function Socket(io, nsp, opts) {
        this.io = io;
        this.nsp = nsp;
        this.json = this; // compat
        this.ids = 0;
        this.acks = {};
        this.receiveBuffer = [];
        this.sendBuffer = [];
        this.connected = false;
        this.disconnected = true;
        this.flags = {};
        if (opts && opts.query) {
          this.query = opts.query;
        }
        if (this.io.autoConnect) this.open();
      }

      /**
         * Mix in `Emitter`.
         */

      Emitter(Socket.prototype);

      /**
                                  * Subscribe to open, close and packet events
                                  *
                                  * @api private
                                  */

      Socket.prototype.subEvents = function () {
        if (this.subs) return;

        var io = this.io;
        this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];
      };

      /**
          * "Opens" the socket.
          *
          * @api public
          */

      Socket.prototype.open = Socket.prototype.connect = function () {
        if (this.connected) return this;

        this.subEvents();
        this.io.open(); // ensure open
        if ('open' === this.io.readyState) this.onopen();
        this.emit('connecting');
        return this;
      };

      /**
          * Sends a `message` event.
          *
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.send = function () {
        var args = toArray(arguments);
        args.unshift('message');
        this.emit.apply(this, args);
        return this;
      };

      /**
          * Override `emit`.
          * If the event is in `events`, it's emitted normally.
          *
          * @param {String} event name
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.emit = function (ev) {
        if (events.hasOwnProperty(ev)) {
          emit.apply(this, arguments);
          return this;
        }

        var args = toArray(arguments);
        var packet = {
          type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
          data: args };


        packet.options = {};
        packet.options.compress = !this.flags || false !== this.flags.compress;

        // event ack callback
        if ('function' === typeof args[args.length - 1]) {
          debug('emitting packet with ack id %d', this.ids);
          this.acks[this.ids] = args.pop();
          packet.id = this.ids++;
        }

        if (this.connected) {
          this.packet(packet);
        } else {
          this.sendBuffer.push(packet);
        }

        this.flags = {};

        return this;
      };

      /**
          * Sends a packet.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.packet = function (packet) {
        packet.nsp = this.nsp;
        this.io.packet(packet);
      };

      /**
          * Called upon engine `open`.
          *
          * @api private
          */

      Socket.prototype.onopen = function () {
        debug('transport is open - connecting');

        // write connect packet if necessary
        if ('/' !== this.nsp) {
          if (this.query) {
            var query = _typeof(this.query) === 'object' ? parseqs.encode(this.query) : this.query;
            debug('sending connect packet with query %s', query);
            this.packet({ type: parser.CONNECT, query: query });
          } else {
            this.packet({ type: parser.CONNECT });
          }
        }
      };

      /**
          * Called upon engine `close`.
          *
          * @param {String} reason
          * @api private
          */

      Socket.prototype.onclose = function (reason) {
        debug('close (%s)', reason);
        this.connected = false;
        this.disconnected = true;
        delete this.id;
        this.emit('disconnect', reason);
      };

      /**
          * Called with socket packet.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.onpacket = function (packet) {
        var sameNamespace = packet.nsp === this.nsp;
        var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

        if (!sameNamespace && !rootNamespaceError) return;

        switch (packet.type) {
          case parser.CONNECT:
            this.onconnect();
            break;

          case parser.EVENT:
            this.onevent(packet);
            break;

          case parser.BINARY_EVENT:
            this.onevent(packet);
            break;

          case parser.ACK:
            this.onack(packet);
            break;

          case parser.BINARY_ACK:
            this.onack(packet);
            break;

          case parser.DISCONNECT:
            this.ondisconnect();
            break;

          case parser.ERROR:
            this.emit('error', packet.data);
            break;}

      };

      /**
          * Called upon a server event.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.onevent = function (packet) {
        var args = packet.data || [];
        debug('emitting event %j', args);

        if (null != packet.id) {
          debug('attaching ack callback to event');
          args.push(this.ack(packet.id));
        }

        if (this.connected) {
          emit.apply(this, args);
        } else {
          this.receiveBuffer.push(args);
        }
      };

      /**
          * Produces an ack callback to emit with an event.
          *
          * @api private
          */

      Socket.prototype.ack = function (id) {
        var self = this;
        var sent = false;
        return function () {
          // prevent double callbacks
          if (sent) return;
          sent = true;
          var args = toArray(arguments);
          debug('sending ack %j', args);

          self.packet({
            type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
            id: id,
            data: args });

        };
      };

      /**
          * Called upon a server acknowlegement.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.onack = function (packet) {
        var ack = this.acks[packet.id];
        if ('function' === typeof ack) {
          debug('calling ack %s with %j', packet.id, packet.data);
          ack.apply(this, packet.data);
          delete this.acks[packet.id];
        } else {
          debug('bad ack %s', packet.id);
        }
      };

      /**
          * Called upon server connect.
          *
          * @api private
          */

      Socket.prototype.onconnect = function () {
        this.connected = true;
        this.disconnected = false;
        this.emit('connect');
        this.emitBuffered();
      };

      /**
          * Emit buffered events (received and emitted).
          *
          * @api private
          */

      Socket.prototype.emitBuffered = function () {
        var i;
        for (i = 0; i < this.receiveBuffer.length; i++) {
          emit.apply(this, this.receiveBuffer[i]);
        }
        this.receiveBuffer = [];

        for (i = 0; i < this.sendBuffer.length; i++) {
          this.packet(this.sendBuffer[i]);
        }
        this.sendBuffer = [];
      };

      /**
          * Called upon server disconnect.
          *
          * @api private
          */

      Socket.prototype.ondisconnect = function () {
        debug('server disconnect (%s)', this.nsp);
        this.destroy();
        this.onclose('io server disconnect');
      };

      /**
          * Called upon forced client/server side disconnections,
          * this method ensures the manager stops tracking us and
          * that reconnections don't get triggered for this.
          *
          * @api private.
          */

      Socket.prototype.destroy = function () {
        if (this.subs) {
          // clean subscriptions to avoid reconnections
          for (var i = 0; i < this.subs.length; i++) {
            this.subs[i].destroy();
          }
          this.subs = null;
        }

        this.io.destroy(this);
      };

      /**
          * Disconnects the socket manually.
          *
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.close = Socket.prototype.disconnect = function () {
        if (this.connected) {
          debug('performing disconnect (%s)', this.nsp);
          this.packet({ type: parser.DISCONNECT });
        }

        // remove socket from pool
        this.destroy();

        if (this.connected) {
          // fire events
          this.onclose('io client disconnect');
        }
        return this;
      };

      /**
          * Sets the compress flag.
          *
          * @param {Boolean} if `true`, compresses the sending data
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.compress = function (compress) {
        this.flags.compress = compress;
        return this;
      };

      /**
          * Sets the binary flag
          *
          * @param {Boolean} whether the emitted data contains binary
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.binary = function (binary) {
        this.flags.binary = binary;
        return this;
      };

      /***/},
    /* 37 */
    /***/function (module, exports) {

      module.exports = toArray;

      function toArray(list, index) {
        var array = [];

        index = index || 0;

        for (var i = index || 0; i < list.length; i++) {
          array[i - index] = list[i];
        }

        return array;
      }


      /***/},
    /* 38 */
    /***/function (module, exports) {

      "use strict";

      /**
                     * Module exports.
                     */

      module.exports = on;

      /**
                            * Helper for subscriptions.
                            *
                            * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
                            * @param {String} event name
                            * @param {Function} callback
                            * @api public
                            */

      function on(obj, ev, fn) {
        obj.on(ev, fn);
        return {
          destroy: function destroy() {
            obj.removeListener(ev, fn);
          } };

      }

      /***/},
    /* 39 */
    /***/function (module, exports) {

      /**
                                      * Slice reference.
                                      */

      var slice = [].slice;

      /**
                             * Bind `obj` to `fn`.
                             *
                             * @param {Object} obj
                             * @param {Function|String} fn or string
                             * @return {Function}
                             * @api public
                             */

      module.exports = function (obj, fn) {
        if ('string' == typeof fn) fn = obj[fn];
        if ('function' != typeof fn) throw new Error('bind() requires a function');
        var args = slice.call(arguments, 2);
        return function () {
          return fn.apply(obj, args.concat(slice.call(arguments)));
        };
      };


      /***/},
    /* 40 */
    /***/function (module, exports) {


      /**
                                      * Expose `Backoff`.
                                      */

      module.exports = Backoff;

      /**
                                 * Initialize backoff timer with `opts`.
                                 *
                                 * - `min` initial timeout in milliseconds [100]
                                 * - `max` max timeout [10000]
                                 * - `jitter` [0]
                                 * - `factor` [2]
                                 *
                                 * @param {Object} opts
                                 * @api public
                                 */

      function Backoff(opts) {
        opts = opts || {};
        this.ms = opts.min || 100;
        this.max = opts.max || 10000;
        this.factor = opts.factor || 2;
        this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
        this.attempts = 0;
      }

      /**
         * Return the backoff duration.
         *
         * @return {Number}
         * @api public
         */

      Backoff.prototype.duration = function () {
        var ms = this.ms * Math.pow(this.factor, this.attempts++);
        if (this.jitter) {
          var rand = Math.random();
          var deviation = Math.floor(rand * this.jitter * ms);
          ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
        }
        return Math.min(ms, this.max) | 0;
      };

      /**
          * Reset the number of attempts.
          *
          * @api public
          */

      Backoff.prototype.reset = function () {
        this.attempts = 0;
      };

      /**
          * Set the minimum duration
          *
          * @api public
          */

      Backoff.prototype.setMin = function (min) {
        this.ms = min;
      };

      /**
          * Set the maximum duration
          *
          * @api public
          */

      Backoff.prototype.setMax = function (max) {
        this.max = max;
      };

      /**
          * Set the jitter
          *
          * @api public
          */

      Backoff.prototype.setJitter = function (jitter) {
        this.jitter = jitter;
      };



      /***/}]));

});
;
});
define('static/js/socket.io-client/dist/socket.io.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /*!
               * Socket.IO v2.2.0
               * (c) 2014-2018 Guillermo Rauch
               * Released under the MIT License.
               */
!function (t, e) {"object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.io = e() : t.io = e();}(void 0, function () {return function (t) {function e(r) {if (n[r]) return n[r].exports;var o = n[r] = { exports: {}, id: r, loaded: !1 };return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;}var n = {};return e.m = t, e.c = n, e.p = "", e(0);}([function (t, e, n) {"use strict";function r(t, e) {"object" === ("undefined" == typeof t ? "undefined" : o(t)) && (e = t, t = void 0), e = e || {};var n,r = i(t),s = r.source,u = r.id,h = r.path,f = p[u] && h in p[u].nsps,l = e.forceNew || e["force new connection"] || !1 === e.multiplex || f;return l ? (c("ignoring socket cache for %s", s), n = a(s, e)) : (p[u] || (c("new io instance for %s", s), p[u] = a(s, e)), n = p[u]), r.query && !e.query && (e.query = r.query), n.socket(r.path, e);}var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {return typeof t;} : function (t) {return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;},i = n(1),s = n(7),a = n(12),c = n(3)("socket.io-client");t.exports = e = r;var p = e.managers = {};e.protocol = s.protocol, e.connect = r, e.Manager = n(12), e.Socket = n(36);}, function (t, e, n) {"use strict";function r(t, e) {var n = t;e = e || "undefined" != typeof location && location, null == t && (t = e.protocol + "//" + e.host), "string" == typeof t && ("/" === t.charAt(0) && (t = "/" === t.charAt(1) ? e.protocol + t : e.host + t), /^(https?|wss?):\/\//.test(t) || (i("protocol-less url %s", t), t = "undefined" != typeof e ? e.protocol + "//" + t : "https://" + t), i("parse %s", t), n = o(t)), n.port || (/^(http|ws)$/.test(n.protocol) ? n.port = "80" : /^(http|ws)s$/.test(n.protocol) && (n.port = "443")), n.path = n.path || "/";var r = n.host.indexOf(":") !== -1,s = r ? "[" + n.host + "]" : n.host;return n.id = n.protocol + "://" + s + ":" + n.port, n.href = n.protocol + "://" + s + (e && e.port === n.port ? "" : ":" + n.port), n;}var o = n(2),i = n(3)("socket.io-client:url");t.exports = r;}, function (t, e) {var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,r = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];t.exports = function (t) {var e = t,o = t.indexOf("["),i = t.indexOf("]");o != -1 && i != -1 && (t = t.substring(0, o) + t.substring(o, i).replace(/:/g, ";") + t.substring(i, t.length));for (var s = n.exec(t || ""), a = {}, c = 14; c--;) {a[r[c]] = s[c] || "";}return o != -1 && i != -1 && (a.source = e, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = !0), a;};}, function (t, e, n) {(function (r) {function o() {return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));}function i(t) {var n = this.useColors;if (t[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + t[0] + (n ? "%c " : " ") + "+" + e.humanize(this.diff), n) {var r = "color: " + this.color;t.splice(1, 0, r, "color: inherit");var o = 0,i = 0;t[0].replace(/%[a-zA-Z%]/g, function (t) {"%%" !== t && (o++, "%c" === t && (i = o));}), t.splice(i, 0, r);}}function s() {return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);}function a(t) {try {null == t ? e.storage.removeItem("debug") : e.storage.debug = t;} catch (n) {}}function c() {var t;try {t = e.storage.debug;} catch (n) {}return !t && "undefined" != typeof r && "env" in r && (t = r.env.DEBUG), t;}function p() {try {return window.localStorage;} catch (t) {}}e = t.exports = n(5), e.log = s, e.formatArgs = i, e.save = a, e.load = c, e.useColors = o, e.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : p(), e.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.formatters.j = function (t) {try {return JSON.stringify(t);} catch (e) {return "[UnexpectedJSONParseError]: " + e.message;}}, e.enable(c());}).call(e, n(4));}, function (t, e) {function n() {throw new Error("setTimeout has not been defined");}function r() {throw new Error("clearTimeout has not been defined");}function o(t) {if (u === setTimeout) return setTimeout(t, 0);if ((u === n || !u) && setTimeout) return u = setTimeout, setTimeout(t, 0);try {return u(t, 0);} catch (e) {try {return u.call(null, t, 0);} catch (e) {return u.call(this, t, 0);}}}function i(t) {if (h === clearTimeout) return clearTimeout(t);if ((h === r || !h) && clearTimeout) return h = clearTimeout, clearTimeout(t);try {return h(t);} catch (e) {try {return h.call(null, t);} catch (e) {return h.call(this, t);}}}function s() {y && l && (y = !1, l.length ? d = l.concat(d) : m = -1, d.length && a());}function a() {if (!y) {var t = o(s);y = !0;for (var e = d.length; e;) {for (l = d, d = []; ++m < e;) {l && l[m].run();}m = -1, e = d.length;}l = null, y = !1, i(t);}}function c(t, e) {this.fun = t, this.array = e;}function p() {}var u,h,f = t.exports = {};!function () {try {u = "function" == typeof setTimeout ? setTimeout : n;} catch (t) {u = n;}try {h = "function" == typeof clearTimeout ? clearTimeout : r;} catch (t) {h = r;}}();var l,d = [],y = !1,m = -1;f.nextTick = function (t) {var e = new Array(arguments.length - 1);if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {e[n - 1] = arguments[n];}d.push(new c(t, e)), 1 !== d.length || y || o(a);}, c.prototype.run = function () {this.fun.apply(null, this.array);}, f.title = "browser", f.browser = !0, f.env = {}, f.argv = [], f.version = "", f.versions = {}, f.on = p, f.addListener = p, f.once = p, f.off = p, f.removeListener = p, f.removeAllListeners = p, f.emit = p, f.prependListener = p, f.prependOnceListener = p, f.listeners = function (t) {return [];}, f.binding = function (t) {throw new Error("process.binding is not supported");}, f.cwd = function () {return "/";}, f.chdir = function (t) {throw new Error("process.chdir is not supported");}, f.umask = function () {return 0;};}, function (t, e, n) {function r(t) {var n,r = 0;for (n in t) {r = (r << 5) - r + t.charCodeAt(n), r |= 0;}return e.colors[Math.abs(r) % e.colors.length];}function o(t) {function n() {if (n.enabled) {var t = n,r = +new Date(),i = r - (o || r);t.diff = i, t.prev = o, t.curr = r, o = r;for (var s = new Array(arguments.length), a = 0; a < s.length; a++) {s[a] = arguments[a];}s[0] = e.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");var c = 0;s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, r) {if ("%%" === n) return n;c++;var o = e.formatters[r];if ("function" == typeof o) {var i = s[c];n = o.call(t, i), s.splice(c, 1), c--;}return n;}), e.formatArgs.call(t, s);var p = n.log || e.log || console.log.bind(console);p.apply(t, s);}}var o;return n.namespace = t, n.enabled = e.enabled(t), n.useColors = e.useColors(), n.color = r(t), n.destroy = i, "function" == typeof e.init && e.init(n), e.instances.push(n), n;}function i() {var t = e.instances.indexOf(this);return t !== -1 && (e.instances.splice(t, 1), !0);}function s(t) {e.save(t), e.names = [], e.skips = [];var n,r = ("string" == typeof t ? t : "").split(/[\s,]+/),o = r.length;for (n = 0; n < o; n++) {r[n] && (t = r[n].replace(/\*/g, ".*?"), "-" === t[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")));}for (n = 0; n < e.instances.length; n++) {var i = e.instances[n];i.enabled = e.enabled(i.namespace);}}function a() {e.enable("");}function c(t) {if ("*" === t[t.length - 1]) return !0;var n, r;for (n = 0, r = e.skips.length; n < r; n++) {if (e.skips[n].test(t)) return !1;}for (n = 0, r = e.names.length; n < r; n++) {if (e.names[n].test(t)) return !0;}return !1;}function p(t) {return t instanceof Error ? t.stack || t.message : t;}e = t.exports = o.debug = o["default"] = o, e.coerce = p, e.disable = a, e.enable = s, e.enabled = c, e.humanize = n(6), e.instances = [], e.names = [], e.skips = [], e.formatters = {};}, function (t, e) {function n(t) {if (t = String(t), !(t.length > 100)) {var e = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);if (e) {var n = parseFloat(e[1]),r = (e[2] || "ms").toLowerCase();switch (r) {case "years":case "year":case "yrs":case "yr":case "y":return n * u;case "days":case "day":case "d":return n * p;case "hours":case "hour":case "hrs":case "hr":case "h":return n * c;case "minutes":case "minute":case "mins":case "min":case "m":return n * a;case "seconds":case "second":case "secs":case "sec":case "s":return n * s;case "milliseconds":case "millisecond":case "msecs":case "msec":case "ms":return n;default:return;}}}}function r(t) {return t >= p ? Math.round(t / p) + "d" : t >= c ? Math.round(t / c) + "h" : t >= a ? Math.round(t / a) + "m" : t >= s ? Math.round(t / s) + "s" : t + "ms";}function o(t) {return i(t, p, "day") || i(t, c, "hour") || i(t, a, "minute") || i(t, s, "second") || t + " ms";}function i(t, e, n) {if (!(t < e)) return t < 1.5 * e ? Math.floor(t / e) + " " + n : Math.ceil(t / e) + " " + n + "s";}var s = 1e3,a = 60 * s,c = 60 * a,p = 24 * c,u = 365.25 * p;t.exports = function (t, e) {e = e || {};var i = typeof t;if ("string" === i && t.length > 0) return n(t);if ("number" === i && isNaN(t) === !1) return e["long"] ? o(t) : r(t);throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t));};}, function (t, e, n) {function r() {}function o(t) {var n = "" + t.type;if (e.BINARY_EVENT !== t.type && e.BINARY_ACK !== t.type || (n += t.attachments + "-"), t.nsp && "/" !== t.nsp && (n += t.nsp + ","), null != t.id && (n += t.id), null != t.data) {var r = i(t.data);if (r === !1) return g;n += r;}return f("encoded %j as %s", t, n), n;}function i(t) {try {return JSON.stringify(t);} catch (e) {return !1;}}function s(t, e) {function n(t) {var n = d.deconstructPacket(t),r = o(n.packet),i = n.buffers;i.unshift(r), e(i);}d.removeBlobs(t, n);}function a() {this.reconstructor = null;}function c(t) {var n = 0,r = { type: Number(t.charAt(0)) };if (null == e.types[r.type]) return h("unknown packet type " + r.type);if (e.BINARY_EVENT === r.type || e.BINARY_ACK === r.type) {for (var o = ""; "-" !== t.charAt(++n) && (o += t.charAt(n), n != t.length);) {;}if (o != Number(o) || "-" !== t.charAt(n)) throw new Error("Illegal attachments");r.attachments = Number(o);}if ("/" === t.charAt(n + 1)) for (r.nsp = ""; ++n;) {var i = t.charAt(n);if ("," === i) break;if (r.nsp += i, n === t.length) break;} else r.nsp = "/";var s = t.charAt(n + 1);if ("" !== s && Number(s) == s) {for (r.id = ""; ++n;) {var i = t.charAt(n);if (null == i || Number(i) != i) {--n;break;}if (r.id += t.charAt(n), n === t.length) break;}r.id = Number(r.id);}if (t.charAt(++n)) {var a = p(t.substr(n)),c = a !== !1 && (r.type === e.ERROR || y(a));if (!c) return h("invalid payload");r.data = a;}return f("decoded %s as %j", t, r), r;}function p(t) {try {return JSON.parse(t);} catch (e) {return !1;}}function u(t) {this.reconPack = t, this.buffers = [];}function h(t) {return { type: e.ERROR, data: "parser error: " + t };}var f = n(3)("socket.io-parser"),l = n(8),d = n(9),y = n(10),m = n(11);e.protocol = 4, e.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], e.CONNECT = 0, e.DISCONNECT = 1, e.EVENT = 2, e.ACK = 3, e.ERROR = 4, e.BINARY_EVENT = 5, e.BINARY_ACK = 6, e.Encoder = r, e.Decoder = a;var g = e.ERROR + '"encode error"';r.prototype.encode = function (t, n) {if (f("encoding packet %j", t), e.BINARY_EVENT === t.type || e.BINARY_ACK === t.type) s(t, n);else {var r = o(t);n([r]);}}, l(a.prototype), a.prototype.add = function (t) {var n;if ("string" == typeof t) n = c(t), e.BINARY_EVENT === n.type || e.BINARY_ACK === n.type ? (this.reconstructor = new u(n), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", n)) : this.emit("decoded", n);else {if (!m(t) && !t.base64) throw new Error("Unknown type: " + t);if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");n = this.reconstructor.takeBinaryData(t), n && (this.reconstructor = null, this.emit("decoded", n));}}, a.prototype.destroy = function () {this.reconstructor && this.reconstructor.finishedReconstruction();}, u.prototype.takeBinaryData = function (t) {if (this.buffers.push(t), this.buffers.length === this.reconPack.attachments) {var e = d.reconstructPacket(this.reconPack, this.buffers);return this.finishedReconstruction(), e;}return null;}, u.prototype.finishedReconstruction = function () {this.reconPack = null, this.buffers = [];};}, function (t, e, n) {function r(t) {if (t) return o(t);}function o(t) {for (var e in r.prototype) {t[e] = r.prototype[e];}return t;}t.exports = r, r.prototype.on = r.prototype.addEventListener = function (t, e) {return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this;}, r.prototype.once = function (t, e) {function n() {this.off(t, n), e.apply(this, arguments);}return n.fn = e, this.on(t, n), this;}, r.prototype.off = r.prototype.removeListener = r.prototype.removeAllListeners = r.prototype.removeEventListener = function (t, e) {if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;var n = this._callbacks["$" + t];if (!n) return this;if (1 == arguments.length) return delete this._callbacks["$" + t], this;for (var r, o = 0; o < n.length; o++) {if (r = n[o], r === e || r.fn === e) {n.splice(o, 1);break;}}return this;}, r.prototype.emit = function (t) {this._callbacks = this._callbacks || {};var e = [].slice.call(arguments, 1),n = this._callbacks["$" + t];if (n) {n = n.slice(0);for (var r = 0, o = n.length; r < o; ++r) {n[r].apply(this, e);}}return this;}, r.prototype.listeners = function (t) {return this._callbacks = this._callbacks || {}, this._callbacks["$" + t] || [];}, r.prototype.hasListeners = function (t) {return !!this.listeners(t).length;};}, function (t, e, n) {function r(t, e) {if (!t) return t;if (s(t)) {var n = { _placeholder: !0, num: e.length };return e.push(t), n;}if (i(t)) {for (var o = new Array(t.length), a = 0; a < t.length; a++) {o[a] = r(t[a], e);}return o;}if ("object" == typeof t && !(t instanceof Date)) {var o = {};for (var c in t) {o[c] = r(t[c], e);}return o;}return t;}function o(t, e) {if (!t) return t;if (t && t._placeholder) return e[t.num];if (i(t)) for (var n = 0; n < t.length; n++) {t[n] = o(t[n], e);} else if ("object" == typeof t) for (var r in t) {t[r] = o(t[r], e);}return t;}var i = n(10),s = n(11),a = Object.prototype.toString,c = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === a.call(Blob),p = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === a.call(File);e.deconstructPacket = function (t) {var e = [],n = t.data,o = t;return o.data = r(n, e), o.attachments = e.length, { packet: o, buffers: e };}, e.reconstructPacket = function (t, e) {return t.data = o(t.data, e), t.attachments = void 0, t;}, e.removeBlobs = function (t, e) {function n(t, a, u) {if (!t) return t;if (c && t instanceof Blob || p && t instanceof File) {r++;var h = new FileReader();h.onload = function () {u ? u[a] = this.result : o = this.result, --r || e(o);}, h.readAsArrayBuffer(t);} else if (i(t)) for (var f = 0; f < t.length; f++) {n(t[f], f, t);} else if ("object" == typeof t && !s(t)) for (var l in t) {n(t[l], l, t);}}var r = 0,o = t;n(o), r || e(o);};}, function (t, e) {var n = {}.toString;t.exports = Array.isArray || function (t) {return "[object Array]" == n.call(t);};}, function (t, e) {function n(t) {return r && Buffer.isBuffer(t) || o && (t instanceof ArrayBuffer || i(t));}t.exports = n;var r = "function" == typeof Buffer && "function" == typeof Buffer.isBuffer,o = "function" == typeof ArrayBuffer,i = function i(t) {return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t.buffer instanceof ArrayBuffer;};}, function (t, e, n) {"use strict";function r(t, e) {if (!(this instanceof r)) return new r(t, e);t && "object" === ("undefined" == typeof t ? "undefined" : o(t)) && (e = t, t = void 0), e = e || {}, e.path = e.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = e, this.reconnection(e.reconnection !== !1), this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0), this.reconnectionDelay(e.reconnectionDelay || 1e3), this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3), this.randomizationFactor(e.randomizationFactor || .5), this.backoff = new l({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }), this.timeout(null == e.timeout ? 2e4 : e.timeout), this.readyState = "closed", this.uri = t, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = [];var n = e.parser || c;this.encoder = new n.Encoder(), this.decoder = new n.Decoder(), this.autoConnect = e.autoConnect !== !1, this.autoConnect && this.open();}var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {return typeof t;} : function (t) {return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;},i = n(13),s = n(36),a = n(8),c = n(7),p = n(38),u = n(39),h = n(3)("socket.io-client:manager"),f = n(35),l = n(40),d = Object.prototype.hasOwnProperty;t.exports = r, r.prototype.emitAll = function () {this.emit.apply(this, arguments);for (var t in this.nsps) {d.call(this.nsps, t) && this.nsps[t].emit.apply(this.nsps[t], arguments);}}, r.prototype.updateSocketIds = function () {for (var t in this.nsps) {d.call(this.nsps, t) && (this.nsps[t].id = this.generateId(t));}}, r.prototype.generateId = function (t) {return ("/" === t ? "" : t + "#") + this.engine.id;}, a(r.prototype), r.prototype.reconnection = function (t) {return arguments.length ? (this._reconnection = !!t, this) : this._reconnection;}, r.prototype.reconnectionAttempts = function (t) {return arguments.length ? (this._reconnectionAttempts = t, this) : this._reconnectionAttempts;}, r.prototype.reconnectionDelay = function (t) {return arguments.length ? (this._reconnectionDelay = t, this.backoff && this.backoff.setMin(t), this) : this._reconnectionDelay;}, r.prototype.randomizationFactor = function (t) {return arguments.length ? (this._randomizationFactor = t, this.backoff && this.backoff.setJitter(t), this) : this._randomizationFactor;}, r.prototype.reconnectionDelayMax = function (t) {return arguments.length ? (this._reconnectionDelayMax = t, this.backoff && this.backoff.setMax(t), this) : this._reconnectionDelayMax;}, r.prototype.timeout = function (t) {return arguments.length ? (this._timeout = t, this) : this._timeout;}, r.prototype.maybeReconnectOnOpen = function () {!this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();}, r.prototype.open = r.prototype.connect = function (t, e) {if (h("readyState %s", this.readyState), ~this.readyState.indexOf("open")) return this;h("opening %s", this.uri), this.engine = i(this.uri, this.opts);var n = this.engine,r = this;this.readyState = "opening", this.skipReconnect = !1;var o = p(n, "open", function () {r.onopen(), t && t();}),s = p(n, "error", function (e) {if (h("connect_error"), r.cleanup(), r.readyState = "closed", r.emitAll("connect_error", e), t) {var n = new Error("Connection error");n.data = e, t(n);} else r.maybeReconnectOnOpen();});if (!1 !== this._timeout) {var a = this._timeout;h("connect attempt will timeout after %d", a);var c = setTimeout(function () {h("connect attempt timed out after %d", a), o.destroy(), n.close(), n.emit("error", "timeout"), r.emitAll("connect_timeout", a);}, a);this.subs.push({ destroy: function destroy() {clearTimeout(c);} });}return this.subs.push(o), this.subs.push(s), this;}, r.prototype.onopen = function () {h("open"), this.cleanup(), this.readyState = "open", this.emit("open");var t = this.engine;this.subs.push(p(t, "data", u(this, "ondata"))), this.subs.push(p(t, "ping", u(this, "onping"))), this.subs.push(p(t, "pong", u(this, "onpong"))), this.subs.push(p(t, "error", u(this, "onerror"))), this.subs.push(p(t, "close", u(this, "onclose"))), this.subs.push(p(this.decoder, "decoded", u(this, "ondecoded")));}, r.prototype.onping = function () {this.lastPing = new Date(), this.emitAll("ping");}, r.prototype.onpong = function () {this.emitAll("pong", new Date() - this.lastPing);}, r.prototype.ondata = function (t) {this.decoder.add(t);}, r.prototype.ondecoded = function (t) {this.emit("packet", t);}, r.prototype.onerror = function (t) {h("error", t), this.emitAll("error", t);}, r.prototype.socket = function (t, e) {function n() {~f(o.connecting, r) || o.connecting.push(r);}var r = this.nsps[t];if (!r) {r = new s(this, t, e), this.nsps[t] = r;var o = this;r.on("connecting", n), r.on("connect", function () {r.id = o.generateId(t);}), this.autoConnect && n();}return r;}, r.prototype.destroy = function (t) {var e = f(this.connecting, t);~e && this.connecting.splice(e, 1), this.connecting.length || this.close();}, r.prototype.packet = function (t) {h("writing packet %j", t);var e = this;t.query && 0 === t.type && (t.nsp += "?" + t.query), e.encoding ? e.packetBuffer.push(t) : (e.encoding = !0, this.encoder.encode(t, function (n) {for (var r = 0; r < n.length; r++) {e.engine.write(n[r], t.options);}e.encoding = !1, e.processPacketQueue();}));}, r.prototype.processPacketQueue = function () {if (this.packetBuffer.length > 0 && !this.encoding) {var t = this.packetBuffer.shift();this.packet(t);}}, r.prototype.cleanup = function () {h("cleanup");for (var t = this.subs.length, e = 0; e < t; e++) {var n = this.subs.shift();n.destroy();}this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy();}, r.prototype.close = r.prototype.disconnect = function () {h("disconnect"), this.skipReconnect = !0, this.reconnecting = !1, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close();}, r.prototype.onclose = function (t) {h("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", t), this._reconnection && !this.skipReconnect && this.reconnect();}, r.prototype.reconnect = function () {if (this.reconnecting || this.skipReconnect) return this;var t = this;if (this.backoff.attempts >= this._reconnectionAttempts) h("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1;else {var e = this.backoff.duration();h("will wait %dms before reconnect attempt", e), this.reconnecting = !0;var n = setTimeout(function () {t.skipReconnect || (h("attempting reconnect"), t.emitAll("reconnect_attempt", t.backoff.attempts), t.emitAll("reconnecting", t.backoff.attempts), t.skipReconnect || t.open(function (e) {e ? (h("reconnect attempt error"), t.reconnecting = !1, t.reconnect(), t.emitAll("reconnect_error", e.data)) : (h("reconnect success"), t.onreconnect());}));}, e);this.subs.push({ destroy: function destroy() {clearTimeout(n);} });}}, r.prototype.onreconnect = function () {var t = this.backoff.attempts;this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", t);};}, function (t, e, n) {t.exports = n(14), t.exports.parser = n(21);}, function (t, e, n) {function r(t, e) {return this instanceof r ? (e = e || {}, t && "object" == typeof t && (e = t, t = null), t ? (t = u(t), e.hostname = t.host, e.secure = "https" === t.protocol || "wss" === t.protocol, e.port = t.port, t.query && (e.query = t.query)) : e.host && (e.hostname = u(e.host).host), this.secure = null != e.secure ? e.secure : "undefined" != typeof location && "https:" === location.protocol, e.hostname && !e.port && (e.port = this.secure ? "443" : "80"), this.agent = e.agent || !1, this.hostname = e.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = e.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = e.query || {}, "string" == typeof this.query && (this.query = h.decode(this.query)), this.upgrade = !1 !== e.upgrade, this.path = (e.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!e.forceJSONP, this.jsonp = !1 !== e.jsonp, this.forceBase64 = !!e.forceBase64, this.enablesXDR = !!e.enablesXDR, this.timestampParam = e.timestampParam || "t", this.timestampRequests = e.timestampRequests, this.transports = e.transports || ["polling", "websocket"], this.transportOptions = e.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = e.policyPort || 843, this.rememberUpgrade = e.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = e.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== e.perMessageDeflate && (e.perMessageDeflate || {}), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = e.pfx || null, this.key = e.key || null, this.passphrase = e.passphrase || null, this.cert = e.cert || null, this.ca = e.ca || null, this.ciphers = e.ciphers || null, this.rejectUnauthorized = void 0 === e.rejectUnauthorized || e.rejectUnauthorized, this.forceNode = !!e.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (e.extraHeaders && Object.keys(e.extraHeaders).length > 0 && (this.extraHeaders = e.extraHeaders), e.localAddress && (this.localAddress = e.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, void this.open()) : new r(t, e);}function o(t) {var e = {};for (var n in t) {t.hasOwnProperty(n) && (e[n] = t[n]);}return e;}var i = n(15),s = n(8),a = n(3)("engine.io-client:socket"),c = n(35),p = n(21),u = n(2),h = n(29);t.exports = r, r.priorWebsocketSuccess = !1, s(r.prototype), r.protocol = p.protocol, r.Socket = r, r.Transport = n(20), r.transports = n(15), r.parser = n(21), r.prototype.createTransport = function (t) {a('creating transport "%s"', t);var e = o(this.query);e.EIO = p.protocol, e.transport = t;var n = this.transportOptions[t] || {};this.id && (e.sid = this.id);var r = new i[t]({ query: e, socket: this, agent: n.agent || this.agent, hostname: n.hostname || this.hostname, port: n.port || this.port, secure: n.secure || this.secure, path: n.path || this.path, forceJSONP: n.forceJSONP || this.forceJSONP, jsonp: n.jsonp || this.jsonp, forceBase64: n.forceBase64 || this.forceBase64, enablesXDR: n.enablesXDR || this.enablesXDR, timestampRequests: n.timestampRequests || this.timestampRequests, timestampParam: n.timestampParam || this.timestampParam, policyPort: n.policyPort || this.policyPort, pfx: n.pfx || this.pfx, key: n.key || this.key, passphrase: n.passphrase || this.passphrase, cert: n.cert || this.cert, ca: n.ca || this.ca, ciphers: n.ciphers || this.ciphers, rejectUnauthorized: n.rejectUnauthorized || this.rejectUnauthorized, perMessageDeflate: n.perMessageDeflate || this.perMessageDeflate, extraHeaders: n.extraHeaders || this.extraHeaders, forceNode: n.forceNode || this.forceNode, localAddress: n.localAddress || this.localAddress, requestTimeout: n.requestTimeout || this.requestTimeout, protocols: n.protocols || void 0, isReactNative: this.isReactNative });return r;}, r.prototype.open = function () {var t;if (this.rememberUpgrade && r.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) t = "websocket";else {if (0 === this.transports.length) {var e = this;return void setTimeout(function () {e.emit("error", "No transports available");}, 0);}t = this.transports[0];}this.readyState = "opening";try {t = this.createTransport(t);} catch (n) {return this.transports.shift(), void this.open();}t.open(), this.setTransport(t);}, r.prototype.setTransport = function (t) {a("setting transport %s", t.name);var e = this;this.transport && (a("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = t, t.on("drain", function () {e.onDrain();}).on("packet", function (t) {e.onPacket(t);}).on("error", function (t) {e.onError(t);}).on("close", function () {e.onClose("transport close");});}, r.prototype.probe = function (t) {function e() {if (f.onlyBinaryUpgrades) {var e = !this.supportsBinary && f.transport.supportsBinary;h = h || e;}h || (a('probe transport "%s" opened', t), u.send([{ type: "ping", data: "probe" }]), u.once("packet", function (e) {if (!h) if ("pong" === e.type && "probe" === e.data) {if (a('probe transport "%s" pong', t), f.upgrading = !0, f.emit("upgrading", u), !u) return;r.priorWebsocketSuccess = "websocket" === u.name, a('pausing current transport "%s"', f.transport.name), f.transport.pause(function () {h || "closed" !== f.readyState && (a("changing transport and sending upgrade packet"), p(), f.setTransport(u), u.send([{ type: "upgrade" }]), f.emit("upgrade", u), u = null, f.upgrading = !1, f.flush());});} else {a('probe transport "%s" failed', t);var n = new Error("probe error");n.transport = u.name, f.emit("upgradeError", n);}}));}function n() {h || (h = !0, p(), u.close(), u = null);}function o(e) {var r = new Error("probe error: " + e);r.transport = u.name, n(), a('probe transport "%s" failed because of error: %s', t, e), f.emit("upgradeError", r);}function i() {o("transport closed");}function s() {o("socket closed");}function c(t) {u && t.name !== u.name && (a('"%s" works - aborting "%s"', t.name, u.name), n());}function p() {u.removeListener("open", e), u.removeListener("error", o), u.removeListener("close", i), f.removeListener("close", s), f.removeListener("upgrading", c);}a('probing transport "%s"', t);var u = this.createTransport(t, { probe: 1 }),h = !1,f = this;r.priorWebsocketSuccess = !1, u.once("open", e), u.once("error", o), u.once("close", i), this.once("close", s), this.once("upgrading", c), u.open();}, r.prototype.onOpen = function () {if (a("socket open"), this.readyState = "open", r.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause) {a("starting upgrade probes");for (var t = 0, e = this.upgrades.length; t < e; t++) {this.probe(this.upgrades[t]);}}}, r.prototype.onPacket = function (t) {if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (a('socket receive: type "%s", data "%s"', t.type, t.data), this.emit("packet", t), this.emit("heartbeat"), t.type) {case "open":this.onHandshake(JSON.parse(t.data));break;case "pong":this.setPing(), this.emit("pong");break;case "error":var e = new Error("server error");e.code = t.data, this.onError(e);break;case "message":this.emit("data", t.data), this.emit("message", t.data);} else a('packet received with socket readyState "%s"', this.readyState);}, r.prototype.onHandshake = function (t) {this.emit("handshake", t), this.id = t.sid, this.transport.query.sid = t.sid, this.upgrades = this.filterUpgrades(t.upgrades), this.pingInterval = t.pingInterval, this.pingTimeout = t.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));}, r.prototype.onHeartbeat = function (t) {clearTimeout(this.pingTimeoutTimer);var e = this;e.pingTimeoutTimer = setTimeout(function () {"closed" !== e.readyState && e.onClose("ping timeout");}, t || e.pingInterval + e.pingTimeout);}, r.prototype.setPing = function () {var t = this;clearTimeout(t.pingIntervalTimer), t.pingIntervalTimer = setTimeout(function () {a("writing ping packet - expecting pong within %sms", t.pingTimeout), t.ping(), t.onHeartbeat(t.pingTimeout);}, t.pingInterval);}, r.prototype.ping = function () {var t = this;this.sendPacket("ping", function () {t.emit("ping");});}, r.prototype.onDrain = function () {this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush();}, r.prototype.flush = function () {"closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (a("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));}, r.prototype.write = r.prototype.send = function (t, e, n) {return this.sendPacket("message", t, e, n), this;}, r.prototype.sendPacket = function (t, e, n, r) {if ("function" == typeof e && (r = e, e = void 0), "function" == typeof n && (r = n, n = null), "closing" !== this.readyState && "closed" !== this.readyState) {n = n || {}, n.compress = !1 !== n.compress;var o = { type: t, data: e, options: n };this.emit("packetCreate", o), this.writeBuffer.push(o), r && this.once("flush", r), this.flush();}}, r.prototype.close = function () {function t() {r.onClose("forced close"), a("socket closing - telling transport to close"), r.transport.close();}function e() {r.removeListener("upgrade", e), r.removeListener("upgradeError", e), t();}function n() {r.once("upgrade", e), r.once("upgradeError", e);}if ("opening" === this.readyState || "open" === this.readyState) {this.readyState = "closing";var r = this;this.writeBuffer.length ? this.once("drain", function () {this.upgrading ? n() : t();}) : this.upgrading ? n() : t();}return this;}, r.prototype.onError = function (t) {a("socket error %j", t), r.priorWebsocketSuccess = !1, this.emit("error", t), this.onClose("transport error", t);}, r.prototype.onClose = function (t, e) {if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {a('socket close with reason: "%s"', t);var n = this;clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", t, e), n.writeBuffer = [], n.prevBufferLen = 0;}}, r.prototype.filterUpgrades = function (t) {for (var e = [], n = 0, r = t.length; n < r; n++) {~c(this.transports, t[n]) && e.push(t[n]);}return e;};}, function (t, e, n) {function r(t) {var e,n = !1,r = !1,a = !1 !== t.jsonp;
      if ("undefined" != typeof location) {var c = "https:" === location.protocol,p = location.port;p || (p = c ? 443 : 80), n = t.hostname !== location.hostname || p !== t.port, r = t.secure !== c;}if (t.xdomain = n, t.xscheme = r, e = new o(t), "open" in e && !t.forceJSONP) return new i(t);if (!a) throw new Error("JSONP disabled");return new s(t);}var o = n(16),i = n(18),s = n(32),a = n(33);e.polling = r, e.websocket = a;}, function (t, e, n) {var r = n(17);t.exports = function (t) {var e = t.xdomain,n = t.xscheme,o = t.enablesXDR;try {if ("undefined" != typeof XMLHttpRequest && (!e || r)) return new XMLHttpRequest();} catch (i) {}try {if ("undefined" != typeof XDomainRequest && !n && o) return new XDomainRequest();} catch (i) {}if (!e) try {return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");} catch (i) {}};}, function (t, e) {try {t.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();} catch (n) {t.exports = !1;}}, function (t, e, n) {function r() {}function o(t) {if (c.call(this, t), this.requestTimeout = t.requestTimeout, this.extraHeaders = t.extraHeaders, "undefined" != typeof location) {var e = "https:" === location.protocol,n = location.port;n || (n = e ? 443 : 80), this.xd = "undefined" != typeof location && t.hostname !== location.hostname || n !== t.port, this.xs = t.secure !== e;}}function i(t) {this.method = t.method || "GET", this.uri = t.uri, this.xd = !!t.xd, this.xs = !!t.xs, this.async = !1 !== t.async, this.data = void 0 !== t.data ? t.data : null, this.agent = t.agent, this.isBinary = t.isBinary, this.supportsBinary = t.supportsBinary, this.enablesXDR = t.enablesXDR, this.requestTimeout = t.requestTimeout, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.extraHeaders = t.extraHeaders, this.create();}function s() {for (var t in i.requests) {i.requests.hasOwnProperty(t) && i.requests[t].abort();}}var a = n(16),c = n(19),p = n(8),u = n(30),h = n(3)("engine.io-client:polling-xhr");if (t.exports = o, t.exports.Request = i, u(o, c), o.prototype.supportsBinary = !0, o.prototype.request = function (t) {return t = t || {}, t.uri = this.uri(), t.xd = this.xd, t.xs = this.xs, t.agent = this.agent || !1, t.supportsBinary = this.supportsBinary, t.enablesXDR = this.enablesXDR, t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized, t.requestTimeout = this.requestTimeout, t.extraHeaders = this.extraHeaders, new i(t);}, o.prototype.doWrite = function (t, e) {var n = "string" != typeof t && void 0 !== t,r = this.request({ method: "POST", data: t, isBinary: n }),o = this;r.on("success", e), r.on("error", function (t) {o.onError("xhr post error", t);}), this.sendXhr = r;}, o.prototype.doPoll = function () {h("xhr poll");var t = this.request(),e = this;t.on("data", function (t) {e.onData(t);}), t.on("error", function (t) {e.onError("xhr poll error", t);}), this.pollXhr = t;}, p(i.prototype), i.prototype.create = function () {var t = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized;var e = this.xhr = new a(t),n = this;try {h("xhr open %s: %s", this.method, this.uri), e.open(this.method, this.uri, this.async);try {if (this.extraHeaders) {e.setDisableHeaderCheck && e.setDisableHeaderCheck(!0);for (var r in this.extraHeaders) {this.extraHeaders.hasOwnProperty(r) && e.setRequestHeader(r, this.extraHeaders[r]);}}} catch (o) {}if ("POST" === this.method) try {this.isBinary ? e.setRequestHeader("Content-type", "application/octet-stream") : e.setRequestHeader("Content-type", "text/plain;charset=UTF-8");} catch (o) {}try {e.setRequestHeader("Accept", "*/*");} catch (o) {}"withCredentials" in e && (e.withCredentials = !0), this.requestTimeout && (e.timeout = this.requestTimeout), this.hasXDR() ? (e.onload = function () {n.onLoad();}, e.onerror = function () {n.onError(e.responseText);}) : e.onreadystatechange = function () {if (2 === e.readyState) try {var t = e.getResponseHeader("Content-Type");n.supportsBinary && "application/octet-stream" === t && (e.responseType = "arraybuffer");} catch (r) {}4 === e.readyState && (200 === e.status || 1223 === e.status ? n.onLoad() : setTimeout(function () {n.onError(e.status);}, 0));}, h("xhr data %s", this.data), e.send(this.data);} catch (o) {return void setTimeout(function () {n.onError(o);}, 0);}"undefined" != typeof document && (this.index = i.requestsCount++, i.requests[this.index] = this);}, i.prototype.onSuccess = function () {this.emit("success"), this.cleanup();}, i.prototype.onData = function (t) {this.emit("data", t), this.onSuccess();}, i.prototype.onError = function (t) {this.emit("error", t), this.cleanup(!0);}, i.prototype.cleanup = function (t) {if ("undefined" != typeof this.xhr && null !== this.xhr) {if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = r : this.xhr.onreadystatechange = r, t) try {this.xhr.abort();} catch (e) {}"undefined" != typeof document && delete i.requests[this.index], this.xhr = null;}}, i.prototype.onLoad = function () {var t;try {var e;try {e = this.xhr.getResponseHeader("Content-Type");} catch (n) {}t = "application/octet-stream" === e ? this.xhr.response || this.xhr.responseText : this.xhr.responseText;} catch (n) {this.onError(n);}null != t && this.onData(t);}, i.prototype.hasXDR = function () {return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR;}, i.prototype.abort = function () {this.cleanup();}, i.requestsCount = 0, i.requests = {}, "undefined" != typeof document) if ("function" == typeof attachEvent) attachEvent("onunload", s);else if ("function" == typeof addEventListener) {var f = "onpagehide" in self ? "pagehide" : "unload";addEventListener(f, s, !1);}}, function (t, e, n) {function r(t) {var e = t && t.forceBase64;u && !e || (this.supportsBinary = !1), o.call(this, t);}var o = n(20),i = n(29),s = n(21),a = n(30),c = n(31),p = n(3)("engine.io-client:polling");t.exports = r;var u = function () {var t = n(16),e = new t({ xdomain: !1 });return null != e.responseType;}();a(r, o), r.prototype.name = "polling", r.prototype.doOpen = function () {this.poll();}, r.prototype.pause = function (t) {function e() {p("paused"), n.readyState = "paused", t();}var n = this;if (this.readyState = "pausing", this.polling || !this.writable) {var r = 0;this.polling && (p("we are currently polling - waiting to pause"), r++, this.once("pollComplete", function () {p("pre-pause polling complete"), --r || e();})), this.writable || (p("we are currently writing - waiting to pause"), r++, this.once("drain", function () {p("pre-pause writing complete"), --r || e();}));} else e();}, r.prototype.poll = function () {p("polling"), this.polling = !0, this.doPoll(), this.emit("poll");}, r.prototype.onData = function (t) {var e = this;p("polling got data %s", t);var n = function n(t, _n, r) {return "opening" === e.readyState && e.onOpen(), "close" === t.type ? (e.onClose(), !1) : void e.onPacket(t);};s.decodePayload(t, this.socket.binaryType, n), "closed" !== this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" === this.readyState ? this.poll() : p('ignoring poll - transport state "%s"', this.readyState));}, r.prototype.doClose = function () {function t() {p("writing close packet"), e.write([{ type: "close" }]);}var e = this;"open" === this.readyState ? (p("transport open - closing"), t()) : (p("transport not open - deferring close"), this.once("open", t));}, r.prototype.write = function (t) {var e = this;this.writable = !1;var n = function n() {e.writable = !0, e.emit("drain");};s.encodePayload(t, this.supportsBinary, function (t) {e.doWrite(t, n);});}, r.prototype.uri = function () {var t = this.query || {},e = this.secure ? "https" : "http",n = "";!1 !== this.timestampRequests && (t[this.timestampParam] = c()), this.supportsBinary || t.sid || (t.b64 = 1), t = i.encode(t), this.port && ("https" === e && 443 !== Number(this.port) || "http" === e && 80 !== Number(this.port)) && (n = ":" + this.port), t.length && (t = "?" + t);var r = this.hostname.indexOf(":") !== -1;return e + "://" + (r ? "[" + this.hostname + "]" : this.hostname) + n + this.path + t;};}, function (t, e, n) {function r(t) {this.path = t.path, this.hostname = t.hostname, this.port = t.port, this.secure = t.secure, this.query = t.query, this.timestampParam = t.timestampParam, this.timestampRequests = t.timestampRequests, this.readyState = "", this.agent = t.agent || !1, this.socket = t.socket, this.enablesXDR = t.enablesXDR, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.forceNode = t.forceNode, this.isReactNative = t.isReactNative, this.extraHeaders = t.extraHeaders, this.localAddress = t.localAddress;}var o = n(21),i = n(8);t.exports = r, i(r.prototype), r.prototype.onError = function (t, e) {var n = new Error(t);return n.type = "TransportError", n.description = e, this.emit("error", n), this;}, r.prototype.open = function () {return "closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this;}, r.prototype.close = function () {return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this;}, r.prototype.send = function (t) {if ("open" !== this.readyState) throw new Error("Transport not open");this.write(t);}, r.prototype.onOpen = function () {this.readyState = "open", this.writable = !0, this.emit("open");}, r.prototype.onData = function (t) {var e = o.decodePacket(t, this.socket.binaryType);this.onPacket(e);}, r.prototype.onPacket = function (t) {this.emit("packet", t);}, r.prototype.onClose = function () {this.readyState = "closed", this.emit("close");};}, function (t, e, n) {function r(t, n) {var r = "b" + e.packets[t.type] + t.data.data;return n(r);}function o(t, n, r) {if (!n) return e.encodeBase64Packet(t, r);var o = t.data,i = new Uint8Array(o),s = new Uint8Array(1 + o.byteLength);s[0] = v[t.type];for (var a = 0; a < i.length; a++) {s[a + 1] = i[a];}return r(s.buffer);}function i(t, n, r) {if (!n) return e.encodeBase64Packet(t, r);var o = new FileReader();return o.onload = function () {e.encodePacket({ type: t.type, data: o.result }, n, !0, r);}, o.readAsArrayBuffer(t.data);}function s(t, n, r) {if (!n) return e.encodeBase64Packet(t, r);if (g) return i(t, n, r);var o = new Uint8Array(1);o[0] = v[t.type];var s = new k([o.buffer, t.data]);return r(s);}function a(t) {try {t = d.decode(t, { strict: !1 });} catch (e) {return !1;}return t;}function c(t, e, n) {for (var r = new Array(t.length), o = l(t.length, n), i = function i(t, n, o) {e(n, function (e, n) {r[t] = n, o(e, r);});}, s = 0; s < t.length; s++) {i(s, t[s], o);}}var p,u = n(22),h = n(23),f = n(24),l = n(25),d = n(26);"undefined" != typeof ArrayBuffer && (p = n(27));var y = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent),m = "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent),g = y || m;e.protocol = 3;var v = e.packets = { open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6 },b = u(v),w = { type: "error", data: "parser error" },k = n(28);e.encodePacket = function (t, e, n, i) {"function" == typeof e && (i = e, e = !1), "function" == typeof n && (i = n, n = null);var a = void 0 === t.data ? void 0 : t.data.buffer || t.data;if ("undefined" != typeof ArrayBuffer && a instanceof ArrayBuffer) return o(t, e, i);if ("undefined" != typeof k && a instanceof k) return s(t, e, i);if (a && a.base64) return r(t, i);var c = v[t.type];return void 0 !== t.data && (c += n ? d.encode(String(t.data), { strict: !1 }) : String(t.data)), i("" + c);}, e.encodeBase64Packet = function (t, n) {var r = "b" + e.packets[t.type];if ("undefined" != typeof k && t.data instanceof k) {var o = new FileReader();return o.onload = function () {var t = o.result.split(",")[1];n(r + t);}, o.readAsDataURL(t.data);}var i;try {i = String.fromCharCode.apply(null, new Uint8Array(t.data));} catch (s) {for (var a = new Uint8Array(t.data), c = new Array(a.length), p = 0; p < a.length; p++) {c[p] = a[p];}i = String.fromCharCode.apply(null, c);}return r += btoa(i), n(r);}, e.decodePacket = function (t, n, r) {if (void 0 === t) return w;if ("string" == typeof t) {if ("b" === t.charAt(0)) return e.decodeBase64Packet(t.substr(1), n);if (r && (t = a(t), t === !1)) return w;var o = t.charAt(0);return Number(o) == o && b[o] ? t.length > 1 ? { type: b[o], data: t.substring(1) } : { type: b[o] } : w;}var i = new Uint8Array(t),o = i[0],s = f(t, 1);return k && "blob" === n && (s = new k([s])), { type: b[o], data: s };}, e.decodeBase64Packet = function (t, e) {var n = b[t.charAt(0)];if (!p) return { type: n, data: { base64: !0, data: t.substr(1) } };var r = p.decode(t.substr(1));return "blob" === e && k && (r = new k([r])), { type: n, data: r };}, e.encodePayload = function (t, n, r) {function o(t) {return t.length + ":" + t;}function i(t, r) {e.encodePacket(t, !!s && n, !1, function (t) {r(null, o(t));});}"function" == typeof n && (r = n, n = null);var s = h(t);return n && s ? k && !g ? e.encodePayloadAsBlob(t, r) : e.encodePayloadAsArrayBuffer(t, r) : t.length ? void c(t, i, function (t, e) {return r(e.join(""));}) : r("0:");}, e.decodePayload = function (t, n, r) {if ("string" != typeof t) return e.decodePayloadAsBinary(t, n, r);"function" == typeof n && (r = n, n = null);var o;if ("" === t) return r(w, 0, 1);for (var i, s, a = "", c = 0, p = t.length; c < p; c++) {var u = t.charAt(c);if (":" === u) {if ("" === a || a != (i = Number(a))) return r(w, 0, 1);if (s = t.substr(c + 1, i), a != s.length) return r(w, 0, 1);if (s.length) {if (o = e.decodePacket(s, n, !1), w.type === o.type && w.data === o.data) return r(w, 0, 1);var h = r(o, c + i, p);if (!1 === h) return;}c += i, a = "";} else a += u;}return "" !== a ? r(w, 0, 1) : void 0;}, e.encodePayloadAsArrayBuffer = function (t, n) {function r(t, n) {e.encodePacket(t, !0, !0, function (t) {return n(null, t);});}return t.length ? void c(t, r, function (t, e) {var r = e.reduce(function (t, e) {var n;return n = "string" == typeof e ? e.length : e.byteLength, t + n.toString().length + n + 2;}, 0),o = new Uint8Array(r),i = 0;return e.forEach(function (t) {var e = "string" == typeof t,n = t;if (e) {for (var r = new Uint8Array(t.length), s = 0; s < t.length; s++) {r[s] = t.charCodeAt(s);}n = r.buffer;}e ? o[i++] = 0 : o[i++] = 1;for (var a = n.byteLength.toString(), s = 0; s < a.length; s++) {o[i++] = parseInt(a[s]);}o[i++] = 255;for (var r = new Uint8Array(n), s = 0; s < r.length; s++) {o[i++] = r[s];}}), n(o.buffer);}) : n(new ArrayBuffer(0));}, e.encodePayloadAsBlob = function (t, n) {function r(t, n) {e.encodePacket(t, !0, !0, function (t) {var e = new Uint8Array(1);if (e[0] = 1, "string" == typeof t) {for (var r = new Uint8Array(t.length), o = 0; o < t.length; o++) {r[o] = t.charCodeAt(o);}t = r.buffer, e[0] = 0;}for (var i = t instanceof ArrayBuffer ? t.byteLength : t.size, s = i.toString(), a = new Uint8Array(s.length + 1), o = 0; o < s.length; o++) {a[o] = parseInt(s[o]);}if (a[s.length] = 255, k) {var c = new k([e.buffer, a.buffer, t]);n(null, c);}});}c(t, r, function (t, e) {return n(new k(e));});}, e.decodePayloadAsBinary = function (t, n, r) {"function" == typeof n && (r = n, n = null);for (var o = t, i = []; o.byteLength > 0;) {for (var s = new Uint8Array(o), a = 0 === s[0], c = "", p = 1; 255 !== s[p]; p++) {if (c.length > 310) return r(w, 0, 1);c += s[p];}o = f(o, 2 + c.length), c = parseInt(c);var u = f(o, 0, c);if (a) try {u = String.fromCharCode.apply(null, new Uint8Array(u));} catch (h) {var l = new Uint8Array(u);u = "";for (var p = 0; p < l.length; p++) {u += String.fromCharCode(l[p]);}}i.push(u), o = f(o, c);}var d = i.length;i.forEach(function (t, o) {r(e.decodePacket(t, n, !0), o, d);});};}, function (t, e) {t.exports = Object.keys || function (t) {var e = [],n = Object.prototype.hasOwnProperty;for (var r in t) {n.call(t, r) && e.push(r);}return e;};}, function (t, e, n) {function r(t) {if (!t || "object" != typeof t) return !1;if (o(t)) {for (var e = 0, n = t.length; e < n; e++) {if (r(t[e])) return !0;}return !1;}if ("function" == typeof Buffer && Buffer.isBuffer && Buffer.isBuffer(t) || "function" == typeof ArrayBuffer && t instanceof ArrayBuffer || s && t instanceof Blob || a && t instanceof File) return !0;if (t.toJSON && "function" == typeof t.toJSON && 1 === arguments.length) return r(t.toJSON(), !0);for (var i in t) {if (Object.prototype.hasOwnProperty.call(t, i) && r(t[i])) return !0;}return !1;}var o = n(10),i = Object.prototype.toString,s = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob),a = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === i.call(File);t.exports = r;}, function (t, e) {t.exports = function (t, e, n) {var r = t.byteLength;if (e = e || 0, n = n || r, t.slice) return t.slice(e, n);if (e < 0 && (e += r), n < 0 && (n += r), n > r && (n = r), e >= r || e >= n || 0 === r) return new ArrayBuffer(0);for (var o = new Uint8Array(t), i = new Uint8Array(n - e), s = e, a = 0; s < n; s++, a++) {i[a] = o[s];}return i.buffer;};}, function (t, e) {function n(t, e, n) {function o(t, r) {if (o.count <= 0) throw new Error("after called too many times");--o.count, t ? (i = !0, e(t), e = n) : 0 !== o.count || i || e(null, r);}var i = !1;return n = n || r, o.count = t, 0 === t ? e() : o;}function r() {}t.exports = n;}, function (t, e) {function n(t) {for (var e, n, r = [], o = 0, i = t.length; o < i;) {e = t.charCodeAt(o++), e >= 55296 && e <= 56319 && o < i ? (n = t.charCodeAt(o++), 56320 == (64512 & n) ? r.push(((1023 & e) << 10) + (1023 & n) + 65536) : (r.push(e), o--)) : r.push(e);}return r;}function r(t) {for (var e, n = t.length, r = -1, o = ""; ++r < n;) {e = t[r], e > 65535 && (e -= 65536, o += d(e >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), o += d(e);}return o;}function o(t, e) {if (t >= 55296 && t <= 57343) {if (e) throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value");return !1;}return !0;}function i(t, e) {return d(t >> e & 63 | 128);}function s(t, e) {if (0 == (4294967168 & t)) return d(t);var n = "";return 0 == (4294965248 & t) ? n = d(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (o(t, e) || (t = 65533), n = d(t >> 12 & 15 | 224), n += i(t, 6)) : 0 == (4292870144 & t) && (n = d(t >> 18 & 7 | 240), n += i(t, 12), n += i(t, 6)), n += d(63 & t | 128);}function a(t, e) {e = e || {};for (var r, o = !1 !== e.strict, i = n(t), a = i.length, c = -1, p = ""; ++c < a;) {r = i[c], p += s(r, o);}return p;}function c() {if (l >= f) throw Error("Invalid byte index");var t = 255 & h[l];if (l++, 128 == (192 & t)) return 63 & t;throw Error("Invalid continuation byte");}function p(t) {var e, n, r, i, s;if (l > f) throw Error("Invalid byte index");if (l == f) return !1;if (e = 255 & h[l], l++, 0 == (128 & e)) return e;if (192 == (224 & e)) {if (n = c(), s = (31 & e) << 6 | n, s >= 128) return s;throw Error("Invalid continuation byte");}if (224 == (240 & e)) {if (n = c(), r = c(), s = (15 & e) << 12 | n << 6 | r, s >= 2048) return o(s, t) ? s : 65533;throw Error("Invalid continuation byte");}if (240 == (248 & e) && (n = c(), r = c(), i = c(), s = (7 & e) << 18 | n << 12 | r << 6 | i, s >= 65536 && s <= 1114111)) return s;throw Error("Invalid UTF-8 detected");}function u(t, e) {e = e || {};var o = !1 !== e.strict;h = n(t), f = h.length, l = 0;for (var i, s = []; (i = p(o)) !== !1;) {s.push(i);}return r(s);} /*! https://mths.be/utf8js v2.1.2 by @mathias */
    var h,f,l,d = String.fromCharCode;t.exports = { version: "2.1.2", encode: a, decode: u };}, function (t, e) {!function () {"use strict";for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = new Uint8Array(256), r = 0; r < t.length; r++) {n[t.charCodeAt(r)] = r;}e.encode = function (e) {var n,r = new Uint8Array(e),o = r.length,i = "";for (n = 0; n < o; n += 3) {i += t[r[n] >> 2], i += t[(3 & r[n]) << 4 | r[n + 1] >> 4], i += t[(15 & r[n + 1]) << 2 | r[n + 2] >> 6], i += t[63 & r[n + 2]];}return o % 3 === 2 ? i = i.substring(0, i.length - 1) + "=" : o % 3 === 1 && (i = i.substring(0, i.length - 2) + "=="), i;}, e.decode = function (t) {var e,r,o,i,s,a = .75 * t.length,c = t.length,p = 0;"=" === t[t.length - 1] && (a--, "=" === t[t.length - 2] && a--);var u = new ArrayBuffer(a),h = new Uint8Array(u);for (e = 0; e < c; e += 4) {r = n[t.charCodeAt(e)], o = n[t.charCodeAt(e + 1)], i = n[t.charCodeAt(e + 2)], s = n[t.charCodeAt(e + 3)], h[p++] = r << 2 | o >> 4, h[p++] = (15 & o) << 4 | i >> 2, h[p++] = (3 & i) << 6 | 63 & s;}return u;};}();}, function (t, e) {function n(t) {return t.map(function (t) {if (t.buffer instanceof ArrayBuffer) {var e = t.buffer;if (t.byteLength !== e.byteLength) {var n = new Uint8Array(t.byteLength);n.set(new Uint8Array(e, t.byteOffset, t.byteLength)), e = n.buffer;}return e;}return t;});}function r(t, e) {e = e || {};var r = new i();return n(t).forEach(function (t) {r.append(t);}), e.type ? r.getBlob(e.type) : r.getBlob();}function o(t, e) {return new Blob(n(t), e || {});}var i = "undefined" != typeof i ? i : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder,s = function () {try {var t = new Blob(["hi"]);return 2 === t.size;} catch (e) {return !1;}}(),a = s && function () {try {var t = new Blob([new Uint8Array([1, 2])]);return 2 === t.size;} catch (e) {return !1;}}(),c = i && i.prototype.append && i.prototype.getBlob;"undefined" != typeof Blob && (r.prototype = Blob.prototype, o.prototype = Blob.prototype), t.exports = function () {return s ? a ? Blob : o : c ? r : void 0;}();}, function (t, e) {e.encode = function (t) {var e = "";for (var n in t) {t.hasOwnProperty(n) && (e.length && (e += "&"), e += encodeURIComponent(n) + "=" + encodeURIComponent(t[n]));}return e;}, e.decode = function (t) {for (var e = {}, n = t.split("&"), r = 0, o = n.length; r < o; r++) {var i = n[r].split("=");e[decodeURIComponent(i[0])] = decodeURIComponent(i[1]);}return e;};}, function (t, e) {t.exports = function (t, e) {var n = function n() {};n.prototype = e.prototype, t.prototype = new n(), t.prototype.constructor = t;};}, function (t, e) {"use strict";function n(t) {var e = "";do {e = s[t % a] + e, t = Math.floor(t / a);} while (t > 0);return e;}function r(t) {var e = 0;for (u = 0; u < t.length; u++) {e = e * a + c[t.charAt(u)];}return e;}function o() {var t = n(+new Date());return t !== i ? (p = 0, i = t) : t + "." + n(p++);}for (var i, s = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), a = 64, c = {}, p = 0, u = 0; u < a; u++) {c[s[u]] = u;}o.encode = n, o.decode = r, t.exports = o;}, function (t, e, n) {(function (e) {function r() {}function o() {return "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof e ? e : {};}function i(t) {if (s.call(this, t), this.query = this.query || {}, !c) {var e = o();c = e.___eio = e.___eio || [];}this.index = c.length;var n = this;c.push(function (t) {n.onData(t);}), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {n.script && (n.script.onerror = r);}, !1);}var s = n(19),a = n(30);t.exports = i;var c,p = /\n/g,u = /\\n/g;a(i, s), i.prototype.supportsBinary = !1, i.prototype.doClose = function () {this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), s.prototype.doClose.call(this);}, i.prototype.doPoll = function () {var t = this,e = document.createElement("script");this.script && (this.script.parentNode.removeChild(this.script), this.script = null), e.async = !0, e.src = this.uri(), e.onerror = function (e) {t.onError("jsonp poll error", e);};var n = document.getElementsByTagName("script")[0];n ? n.parentNode.insertBefore(e, n) : (document.head || document.body).appendChild(e), this.script = e;var r = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent);r && setTimeout(function () {var t = document.createElement("iframe");document.body.appendChild(t), document.body.removeChild(t);}, 100);}, i.prototype.doWrite = function (t, e) {function n() {r(), e();}function r() {if (o.iframe) try {o.form.removeChild(o.iframe);} catch (t) {o.onError("jsonp polling iframe removal error", t);}try {var e = '<iframe src="javascript:0" name="' + o.iframeId + '">';i = document.createElement(e);} catch (t) {i = document.createElement("iframe"), i.name = o.iframeId, i.src = "javascript:0";}i.id = o.iframeId, o.form.appendChild(i), o.iframe = i;}var o = this;if (!this.form) {var i,s = document.createElement("form"),a = document.createElement("textarea"),c = this.iframeId = "eio_iframe_" + this.index;s.className = "socketio", s.style.position = "absolute", s.style.top = "-1000px", s.style.left = "-1000px", s.target = c, s.method = "POST", s.setAttribute("accept-charset", "utf-8"), a.name = "d", s.appendChild(a), document.body.appendChild(s), this.form = s, this.area = a;}this.form.action = this.uri(), r(), t = t.replace(u, "\\\n"), this.area.value = t.replace(p, "\\n");try {this.form.submit();} catch (h) {}this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {"complete" === o.iframe.readyState && n();} : this.iframe.onload = n;};}).call(e, function () {return this;}());}, function (t, e, n) {function r(t) {var e = t && t.forceBase64;e && (this.supportsBinary = !1), this.perMessageDeflate = t.perMessageDeflate, this.usingBrowserWebSocket = o && !t.forceNode, this.protocols = t.protocols, this.usingBrowserWebSocket || (l = i), s.call(this, t);}var o,i,s = n(20),a = n(21),c = n(29),p = n(30),u = n(31),h = n(3)("engine.io-client:websocket");if ("undefined" == typeof self) try {i = n(34);} catch (f) {} else o = self.WebSocket || self.MozWebSocket;var l = o || i;t.exports = r, p(r, s), r.prototype.name = "websocket", r.prototype.supportsBinary = !0, r.prototype.doOpen = function () {if (this.check()) {var t = this.uri(),e = this.protocols,n = { agent: this.agent, perMessageDeflate: this.perMessageDeflate };n.pfx = this.pfx, n.key = this.key, n.passphrase = this.passphrase, n.cert = this.cert, n.ca = this.ca, n.ciphers = this.ciphers, n.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (n.headers = this.extraHeaders), this.localAddress && (n.localAddress = this.localAddress);try {this.ws = this.usingBrowserWebSocket && !this.isReactNative ? e ? new l(t, e) : new l(t) : new l(t, e, n);} catch (r) {return this.emit("error", r);}void 0 === this.ws.binaryType && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners();}}, r.prototype.addEventListeners = function () {var t = this;this.ws.onopen = function () {t.onOpen();}, this.ws.onclose = function () {t.onClose();}, this.ws.onmessage = function (e) {t.onData(e.data);}, this.ws.onerror = function (e) {t.onError("websocket error", e);};}, r.prototype.write = function (t) {function e() {n.emit("flush"), setTimeout(function () {n.writable = !0, n.emit("drain");}, 0);}var n = this;this.writable = !1;for (var r = t.length, o = 0, i = r; o < i; o++) {!function (t) {a.encodePacket(t, n.supportsBinary, function (o) {if (!n.usingBrowserWebSocket) {var i = {};if (t.options && (i.compress = t.options.compress), n.perMessageDeflate) {var s = "string" == typeof o ? Buffer.byteLength(o) : o.length;s < n.perMessageDeflate.threshold && (i.compress = !1);}}try {n.usingBrowserWebSocket ? n.ws.send(o) : n.ws.send(o, i);} catch (a) {h("websocket closed before onclose event");}--r || e();});}(t[o]);}}, r.prototype.onClose = function () {s.prototype.onClose.call(this);}, r.prototype.doClose = function () {"undefined" != typeof this.ws && this.ws.close();}, r.prototype.uri = function () {var t = this.query || {},e = this.secure ? "wss" : "ws",n = "";this.port && ("wss" === e && 443 !== Number(this.port) || "ws" === e && 80 !== Number(this.port)) && (n = ":" + this.port), this.timestampRequests && (t[this.timestampParam] = u()), this.supportsBinary || (t.b64 = 1), t = c.encode(t), t.length && (t = "?" + t);var r = this.hostname.indexOf(":") !== -1;return e + "://" + (r ? "[" + this.hostname + "]" : this.hostname) + n + this.path + t;}, r.prototype.check = function () {return !(!l || "__initialize" in l && this.name === r.prototype.name);};}, function (t, e) {}, function (t, e) {var n = [].indexOf;t.exports = function (t, e) {if (n) return t.indexOf(e);for (var r = 0; r < t.length; ++r) {if (t[r] === e) return r;}return -1;};}, function (t, e, n) {"use strict";function r(t, e, n) {this.io = t, this.nsp = e, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.flags = {}, n && n.query && (this.query = n.query), this.io.autoConnect && this.open();}var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {return typeof t;} : function (t) {return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;},i = n(7),s = n(8),a = n(37),c = n(38),p = n(39),u = n(3)("socket.io-client:socket"),h = n(29),f = n(23);t.exports = e = r;var l = { connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1 },d = s.prototype.emit;s(r.prototype), r.prototype.subEvents = function () {if (!this.subs) {var t = this.io;this.subs = [c(t, "open", p(this, "onopen")), c(t, "packet", p(this, "onpacket")), c(t, "close", p(this, "onclose"))];}}, r.prototype.open = r.prototype.connect = function () {return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);}, r.prototype.send = function () {var t = a(arguments);return t.unshift("message"), this.emit.apply(this, t), this;}, r.prototype.emit = function (t) {if (l.hasOwnProperty(t)) return d.apply(this, arguments), this;var e = a(arguments),n = { type: (void 0 !== this.flags.binary ? this.flags.binary : f(e)) ? i.BINARY_EVENT : i.EVENT, data: e };return n.options = {}, n.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof e[e.length - 1] && (u("emitting packet with ack id %d", this.ids), this.acks[this.ids] = e.pop(), n.id = this.ids++), this.connected ? this.packet(n) : this.sendBuffer.push(n), this.flags = {}, this;}, r.prototype.packet = function (t) {t.nsp = this.nsp, this.io.packet(t);}, r.prototype.onopen = function () {if (u("transport is open - connecting"), "/" !== this.nsp) if (this.query) {var t = "object" === o(this.query) ? h.encode(this.query) : this.query;u("sending connect packet with query %s", t), this.packet({ type: i.CONNECT, query: t });} else this.packet({ type: i.CONNECT });}, r.prototype.onclose = function (t) {u("close (%s)", t), this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", t);}, r.prototype.onpacket = function (t) {var e = t.nsp === this.nsp,n = t.type === i.ERROR && "/" === t.nsp;if (e || n) switch (t.type) {case i.CONNECT:this.onconnect();break;case i.EVENT:this.onevent(t);break;case i.BINARY_EVENT:this.onevent(t);break;case i.ACK:this.onack(t);break;case i.BINARY_ACK:this.onack(t);break;case i.DISCONNECT:this.ondisconnect();break;case i.ERROR:this.emit("error", t.data);}}, r.prototype.onevent = function (t) {var e = t.data || [];u("emitting event %j", e), null != t.id && (u("attaching ack callback to event"), e.push(this.ack(t.id))), this.connected ? d.apply(this, e) : this.receiveBuffer.push(e);}, r.prototype.ack = function (t) {var e = this,n = !1;return function () {if (!n) {n = !0;var r = a(arguments);u("sending ack %j", r), e.packet({ type: f(r) ? i.BINARY_ACK : i.ACK, id: t, data: r });}};}, r.prototype.onack = function (t) {var e = this.acks[t.id];"function" == typeof e ? (u("calling ack %s with %j", t.id, t.data), e.apply(this, t.data), delete this.acks[t.id]) : u("bad ack %s", t.id);}, r.prototype.onconnect = function () {this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered();}, r.prototype.emitBuffered = function () {var t;for (t = 0; t < this.receiveBuffer.length; t++) {d.apply(this, this.receiveBuffer[t]);}for (this.receiveBuffer = [], t = 0; t < this.sendBuffer.length; t++) {this.packet(this.sendBuffer[t]);}this.sendBuffer = [];}, r.prototype.ondisconnect = function () {u("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect");}, r.prototype.destroy = function () {if (this.subs) {for (var t = 0; t < this.subs.length; t++) {this.subs[t].destroy();}this.subs = null;}this.io.destroy(this);}, r.prototype.close = r.prototype.disconnect = function () {return this.connected && (u("performing disconnect (%s)", this.nsp), this.packet({ type: i.DISCONNECT })), this.destroy(), this.connected && this.onclose("io client disconnect"), this;}, r.prototype.compress = function (t) {return this.flags.compress = t, this;}, r.prototype.binary = function (t) {return this.flags.binary = t, this;};}, function (t, e) {function n(t, e) {var n = [];e = e || 0;for (var r = e || 0; r < t.length; r++) {n[r - e] = t[r];}return n;}t.exports = n;}, function (t, e) {"use strict";function n(t, e, n) {return t.on(e, n), { destroy: function destroy() {t.removeListener(e, n);} };}t.exports = n;}, function (t, e) {var n = [].slice;t.exports = function (t, e) {if ("string" == typeof e && (e = t[e]), "function" != typeof e) throw new Error("bind() requires a function");var r = n.call(arguments, 2);return function () {return e.apply(t, r.concat(n.call(arguments)));};};}, function (t, e) {function n(t) {t = t || {}, this.ms = t.min || 100, this.max = t.max || 1e4, this.factor = t.factor || 2, this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0, this.attempts = 0;}t.exports = n, n.prototype.duration = function () {var t = this.ms * Math.pow(this.factor, this.attempts++);if (this.jitter) {var e = Math.random(),n = Math.floor(e * this.jitter * t);t = 0 == (1 & Math.floor(10 * e)) ? t - n : t + n;}return 0 | Math.min(t, this.max);}, n.prototype.reset = function () {this.attempts = 0;}, n.prototype.setMin = function (t) {this.ms = t;}, n.prototype.setMax = function (t) {this.max = t;}, n.prototype.setJitter = function (t) {this.jitter = t;};}]);});
});
define('static/js/socket.io-client/dist/socket.io.slim.dev.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /*!
               * Socket.IO v2.2.0
               * (c) 2014-2018 Guillermo Rauch
               * Released under the MIT License.
               */
(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === 'object' && typeof module === 'object')
  module.exports = factory();else
  if (typeof define === 'function' && define.amd)
  define([], factory);else
  if (typeof exports === 'object')
  exports["io"] = factory();else

  root["io"] = factory();
})(void 0, function () {
  return (/******/function (modules) {// webpackBootstrap
      /******/ // The module cache
      /******/var installedModules = {};
      /******/
      /******/ // The require function
      /******/function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/if (installedModules[moduleId])
          /******/return installedModules[moduleId].exports;
        /******/
        /******/ // Create a new module (and put it into the cache)
        /******/var module = installedModules[moduleId] = {
          /******/exports: {},
          /******/id: moduleId,
          /******/loaded: false
          /******/ };
        /******/
        /******/ // Execute the module function
        /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ // Flag the module as loaded
        /******/module.loaded = true;
        /******/
        /******/ // Return the exports of the module
        /******/return module.exports;
        /******/}
      /******/
      /******/
      /******/ // expose the modules object (__webpack_modules__)
      /******/__webpack_require__.m = modules;
      /******/
      /******/ // expose the module cache
      /******/__webpack_require__.c = installedModules;
      /******/
      /******/ // __webpack_public_path__
      /******/__webpack_require__.p = "";
      /******/
      /******/ // Load entry module and return exports
      /******/return __webpack_require__(0);
      /******/}(
    /************************************************************************/
    /******/[
    /* 0 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};

      /**
                                                                                                                                                                                                                                                                                 * Module dependencies.
                                                                                                                                                                                                                                                                                 */

      var url = __webpack_require__(1);
      var parser = __webpack_require__(4);
      var Manager = __webpack_require__(9);
      var debug = __webpack_require__(3)('socket.io-client');

      /**
                                                               * Module exports.
                                                               */

      module.exports = exports = lookup;

      /**
                                          * Managers cache.
                                          */

      var cache = exports.managers = {};

      /**
                                          * Looks up an existing `Manager` for multiplexing.
                                          * If the user summons:
                                          *
                                          *   `io('http://localhost/a');`
                                          *   `io('http://localhost/b');`
                                          *
                                          * We reuse the existing instance based on same scheme/port/host,
                                          * and we initialize sockets for each namespace.
                                          *
                                          * @api public
                                          */

      function lookup(uri, opts) {
        if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) === 'object') {
          opts = uri;
          uri = undefined;
        }

        opts = opts || {};

        var parsed = url(uri);
        var source = parsed.source;
        var id = parsed.id;
        var path = parsed.path;
        var sameNamespace = cache[id] && path in cache[id].nsps;
        var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;

        var io;

        if (newConnection) {

          io = Manager(source, opts);
        } else {
          if (!cache[id]) {

            cache[id] = Manager(source, opts);
          }
          io = cache[id];
        }
        if (parsed.query && !opts.query) {
          opts.query = parsed.query;
        }
        return io.socket(parsed.path, opts);
      }

      /**
         * Protocol version.
         *
         * @api public
         */

      exports.protocol = parser.protocol;

      /**
                                           * `connect`.
                                           *
                                           * @param {String} uri
                                           * @api public
                                           */

      exports.connect = lookup;

      /**
                                 * Expose constructors for standalone build.
                                 *
                                 * @api public
                                 */

      exports.Manager = __webpack_require__(9);
      exports.Socket = __webpack_require__(33);

      /***/},
    /* 1 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      /**
                     * Module dependencies.
                     */

      var parseuri = __webpack_require__(2);
      var debug = __webpack_require__(3)('socket.io-client:url');

      /**
                                                                   * Module exports.
                                                                   */

      module.exports = url;

      /**
                             * URL parser.
                             *
                             * @param {String} url
                             * @param {Object} An object meant to mimic window.location.
                             *                 Defaults to window.location.
                             * @api public
                             */

      function url(uri, loc) {
        var obj = uri;

        // default to window.location
        loc = loc || typeof location !== 'undefined' && location;
        if (null == uri) uri = loc.protocol + '//' + loc.host;

        // relative path support
        if ('string' === typeof uri) {
          if ('/' === uri.charAt(0)) {
            if ('/' === uri.charAt(1)) {
              uri = loc.protocol + uri;
            } else {
              uri = loc.host + uri;
            }
          }

          if (!/^(https?|wss?):\/\//.test(uri)) {

            if ('undefined' !== typeof loc) {
              uri = loc.protocol + '//' + uri;
            } else {
              uri = 'https://' + uri;
            }
          }

          // parse

          obj = parseuri(uri);
        }

        // make sure we treat `localhost:80` and `localhost` equally
        if (!obj.port) {
          if (/^(http|ws)$/.test(obj.protocol)) {
            obj.port = '80';
          } else if (/^(http|ws)s$/.test(obj.protocol)) {
            obj.port = '443';
          }
        }

        obj.path = obj.path || '/';

        var ipv6 = obj.host.indexOf(':') !== -1;
        var host = ipv6 ? '[' + obj.host + ']' : obj.host;

        // define unique id
        obj.id = obj.protocol + '://' + host + ':' + obj.port;
        // define href
        obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);

        return obj;
      }

      /***/},
    /* 2 */
    /***/function (module, exports) {

      /**
                                      * Parses an URI
                                      *
                                      * @author Steven Levithan <stevenlevithan.com> (MIT license)
                                      * @api private
                                      */

      var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

      var parts = [
      'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];


      module.exports = function parseuri(str) {
        var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

        if (b != -1 && e != -1) {
          str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
        }

        var m = re.exec(str || ''),
        uri = {},
        i = 14;

        while (i--) {
          uri[parts[i]] = m[i] || '';
        }

        if (b != -1 && e != -1) {
          uri.source = src;
          uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
          uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
          uri.ipv6uri = true;
        }

        return uri;
      };


      /***/},
    /* 3 */
    /***/function (module, exports) {

      "use strict";

      module.exports = function () {
        return function () {};
      };

      /***/},
    /* 4 */
    /***/function (module, exports, __webpack_require__) {


      /**
                                                           * Module dependencies.
                                                           */

      var debug = __webpack_require__(3)('socket.io-parser');
      var Emitter = __webpack_require__(5);
      var binary = __webpack_require__(6);
      var isArray = __webpack_require__(7);
      var isBuf = __webpack_require__(8);

      /**
                                           * Protocol version.
                                           *
                                           * @api public
                                           */

      exports.protocol = 4;

      /**
                             * Packet types.
                             *
                             * @api public
                             */

      exports.types = [
      'CONNECT',
      'DISCONNECT',
      'EVENT',
      'ACK',
      'ERROR',
      'BINARY_EVENT',
      'BINARY_ACK'];


      /**
                      * Packet type `connect`.
                      *
                      * @api public
                      */

      exports.CONNECT = 0;

      /**
                            * Packet type `disconnect`.
                            *
                            * @api public
                            */

      exports.DISCONNECT = 1;

      /**
                               * Packet type `event`.
                               *
                               * @api public
                               */

      exports.EVENT = 2;

      /**
                          * Packet type `ack`.
                          *
                          * @api public
                          */

      exports.ACK = 3;

      /**
                        * Packet type `error`.
                        *
                        * @api public
                        */

      exports.ERROR = 4;

      /**
                          * Packet type 'binary event'
                          *
                          * @api public
                          */

      exports.BINARY_EVENT = 5;

      /**
                                 * Packet type `binary ack`. For acks with binary arguments.
                                 *
                                 * @api public
                                 */

      exports.BINARY_ACK = 6;

      /**
                               * Encoder constructor.
                               *
                               * @api public
                               */

      exports.Encoder = Encoder;

      /**
                                  * Decoder constructor.
                                  *
                                  * @api public
                                  */

      exports.Decoder = Decoder;

      /**
                                  * A socket.io Encoder instance
                                  *
                                  * @api public
                                  */

      function Encoder() {}

      var ERROR_PACKET = exports.ERROR + '"encode error"';

      /**
                                                            * Encode a packet as a single string if non-binary, or as a
                                                            * buffer sequence, depending on packet type.
                                                            *
                                                            * @param {Object} obj - packet object
                                                            * @param {Function} callback - function to handle encodings (likely engine.write)
                                                            * @return Calls callback with Array of encodings
                                                            * @api public
                                                            */

      Encoder.prototype.encode = function (obj, callback) {


        if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
          encodeAsBinary(obj, callback);
        } else {
          var encoding = encodeAsString(obj);
          callback([encoding]);
        }
      };

      /**
          * Encode packet as string.
          *
          * @param {Object} packet
          * @return {String} encoded
          * @api private
          */

      function encodeAsString(obj) {

        // first is type
        var str = '' + obj.type;

        // attachments if we have them
        if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
          str += obj.attachments + '-';
        }

        // if we have a namespace other than `/`
        // we append it followed by a comma `,`
        if (obj.nsp && '/' !== obj.nsp) {
          str += obj.nsp + ',';
        }

        // immediately followed by the id
        if (null != obj.id) {
          str += obj.id;
        }

        // json data
        if (null != obj.data) {
          var payload = tryStringify(obj.data);
          if (payload !== false) {
            str += payload;
          } else {
            return ERROR_PACKET;
          }
        }


        return str;
      }

      function tryStringify(str) {
        try {
          return JSON.stringify(str);
        } catch (e) {
          return false;
        }
      }

      /**
         * Encode packet as 'buffer sequence' by removing blobs, and
         * deconstructing packet into object with placeholders and
         * a list of buffers.
         *
         * @param {Object} packet
         * @return {Buffer} encoded
         * @api private
         */

      function encodeAsBinary(obj, callback) {

        function writeEncoding(bloblessData) {
          var deconstruction = binary.deconstructPacket(bloblessData);
          var pack = encodeAsString(deconstruction.packet);
          var buffers = deconstruction.buffers;

          buffers.unshift(pack); // add packet info to beginning of data list
          callback(buffers); // write all the buffers
        }

        binary.removeBlobs(obj, writeEncoding);
      }

      /**
         * A socket.io Decoder instance
         *
         * @return {Object} decoder
         * @api public
         */

      function Decoder() {
        this.reconstructor = null;
      }

      /**
         * Mix in `Emitter` with Decoder.
         */

      Emitter(Decoder.prototype);

      /**
                                   * Decodes an encoded packet string into packet JSON.
                                   *
                                   * @param {String} obj - encoded packet
                                   * @return {Object} packet
                                   * @api public
                                   */

      Decoder.prototype.add = function (obj) {
        var packet;
        if (typeof obj === 'string') {
          packet = decodeString(obj);
          if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {// binary packet's json
            this.reconstructor = new BinaryReconstructor(packet);

            // no attachments, labeled binary but no binary data to follow
            if (this.reconstructor.reconPack.attachments === 0) {
              this.emit('decoded', packet);
            }
          } else {// non-binary full packet
            this.emit('decoded', packet);
          }
        } else if (isBuf(obj) || obj.base64) {// raw binary data
          if (!this.reconstructor) {
            throw new Error('got binary data when not reconstructing a packet');
          } else {
            packet = this.reconstructor.takeBinaryData(obj);
            if (packet) {// received final buffer
              this.reconstructor = null;
              this.emit('decoded', packet);
            }
          }
        } else {
          throw new Error('Unknown type: ' + obj);
        }
      };

      /**
          * Decode a packet String (JSON data)
          *
          * @param {String} str
          * @return {Object} packet
          * @api private
          */

      function decodeString(str) {
        var i = 0;
        // look up type
        var p = {
          type: Number(str.charAt(0)) };


        if (null == exports.types[p.type]) {
          return error('unknown packet type ' + p.type);
        }

        // look up attachments if type binary
        if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
          var buf = '';
          while (str.charAt(++i) !== '-') {
            buf += str.charAt(i);
            if (i == str.length) break;
          }
          if (buf != Number(buf) || str.charAt(i) !== '-') {
            throw new Error('Illegal attachments');
          }
          p.attachments = Number(buf);
        }

        // look up namespace (if any)
        if ('/' === str.charAt(i + 1)) {
          p.nsp = '';
          while (++i) {
            var c = str.charAt(i);
            if (',' === c) break;
            p.nsp += c;
            if (i === str.length) break;
          }
        } else {
          p.nsp = '/';
        }

        // look up id
        var next = str.charAt(i + 1);
        if ('' !== next && Number(next) == next) {
          p.id = '';
          while (++i) {
            var c = str.charAt(i);
            if (null == c || Number(c) != c) {
              --i;
              break;
            }
            p.id += str.charAt(i);
            if (i === str.length) break;
          }
          p.id = Number(p.id);
        }

        // look up json data
        if (str.charAt(++i)) {
          var payload = tryParse(str.substr(i));
          var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
          if (isPayloadValid) {
            p.data = payload;
          } else {
            return error('invalid payload');
          }
        }


        return p;
      }

      function tryParse(str) {
        try {
          return JSON.parse(str);
        } catch (e) {
          return false;
        }
      }

      /**
         * Deallocates a parser's resources
         *
         * @api public
         */

      Decoder.prototype.destroy = function () {
        if (this.reconstructor) {
          this.reconstructor.finishedReconstruction();
        }
      };

      /**
          * A manager of a binary event's 'buffer sequence'. Should
          * be constructed whenever a packet of type BINARY_EVENT is
          * decoded.
          *
          * @param {Object} packet
          * @return {BinaryReconstructor} initialized reconstructor
          * @api private
          */

      function BinaryReconstructor(packet) {
        this.reconPack = packet;
        this.buffers = [];
      }

      /**
         * Method to be called when binary data received from connection
         * after a BINARY_EVENT packet.
         *
         * @param {Buffer | ArrayBuffer} binData - the raw binary data received
         * @return {null | Object} returns null if more binary data is expected or
         *   a reconstructed packet object if all buffers have been received.
         * @api private
         */

      BinaryReconstructor.prototype.takeBinaryData = function (binData) {
        this.buffers.push(binData);
        if (this.buffers.length === this.reconPack.attachments) {// done with buffer list
          var packet = binary.reconstructPacket(this.reconPack, this.buffers);
          this.finishedReconstruction();
          return packet;
        }
        return null;
      };

      /**
          * Cleans up binary packet reconstruction variables.
          *
          * @api private
          */

      BinaryReconstructor.prototype.finishedReconstruction = function () {
        this.reconPack = null;
        this.buffers = [];
      };

      function error(msg) {
        return {
          type: exports.ERROR,
          data: 'parser error: ' + msg };

      }


      /***/},
    /* 5 */
    /***/function (module, exports, __webpack_require__) {


      /**
                                                           * Expose `Emitter`.
                                                           */

      if (true) {
        module.exports = Emitter;
      }

      /**
         * Initialize a new `Emitter`.
         *
         * @api public
         */

      function Emitter(obj) {
        if (obj) return mixin(obj);
      };

      /**
          * Mixin the emitter properties.
          *
          * @param {Object} obj
          * @return {Object}
          * @api private
          */

      function mixin(obj) {
        for (var key in Emitter.prototype) {
          obj[key] = Emitter.prototype[key];
        }
        return obj;
      }

      /**
         * Listen on the given `event` with `fn`.
         *
         * @param {String} event
         * @param {Function} fn
         * @return {Emitter}
         * @api public
         */

      Emitter.prototype.on =
      Emitter.prototype.addEventListener = function (event, fn) {
        this._callbacks = this._callbacks || {};
        (this._callbacks['$' + event] = this._callbacks['$' + event] || []).
        push(fn);
        return this;
      };

      /**
          * Adds an `event` listener that will be invoked a single
          * time then automatically removed.
          *
          * @param {String} event
          * @param {Function} fn
          * @return {Emitter}
          * @api public
          */

      Emitter.prototype.once = function (event, fn) {
        function on() {
          this.off(event, on);
          fn.apply(this, arguments);
        }

        on.fn = fn;
        this.on(event, on);
        return this;
      };

      /**
          * Remove the given callback for `event` or all
          * registered callbacks.
          *
          * @param {String} event
          * @param {Function} fn
          * @return {Emitter}
          * @api public
          */

      Emitter.prototype.off =
      Emitter.prototype.removeListener =
      Emitter.prototype.removeAllListeners =
      Emitter.prototype.removeEventListener = function (event, fn) {
        this._callbacks = this._callbacks || {};

        // all
        if (0 == arguments.length) {
          this._callbacks = {};
          return this;
        }

        // specific event
        var callbacks = this._callbacks['$' + event];
        if (!callbacks) return this;

        // remove all handlers
        if (1 == arguments.length) {
          delete this._callbacks['$' + event];
          return this;
        }

        // remove specific handler
        var cb;
        for (var i = 0; i < callbacks.length; i++) {
          cb = callbacks[i];
          if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1);
            break;
          }
        }
        return this;
      };

      /**
          * Emit `event` with the given args.
          *
          * @param {String} event
          * @param {Mixed} ...
          * @return {Emitter}
          */

      Emitter.prototype.emit = function (event) {
        this._callbacks = this._callbacks || {};
        var args = [].slice.call(arguments, 1),
        callbacks = this._callbacks['$' + event];

        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) {
            callbacks[i].apply(this, args);
          }
        }

        return this;
      };

      /**
          * Return array of callbacks for `event`.
          *
          * @param {String} event
          * @return {Array}
          * @api public
          */

      Emitter.prototype.listeners = function (event) {
        this._callbacks = this._callbacks || {};
        return this._callbacks['$' + event] || [];
      };

      /**
          * Check if this emitter has `event` handlers.
          *
          * @param {String} event
          * @return {Boolean}
          * @api public
          */

      Emitter.prototype.hasListeners = function (event) {
        return !!this.listeners(event).length;
      };


      /***/},
    /* 6 */
    /***/function (module, exports, __webpack_require__) {

      /*global Blob,File*/

      /**
                            * Module requirements
                            */

      var isArray = __webpack_require__(7);
      var isBuf = __webpack_require__(8);
      var toString = Object.prototype.toString;
      var withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
      var withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

      /**
                                                                                                                                             * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
                                                                                                                                             * Anything with blobs or files should be fed through removeBlobs before coming
                                                                                                                                             * here.
                                                                                                                                             *
                                                                                                                                             * @param {Object} packet - socket.io event packet
                                                                                                                                             * @return {Object} with deconstructed packet and list of buffers
                                                                                                                                             * @api public
                                                                                                                                             */

      exports.deconstructPacket = function (packet) {
        var buffers = [];
        var packetData = packet.data;
        var pack = packet;
        pack.data = _deconstructPacket(packetData, buffers);
        pack.attachments = buffers.length; // number of binary 'attachments'
        return { packet: pack, buffers: buffers };
      };

      function _deconstructPacket(data, buffers) {
        if (!data) return data;

        if (isBuf(data)) {
          var placeholder = { _placeholder: true, num: buffers.length };
          buffers.push(data);
          return placeholder;
        } else if (isArray(data)) {
          var newData = new Array(data.length);
          for (var i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
          }
          return newData;
        } else if (typeof data === 'object' && !(data instanceof Date)) {
          var newData = {};
          for (var key in data) {
            newData[key] = _deconstructPacket(data[key], buffers);
          }
          return newData;
        }
        return data;
      }

      /**
         * Reconstructs a binary packet from its placeholder packet and buffers
         *
         * @param {Object} packet - event packet with placeholders
         * @param {Array} buffers - binary buffers to put in placeholder positions
         * @return {Object} reconstructed packet
         * @api public
         */

      exports.reconstructPacket = function (packet, buffers) {
        packet.data = _reconstructPacket(packet.data, buffers);
        packet.attachments = undefined; // no longer useful
        return packet;
      };

      function _reconstructPacket(data, buffers) {
        if (!data) return data;

        if (data && data._placeholder) {
          return buffers[data.num]; // appropriate buffer (should be natural order anyway)
        } else if (isArray(data)) {
          for (var i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
          }
        } else if (typeof data === 'object') {
          for (var key in data) {
            data[key] = _reconstructPacket(data[key], buffers);
          }
        }

        return data;
      }

      /**
         * Asynchronously removes Blobs or Files from data via
         * FileReader's readAsArrayBuffer method. Used before encoding
         * data as msgpack. Calls callback with the blobless data.
         *
         * @param {Object} data
         * @param {Function} callback
         * @api private
         */

      exports.removeBlobs = function (data, callback) {
        function _removeBlobs(obj, curKey, containingObject) {
          if (!obj) return obj;

          // convert any blob
          if (withNativeBlob && obj instanceof Blob ||
          withNativeFile && obj instanceof File) {
            pendingBlobs++;

            // async filereader
            var fileReader = new FileReader();
            fileReader.onload = function () {// this.result == arraybuffer
              if (containingObject) {
                containingObject[curKey] = this.result;
              } else
              {
                bloblessData = this.result;
              }

              // if nothing pending its callback time
              if (! --pendingBlobs) {
                callback(bloblessData);
              }
            };

            fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
          } else if (isArray(obj)) {// handle array
            for (var i = 0; i < obj.length; i++) {
              _removeBlobs(obj[i], i, obj);
            }
          } else if (typeof obj === 'object' && !isBuf(obj)) {// and object
            for (var key in obj) {
              _removeBlobs(obj[key], key, obj);
            }
          }
        }

        var pendingBlobs = 0;
        var bloblessData = data;
        _removeBlobs(bloblessData);
        if (!pendingBlobs) {
          callback(bloblessData);
        }
      };


      /***/},
    /* 7 */
    /***/function (module, exports) {

      var toString = {}.toString;

      module.exports = Array.isArray || function (arr) {
        return toString.call(arr) == '[object Array]';
      };


      /***/},
    /* 8 */
    /***/function (module, exports) {


      module.exports = isBuf;

      var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
      var withNativeArrayBuffer = typeof ArrayBuffer === 'function';

      var isView = function isView(obj) {
        return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;
      };

      /**
          * Returns true if obj is a buffer or an arraybuffer.
          *
          * @api private
          */

      function isBuf(obj) {
        return withNativeBuffer && Buffer.isBuffer(obj) ||
        withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));
      }


      /***/},
    /* 9 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};

      /**
                                                                                                                                                                                                                                                                                 * Module dependencies.
                                                                                                                                                                                                                                                                                 */

      var eio = __webpack_require__(10);
      var Socket = __webpack_require__(33);
      var Emitter = __webpack_require__(5);
      var parser = __webpack_require__(4);
      var on = __webpack_require__(35);
      var bind = __webpack_require__(36);
      var debug = __webpack_require__(3)('socket.io-client:manager');
      var indexOf = __webpack_require__(32);
      var Backoff = __webpack_require__(37);

      /**
                                              * IE6+ hasOwnProperty
                                              */

      var has = Object.prototype.hasOwnProperty;

      /**
                                                  * Module exports
                                                  */

      module.exports = Manager;

      /**
                                 * `Manager` constructor.
                                 *
                                 * @param {String} engine instance or engine uri/opts
                                 * @param {Object} options
                                 * @api public
                                 */

      function Manager(uri, opts) {
        if (!(this instanceof Manager)) return new Manager(uri, opts);
        if (uri && 'object' === (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {
          opts = uri;
          uri = undefined;
        }
        opts = opts || {};

        opts.path = opts.path || '/socket.io';
        this.nsps = {};
        this.subs = [];
        this.opts = opts;
        this.reconnection(opts.reconnection !== false);
        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
        this.reconnectionDelay(opts.reconnectionDelay || 1000);
        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
        this.randomizationFactor(opts.randomizationFactor || 0.5);
        this.backoff = new Backoff({
          min: this.reconnectionDelay(),
          max: this.reconnectionDelayMax(),
          jitter: this.randomizationFactor() });

        this.timeout(null == opts.timeout ? 20000 : opts.timeout);
        this.readyState = 'closed';
        this.uri = uri;
        this.connecting = [];
        this.lastPing = null;
        this.encoding = false;
        this.packetBuffer = [];
        var _parser = opts.parser || parser;
        this.encoder = new _parser.Encoder();
        this.decoder = new _parser.Decoder();
        this.autoConnect = opts.autoConnect !== false;
        if (this.autoConnect) this.open();
      }

      /**
         * Propagate given event to sockets and emit on `this`
         *
         * @api private
         */

      Manager.prototype.emitAll = function () {
        this.emit.apply(this, arguments);
        for (var nsp in this.nsps) {
          if (has.call(this.nsps, nsp)) {
            this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
          }
        }
      };

      /**
          * Update `socket.id` of all sockets
          *
          * @api private
          */

      Manager.prototype.updateSocketIds = function () {
        for (var nsp in this.nsps) {
          if (has.call(this.nsps, nsp)) {
            this.nsps[nsp].id = this.generateId(nsp);
          }
        }
      };

      /**
          * generate `socket.id` for the given `nsp`
          *
          * @param {String} nsp
          * @return {String}
          * @api private
          */

      Manager.prototype.generateId = function (nsp) {
        return (nsp === '/' ? '' : nsp + '#') + this.engine.id;
      };

      /**
          * Mix in `Emitter`.
          */

      Emitter(Manager.prototype);

      /**
                                   * Sets the `reconnection` config.
                                   *
                                   * @param {Boolean} true/false if it should automatically reconnect
                                   * @return {Manager} self or value
                                   * @api public
                                   */

      Manager.prototype.reconnection = function (v) {
        if (!arguments.length) return this._reconnection;
        this._reconnection = !!v;
        return this;
      };

      /**
          * Sets the reconnection attempts config.
          *
          * @param {Number} max reconnection attempts before giving up
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.reconnectionAttempts = function (v) {
        if (!arguments.length) return this._reconnectionAttempts;
        this._reconnectionAttempts = v;
        return this;
      };

      /**
          * Sets the delay between reconnections.
          *
          * @param {Number} delay
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.reconnectionDelay = function (v) {
        if (!arguments.length) return this._reconnectionDelay;
        this._reconnectionDelay = v;
        this.backoff && this.backoff.setMin(v);
        return this;
      };

      Manager.prototype.randomizationFactor = function (v) {
        if (!arguments.length) return this._randomizationFactor;
        this._randomizationFactor = v;
        this.backoff && this.backoff.setJitter(v);
        return this;
      };

      /**
          * Sets the maximum delay between reconnections.
          *
          * @param {Number} delay
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.reconnectionDelayMax = function (v) {
        if (!arguments.length) return this._reconnectionDelayMax;
        this._reconnectionDelayMax = v;
        this.backoff && this.backoff.setMax(v);
        return this;
      };

      /**
          * Sets the connection timeout. `false` to disable
          *
          * @return {Manager} self or value
          * @api public
          */

      Manager.prototype.timeout = function (v) {
        if (!arguments.length) return this._timeout;
        this._timeout = v;
        return this;
      };

      /**
          * Starts trying to reconnect if reconnection is enabled and we have not
          * started reconnecting yet
          *
          * @api private
          */

      Manager.prototype.maybeReconnectOnOpen = function () {
        // Only try to reconnect if it's the first time we're connecting
        if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
          // keeps reconnection from firing twice for the same reconnection loop
          this.reconnect();
        }
      };

      /**
          * Sets the current transport `socket`.
          *
          * @param {Function} optional, callback
          * @return {Manager} self
          * @api public
          */

      Manager.prototype.open = Manager.prototype.connect = function (fn, opts) {

        if (~this.readyState.indexOf('open')) return this;

        this.engine = eio(this.uri, this.opts);
        var socket = this.engine;
        var self = this;
        this.readyState = 'opening';
        this.skipReconnect = false;

        // emit `open`
        var openSub = on(socket, 'open', function () {
          self.onopen();
          fn && fn();
        });

        // emit `connect_error`
        var errorSub = on(socket, 'error', function (data) {

          self.cleanup();
          self.readyState = 'closed';
          self.emitAll('connect_error', data);
          if (fn) {
            var err = new Error('Connection error');
            err.data = data;
            fn(err);
          } else {
            // Only do this if there is no fn to handle the error
            self.maybeReconnectOnOpen();
          }
        });

        // emit `connect_timeout`
        if (false !== this._timeout) {
          var timeout = this._timeout;

          // set timer
          var timer = setTimeout(function () {

            openSub.destroy();
            socket.close();
            socket.emit('error', 'timeout');
            self.emitAll('connect_timeout', timeout);
          }, timeout);

          this.subs.push({
            destroy: function destroy() {
              clearTimeout(timer);
            } });

        }

        this.subs.push(openSub);
        this.subs.push(errorSub);

        return this;
      };

      /**
          * Called upon transport open.
          *
          * @api private
          */

      Manager.prototype.onopen = function () {

        // clear old subs
        this.cleanup();

        // mark as open
        this.readyState = 'open';
        this.emit('open');

        // add new subs
        var socket = this.engine;
        this.subs.push(on(socket, 'data', bind(this, 'ondata')));
        this.subs.push(on(socket, 'ping', bind(this, 'onping')));
        this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
        this.subs.push(on(socket, 'error', bind(this, 'onerror')));
        this.subs.push(on(socket, 'close', bind(this, 'onclose')));
        this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
      };

      /**
          * Called upon a ping.
          *
          * @api private
          */

      Manager.prototype.onping = function () {
        this.lastPing = new Date();
        this.emitAll('ping');
      };

      /**
          * Called upon a packet.
          *
          * @api private
          */

      Manager.prototype.onpong = function () {
        this.emitAll('pong', new Date() - this.lastPing);
      };

      /**
          * Called with data.
          *
          * @api private
          */

      Manager.prototype.ondata = function (data) {
        this.decoder.add(data);
      };

      /**
          * Called when parser fully decodes a packet.
          *
          * @api private
          */

      Manager.prototype.ondecoded = function (packet) {
        this.emit('packet', packet);
      };

      /**
          * Called upon socket error.
          *
          * @api private
          */

      Manager.prototype.onerror = function (err) {

        this.emitAll('error', err);
      };

      /**
          * Creates a new socket for the given `nsp`.
          *
          * @return {Socket}
          * @api public
          */

      Manager.prototype.socket = function (nsp, opts) {
        var socket = this.nsps[nsp];
        if (!socket) {
          socket = new Socket(this, nsp, opts);
          this.nsps[nsp] = socket;
          var self = this;
          socket.on('connecting', onConnecting);
          socket.on('connect', function () {
            socket.id = self.generateId(nsp);
          });

          if (this.autoConnect) {
            // manually call here since connecting event is fired before listening
            onConnecting();
          }
        }

        function onConnecting() {
          if (!~indexOf(self.connecting, socket)) {
            self.connecting.push(socket);
          }
        }

        return socket;
      };

      /**
          * Called upon a socket close.
          *
          * @param {Socket} socket
          */

      Manager.prototype.destroy = function (socket) {
        var index = indexOf(this.connecting, socket);
        if (~index) this.connecting.splice(index, 1);
        if (this.connecting.length) return;

        this.close();
      };

      /**
          * Writes a packet.
          *
          * @param {Object} packet
          * @api private
          */

      Manager.prototype.packet = function (packet) {

        var self = this;
        if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

        if (!self.encoding) {
          // encode, then write to engine with result
          self.encoding = true;
          this.encoder.encode(packet, function (encodedPackets) {
            for (var i = 0; i < encodedPackets.length; i++) {
              self.engine.write(encodedPackets[i], packet.options);
            }
            self.encoding = false;
            self.processPacketQueue();
          });
        } else {
          // add packet to the queue
          self.packetBuffer.push(packet);
        }
      };

      /**
          * If packet buffer is non-empty, begins encoding the
          * next packet in line.
          *
          * @api private
          */

      Manager.prototype.processPacketQueue = function () {
        if (this.packetBuffer.length > 0 && !this.encoding) {
          var pack = this.packetBuffer.shift();
          this.packet(pack);
        }
      };

      /**
          * Clean up transport subscriptions and packet buffer.
          *
          * @api private
          */

      Manager.prototype.cleanup = function () {

        var subsLength = this.subs.length;
        for (var i = 0; i < subsLength; i++) {
          var sub = this.subs.shift();
          sub.destroy();
        }

        this.packetBuffer = [];
        this.encoding = false;
        this.lastPing = null;

        this.decoder.destroy();
      };

      /**
          * Close the current socket.
          *
          * @api private
          */

      Manager.prototype.close = Manager.prototype.disconnect = function () {

        this.skipReconnect = true;
        this.reconnecting = false;
        if ('opening' === this.readyState) {
          // `onclose` will not fire because
          // an open event never happened
          this.cleanup();
        }
        this.backoff.reset();
        this.readyState = 'closed';
        if (this.engine) this.engine.close();
      };

      /**
          * Called upon engine close.
          *
          * @api private
          */

      Manager.prototype.onclose = function (reason) {

        this.cleanup();
        this.backoff.reset();
        this.readyState = 'closed';
        this.emit('close', reason);

        if (this._reconnection && !this.skipReconnect) {
          this.reconnect();
        }
      };

      /**
          * Attempt a reconnection.
          *
          * @api private
          */

      Manager.prototype.reconnect = function () {
        if (this.reconnecting || this.skipReconnect) return this;

        var self = this;

        if (this.backoff.attempts >= this._reconnectionAttempts) {

          this.backoff.reset();
          this.emitAll('reconnect_failed');
          this.reconnecting = false;
        } else {
          var delay = this.backoff.duration();

          this.reconnecting = true;
          var timer = setTimeout(function () {
            if (self.skipReconnect) return;

            self.emitAll('reconnect_attempt', self.backoff.attempts);
            self.emitAll('reconnecting', self.backoff.attempts);

            // check again for the case socket closed in above events
            if (self.skipReconnect) return;

            self.open(function (err) {
              if (err) {

                self.reconnecting = false;
                self.reconnect();
                self.emitAll('reconnect_error', err.data);
              } else {

                self.onreconnect();
              }
            });
          }, delay);

          this.subs.push({
            destroy: function destroy() {
              clearTimeout(timer);
            } });

        }
      };

      /**
          * Called upon successful reconnect.
          *
          * @api private
          */

      Manager.prototype.onreconnect = function () {
        var attempt = this.backoff.attempts;
        this.reconnecting = false;
        this.backoff.reset();
        this.updateSocketIds();
        this.emitAll('reconnect', attempt);
      };

      /***/},
    /* 10 */
    /***/function (module, exports, __webpack_require__) {


      module.exports = __webpack_require__(11);

      /**
                                                 * Exports parser
                                                 *
                                                 * @api public
                                                 *
                                                 */
      module.exports.parser = __webpack_require__(18);


      /***/},
    /* 11 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var transports = __webpack_require__(12);
      var Emitter = __webpack_require__(5);
      var debug = __webpack_require__(3)('engine.io-client:socket');
      var index = __webpack_require__(32);
      var parser = __webpack_require__(18);
      var parseuri = __webpack_require__(2);
      var parseqs = __webpack_require__(26);

      /**
                                              * Module exports.
                                              */

      module.exports = Socket;

      /**
                                * Socket constructor.
                                *
                                * @param {String|Object} uri or options
                                * @param {Object} options
                                * @api public
                                */

      function Socket(uri, opts) {
        if (!(this instanceof Socket)) return new Socket(uri, opts);

        opts = opts || {};

        if (uri && 'object' === typeof uri) {
          opts = uri;
          uri = null;
        }

        if (uri) {
          uri = parseuri(uri);
          opts.hostname = uri.host;
          opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
          opts.port = uri.port;
          if (uri.query) opts.query = uri.query;
        } else if (opts.host) {
          opts.hostname = parseuri(opts.host).host;
        }

        this.secure = null != opts.secure ? opts.secure :
        typeof location !== 'undefined' && 'https:' === location.protocol;

        if (opts.hostname && !opts.port) {
          // if no port is specified manually, use the protocol default
          opts.port = this.secure ? '443' : '80';
        }

        this.agent = opts.agent || false;
        this.hostname = opts.hostname || (
        typeof location !== 'undefined' ? location.hostname : 'localhost');
        this.port = opts.port || (typeof location !== 'undefined' && location.port ?
        location.port :
        this.secure ? 443 : 80);
        this.query = opts.query || {};
        if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
        this.upgrade = false !== opts.upgrade;
        this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
        this.forceJSONP = !!opts.forceJSONP;
        this.jsonp = false !== opts.jsonp;
        this.forceBase64 = !!opts.forceBase64;
        this.enablesXDR = !!opts.enablesXDR;
        this.timestampParam = opts.timestampParam || 't';
        this.timestampRequests = opts.timestampRequests;
        this.transports = opts.transports || ['polling', 'websocket'];
        this.transportOptions = opts.transportOptions || {};
        this.readyState = '';
        this.writeBuffer = [];
        this.prevBufferLen = 0;
        this.policyPort = opts.policyPort || 843;
        this.rememberUpgrade = opts.rememberUpgrade || false;
        this.binaryType = null;
        this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
        this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;

        if (true === this.perMessageDeflate) this.perMessageDeflate = {};
        if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
          this.perMessageDeflate.threshold = 1024;
        }

        // SSL options for Node.js client
        this.pfx = opts.pfx || null;
        this.key = opts.key || null;
        this.passphrase = opts.passphrase || null;
        this.cert = opts.cert || null;
        this.ca = opts.ca || null;
        this.ciphers = opts.ciphers || null;
        this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
        this.forceNode = !!opts.forceNode;

        // detect ReactNative environment
        this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';

        // other options for Node.js or ReactNative client
        if (typeof self === 'undefined' || this.isReactNative) {
          if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
            this.extraHeaders = opts.extraHeaders;
          }

          if (opts.localAddress) {
            this.localAddress = opts.localAddress;
          }
        }

        // set on handshake
        this.id = null;
        this.upgrades = null;
        this.pingInterval = null;
        this.pingTimeout = null;

        // set on heartbeat
        this.pingIntervalTimer = null;
        this.pingTimeoutTimer = null;

        this.open();
      }

      Socket.priorWebsocketSuccess = false;

      /**
                                             * Mix in `Emitter`.
                                             */

      Emitter(Socket.prototype);

      /**
                                  * Protocol version.
                                  *
                                  * @api public
                                  */

      Socket.protocol = parser.protocol; // this is an int

      /**
       * Expose deps for legacy compatibility
       * and standalone browser access.
       */

      Socket.Socket = Socket;
      Socket.Transport = __webpack_require__(17);
      Socket.transports = __webpack_require__(12);
      Socket.parser = __webpack_require__(18);

      /**
                                                * Creates transport of the given type.
                                                *
                                                * @param {String} transport name
                                                * @return {Transport}
                                                * @api private
                                                */

      Socket.prototype.createTransport = function (name) {

        var query = clone(this.query);

        // append engine.io protocol identifier
        query.EIO = parser.protocol;

        // transport name
        query.transport = name;

        // per-transport options
        var options = this.transportOptions[name] || {};

        // session id if we already have one
        if (this.id) query.sid = this.id;

        var transport = new transports[name]({
          query: query,
          socket: this,
          agent: options.agent || this.agent,
          hostname: options.hostname || this.hostname,
          port: options.port || this.port,
          secure: options.secure || this.secure,
          path: options.path || this.path,
          forceJSONP: options.forceJSONP || this.forceJSONP,
          jsonp: options.jsonp || this.jsonp,
          forceBase64: options.forceBase64 || this.forceBase64,
          enablesXDR: options.enablesXDR || this.enablesXDR,
          timestampRequests: options.timestampRequests || this.timestampRequests,
          timestampParam: options.timestampParam || this.timestampParam,
          policyPort: options.policyPort || this.policyPort,
          pfx: options.pfx || this.pfx,
          key: options.key || this.key,
          passphrase: options.passphrase || this.passphrase,
          cert: options.cert || this.cert,
          ca: options.ca || this.ca,
          ciphers: options.ciphers || this.ciphers,
          rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
          perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
          extraHeaders: options.extraHeaders || this.extraHeaders,
          forceNode: options.forceNode || this.forceNode,
          localAddress: options.localAddress || this.localAddress,
          requestTimeout: options.requestTimeout || this.requestTimeout,
          protocols: options.protocols || void 0,
          isReactNative: this.isReactNative });


        return transport;
      };

      function clone(obj) {
        var o = {};
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            o[i] = obj[i];
          }
        }
        return o;
      }

      /**
         * Initializes transport to use and starts probe.
         *
         * @api private
         */
      Socket.prototype.open = function () {
        var transport;
        if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
          transport = 'websocket';
        } else if (0 === this.transports.length) {
          // Emit error on next tick so it can be listened to
          var self = this;
          setTimeout(function () {
            self.emit('error', 'No transports available');
          }, 0);
          return;
        } else {
          transport = this.transports[0];
        }
        this.readyState = 'opening';

        // Retry with the next transport if the transport is disabled (jsonp: false)
        try {
          transport = this.createTransport(transport);
        } catch (e) {
          this.transports.shift();
          this.open();
          return;
        }

        transport.open();
        this.setTransport(transport);
      };

      /**
          * Sets the current transport. Disables the existing one (if any).
          *
          * @api private
          */

      Socket.prototype.setTransport = function (transport) {

        var self = this;

        if (this.transport) {

          this.transport.removeAllListeners();
        }

        // set up transport
        this.transport = transport;

        // set up transport listeners
        transport.
        on('drain', function () {
          self.onDrain();
        }).
        on('packet', function (packet) {
          self.onPacket(packet);
        }).
        on('error', function (e) {
          self.onError(e);
        }).
        on('close', function () {
          self.onClose('transport close');
        });
      };

      /**
          * Probes a transport.
          *
          * @param {String} transport name
          * @api private
          */

      Socket.prototype.probe = function (name) {

        var transport = this.createTransport(name, { probe: 1 });
        var failed = false;
        var self = this;

        Socket.priorWebsocketSuccess = false;

        function onTransportOpen() {
          if (self.onlyBinaryUpgrades) {
            var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
            failed = failed || upgradeLosesBinary;
          }
          if (failed) return;


          transport.send([{ type: 'ping', data: 'probe' }]);
          transport.once('packet', function (msg) {
            if (failed) return;
            if ('pong' === msg.type && 'probe' === msg.data) {

              self.upgrading = true;
              self.emit('upgrading', transport);
              if (!transport) return;
              Socket.priorWebsocketSuccess = 'websocket' === transport.name;


              self.transport.pause(function () {
                if (failed) return;
                if ('closed' === self.readyState) return;


                cleanup();

                self.setTransport(transport);
                transport.send([{ type: 'upgrade' }]);
                self.emit('upgrade', transport);
                transport = null;
                self.upgrading = false;
                self.flush();
              });
            } else {

              var err = new Error('probe error');
              err.transport = transport.name;
              self.emit('upgradeError', err);
            }
          });
        }

        function freezeTransport() {
          if (failed) return;

          // Any callback called by transport should be ignored since now
          failed = true;

          cleanup();

          transport.close();
          transport = null;
        }

        // Handle any error that happens while probing
        function onerror(err) {
          var error = new Error('probe error: ' + err);
          error.transport = transport.name;

          freezeTransport();



          self.emit('upgradeError', error);
        }

        function onTransportClose() {
          onerror('transport closed');
        }

        // When the socket is closed while we're probing
        function onclose() {
          onerror('socket closed');
        }

        // When the socket is upgraded while we're probing
        function onupgrade(to) {
          if (transport && to.name !== transport.name) {

            freezeTransport();
          }
        }

        // Remove all listeners on the transport and on self
        function cleanup() {
          transport.removeListener('open', onTransportOpen);
          transport.removeListener('error', onerror);
          transport.removeListener('close', onTransportClose);
          self.removeListener('close', onclose);
          self.removeListener('upgrading', onupgrade);
        }

        transport.once('open', onTransportOpen);
        transport.once('error', onerror);
        transport.once('close', onTransportClose);

        this.once('close', onclose);
        this.once('upgrading', onupgrade);

        transport.open();
      };

      /**
          * Called when connection is deemed open.
          *
          * @api public
          */

      Socket.prototype.onOpen = function () {

        this.readyState = 'open';
        Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
        this.emit('open');
        this.flush();

        // we check for `readyState` in case an `open`
        // listener already closed the socket
        if ('open' === this.readyState && this.upgrade && this.transport.pause) {

          for (var i = 0, l = this.upgrades.length; i < l; i++) {
            this.probe(this.upgrades[i]);
          }
        }
      };

      /**
          * Handles a packet.
          *
          * @api private
          */

      Socket.prototype.onPacket = function (packet) {
        if ('opening' === this.readyState || 'open' === this.readyState ||
        'closing' === this.readyState) {


          this.emit('packet', packet);

          // Socket is live - any packet counts
          this.emit('heartbeat');

          switch (packet.type) {
            case 'open':
              this.onHandshake(JSON.parse(packet.data));
              break;

            case 'pong':
              this.setPing();
              this.emit('pong');
              break;

            case 'error':
              var err = new Error('server error');
              err.code = packet.data;
              this.onError(err);
              break;

            case 'message':
              this.emit('data', packet.data);
              this.emit('message', packet.data);
              break;}

        } else {

        }
      };

      /**
          * Called upon handshake completion.
          *
          * @param {Object} handshake obj
          * @api private
          */

      Socket.prototype.onHandshake = function (data) {
        this.emit('handshake', data);
        this.id = data.sid;
        this.transport.query.sid = data.sid;
        this.upgrades = this.filterUpgrades(data.upgrades);
        this.pingInterval = data.pingInterval;
        this.pingTimeout = data.pingTimeout;
        this.onOpen();
        // In case open handler closes socket
        if ('closed' === this.readyState) return;
        this.setPing();

        // Prolong liveness of socket on heartbeat
        this.removeListener('heartbeat', this.onHeartbeat);
        this.on('heartbeat', this.onHeartbeat);
      };

      /**
          * Resets ping timeout.
          *
          * @api private
          */

      Socket.prototype.onHeartbeat = function (timeout) {
        clearTimeout(this.pingTimeoutTimer);
        var self = this;
        self.pingTimeoutTimer = setTimeout(function () {
          if ('closed' === self.readyState) return;
          self.onClose('ping timeout');
        }, timeout || self.pingInterval + self.pingTimeout);
      };

      /**
          * Pings server every `this.pingInterval` and expects response
          * within `this.pingTimeout` or closes connection.
          *
          * @api private
          */

      Socket.prototype.setPing = function () {
        var self = this;
        clearTimeout(self.pingIntervalTimer);
        self.pingIntervalTimer = setTimeout(function () {

          self.ping();
          self.onHeartbeat(self.pingTimeout);
        }, self.pingInterval);
      };

      /**
         * Sends a ping packet.
         *
         * @api private
         */

      Socket.prototype.ping = function () {
        var self = this;
        this.sendPacket('ping', function () {
          self.emit('ping');
        });
      };

      /**
          * Called on `drain` event
          *
          * @api private
          */

      Socket.prototype.onDrain = function () {
        this.writeBuffer.splice(0, this.prevBufferLen);

        // setting prevBufferLen = 0 is very important
        // for example, when upgrading, upgrade packet is sent over,
        // and a nonzero prevBufferLen could cause problems on `drain`
        this.prevBufferLen = 0;

        if (0 === this.writeBuffer.length) {
          this.emit('drain');
        } else {
          this.flush();
        }
      };

      /**
          * Flush write buffers.
          *
          * @api private
          */

      Socket.prototype.flush = function () {
        if ('closed' !== this.readyState && this.transport.writable &&
        !this.upgrading && this.writeBuffer.length) {

          this.transport.send(this.writeBuffer);
          // keep track of current length of writeBuffer
          // splice writeBuffer and callbackBuffer on `drain`
          this.prevBufferLen = this.writeBuffer.length;
          this.emit('flush');
        }
      };

      /**
          * Sends a message.
          *
          * @param {String} message.
          * @param {Function} callback function.
          * @param {Object} options.
          * @return {Socket} for chaining.
          * @api public
          */

      Socket.prototype.write =
      Socket.prototype.send = function (msg, options, fn) {
        this.sendPacket('message', msg, options, fn);
        return this;
      };

      /**
          * Sends a packet.
          *
          * @param {String} packet type.
          * @param {String} data.
          * @param {Object} options.
          * @param {Function} callback function.
          * @api private
          */

      Socket.prototype.sendPacket = function (type, data, options, fn) {
        if ('function' === typeof data) {
          fn = data;
          data = undefined;
        }

        if ('function' === typeof options) {
          fn = options;
          options = null;
        }

        if ('closing' === this.readyState || 'closed' === this.readyState) {
          return;
        }

        options = options || {};
        options.compress = false !== options.compress;

        var packet = {
          type: type,
          data: data,
          options: options };

        this.emit('packetCreate', packet);
        this.writeBuffer.push(packet);
        if (fn) this.once('flush', fn);
        this.flush();
      };

      /**
          * Closes the connection.
          *
          * @api private
          */

      Socket.prototype.close = function () {
        if ('opening' === this.readyState || 'open' === this.readyState) {
          this.readyState = 'closing';

          var self = this;

          if (this.writeBuffer.length) {
            this.once('drain', function () {
              if (this.upgrading) {
                waitForUpgrade();
              } else {
                close();
              }
            });
          } else if (this.upgrading) {
            waitForUpgrade();
          } else {
            close();
          }
        }

        function close() {
          self.onClose('forced close');

          self.transport.close();
        }

        function cleanupAndClose() {
          self.removeListener('upgrade', cleanupAndClose);
          self.removeListener('upgradeError', cleanupAndClose);
          close();
        }

        function waitForUpgrade() {
          // wait for upgrade to finish since we can't send packets while pausing a transport
          self.once('upgrade', cleanupAndClose);
          self.once('upgradeError', cleanupAndClose);
        }

        return this;
      };

      /**
          * Called upon transport error
          *
          * @api private
          */

      Socket.prototype.onError = function (err) {

        Socket.priorWebsocketSuccess = false;
        this.emit('error', err);
        this.onClose('transport error', err);
      };

      /**
          * Called upon transport close.
          *
          * @api private
          */

      Socket.prototype.onClose = function (reason, desc) {
        if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {

          var self = this;

          // clear timers
          clearTimeout(this.pingIntervalTimer);
          clearTimeout(this.pingTimeoutTimer);

          // stop event from firing again for transport
          this.transport.removeAllListeners('close');

          // ensure transport won't stay open
          this.transport.close();

          // ignore further transport communication
          this.transport.removeAllListeners();

          // set ready state
          this.readyState = 'closed';

          // clear session id
          this.id = null;

          // emit close event
          this.emit('close', reason, desc);

          // clean buffers after, so users can still
          // grab the buffers on `close` event
          self.writeBuffer = [];
          self.prevBufferLen = 0;
        }
      };

      /**
          * Filters upgrades, returning only those matching client transports.
          *
          * @param {Array} server upgrades
          * @api private
          *
          */

      Socket.prototype.filterUpgrades = function (upgrades) {
        var filteredUpgrades = [];
        for (var i = 0, j = upgrades.length; i < j; i++) {
          if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
        }
        return filteredUpgrades;
      };


      /***/},
    /* 12 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies
                                                           */

      var XMLHttpRequest = __webpack_require__(13);
      var XHR = __webpack_require__(15);
      var JSONP = __webpack_require__(29);
      var websocket = __webpack_require__(30);

      /**
                                                * Export transports.
                                                */

      exports.polling = polling;
      exports.websocket = websocket;

      /**
                                      * Polling transport polymorphic constructor.
                                      * Decides on xhr vs jsonp based on feature detection.
                                      *
                                      * @api private
                                      */

      function polling(opts) {
        var xhr;
        var xd = false;
        var xs = false;
        var jsonp = false !== opts.jsonp;

        if (typeof location !== 'undefined') {
          var isSSL = 'https:' === location.protocol;
          var port = location.port;

          // some user agents have empty `location.port`
          if (!port) {
            port = isSSL ? 443 : 80;
          }

          xd = opts.hostname !== location.hostname || port !== opts.port;
          xs = opts.secure !== isSSL;
        }

        opts.xdomain = xd;
        opts.xscheme = xs;
        xhr = new XMLHttpRequest(opts);

        if ('open' in xhr && !opts.forceJSONP) {
          return new XHR(opts);
        } else {
          if (!jsonp) throw new Error('JSONP disabled');
          return new JSONP(opts);
        }
      }


      /***/},
    /* 13 */
    /***/function (module, exports, __webpack_require__) {

      // browser shim for xmlhttprequest module

      var hasCORS = __webpack_require__(14);

      module.exports = function (opts) {
        var xdomain = opts.xdomain;

        // scheme must be same when usign XDomainRequest
        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
        var xscheme = opts.xscheme;

        // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
        // https://github.com/Automattic/engine.io-client/pull/217
        var enablesXDR = opts.enablesXDR;

        // XMLHttpRequest can be disabled on IE
        try {
          if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
            return new XMLHttpRequest();
          }
        } catch (e) {}

        // Use XDomainRequest for IE8 if enablesXDR is true
        // because loading bar keeps flashing when using jsonp-polling
        // https://github.com/yujiosaka/socke.io-ie8-loading-example
        try {
          if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
            return new XDomainRequest();
          }
        } catch (e) {}

        if (!xdomain) {
          try {
            return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
          } catch (e) {}
        }
      };


      /***/},
    /* 14 */
    /***/function (module, exports) {


      /**
                                      * Module exports.
                                      *
                                      * Logic borrowed from Modernizr:
                                      *
                                      *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
                                      */

      try {
        module.exports = typeof XMLHttpRequest !== 'undefined' &&
        'withCredentials' in new XMLHttpRequest();
      } catch (err) {
        // if XMLHttp support is disabled in IE then it will throw
        // when trying to create
        module.exports = false;
      }


      /***/},
    /* 15 */
    /***/function (module, exports, __webpack_require__) {

      /* global attachEvent */

      /**
                                * Module requirements.
                                */

      var XMLHttpRequest = __webpack_require__(13);
      var Polling = __webpack_require__(16);
      var Emitter = __webpack_require__(5);
      var inherit = __webpack_require__(27);
      var debug = __webpack_require__(3)('engine.io-client:polling-xhr');

      /**
                                                                           * Module exports.
                                                                           */

      module.exports = XHR;
      module.exports.Request = Request;

      /**
                                         * Empty function
                                         */

      function empty() {}

      /**
                           * XHR Polling constructor.
                           *
                           * @param {Object} opts
                           * @api public
                           */

      function XHR(opts) {
        Polling.call(this, opts);
        this.requestTimeout = opts.requestTimeout;
        this.extraHeaders = opts.extraHeaders;

        if (typeof location !== 'undefined') {
          var isSSL = 'https:' === location.protocol;
          var port = location.port;

          // some user agents have empty `location.port`
          if (!port) {
            port = isSSL ? 443 : 80;
          }

          this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname ||
          port !== opts.port;
          this.xs = opts.secure !== isSSL;
        }
      }

      /**
         * Inherits from Polling.
         */

      inherit(XHR, Polling);

      /**
                              * XHR supports binary
                              */

      XHR.prototype.supportsBinary = true;

      /**
                                            * Creates a request.
                                            *
                                            * @param {String} method
                                            * @api private
                                            */

      XHR.prototype.request = function (opts) {
        opts = opts || {};
        opts.uri = this.uri();
        opts.xd = this.xd;
        opts.xs = this.xs;
        opts.agent = this.agent || false;
        opts.supportsBinary = this.supportsBinary;
        opts.enablesXDR = this.enablesXDR;

        // SSL options for Node.js client
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;
        opts.requestTimeout = this.requestTimeout;

        // other options for Node.js client
        opts.extraHeaders = this.extraHeaders;

        return new Request(opts);
      };

      /**
          * Sends data.
          *
          * @param {String} data to send.
          * @param {Function} called upon flush.
          * @api private
          */

      XHR.prototype.doWrite = function (data, fn) {
        var isBinary = typeof data !== 'string' && data !== undefined;
        var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
        var self = this;
        req.on('success', fn);
        req.on('error', function (err) {
          self.onError('xhr post error', err);
        });
        this.sendXhr = req;
      };

      /**
          * Starts a poll cycle.
          *
          * @api private
          */

      XHR.prototype.doPoll = function () {

        var req = this.request();
        var self = this;
        req.on('data', function (data) {
          self.onData(data);
        });
        req.on('error', function (err) {
          self.onError('xhr poll error', err);
        });
        this.pollXhr = req;
      };

      /**
          * Request constructor
          *
          * @param {Object} options
          * @api public
          */

      function Request(opts) {
        this.method = opts.method || 'GET';
        this.uri = opts.uri;
        this.xd = !!opts.xd;
        this.xs = !!opts.xs;
        this.async = false !== opts.async;
        this.data = undefined !== opts.data ? opts.data : null;
        this.agent = opts.agent;
        this.isBinary = opts.isBinary;
        this.supportsBinary = opts.supportsBinary;
        this.enablesXDR = opts.enablesXDR;
        this.requestTimeout = opts.requestTimeout;

        // SSL options for Node.js client
        this.pfx = opts.pfx;
        this.key = opts.key;
        this.passphrase = opts.passphrase;
        this.cert = opts.cert;
        this.ca = opts.ca;
        this.ciphers = opts.ciphers;
        this.rejectUnauthorized = opts.rejectUnauthorized;

        // other options for Node.js client
        this.extraHeaders = opts.extraHeaders;

        this.create();
      }

      /**
         * Mix in `Emitter`.
         */

      Emitter(Request.prototype);

      /**
                                   * Creates the XHR object and sends the request.
                                   *
                                   * @api private
                                   */

      Request.prototype.create = function () {
        var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

        // SSL options for Node.js client
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;

        var xhr = this.xhr = new XMLHttpRequest(opts);
        var self = this;

        try {

          xhr.open(this.method, this.uri, this.async);
          try {
            if (this.extraHeaders) {
              xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
              for (var i in this.extraHeaders) {
                if (this.extraHeaders.hasOwnProperty(i)) {
                  xhr.setRequestHeader(i, this.extraHeaders[i]);
                }
              }
            }
          } catch (e) {}

          if ('POST' === this.method) {
            try {
              if (this.isBinary) {
                xhr.setRequestHeader('Content-type', 'application/octet-stream');
              } else {
                xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
              }
            } catch (e) {}
          }

          try {
            xhr.setRequestHeader('Accept', '*/*');
          } catch (e) {}

          // ie6 check
          if ('withCredentials' in xhr) {
            xhr.withCredentials = true;
          }

          if (this.requestTimeout) {
            xhr.timeout = this.requestTimeout;
          }

          if (this.hasXDR()) {
            xhr.onload = function () {
              self.onLoad();
            };
            xhr.onerror = function () {
              self.onError(xhr.responseText);
            };
          } else {
            xhr.onreadystatechange = function () {
              if (xhr.readyState === 2) {
                try {
                  var contentType = xhr.getResponseHeader('Content-Type');
                  if (self.supportsBinary && contentType === 'application/octet-stream') {
                    xhr.responseType = 'arraybuffer';
                  }
                } catch (e) {}
              }
              if (4 !== xhr.readyState) return;
              if (200 === xhr.status || 1223 === xhr.status) {
                self.onLoad();
              } else {
                // make sure the `error` event handler that's user-set
                // does not throw in the same tick and gets caught here
                setTimeout(function () {
                  self.onError(xhr.status);
                }, 0);
              }
            };
          }


          xhr.send(this.data);
        } catch (e) {
          // Need to defer since .create() is called directly fhrom the constructor
          // and thus the 'error' event can only be only bound *after* this exception
          // occurs.  Therefore, also, we cannot throw here at all.
          setTimeout(function () {
            self.onError(e);
          }, 0);
          return;
        }

        if (typeof document !== 'undefined') {
          this.index = Request.requestsCount++;
          Request.requests[this.index] = this;
        }
      };

      /**
          * Called upon successful response.
          *
          * @api private
          */

      Request.prototype.onSuccess = function () {
        this.emit('success');
        this.cleanup();
      };

      /**
          * Called if we have data.
          *
          * @api private
          */

      Request.prototype.onData = function (data) {
        this.emit('data', data);
        this.onSuccess();
      };

      /**
          * Called upon error.
          *
          * @api private
          */

      Request.prototype.onError = function (err) {
        this.emit('error', err);
        this.cleanup(true);
      };

      /**
          * Cleans up house.
          *
          * @api private
          */

      Request.prototype.cleanup = function (fromError) {
        if ('undefined' === typeof this.xhr || null === this.xhr) {
          return;
        }
        // xmlhttprequest
        if (this.hasXDR()) {
          this.xhr.onload = this.xhr.onerror = empty;
        } else {
          this.xhr.onreadystatechange = empty;
        }

        if (fromError) {
          try {
            this.xhr.abort();
          } catch (e) {}
        }

        if (typeof document !== 'undefined') {
          delete Request.requests[this.index];
        }

        this.xhr = null;
      };

      /**
          * Called upon load.
          *
          * @api private
          */

      Request.prototype.onLoad = function () {
        var data;
        try {
          var contentType;
          try {
            contentType = this.xhr.getResponseHeader('Content-Type');
          } catch (e) {}
          if (contentType === 'application/octet-stream') {
            data = this.xhr.response || this.xhr.responseText;
          } else {
            data = this.xhr.responseText;
          }
        } catch (e) {
          this.onError(e);
        }
        if (null != data) {
          this.onData(data);
        }
      };

      /**
          * Check if it has XDomainRequest.
          *
          * @api private
          */

      Request.prototype.hasXDR = function () {
        return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
      };

      /**
          * Aborts the request.
          *
          * @api public
          */

      Request.prototype.abort = function () {
        this.cleanup();
      };

      /**
          * Aborts pending requests when unloading the window. This is needed to prevent
          * memory leaks (e.g. when using IE) and to ensure that no spurious error is
          * emitted.
          */

      Request.requestsCount = 0;
      Request.requests = {};

      if (typeof document !== 'undefined') {
        if (typeof attachEvent === 'function') {
          attachEvent('onunload', unloadHandler);
        } else if (typeof addEventListener === 'function') {
          var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';
          addEventListener(terminationEvent, unloadHandler, false);
        }
      }

      function unloadHandler() {
        for (var i in Request.requests) {
          if (Request.requests.hasOwnProperty(i)) {
            Request.requests[i].abort();
          }
        }
      }


      /***/},
    /* 16 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var Transport = __webpack_require__(17);
      var parseqs = __webpack_require__(26);
      var parser = __webpack_require__(18);
      var inherit = __webpack_require__(27);
      var yeast = __webpack_require__(28);
      var debug = __webpack_require__(3)('engine.io-client:polling');

      /**
                                                                       * Module exports.
                                                                       */

      module.exports = Polling;

      /**
                                 * Is XHR2 supported?
                                 */

      var hasXHR2 = function () {
        var XMLHttpRequest = __webpack_require__(13);
        var xhr = new XMLHttpRequest({ xdomain: false });
        return null != xhr.responseType;
      }();

      /**
            * Polling interface.
            *
            * @param {Object} opts
            * @api private
            */

      function Polling(opts) {
        var forceBase64 = opts && opts.forceBase64;
        if (!hasXHR2 || forceBase64) {
          this.supportsBinary = false;
        }
        Transport.call(this, opts);
      }

      /**
         * Inherits from Transport.
         */

      inherit(Polling, Transport);

      /**
                                    * Transport name.
                                    */

      Polling.prototype.name = 'polling';

      /**
                                           * Opens the socket (triggers polling). We write a PING message to determine
                                           * when the transport is open.
                                           *
                                           * @api private
                                           */

      Polling.prototype.doOpen = function () {
        this.poll();
      };

      /**
          * Pauses polling.
          *
          * @param {Function} callback upon buffers are flushed and transport is paused
          * @api private
          */

      Polling.prototype.pause = function (onPause) {
        var self = this;

        this.readyState = 'pausing';

        function pause() {

          self.readyState = 'paused';
          onPause();
        }

        if (this.polling || !this.writable) {
          var total = 0;

          if (this.polling) {

            total++;
            this.once('pollComplete', function () {

              --total || pause();
            });
          }

          if (!this.writable) {

            total++;
            this.once('drain', function () {

              --total || pause();
            });
          }
        } else {
          pause();
        }
      };

      /**
          * Starts polling cycle.
          *
          * @api public
          */

      Polling.prototype.poll = function () {

        this.polling = true;
        this.doPoll();
        this.emit('poll');
      };

      /**
          * Overloads onData to detect payloads.
          *
          * @api private
          */

      Polling.prototype.onData = function (data) {
        var self = this;

        var callback = function callback(packet, index, total) {
          // if its the first message we consider the transport open
          if ('opening' === self.readyState) {
            self.onOpen();
          }

          // if its a close packet, we close the ongoing requests
          if ('close' === packet.type) {
            self.onClose();
            return false;
          }

          // otherwise bypass onData and handle the message
          self.onPacket(packet);
        };

        // decode payload
        parser.decodePayload(data, this.socket.binaryType, callback);

        // if an event did not trigger closing
        if ('closed' !== this.readyState) {
          // if we got data we're not polling
          this.polling = false;
          this.emit('pollComplete');

          if ('open' === this.readyState) {
            this.poll();
          } else {

          }
        }
      };

      /**
          * For polling, send a close packet.
          *
          * @api private
          */

      Polling.prototype.doClose = function () {
        var self = this;

        function close() {

          self.write([{ type: 'close' }]);
        }

        if ('open' === this.readyState) {

          close();
        } else {
          // in case we're trying to close while
          // handshaking is in progress (GH-164)

          this.once('open', close);
        }
      };

      /**
          * Writes a packets payload.
          *
          * @param {Array} data packets
          * @param {Function} drain callback
          * @api private
          */

      Polling.prototype.write = function (packets) {
        var self = this;
        this.writable = false;
        var callbackfn = function callbackfn() {
          self.writable = true;
          self.emit('drain');
        };

        parser.encodePayload(packets, this.supportsBinary, function (data) {
          self.doWrite(data, callbackfn);
        });
      };

      /**
          * Generates uri for connection.
          *
          * @api private
          */

      Polling.prototype.uri = function () {
        var query = this.query || {};
        var schema = this.secure ? 'https' : 'http';
        var port = '';

        // cache busting is forced
        if (false !== this.timestampRequests) {
          query[this.timestampParam] = yeast();
        }

        if (!this.supportsBinary && !query.sid) {
          query.b64 = 1;
        }

        query = parseqs.encode(query);

        // avoid port if default for schema
        if (this.port && ('https' === schema && Number(this.port) !== 443 ||
        'http' === schema && Number(this.port) !== 80)) {
          port = ':' + this.port;
        }

        // prepend ? to query
        if (query.length) {
          query = '?' + query;
        }

        var ipv6 = this.hostname.indexOf(':') !== -1;
        return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
      };


      /***/},
    /* 17 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var parser = __webpack_require__(18);
      var Emitter = __webpack_require__(5);

      /**
                                             * Module exports.
                                             */

      module.exports = Transport;

      /**
                                   * Transport abstract constructor.
                                   *
                                   * @param {Object} options.
                                   * @api private
                                   */

      function Transport(opts) {
        this.path = opts.path;
        this.hostname = opts.hostname;
        this.port = opts.port;
        this.secure = opts.secure;
        this.query = opts.query;
        this.timestampParam = opts.timestampParam;
        this.timestampRequests = opts.timestampRequests;
        this.readyState = '';
        this.agent = opts.agent || false;
        this.socket = opts.socket;
        this.enablesXDR = opts.enablesXDR;

        // SSL options for Node.js client
        this.pfx = opts.pfx;
        this.key = opts.key;
        this.passphrase = opts.passphrase;
        this.cert = opts.cert;
        this.ca = opts.ca;
        this.ciphers = opts.ciphers;
        this.rejectUnauthorized = opts.rejectUnauthorized;
        this.forceNode = opts.forceNode;

        // results of ReactNative environment detection
        this.isReactNative = opts.isReactNative;

        // other options for Node.js client
        this.extraHeaders = opts.extraHeaders;
        this.localAddress = opts.localAddress;
      }

      /**
         * Mix in `Emitter`.
         */

      Emitter(Transport.prototype);

      /**
                                     * Emits an error.
                                     *
                                     * @param {String} str
                                     * @return {Transport} for chaining
                                     * @api public
                                     */

      Transport.prototype.onError = function (msg, desc) {
        var err = new Error(msg);
        err.type = 'TransportError';
        err.description = desc;
        this.emit('error', err);
        return this;
      };

      /**
          * Opens the transport.
          *
          * @api public
          */

      Transport.prototype.open = function () {
        if ('closed' === this.readyState || '' === this.readyState) {
          this.readyState = 'opening';
          this.doOpen();
        }

        return this;
      };

      /**
          * Closes the transport.
          *
          * @api private
          */

      Transport.prototype.close = function () {
        if ('opening' === this.readyState || 'open' === this.readyState) {
          this.doClose();
          this.onClose();
        }

        return this;
      };

      /**
          * Sends multiple packets.
          *
          * @param {Array} packets
          * @api private
          */

      Transport.prototype.send = function (packets) {
        if ('open' === this.readyState) {
          this.write(packets);
        } else {
          throw new Error('Transport not open');
        }
      };

      /**
          * Called upon open
          *
          * @api private
          */

      Transport.prototype.onOpen = function () {
        this.readyState = 'open';
        this.writable = true;
        this.emit('open');
      };

      /**
          * Called with data.
          *
          * @param {String} data
          * @api private
          */

      Transport.prototype.onData = function (data) {
        var packet = parser.decodePacket(data, this.socket.binaryType);
        this.onPacket(packet);
      };

      /**
          * Called with a decoded packet.
          */

      Transport.prototype.onPacket = function (packet) {
        this.emit('packet', packet);
      };

      /**
          * Called upon close.
          *
          * @api private
          */

      Transport.prototype.onClose = function () {
        this.readyState = 'closed';
        this.emit('close');
      };


      /***/},
    /* 18 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var keys = __webpack_require__(19);
      var hasBinary = __webpack_require__(20);
      var sliceBuffer = __webpack_require__(21);
      var after = __webpack_require__(22);
      var utf8 = __webpack_require__(23);

      var base64encoder;
      if (typeof ArrayBuffer !== 'undefined') {
        base64encoder = __webpack_require__(24);
      }

      /**
         * Check if we are running an android browser. That requires us to use
         * ArrayBuffer with polling transports...
         *
         * http://ghinda.net/jpeg-blob-ajax-android/
         */

      var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

      /**
                                                                                                 * Check if we are running in PhantomJS.
                                                                                                 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
                                                                                                 * https://github.com/ariya/phantomjs/issues/11395
                                                                                                 * @type boolean
                                                                                                 */
      var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

      /**
                                                                                                     * When true, avoids using Blobs to encode payloads.
                                                                                                     * @type boolean
                                                                                                     */
      var dontSendBlobs = isAndroid || isPhantomJS;

      /**
                                                     * Current protocol version.
                                                     */

      exports.protocol = 3;

      /**
                             * Packet types.
                             */

      var packets = exports.packets = {
        open: 0 // non-ws
        , close: 1 // non-ws
        , ping: 2,
        pong: 3,
        message: 4,
        upgrade: 5,
        noop: 6 };


      var packetslist = keys(packets);

      /**
                                        * Premade error packet.
                                        */

      var err = { type: 'error', data: 'parser error' };

      /**
                                                          * Create a blob api even for blob builder when vendor prefixes exist
                                                          */

      var Blob = __webpack_require__(25);

      /**
                                           * Encodes a packet.
                                           *
                                           *     <packet type id> [ <data> ]
                                           *
                                           * Example:
                                           *
                                           *     5hello world
                                           *     3
                                           *     4
                                           *
                                           * Binary is encoded in an identical principle
                                           *
                                           * @api private
                                           */

      exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
        if (typeof supportsBinary === 'function') {
          callback = supportsBinary;
          supportsBinary = false;
        }

        if (typeof utf8encode === 'function') {
          callback = utf8encode;
          utf8encode = null;
        }

        var data = packet.data === undefined ?
        undefined :
        packet.data.buffer || packet.data;

        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
          return encodeArrayBuffer(packet, supportsBinary, callback);
        } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
          return encodeBlob(packet, supportsBinary, callback);
        }

        // might be an object with { base64: true, data: dataAsBase64String }
        if (data && data.base64) {
          return encodeBase64Object(packet, callback);
        }

        // Sending data as a utf-8 string
        var encoded = packets[packet.type];

        // data fragment is optional
        if (undefined !== packet.data) {
          encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
        }

        return callback('' + encoded);

      };

      function encodeBase64Object(packet, callback) {
        // packet data is an object { base64: true, data: dataAsBase64String }
        var message = 'b' + exports.packets[packet.type] + packet.data.data;
        return callback(message);
      }

      /**
         * Encode packet helpers for binary types
         */

      function encodeArrayBuffer(packet, supportsBinary, callback) {
        if (!supportsBinary) {
          return exports.encodeBase64Packet(packet, callback);
        }

        var data = packet.data;
        var contentArray = new Uint8Array(data);
        var resultBuffer = new Uint8Array(1 + data.byteLength);

        resultBuffer[0] = packets[packet.type];
        for (var i = 0; i < contentArray.length; i++) {
          resultBuffer[i + 1] = contentArray[i];
        }

        return callback(resultBuffer.buffer);
      }

      function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
        if (!supportsBinary) {
          return exports.encodeBase64Packet(packet, callback);
        }

        var fr = new FileReader();
        fr.onload = function () {
          exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);
        };
        return fr.readAsArrayBuffer(packet.data);
      }

      function encodeBlob(packet, supportsBinary, callback) {
        if (!supportsBinary) {
          return exports.encodeBase64Packet(packet, callback);
        }

        if (dontSendBlobs) {
          return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
        }

        var length = new Uint8Array(1);
        length[0] = packets[packet.type];
        var blob = new Blob([length.buffer, packet.data]);

        return callback(blob);
      }

      /**
         * Encodes a packet with binary data in a base64 string
         *
         * @param {Object} packet, has `type` and `data`
         * @return {String} base64 encoded message
         */

      exports.encodeBase64Packet = function (packet, callback) {
        var message = 'b' + exports.packets[packet.type];
        if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
          var fr = new FileReader();
          fr.onload = function () {
            var b64 = fr.result.split(',')[1];
            callback(message + b64);
          };
          return fr.readAsDataURL(packet.data);
        }

        var b64data;
        try {
          b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
        } catch (e) {
          // iPhone Safari doesn't let you apply with typed arrays
          var typed = new Uint8Array(packet.data);
          var basic = new Array(typed.length);
          for (var i = 0; i < typed.length; i++) {
            basic[i] = typed[i];
          }
          b64data = String.fromCharCode.apply(null, basic);
        }
        message += btoa(b64data);
        return callback(message);
      };

      /**
          * Decodes a packet. Changes format to Blob if requested.
          *
          * @return {Object} with `type` and `data` (if any)
          * @api private
          */

      exports.decodePacket = function (data, binaryType, utf8decode) {
        if (data === undefined) {
          return err;
        }
        // String data
        if (typeof data === 'string') {
          if (data.charAt(0) === 'b') {
            return exports.decodeBase64Packet(data.substr(1), binaryType);
          }

          if (utf8decode) {
            data = tryDecode(data);
            if (data === false) {
              return err;
            }
          }
          var type = data.charAt(0);

          if (Number(type) != type || !packetslist[type]) {
            return err;
          }

          if (data.length > 1) {
            return { type: packetslist[type], data: data.substring(1) };
          } else {
            return { type: packetslist[type] };
          }
        }

        var asArray = new Uint8Array(data);
        var type = asArray[0];
        var rest = sliceBuffer(data, 1);
        if (Blob && binaryType === 'blob') {
          rest = new Blob([rest]);
        }
        return { type: packetslist[type], data: rest };
      };

      function tryDecode(data) {
        try {
          data = utf8.decode(data, { strict: false });
        } catch (e) {
          return false;
        }
        return data;
      }

      /**
         * Decodes a packet encoded in a base64 string
         *
         * @param {String} base64 encoded message
         * @return {Object} with `type` and `data` (if any)
         */

      exports.decodeBase64Packet = function (msg, binaryType) {
        var type = packetslist[msg.charAt(0)];
        if (!base64encoder) {
          return { type: type, data: { base64: true, data: msg.substr(1) } };
        }

        var data = base64encoder.decode(msg.substr(1));

        if (binaryType === 'blob' && Blob) {
          data = new Blob([data]);
        }

        return { type: type, data: data };
      };

      /**
          * Encodes multiple messages (payload).
          *
          *     <length>:data
          *
          * Example:
          *
          *     11:hello world2:hi
          *
          * If any contents are binary, they will be encoded as base64 strings. Base64
          * encoded strings are marked with a b before the length specifier
          *
          * @param {Array} packets
          * @api private
          */

      exports.encodePayload = function (packets, supportsBinary, callback) {
        if (typeof supportsBinary === 'function') {
          callback = supportsBinary;
          supportsBinary = null;
        }

        var isBinary = hasBinary(packets);

        if (supportsBinary && isBinary) {
          if (Blob && !dontSendBlobs) {
            return exports.encodePayloadAsBlob(packets, callback);
          }

          return exports.encodePayloadAsArrayBuffer(packets, callback);
        }

        if (!packets.length) {
          return callback('0:');
        }

        function setLengthHeader(message) {
          return message.length + ':' + message;
        }

        function encodeOne(packet, doneCallback) {
          exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {
            doneCallback(null, setLengthHeader(message));
          });
        }

        map(packets, encodeOne, function (err, results) {
          return callback(results.join(''));
        });
      };

      /**
          * Async array map using after
          */

      function map(ary, each, done) {
        var result = new Array(ary.length);
        var next = after(ary.length, done);

        var eachWithIndex = function eachWithIndex(i, el, cb) {
          each(el, function (error, msg) {
            result[i] = msg;
            cb(error, result);
          });
        };

        for (var i = 0; i < ary.length; i++) {
          eachWithIndex(i, ary[i], next);
        }
      }

      /*
         * Decodes data when a payload is maybe expected. Possible binary contents are
         * decoded from their base64 representation
         *
         * @param {String} data, callback method
         * @api public
         */

      exports.decodePayload = function (data, binaryType, callback) {
        if (typeof data !== 'string') {
          return exports.decodePayloadAsBinary(data, binaryType, callback);
        }

        if (typeof binaryType === 'function') {
          callback = binaryType;
          binaryType = null;
        }

        var packet;
        if (data === '') {
          // parser error - ignoring payload
          return callback(err, 0, 1);
        }

        var length = '',n,msg;

        for (var i = 0, l = data.length; i < l; i++) {
          var chr = data.charAt(i);

          if (chr !== ':') {
            length += chr;
            continue;
          }

          if (length === '' || length != (n = Number(length))) {
            // parser error - ignoring payload
            return callback(err, 0, 1);
          }

          msg = data.substr(i + 1, n);

          if (length != msg.length) {
            // parser error - ignoring payload
            return callback(err, 0, 1);
          }

          if (msg.length) {
            packet = exports.decodePacket(msg, binaryType, false);

            if (err.type === packet.type && err.data === packet.data) {
              // parser error in individual packet - ignoring payload
              return callback(err, 0, 1);
            }

            var ret = callback(packet, i + n, l);
            if (false === ret) return;
          }

          // advance cursor
          i += n;
          length = '';
        }

        if (length !== '') {
          // parser error - ignoring payload
          return callback(err, 0, 1);
        }

      };

      /**
          * Encodes multiple messages (payload) as binary.
          *
          * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
          * 255><data>
          *
          * Example:
          * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
          *
          * @param {Array} packets
          * @return {ArrayBuffer} encoded payload
          * @api private
          */

      exports.encodePayloadAsArrayBuffer = function (packets, callback) {
        if (!packets.length) {
          return callback(new ArrayBuffer(0));
        }

        function encodeOne(packet, doneCallback) {
          exports.encodePacket(packet, true, true, function (data) {
            return doneCallback(null, data);
          });
        }

        map(packets, encodeOne, function (err, encodedPackets) {
          var totalLength = encodedPackets.reduce(function (acc, p) {
            var len;
            if (typeof p === 'string') {
              len = p.length;
            } else {
              len = p.byteLength;
            }
            return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
          }, 0);

          var resultArray = new Uint8Array(totalLength);

          var bufferIndex = 0;
          encodedPackets.forEach(function (p) {
            var isString = typeof p === 'string';
            var ab = p;
            if (isString) {
              var view = new Uint8Array(p.length);
              for (var i = 0; i < p.length; i++) {
                view[i] = p.charCodeAt(i);
              }
              ab = view.buffer;
            }

            if (isString) {// not true binary
              resultArray[bufferIndex++] = 0;
            } else {// true binary
              resultArray[bufferIndex++] = 1;
            }

            var lenStr = ab.byteLength.toString();
            for (var i = 0; i < lenStr.length; i++) {
              resultArray[bufferIndex++] = parseInt(lenStr[i]);
            }
            resultArray[bufferIndex++] = 255;

            var view = new Uint8Array(ab);
            for (var i = 0; i < view.length; i++) {
              resultArray[bufferIndex++] = view[i];
            }
          });

          return callback(resultArray.buffer);
        });
      };

      /**
          * Encode as Blob
          */

      exports.encodePayloadAsBlob = function (packets, callback) {
        function encodeOne(packet, doneCallback) {
          exports.encodePacket(packet, true, true, function (encoded) {
            var binaryIdentifier = new Uint8Array(1);
            binaryIdentifier[0] = 1;
            if (typeof encoded === 'string') {
              var view = new Uint8Array(encoded.length);
              for (var i = 0; i < encoded.length; i++) {
                view[i] = encoded.charCodeAt(i);
              }
              encoded = view.buffer;
              binaryIdentifier[0] = 0;
            }

            var len = encoded instanceof ArrayBuffer ?
            encoded.byteLength :
            encoded.size;

            var lenStr = len.toString();
            var lengthAry = new Uint8Array(lenStr.length + 1);
            for (var i = 0; i < lenStr.length; i++) {
              lengthAry[i] = parseInt(lenStr[i]);
            }
            lengthAry[lenStr.length] = 255;

            if (Blob) {
              var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
              doneCallback(null, blob);
            }
          });
        }

        map(packets, encodeOne, function (err, results) {
          return callback(new Blob(results));
        });
      };

      /*
          * Decodes data when a payload is maybe expected. Strings are decoded by
          * interpreting each byte as a key code for entries marked to start with 0. See
          * description of encodePayloadAsBinary
          *
          * @param {ArrayBuffer} data, callback method
          * @api public
          */

      exports.decodePayloadAsBinary = function (data, binaryType, callback) {
        if (typeof binaryType === 'function') {
          callback = binaryType;
          binaryType = null;
        }

        var bufferTail = data;
        var buffers = [];

        while (bufferTail.byteLength > 0) {
          var tailArray = new Uint8Array(bufferTail);
          var isString = tailArray[0] === 0;
          var msgLength = '';

          for (var i = 1;; i++) {
            if (tailArray[i] === 255) break;

            // 310 = char length of Number.MAX_VALUE
            if (msgLength.length > 310) {
              return callback(err, 0, 1);
            }

            msgLength += tailArray[i];
          }

          bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
          msgLength = parseInt(msgLength);

          var msg = sliceBuffer(bufferTail, 0, msgLength);
          if (isString) {
            try {
              msg = String.fromCharCode.apply(null, new Uint8Array(msg));
            } catch (e) {
              // iPhone Safari doesn't let you apply to typed arrays
              var typed = new Uint8Array(msg);
              msg = '';
              for (var i = 0; i < typed.length; i++) {
                msg += String.fromCharCode(typed[i]);
              }
            }
          }

          buffers.push(msg);
          bufferTail = sliceBuffer(bufferTail, msgLength);
        }

        var total = buffers.length;
        buffers.forEach(function (buffer, i) {
          callback(exports.decodePacket(buffer, binaryType, true), i, total);
        });
      };


      /***/},
    /* 19 */
    /***/function (module, exports) {


      /**
                                      * Gets the keys for an object.
                                      *
                                      * @return {Array} keys
                                      * @api private
                                      */

      module.exports = Object.keys || function keys(obj) {
        var arr = [];
        var has = Object.prototype.hasOwnProperty;

        for (var i in obj) {
          if (has.call(obj, i)) {
            arr.push(i);
          }
        }
        return arr;
      };


      /***/},
    /* 20 */
    /***/function (module, exports, __webpack_require__) {

      /* global Blob File */

      /*
                              * Module requirements.
                              */

      var isArray = __webpack_require__(7);

      var toString = Object.prototype.toString;
      var withNativeBlob = typeof Blob === 'function' ||
      typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
      var withNativeFile = typeof File === 'function' ||
      typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

      /**
                                                                                          * Module exports.
                                                                                          */

      module.exports = hasBinary;

      /**
                                   * Checks for binary data.
                                   *
                                   * Supports Buffer, ArrayBuffer, Blob and File.
                                   *
                                   * @param {Object} anything
                                   * @api public
                                   */

      function hasBinary(obj) {
        if (!obj || typeof obj !== 'object') {
          return false;
        }

        if (isArray(obj)) {
          for (var i = 0, l = obj.length; i < l; i++) {
            if (hasBinary(obj[i])) {
              return true;
            }
          }
          return false;
        }

        if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) ||
        typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer ||
        withNativeBlob && obj instanceof Blob ||
        withNativeFile && obj instanceof File)
        {
          return true;
        }

        // see: https://github.com/Automattic/has-binary/pull/4
        if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
          return hasBinary(obj.toJSON(), true);
        }

        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
            return true;
          }
        }

        return false;
      }


      /***/},
    /* 21 */
    /***/function (module, exports) {

      /**
                                      * An abstraction for slicing an arraybuffer even when
                                      * ArrayBuffer.prototype.slice is not supported
                                      *
                                      * @api public
                                      */

      module.exports = function (arraybuffer, start, end) {
        var bytes = arraybuffer.byteLength;
        start = start || 0;
        end = end || bytes;

        if (arraybuffer.slice) {return arraybuffer.slice(start, end);}

        if (start < 0) {start += bytes;}
        if (end < 0) {end += bytes;}
        if (end > bytes) {end = bytes;}

        if (start >= bytes || start >= end || bytes === 0) {
          return new ArrayBuffer(0);
        }

        var abv = new Uint8Array(arraybuffer);
        var result = new Uint8Array(end - start);
        for (var i = start, ii = 0; i < end; i++, ii++) {
          result[ii] = abv[i];
        }
        return result.buffer;
      };


      /***/},
    /* 22 */
    /***/function (module, exports) {

      module.exports = after;

      function after(count, callback, err_cb) {
        var bail = false;
        err_cb = err_cb || noop;
        proxy.count = count;

        return count === 0 ? callback() : proxy;

        function proxy(err, result) {
          if (proxy.count <= 0) {
            throw new Error('after called too many times');
          }
          --proxy.count;

          // after first error, rest are passed to err_cb
          if (err) {
            bail = true;
            callback(err);
            // future error callbacks will go to error handler
            callback = err_cb;
          } else if (proxy.count === 0 && !bail) {
            callback(null, result);
          }
        }
      }

      function noop() {}


      /***/},
    /* 23 */
    /***/function (module, exports) {

      /*! https://mths.be/utf8js v2.1.2 by @mathias */

      var stringFromCharCode = String.fromCharCode;

      // Taken from https://mths.be/punycode
      function ucs2decode(string) {
        var output = [];
        var counter = 0;
        var length = string.length;
        var value;
        var extra;
        while (counter < length) {
          value = string.charCodeAt(counter++);
          if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
            // high surrogate, and there is a next character
            extra = string.charCodeAt(counter++);
            if ((extra & 0xFC00) == 0xDC00) {// low surrogate
              output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
            } else {
              // unmatched surrogate; only append this code unit, in case the next
              // code unit is the high surrogate of a surrogate pair
              output.push(value);
              counter--;
            }
          } else {
            output.push(value);
          }
        }
        return output;
      }

      // Taken from https://mths.be/punycode
      function ucs2encode(array) {
        var length = array.length;
        var index = -1;
        var value;
        var output = '';
        while (++index < length) {
          value = array[index];
          if (value > 0xFFFF) {
            value -= 0x10000;
            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
            value = 0xDC00 | value & 0x3FF;
          }
          output += stringFromCharCode(value);
        }
        return output;
      }

      function checkScalarValue(codePoint, strict) {
        if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
          if (strict) {
            throw Error(
            'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
            ' is not a scalar value');

          }
          return false;
        }
        return true;
      }
      /*--------------------------------------------------------------------------*/

      function createByte(codePoint, shift) {
        return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);
      }

      function encodeCodePoint(codePoint, strict) {
        if ((codePoint & 0xFFFFFF80) == 0) {// 1-byte sequence
          return stringFromCharCode(codePoint);
        }
        var symbol = '';
        if ((codePoint & 0xFFFFF800) == 0) {// 2-byte sequence
          symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);
        } else
        if ((codePoint & 0xFFFF0000) == 0) {// 3-byte sequence
          if (!checkScalarValue(codePoint, strict)) {
            codePoint = 0xFFFD;
          }
          symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);
          symbol += createByte(codePoint, 6);
        } else
        if ((codePoint & 0xFFE00000) == 0) {// 4-byte sequence
          symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);
          symbol += createByte(codePoint, 12);
          symbol += createByte(codePoint, 6);
        }
        symbol += stringFromCharCode(codePoint & 0x3F | 0x80);
        return symbol;
      }

      function utf8encode(string, opts) {
        opts = opts || {};
        var strict = false !== opts.strict;

        var codePoints = ucs2decode(string);
        var length = codePoints.length;
        var index = -1;
        var codePoint;
        var byteString = '';
        while (++index < length) {
          codePoint = codePoints[index];
          byteString += encodeCodePoint(codePoint, strict);
        }
        return byteString;
      }

      /*--------------------------------------------------------------------------*/

      function readContinuationByte() {
        if (byteIndex >= byteCount) {
          throw Error('Invalid byte index');
        }

        var continuationByte = byteArray[byteIndex] & 0xFF;
        byteIndex++;

        if ((continuationByte & 0xC0) == 0x80) {
          return continuationByte & 0x3F;
        }

        // If we end up here, it’s not a continuation byte
        throw Error('Invalid continuation byte');
      }

      function decodeSymbol(strict) {
        var byte1;
        var byte2;
        var byte3;
        var byte4;
        var codePoint;

        if (byteIndex > byteCount) {
          throw Error('Invalid byte index');
        }

        if (byteIndex == byteCount) {
          return false;
        }

        // Read first byte
        byte1 = byteArray[byteIndex] & 0xFF;
        byteIndex++;

        // 1-byte sequence (no continuation bytes)
        if ((byte1 & 0x80) == 0) {
          return byte1;
        }

        // 2-byte sequence
        if ((byte1 & 0xE0) == 0xC0) {
          byte2 = readContinuationByte();
          codePoint = (byte1 & 0x1F) << 6 | byte2;
          if (codePoint >= 0x80) {
            return codePoint;
          } else {
            throw Error('Invalid continuation byte');
          }
        }

        // 3-byte sequence (may include unpaired surrogates)
        if ((byte1 & 0xF0) == 0xE0) {
          byte2 = readContinuationByte();
          byte3 = readContinuationByte();
          codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;
          if (codePoint >= 0x0800) {
            return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
          } else {
            throw Error('Invalid continuation byte');
          }
        }

        // 4-byte sequence
        if ((byte1 & 0xF8) == 0xF0) {
          byte2 = readContinuationByte();
          byte3 = readContinuationByte();
          byte4 = readContinuationByte();
          codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C |
          byte3 << 0x06 | byte4;
          if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
            return codePoint;
          }
        }

        throw Error('Invalid UTF-8 detected');
      }

      var byteArray;
      var byteCount;
      var byteIndex;
      function utf8decode(byteString, opts) {
        opts = opts || {};
        var strict = false !== opts.strict;

        byteArray = ucs2decode(byteString);
        byteCount = byteArray.length;
        byteIndex = 0;
        var codePoints = [];
        var tmp;
        while ((tmp = decodeSymbol(strict)) !== false) {
          codePoints.push(tmp);
        }
        return ucs2encode(codePoints);
      }

      module.exports = {
        version: '2.1.2',
        encode: utf8encode,
        decode: utf8decode };



      /***/},
    /* 24 */
    /***/function (module, exports) {

      /*
                                      * base64-arraybuffer
                                      * https://github.com/niklasvh/base64-arraybuffer
                                      *
                                      * Copyright (c) 2012 Niklas von Hertzen
                                      * Licensed under the MIT license.
                                      */
      (function () {
        "use strict";

        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        // Use a lookup table to find the index.
        var lookup = new Uint8Array(256);
        for (var i = 0; i < chars.length; i++) {
          lookup[chars.charCodeAt(i)] = i;
        }

        exports.encode = function (arraybuffer) {
          var bytes = new Uint8Array(arraybuffer),
          i,len = bytes.length,base64 = "";

          for (i = 0; i < len; i += 3) {
            base64 += chars[bytes[i] >> 2];
            base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
            base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
            base64 += chars[bytes[i + 2] & 63];
          }

          if (len % 3 === 2) {
            base64 = base64.substring(0, base64.length - 1) + "=";
          } else if (len % 3 === 1) {
            base64 = base64.substring(0, base64.length - 2) + "==";
          }

          return base64;
        };

        exports.decode = function (base64) {
          var bufferLength = base64.length * 0.75,
          len = base64.length,i,p = 0,
          encoded1,encoded2,encoded3,encoded4;

          if (base64[base64.length - 1] === "=") {
            bufferLength--;
            if (base64[base64.length - 2] === "=") {
              bufferLength--;
            }
          }

          var arraybuffer = new ArrayBuffer(bufferLength),
          bytes = new Uint8Array(arraybuffer);

          for (i = 0; i < len; i += 4) {
            encoded1 = lookup[base64.charCodeAt(i)];
            encoded2 = lookup[base64.charCodeAt(i + 1)];
            encoded3 = lookup[base64.charCodeAt(i + 2)];
            encoded4 = lookup[base64.charCodeAt(i + 3)];

            bytes[p++] = encoded1 << 2 | encoded2 >> 4;
            bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
            bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
          }

          return arraybuffer;
        };
      })();


      /***/},
    /* 25 */
    /***/function (module, exports) {

      /**
                                      * Create a blob builder even when vendor prefixes exist
                                      */

      var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :
      typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :
      typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :
      typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :
      false;

      /**
              * Check if Blob constructor is supported
              */

      var blobSupported = function () {
        try {
          var a = new Blob(['hi']);
          return a.size === 2;
        } catch (e) {
          return false;
        }
      }();

      /**
            * Check if Blob constructor supports ArrayBufferViews
            * Fails in Safari 6, so we need to map to ArrayBuffers there.
            */

      var blobSupportsArrayBufferView = blobSupported && function () {
        try {
          var b = new Blob([new Uint8Array([1, 2])]);
          return b.size === 2;
        } catch (e) {
          return false;
        }
      }();

      /**
            * Check if BlobBuilder is supported
            */

      var blobBuilderSupported = BlobBuilder &&
      BlobBuilder.prototype.append &&
      BlobBuilder.prototype.getBlob;

      /**
                                      * Helper function that maps ArrayBufferViews to ArrayBuffers
                                      * Used by BlobBuilder constructor and old browsers that didn't
                                      * support it in the Blob constructor.
                                      */

      function mapArrayBufferViews(ary) {
        return ary.map(function (chunk) {
          if (chunk.buffer instanceof ArrayBuffer) {
            var buf = chunk.buffer;

            // if this is a subarray, make a copy so we only
            // include the subarray region from the underlying buffer
            if (chunk.byteLength !== buf.byteLength) {
              var copy = new Uint8Array(chunk.byteLength);
              copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
              buf = copy.buffer;
            }

            return buf;
          }

          return chunk;
        });
      }

      function BlobBuilderConstructor(ary, options) {
        options = options || {};

        var bb = new BlobBuilder();
        mapArrayBufferViews(ary).forEach(function (part) {
          bb.append(part);
        });

        return options.type ? bb.getBlob(options.type) : bb.getBlob();
      };

      function BlobConstructor(ary, options) {
        return new Blob(mapArrayBufferViews(ary), options || {});
      };

      if (typeof Blob !== 'undefined') {
        BlobBuilderConstructor.prototype = Blob.prototype;
        BlobConstructor.prototype = Blob.prototype;
      }

      module.exports = function () {
        if (blobSupported) {
          return blobSupportsArrayBufferView ? Blob : BlobConstructor;
        } else if (blobBuilderSupported) {
          return BlobBuilderConstructor;
        } else {
          return undefined;
        }
      }();


      /***/},
    /* 26 */
    /***/function (module, exports) {

      /**
                                      * Compiles a querystring
                                      * Returns string representation of the object
                                      *
                                      * @param {Object}
                                      * @api private
                                      */

      exports.encode = function (obj) {
        var str = '';

        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            if (str.length) str += '&';
            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
          }
        }

        return str;
      };

      /**
          * Parses a simple querystring into an object
          *
          * @param {String} qs
          * @api private
          */

      exports.decode = function (qs) {
        var qry = {};
        var pairs = qs.split('&');
        for (var i = 0, l = pairs.length; i < l; i++) {
          var pair = pairs[i].split('=');
          qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
        return qry;
      };


      /***/},
    /* 27 */
    /***/function (module, exports) {


      module.exports = function (a, b) {
        var fn = function fn() {};
        fn.prototype = b.prototype;
        a.prototype = new fn();
        a.prototype.constructor = a;
      };

      /***/},
    /* 28 */
    /***/function (module, exports) {

      'use strict';

      var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),
      length = 64,
      map = {},
      seed = 0,
      i = 0,
      prev;

      /**
             * Return a string representing the specified number.
             *
             * @param {Number} num The number to convert.
             * @returns {String} The string representation of the number.
             * @api public
             */
      function encode(num) {
        var encoded = '';

        do {
          encoded = alphabet[num % length] + encoded;
          num = Math.floor(num / length);
        } while (num > 0);

        return encoded;
      }

      /**
         * Return the integer value specified by the given string.
         *
         * @param {String} str The string to convert.
         * @returns {Number} The integer value represented by the string.
         * @api public
         */
      function decode(str) {
        var decoded = 0;

        for (i = 0; i < str.length; i++) {
          decoded = decoded * length + map[str.charAt(i)];
        }

        return decoded;
      }

      /**
         * Yeast: A tiny growing id generator.
         *
         * @returns {String} A unique id.
         * @api public
         */
      function yeast() {
        var now = encode(+new Date());

        if (now !== prev) return seed = 0, prev = now;
        return now + '.' + encode(seed++);
      }

      //
      // Map each character to its index.
      //
      for (; i < length; i++) {map[alphabet[i]] = i;}

      //
      // Expose the `yeast`, `encode` and `decode` functions.
      //
      yeast.encode = encode;
      yeast.decode = decode;
      module.exports = yeast;


      /***/},
    /* 29 */
    /***/function (module, exports, __webpack_require__) {

      /* WEBPACK VAR INJECTION */(function (global) {/**
                                                     * Module requirements.
                                                     */

        var Polling = __webpack_require__(16);
        var inherit = __webpack_require__(27);

        /**
                                                * Module exports.
                                                */

        module.exports = JSONPPolling;

        /**
                                        * Cached regular expressions.
                                        */

        var rNewline = /\n/g;
        var rEscapedNewline = /\\n/g;

        /**
                                       * Global JSONP callbacks.
                                       */

        var callbacks;

        /**
                        * Noop.
                        */

        function empty() {}

        /**
                             * Until https://github.com/tc39/proposal-global is shipped.
                             */
        function glob() {
          return typeof self !== 'undefined' ? self :
          typeof window !== 'undefined' ? window :
          typeof global !== 'undefined' ? global : {};
        }

        /**
           * JSONP Polling constructor.
           *
           * @param {Object} opts.
           * @api public
           */

        function JSONPPolling(opts) {
          Polling.call(this, opts);

          this.query = this.query || {};

          // define global callbacks array if not present
          // we do this here (lazily) to avoid unneeded global pollution
          if (!callbacks) {
            // we need to consider multiple engines in the same page
            var global = glob();
            callbacks = global.___eio = global.___eio || [];
          }

          // callback identifier
          this.index = callbacks.length;

          // add callback to jsonp global
          var self = this;
          callbacks.push(function (msg) {
            self.onData(msg);
          });

          // append to query string
          this.query.j = this.index;

          // prevent spurious errors from being emitted when the window is unloaded
          if (typeof addEventListener === 'function') {
            addEventListener('beforeunload', function () {
              if (self.script) self.script.onerror = empty;
            }, false);
          }
        }

        /**
           * Inherits from Polling.
           */

        inherit(JSONPPolling, Polling);

        /*
                                         * JSONP only supports binary as base64 encoded strings
                                         */

        JSONPPolling.prototype.supportsBinary = false;

        /**
                                                        * Closes the socket.
                                                        *
                                                        * @api private
                                                        */

        JSONPPolling.prototype.doClose = function () {
          if (this.script) {
            this.script.parentNode.removeChild(this.script);
            this.script = null;
          }

          if (this.form) {
            this.form.parentNode.removeChild(this.form);
            this.form = null;
            this.iframe = null;
          }

          Polling.prototype.doClose.call(this);
        };

        /**
            * Starts a poll cycle.
            *
            * @api private
            */

        JSONPPolling.prototype.doPoll = function () {
          var self = this;
          var script = document.createElement('script');

          if (this.script) {
            this.script.parentNode.removeChild(this.script);
            this.script = null;
          }

          script.async = true;
          script.src = this.uri();
          script.onerror = function (e) {
            self.onError('jsonp poll error', e);
          };

          var insertAt = document.getElementsByTagName('script')[0];
          if (insertAt) {
            insertAt.parentNode.insertBefore(script, insertAt);
          } else {
            (document.head || document.body).appendChild(script);
          }
          this.script = script;

          var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

          if (isUAgecko) {
            setTimeout(function () {
              var iframe = document.createElement('iframe');
              document.body.appendChild(iframe);
              document.body.removeChild(iframe);
            }, 100);
          }
        };

        /**
            * Writes with a hidden iframe.
            *
            * @param {String} data to send
            * @param {Function} called upon flush.
            * @api private
            */

        JSONPPolling.prototype.doWrite = function (data, fn) {
          var self = this;

          if (!this.form) {
            var form = document.createElement('form');
            var area = document.createElement('textarea');
            var id = this.iframeId = 'eio_iframe_' + this.index;
            var iframe;

            form.className = 'socketio';
            form.style.position = 'absolute';
            form.style.top = '-1000px';
            form.style.left = '-1000px';
            form.target = id;
            form.method = 'POST';
            form.setAttribute('accept-charset', 'utf-8');
            area.name = 'd';
            form.appendChild(area);
            document.body.appendChild(form);

            this.form = form;
            this.area = area;
          }

          this.form.action = this.uri();

          function complete() {
            initIframe();
            fn();
          }

          function initIframe() {
            if (self.iframe) {
              try {
                self.form.removeChild(self.iframe);
              } catch (e) {
                self.onError('jsonp polling iframe removal error', e);
              }
            }

            try {
              // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
              var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
              iframe = document.createElement(html);
            } catch (e) {
              iframe = document.createElement('iframe');
              iframe.name = self.iframeId;
              iframe.src = 'javascript:0';
            }

            iframe.id = self.iframeId;

            self.form.appendChild(iframe);
            self.iframe = iframe;
          }

          initIframe();

          // escape \n to prevent it from being converted into \r\n by some UAs
          // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
          data = data.replace(rEscapedNewline, '\\\n');
          this.area.value = data.replace(rNewline, '\\n');

          try {
            this.form.submit();
          } catch (e) {}

          if (this.iframe.attachEvent) {
            this.iframe.onreadystatechange = function () {
              if (self.iframe.readyState === 'complete') {
                complete();
              }
            };
          } else {
            this.iframe.onload = complete;
          }
        };

        /* WEBPACK VAR INJECTION */}).call(exports, function () {return this;}());

      /***/},
    /* 30 */
    /***/function (module, exports, __webpack_require__) {

      /**
                                                           * Module dependencies.
                                                           */

      var Transport = __webpack_require__(17);
      var parser = __webpack_require__(18);
      var parseqs = __webpack_require__(26);
      var inherit = __webpack_require__(27);
      var yeast = __webpack_require__(28);
      var debug = __webpack_require__(3)('engine.io-client:websocket');
      var BrowserWebSocket, NodeWebSocket;
      if (typeof self === 'undefined') {
        try {
          NodeWebSocket = __webpack_require__(31);
        } catch (e) {}
      } else {
        BrowserWebSocket = self.WebSocket || self.MozWebSocket;
      }

      /**
         * Get either the `WebSocket` or `MozWebSocket` globals
         * in the browser or try to resolve WebSocket-compatible
         * interface exposed by `ws` for Node-like environment.
         */

      var WebSocket = BrowserWebSocket || NodeWebSocket;

      /**
                                                          * Module exports.
                                                          */

      module.exports = WS;

      /**
                            * WebSocket transport constructor.
                            *
                            * @api {Object} connection options
                            * @api public
                            */

      function WS(opts) {
        var forceBase64 = opts && opts.forceBase64;
        if (forceBase64) {
          this.supportsBinary = false;
        }
        this.perMessageDeflate = opts.perMessageDeflate;
        this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
        this.protocols = opts.protocols;
        if (!this.usingBrowserWebSocket) {
          WebSocket = NodeWebSocket;
        }
        Transport.call(this, opts);
      }

      /**
         * Inherits from Transport.
         */

      inherit(WS, Transport);

      /**
                               * Transport name.
                               *
                               * @api public
                               */

      WS.prototype.name = 'websocket';

      /*
                                        * WebSockets support binary
                                        */

      WS.prototype.supportsBinary = true;

      /**
                                           * Opens socket.
                                           *
                                           * @api private
                                           */

      WS.prototype.doOpen = function () {
        if (!this.check()) {
          // let probe timeout
          return;
        }

        var uri = this.uri();
        var protocols = this.protocols;
        var opts = {
          agent: this.agent,
          perMessageDeflate: this.perMessageDeflate };


        // SSL options for Node.js client
        opts.pfx = this.pfx;
        opts.key = this.key;
        opts.passphrase = this.passphrase;
        opts.cert = this.cert;
        opts.ca = this.ca;
        opts.ciphers = this.ciphers;
        opts.rejectUnauthorized = this.rejectUnauthorized;
        if (this.extraHeaders) {
          opts.headers = this.extraHeaders;
        }
        if (this.localAddress) {
          opts.localAddress = this.localAddress;
        }

        try {
          this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);
        } catch (err) {
          return this.emit('error', err);
        }

        if (this.ws.binaryType === undefined) {
          this.supportsBinary = false;
        }

        if (this.ws.supports && this.ws.supports.binary) {
          this.supportsBinary = true;
          this.ws.binaryType = 'nodebuffer';
        } else {
          this.ws.binaryType = 'arraybuffer';
        }

        this.addEventListeners();
      };

      /**
          * Adds event listeners to the socket
          *
          * @api private
          */

      WS.prototype.addEventListeners = function () {
        var self = this;

        this.ws.onopen = function () {
          self.onOpen();
        };
        this.ws.onclose = function () {
          self.onClose();
        };
        this.ws.onmessage = function (ev) {
          self.onData(ev.data);
        };
        this.ws.onerror = function (e) {
          self.onError('websocket error', e);
        };
      };

      /**
          * Writes data to socket.
          *
          * @param {Array} array of packets.
          * @api private
          */

      WS.prototype.write = function (packets) {
        var self = this;
        this.writable = false;

        // encodePacket efficient as it uses WS framing
        // no need for encodePayload
        var total = packets.length;
        for (var i = 0, l = total; i < l; i++) {
          (function (packet) {
            parser.encodePacket(packet, self.supportsBinary, function (data) {
              if (!self.usingBrowserWebSocket) {
                // always create a new object (GH-437)
                var opts = {};
                if (packet.options) {
                  opts.compress = packet.options.compress;
                }

                if (self.perMessageDeflate) {
                  var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
                  if (len < self.perMessageDeflate.threshold) {
                    opts.compress = false;
                  }
                }
              }

              // Sometimes the websocket has already been closed but the browser didn't
              // have a chance of informing us about it yet, in that case send will
              // throw an error
              try {
                if (self.usingBrowserWebSocket) {
                  // TypeError is thrown when passing the second argument on Safari
                  self.ws.send(data);
                } else {
                  self.ws.send(data, opts);
                }
              } catch (e) {

              }

              --total || done();
            });
          })(packets[i]);
        }

        function done() {
          self.emit('flush');

          // fake drain
          // defer to next tick to allow Socket to clear writeBuffer
          setTimeout(function () {
            self.writable = true;
            self.emit('drain');
          }, 0);
        }
      };

      /**
          * Called upon close
          *
          * @api private
          */

      WS.prototype.onClose = function () {
        Transport.prototype.onClose.call(this);
      };

      /**
          * Closes socket.
          *
          * @api private
          */

      WS.prototype.doClose = function () {
        if (typeof this.ws !== 'undefined') {
          this.ws.close();
        }
      };

      /**
          * Generates uri for connection.
          *
          * @api private
          */

      WS.prototype.uri = function () {
        var query = this.query || {};
        var schema = this.secure ? 'wss' : 'ws';
        var port = '';

        // avoid port if default for schema
        if (this.port && ('wss' === schema && Number(this.port) !== 443 ||
        'ws' === schema && Number(this.port) !== 80)) {
          port = ':' + this.port;
        }

        // append timestamp to URI
        if (this.timestampRequests) {
          query[this.timestampParam] = yeast();
        }

        // communicate binary support capabilities
        if (!this.supportsBinary) {
          query.b64 = 1;
        }

        query = parseqs.encode(query);

        // prepend ? to query
        if (query.length) {
          query = '?' + query;
        }

        var ipv6 = this.hostname.indexOf(':') !== -1;
        return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
      };

      /**
          * Feature detection for WebSocket.
          *
          * @return {Boolean} whether this transport is available.
          * @api public
          */

      WS.prototype.check = function () {
        return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
      };


      /***/},
    /* 31 */
    /***/function (module, exports) {

      /* (ignored) */

      /***/},
    /* 32 */
    /***/function (module, exports) {


      var indexOf = [].indexOf;

      module.exports = function (arr, obj) {
        if (indexOf) return arr.indexOf(obj);
        for (var i = 0; i < arr.length; ++i) {
          if (arr[i] === obj) return i;
        }
        return -1;
      };

      /***/},
    /* 33 */
    /***/function (module, exports, __webpack_require__) {

      'use strict';

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};

      /**
                                                                                                                                                                                                                                                                                 * Module dependencies.
                                                                                                                                                                                                                                                                                 */

      var parser = __webpack_require__(4);
      var Emitter = __webpack_require__(5);
      var toArray = __webpack_require__(34);
      var on = __webpack_require__(35);
      var bind = __webpack_require__(36);
      var debug = __webpack_require__(3)('socket.io-client:socket');
      var parseqs = __webpack_require__(26);
      var hasBin = __webpack_require__(20);

      /**
                                             * Module exports.
                                             */

      module.exports = exports = Socket;

      /**
                                          * Internal events (blacklisted).
                                          * These events can't be emitted by the user.
                                          *
                                          * @api private
                                          */

      var events = {
        connect: 1,
        connect_error: 1,
        connect_timeout: 1,
        connecting: 1,
        disconnect: 1,
        error: 1,
        reconnect: 1,
        reconnect_attempt: 1,
        reconnect_failed: 1,
        reconnect_error: 1,
        reconnecting: 1,
        ping: 1,
        pong: 1 };


      /**
                    * Shortcut to `Emitter#emit`.
                    */

      var emit = Emitter.prototype.emit;

      /**
                                          * `Socket` constructor.
                                          *
                                          * @api public
                                          */

      function Socket(io, nsp, opts) {
        this.io = io;
        this.nsp = nsp;
        this.json = this; // compat
        this.ids = 0;
        this.acks = {};
        this.receiveBuffer = [];
        this.sendBuffer = [];
        this.connected = false;
        this.disconnected = true;
        this.flags = {};
        if (opts && opts.query) {
          this.query = opts.query;
        }
        if (this.io.autoConnect) this.open();
      }

      /**
         * Mix in `Emitter`.
         */

      Emitter(Socket.prototype);

      /**
                                  * Subscribe to open, close and packet events
                                  *
                                  * @api private
                                  */

      Socket.prototype.subEvents = function () {
        if (this.subs) return;

        var io = this.io;
        this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];
      };

      /**
          * "Opens" the socket.
          *
          * @api public
          */

      Socket.prototype.open = Socket.prototype.connect = function () {
        if (this.connected) return this;

        this.subEvents();
        this.io.open(); // ensure open
        if ('open' === this.io.readyState) this.onopen();
        this.emit('connecting');
        return this;
      };

      /**
          * Sends a `message` event.
          *
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.send = function () {
        var args = toArray(arguments);
        args.unshift('message');
        this.emit.apply(this, args);
        return this;
      };

      /**
          * Override `emit`.
          * If the event is in `events`, it's emitted normally.
          *
          * @param {String} event name
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.emit = function (ev) {
        if (events.hasOwnProperty(ev)) {
          emit.apply(this, arguments);
          return this;
        }

        var args = toArray(arguments);
        var packet = {
          type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
          data: args };


        packet.options = {};
        packet.options.compress = !this.flags || false !== this.flags.compress;

        // event ack callback
        if ('function' === typeof args[args.length - 1]) {

          this.acks[this.ids] = args.pop();
          packet.id = this.ids++;
        }

        if (this.connected) {
          this.packet(packet);
        } else {
          this.sendBuffer.push(packet);
        }

        this.flags = {};

        return this;
      };

      /**
          * Sends a packet.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.packet = function (packet) {
        packet.nsp = this.nsp;
        this.io.packet(packet);
      };

      /**
          * Called upon engine `open`.
          *
          * @api private
          */

      Socket.prototype.onopen = function () {

        // write connect packet if necessary
        if ('/' !== this.nsp) {
          if (this.query) {
            var query = _typeof(this.query) === 'object' ? parseqs.encode(this.query) : this.query;

            this.packet({ type: parser.CONNECT, query: query });
          } else {
            this.packet({ type: parser.CONNECT });
          }
        }
      };

      /**
          * Called upon engine `close`.
          *
          * @param {String} reason
          * @api private
          */

      Socket.prototype.onclose = function (reason) {

        this.connected = false;
        this.disconnected = true;
        delete this.id;
        this.emit('disconnect', reason);
      };

      /**
          * Called with socket packet.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.onpacket = function (packet) {
        var sameNamespace = packet.nsp === this.nsp;
        var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

        if (!sameNamespace && !rootNamespaceError) return;

        switch (packet.type) {
          case parser.CONNECT:
            this.onconnect();
            break;

          case parser.EVENT:
            this.onevent(packet);
            break;

          case parser.BINARY_EVENT:
            this.onevent(packet);
            break;

          case parser.ACK:
            this.onack(packet);
            break;

          case parser.BINARY_ACK:
            this.onack(packet);
            break;

          case parser.DISCONNECT:
            this.ondisconnect();
            break;

          case parser.ERROR:
            this.emit('error', packet.data);
            break;}

      };

      /**
          * Called upon a server event.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.onevent = function (packet) {
        var args = packet.data || [];

        if (null != packet.id) {

          args.push(this.ack(packet.id));
        }

        if (this.connected) {
          emit.apply(this, args);
        } else {
          this.receiveBuffer.push(args);
        }
      };

      /**
          * Produces an ack callback to emit with an event.
          *
          * @api private
          */

      Socket.prototype.ack = function (id) {
        var self = this;
        var sent = false;
        return function () {
          // prevent double callbacks
          if (sent) return;
          sent = true;
          var args = toArray(arguments);

          self.packet({
            type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
            id: id,
            data: args });

        };
      };

      /**
          * Called upon a server acknowlegement.
          *
          * @param {Object} packet
          * @api private
          */

      Socket.prototype.onack = function (packet) {
        var ack = this.acks[packet.id];
        if ('function' === typeof ack) {

          ack.apply(this, packet.data);
          delete this.acks[packet.id];
        } else {}
      };

      /**
          * Called upon server connect.
          *
          * @api private
          */

      Socket.prototype.onconnect = function () {
        this.connected = true;
        this.disconnected = false;
        this.emit('connect');
        this.emitBuffered();
      };

      /**
          * Emit buffered events (received and emitted).
          *
          * @api private
          */

      Socket.prototype.emitBuffered = function () {
        var i;
        for (i = 0; i < this.receiveBuffer.length; i++) {
          emit.apply(this, this.receiveBuffer[i]);
        }
        this.receiveBuffer = [];

        for (i = 0; i < this.sendBuffer.length; i++) {
          this.packet(this.sendBuffer[i]);
        }
        this.sendBuffer = [];
      };

      /**
          * Called upon server disconnect.
          *
          * @api private
          */

      Socket.prototype.ondisconnect = function () {

        this.destroy();
        this.onclose('io server disconnect');
      };

      /**
          * Called upon forced client/server side disconnections,
          * this method ensures the manager stops tracking us and
          * that reconnections don't get triggered for this.
          *
          * @api private.
          */

      Socket.prototype.destroy = function () {
        if (this.subs) {
          // clean subscriptions to avoid reconnections
          for (var i = 0; i < this.subs.length; i++) {
            this.subs[i].destroy();
          }
          this.subs = null;
        }

        this.io.destroy(this);
      };

      /**
          * Disconnects the socket manually.
          *
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.close = Socket.prototype.disconnect = function () {
        if (this.connected) {

          this.packet({ type: parser.DISCONNECT });
        }

        // remove socket from pool
        this.destroy();

        if (this.connected) {
          // fire events
          this.onclose('io client disconnect');
        }
        return this;
      };

      /**
          * Sets the compress flag.
          *
          * @param {Boolean} if `true`, compresses the sending data
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.compress = function (compress) {
        this.flags.compress = compress;
        return this;
      };

      /**
          * Sets the binary flag
          *
          * @param {Boolean} whether the emitted data contains binary
          * @return {Socket} self
          * @api public
          */

      Socket.prototype.binary = function (binary) {
        this.flags.binary = binary;
        return this;
      };

      /***/},
    /* 34 */
    /***/function (module, exports) {

      module.exports = toArray;

      function toArray(list, index) {
        var array = [];

        index = index || 0;

        for (var i = index || 0; i < list.length; i++) {
          array[i - index] = list[i];
        }

        return array;
      }


      /***/},
    /* 35 */
    /***/function (module, exports) {

      "use strict";

      /**
                     * Module exports.
                     */

      module.exports = on;

      /**
                            * Helper for subscriptions.
                            *
                            * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
                            * @param {String} event name
                            * @param {Function} callback
                            * @api public
                            */

      function on(obj, ev, fn) {
        obj.on(ev, fn);
        return {
          destroy: function destroy() {
            obj.removeListener(ev, fn);
          } };

      }

      /***/},
    /* 36 */
    /***/function (module, exports) {

      /**
                                      * Slice reference.
                                      */

      var slice = [].slice;

      /**
                             * Bind `obj` to `fn`.
                             *
                             * @param {Object} obj
                             * @param {Function|String} fn or string
                             * @return {Function}
                             * @api public
                             */

      module.exports = function (obj, fn) {
        if ('string' == typeof fn) fn = obj[fn];
        if ('function' != typeof fn) throw new Error('bind() requires a function');
        var args = slice.call(arguments, 2);
        return function () {
          return fn.apply(obj, args.concat(slice.call(arguments)));
        };
      };


      /***/},
    /* 37 */
    /***/function (module, exports) {


      /**
                                      * Expose `Backoff`.
                                      */

      module.exports = Backoff;

      /**
                                 * Initialize backoff timer with `opts`.
                                 *
                                 * - `min` initial timeout in milliseconds [100]
                                 * - `max` max timeout [10000]
                                 * - `jitter` [0]
                                 * - `factor` [2]
                                 *
                                 * @param {Object} opts
                                 * @api public
                                 */

      function Backoff(opts) {
        opts = opts || {};
        this.ms = opts.min || 100;
        this.max = opts.max || 10000;
        this.factor = opts.factor || 2;
        this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
        this.attempts = 0;
      }

      /**
         * Return the backoff duration.
         *
         * @return {Number}
         * @api public
         */

      Backoff.prototype.duration = function () {
        var ms = this.ms * Math.pow(this.factor, this.attempts++);
        if (this.jitter) {
          var rand = Math.random();
          var deviation = Math.floor(rand * this.jitter * ms);
          ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
        }
        return Math.min(ms, this.max) | 0;
      };

      /**
          * Reset the number of attempts.
          *
          * @api public
          */

      Backoff.prototype.reset = function () {
        this.attempts = 0;
      };

      /**
          * Set the minimum duration
          *
          * @api public
          */

      Backoff.prototype.setMin = function (min) {
        this.ms = min;
      };

      /**
          * Set the maximum duration
          *
          * @api public
          */

      Backoff.prototype.setMax = function (max) {
        this.max = max;
      };

      /**
          * Set the jitter
          *
          * @api public
          */

      Backoff.prototype.setJitter = function (jitter) {
        this.jitter = jitter;
      };



      /***/}]));

});
;
});
define('static/js/socket.io-client/dist/socket.io.slim.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /*!
               * Socket.IO v2.2.0
               * (c) 2014-2018 Guillermo Rauch
               * Released under the MIT License.
               */
!function (t, e) {"object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.io = e() : t.io = e();}(void 0, function () {return function (t) {function e(n) {if (r[n]) return r[n].exports;var o = r[n] = { exports: {}, id: n, loaded: !1 };return t[n].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;}var r = {};return e.m = t, e.c = r, e.p = "", e(0);}([function (t, e, r) {"use strict";function n(t, e) {"object" === ("undefined" == typeof t ? "undefined" : o(t)) && (e = t, t = void 0), e = e || {};var r,n = i(t),s = n.source,p = n.id,h = n.path,u = c[p] && h in c[p].nsps,f = e.forceNew || e["force new connection"] || !1 === e.multiplex || u;return f ? r = a(s, e) : (c[p] || (c[p] = a(s, e)), r = c[p]), n.query && !e.query && (e.query = n.query), r.socket(n.path, e);}var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {return typeof t;} : function (t) {return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;},i = r(1),s = r(4),a = r(9);r(3)("socket.io-client");t.exports = e = n;var c = e.managers = {};e.protocol = s.protocol, e.connect = n, e.Manager = r(9), e.Socket = r(33);}, function (t, e, r) {"use strict";function n(t, e) {var r = t;e = e || "undefined" != typeof location && location, null == t && (t = e.protocol + "//" + e.host), "string" == typeof t && ("/" === t.charAt(0) && (t = "/" === t.charAt(1) ? e.protocol + t : e.host + t), /^(https?|wss?):\/\//.test(t) || (t = "undefined" != typeof e ? e.protocol + "//" + t : "https://" + t), r = o(t)), r.port || (/^(http|ws)$/.test(r.protocol) ? r.port = "80" : /^(http|ws)s$/.test(r.protocol) && (r.port = "443")), r.path = r.path || "/";var n = r.host.indexOf(":") !== -1,i = n ? "[" + r.host + "]" : r.host;return r.id = r.protocol + "://" + i + ":" + r.port, r.href = r.protocol + "://" + i + (e && e.port === r.port ? "" : ":" + r.port), r;}var o = r(2);r(3)("socket.io-client:url");t.exports = n;}, function (t, e) {var r = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,n = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];t.exports = function (t) {var e = t,o = t.indexOf("["),i = t.indexOf("]");o != -1 && i != -1 && (t = t.substring(0, o) + t.substring(o, i).replace(/:/g, ";") + t.substring(i, t.length));for (var s = r.exec(t || ""), a = {}, c = 14; c--;) {a[n[c]] = s[c] || "";}return o != -1 && i != -1 && (a.source = e, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = !0), a;};}, function (t, e) {"use strict";t.exports = function () {return function () {};};}, function (t, e, r) {function n() {}function o(t) {var r = "" + t.type;if (e.BINARY_EVENT !== t.type && e.BINARY_ACK !== t.type || (r += t.attachments + "-"), t.nsp && "/" !== t.nsp && (r += t.nsp + ","), null != t.id && (r += t.id), null != t.data) {var n = i(t.data);if (n === !1) return m;r += n;}return r;}function i(t) {try {return JSON.stringify(t);} catch (t) {return !1;}}function s(t, e) {function r(t) {var r = l.deconstructPacket(t),n = o(r.packet),i = r.buffers;i.unshift(n), e(i);}l.removeBlobs(t, r);}function a() {this.reconstructor = null;}function c(t) {var r = 0,n = { type: Number(t.charAt(0)) };if (null == e.types[n.type]) return u("unknown packet type " + n.type);if (e.BINARY_EVENT === n.type || e.BINARY_ACK === n.type) {for (var o = ""; "-" !== t.charAt(++r) && (o += t.charAt(r), r != t.length);) {;}if (o != Number(o) || "-" !== t.charAt(r)) throw new Error("Illegal attachments");n.attachments = Number(o);}if ("/" === t.charAt(r + 1)) for (n.nsp = ""; ++r;) {var i = t.charAt(r);if ("," === i) break;if (n.nsp += i, r === t.length) break;} else n.nsp = "/";var s = t.charAt(r + 1);if ("" !== s && Number(s) == s) {for (n.id = ""; ++r;) {var i = t.charAt(r);if (null == i || Number(i) != i) {--r;break;}if (n.id += t.charAt(r), r === t.length) break;}n.id = Number(n.id);}if (t.charAt(++r)) {var a = p(t.substr(r)),c = a !== !1 && (n.type === e.ERROR || d(a));if (!c) return u("invalid payload");n.data = a;}return n;}function p(t) {try {return JSON.parse(t);} catch (t) {return !1;}}function h(t) {this.reconPack = t, this.buffers = [];}function u(t) {return { type: e.ERROR, data: "parser error: " + t };}var f = (r(3)("socket.io-parser"), r(5)),l = r(6),d = r(7),y = r(8);e.protocol = 4, e.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], e.CONNECT = 0, e.DISCONNECT = 1, e.EVENT = 2, e.ACK = 3, e.ERROR = 4, e.BINARY_EVENT = 5, e.BINARY_ACK = 6, e.Encoder = n, e.Decoder = a;var m = e.ERROR + '"encode error"';n.prototype.encode = function (t, r) {if (e.BINARY_EVENT === t.type || e.BINARY_ACK === t.type) s(t, r);else {var n = o(t);r([n]);}}, f(a.prototype), a.prototype.add = function (t) {var r;if ("string" == typeof t) r = c(t), e.BINARY_EVENT === r.type || e.BINARY_ACK === r.type ? (this.reconstructor = new h(r), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", r)) : this.emit("decoded", r);else {if (!y(t) && !t.base64) throw new Error("Unknown type: " + t);if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");r = this.reconstructor.takeBinaryData(t), r && (this.reconstructor = null, this.emit("decoded", r));}}, a.prototype.destroy = function () {this.reconstructor && this.reconstructor.finishedReconstruction();}, h.prototype.takeBinaryData = function (t) {if (this.buffers.push(t), this.buffers.length === this.reconPack.attachments) {var e = l.reconstructPacket(this.reconPack, this.buffers);return this.finishedReconstruction(), e;}return null;}, h.prototype.finishedReconstruction = function () {this.reconPack = null, this.buffers = [];};}, function (t, e, r) {function n(t) {if (t) return o(t);}function o(t) {for (var e in n.prototype) {t[e] = n.prototype[e];}return t;}t.exports = n, n.prototype.on = n.prototype.addEventListener = function (t, e) {return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this;}, n.prototype.once = function (t, e) {function r() {this.off(t, r), e.apply(this, arguments);}return r.fn = e, this.on(t, r), this;}, n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function (t, e) {if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;var r = this._callbacks["$" + t];if (!r) return this;if (1 == arguments.length) return delete this._callbacks["$" + t], this;for (var n, o = 0; o < r.length; o++) {if (n = r[o], n === e || n.fn === e) {r.splice(o, 1);break;}}return this;}, n.prototype.emit = function (t) {this._callbacks = this._callbacks || {};var e = [].slice.call(arguments, 1),r = this._callbacks["$" + t];if (r) {r = r.slice(0);for (var n = 0, o = r.length; n < o; ++n) {r[n].apply(this, e);}}return this;}, n.prototype.listeners = function (t) {return this._callbacks = this._callbacks || {}, this._callbacks["$" + t] || [];}, n.prototype.hasListeners = function (t) {return !!this.listeners(t).length;};}, function (t, e, r) {function n(t, e) {if (!t) return t;if (s(t)) {var r = { _placeholder: !0, num: e.length };return e.push(t), r;}if (i(t)) {for (var o = new Array(t.length), a = 0; a < t.length; a++) {o[a] = n(t[a], e);}return o;}if ("object" == typeof t && !(t instanceof Date)) {var o = {};for (var c in t) {o[c] = n(t[c], e);}return o;}return t;}function o(t, e) {if (!t) return t;if (t && t._placeholder) return e[t.num];if (i(t)) for (var r = 0; r < t.length; r++) {t[r] = o(t[r], e);} else if ("object" == typeof t) for (var n in t) {t[n] = o(t[n], e);}return t;}var i = r(7),s = r(8),a = Object.prototype.toString,c = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === a.call(Blob),p = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === a.call(File);e.deconstructPacket = function (t) {var e = [],r = t.data,o = t;return o.data = n(r, e), o.attachments = e.length, { packet: o, buffers: e };}, e.reconstructPacket = function (t, e) {return t.data = o(t.data, e), t.attachments = void 0, t;}, e.removeBlobs = function (t, e) {function r(t, a, h) {if (!t) return t;if (c && t instanceof Blob || p && t instanceof File) {n++;var u = new FileReader();u.onload = function () {h ? h[a] = this.result : o = this.result, --n || e(o);}, u.readAsArrayBuffer(t);} else if (i(t)) for (var f = 0; f < t.length; f++) {r(t[f], f, t);} else if ("object" == typeof t && !s(t)) for (var l in t) {r(t[l], l, t);}}var n = 0,o = t;r(o), n || e(o);};}, function (t, e) {var r = {}.toString;t.exports = Array.isArray || function (t) {return "[object Array]" == r.call(t);};}, function (t, e) {function r(t) {return n && Buffer.isBuffer(t) || o && (t instanceof ArrayBuffer || i(t));}t.exports = r;var n = "function" == typeof Buffer && "function" == typeof Buffer.isBuffer,o = "function" == typeof ArrayBuffer,i = function i(t) {return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t.buffer instanceof ArrayBuffer;};}, function (t, e, r) {"use strict";function n(t, e) {if (!(this instanceof n)) return new n(t, e);t && "object" === ("undefined" == typeof t ? "undefined" : o(t)) && (e = t, t = void 0), e = e || {}, e.path = e.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = e, this.reconnection(e.reconnection !== !1), this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0), this.reconnectionDelay(e.reconnectionDelay || 1e3), this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3), this.randomizationFactor(e.randomizationFactor || .5), this.backoff = new f({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }), this.timeout(null == e.timeout ? 2e4 : e.timeout), this.readyState = "closed", this.uri = t, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = [];var r = e.parser || c;this.encoder = new r.Encoder(), this.decoder = new r.Decoder(), this.autoConnect = e.autoConnect !== !1, this.autoConnect && this.open();}var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {return typeof t;} : function (t) {return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;},i = r(10),s = r(33),a = r(5),c = r(4),p = r(35),h = r(36),u = (r(3)("socket.io-client:manager"), r(32)),f = r(37),l = Object.prototype.hasOwnProperty;t.exports = n, n.prototype.emitAll = function () {this.emit.apply(this, arguments);for (var t in this.nsps) {l.call(this.nsps, t) && this.nsps[t].emit.apply(this.nsps[t], arguments);}}, n.prototype.updateSocketIds = function () {for (var t in this.nsps) {l.call(this.nsps, t) && (this.nsps[t].id = this.generateId(t));}}, n.prototype.generateId = function (t) {return ("/" === t ? "" : t + "#") + this.engine.id;}, a(n.prototype), n.prototype.reconnection = function (t) {return arguments.length ? (this._reconnection = !!t, this) : this._reconnection;}, n.prototype.reconnectionAttempts = function (t) {return arguments.length ? (this._reconnectionAttempts = t, this) : this._reconnectionAttempts;}, n.prototype.reconnectionDelay = function (t) {return arguments.length ? (this._reconnectionDelay = t, this.backoff && this.backoff.setMin(t), this) : this._reconnectionDelay;}, n.prototype.randomizationFactor = function (t) {return arguments.length ? (this._randomizationFactor = t, this.backoff && this.backoff.setJitter(t), this) : this._randomizationFactor;}, n.prototype.reconnectionDelayMax = function (t) {return arguments.length ? (this._reconnectionDelayMax = t, this.backoff && this.backoff.setMax(t), this) : this._reconnectionDelayMax;}, n.prototype.timeout = function (t) {return arguments.length ? (this._timeout = t, this) : this._timeout;}, n.prototype.maybeReconnectOnOpen = function () {!this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();}, n.prototype.open = n.prototype.connect = function (t, e) {if (~this.readyState.indexOf("open")) return this;this.engine = i(this.uri, this.opts);var r = this.engine,n = this;this.readyState = "opening", this.skipReconnect = !1;var o = p(r, "open", function () {n.onopen(), t && t();}),s = p(r, "error", function (e) {if (n.cleanup(), n.readyState = "closed", n.emitAll("connect_error", e), t) {var r = new Error("Connection error");r.data = e, t(r);} else n.maybeReconnectOnOpen();});if (!1 !== this._timeout) {var a = this._timeout,c = setTimeout(function () {o.destroy(), r.close(), r.emit("error", "timeout"), n.emitAll("connect_timeout", a);}, a);this.subs.push({ destroy: function destroy() {clearTimeout(c);} });}return this.subs.push(o), this.subs.push(s), this;}, n.prototype.onopen = function () {this.cleanup(), this.readyState = "open", this.emit("open");var t = this.engine;this.subs.push(p(t, "data", h(this, "ondata"))), this.subs.push(p(t, "ping", h(this, "onping"))), this.subs.push(p(t, "pong", h(this, "onpong"))), this.subs.push(p(t, "error", h(this, "onerror"))), this.subs.push(p(t, "close", h(this, "onclose"))), this.subs.push(p(this.decoder, "decoded", h(this, "ondecoded")));}, n.prototype.onping = function () {this.lastPing = new Date(), this.emitAll("ping");}, n.prototype.onpong = function () {this.emitAll("pong", new Date() - this.lastPing);}, n.prototype.ondata = function (t) {this.decoder.add(t);}, n.prototype.ondecoded = function (t) {this.emit("packet", t);}, n.prototype.onerror = function (t) {this.emitAll("error", t);}, n.prototype.socket = function (t, e) {function r() {~u(o.connecting, n) || o.connecting.push(n);}var n = this.nsps[t];if (!n) {n = new s(this, t, e), this.nsps[t] = n;var o = this;n.on("connecting", r), n.on("connect", function () {n.id = o.generateId(t);}), this.autoConnect && r();}return n;}, n.prototype.destroy = function (t) {var e = u(this.connecting, t);~e && this.connecting.splice(e, 1), this.connecting.length || this.close();}, n.prototype.packet = function (t) {var e = this;t.query && 0 === t.type && (t.nsp += "?" + t.query), e.encoding ? e.packetBuffer.push(t) : (e.encoding = !0, this.encoder.encode(t, function (r) {for (var n = 0; n < r.length; n++) {e.engine.write(r[n], t.options);}e.encoding = !1, e.processPacketQueue();}));}, n.prototype.processPacketQueue = function () {if (this.packetBuffer.length > 0 && !this.encoding) {var t = this.packetBuffer.shift();this.packet(t);}}, n.prototype.cleanup = function () {for (var t = this.subs.length, e = 0; e < t; e++) {var r = this.subs.shift();r.destroy();}this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy();}, n.prototype.close = n.prototype.disconnect = function () {this.skipReconnect = !0, this.reconnecting = !1, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close();}, n.prototype.onclose = function (t) {this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", t), this._reconnection && !this.skipReconnect && this.reconnect();}, n.prototype.reconnect = function () {if (this.reconnecting || this.skipReconnect) return this;var t = this;if (this.backoff.attempts >= this._reconnectionAttempts) this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1;else {var e = this.backoff.duration();this.reconnecting = !0;var r = setTimeout(function () {t.skipReconnect || (t.emitAll("reconnect_attempt", t.backoff.attempts), t.emitAll("reconnecting", t.backoff.attempts), t.skipReconnect || t.open(function (e) {e ? (t.reconnecting = !1, t.reconnect(), t.emitAll("reconnect_error", e.data)) : t.onreconnect();}));}, e);this.subs.push({ destroy: function destroy() {clearTimeout(r);} });}}, n.prototype.onreconnect = function () {var t = this.backoff.attempts;this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", t);};}, function (t, e, r) {t.exports = r(11), t.exports.parser = r(18);}, function (t, e, r) {function n(t, e) {return this instanceof n ? (e = e || {}, t && "object" == typeof t && (e = t, t = null), t ? (t = p(t), e.hostname = t.host, e.secure = "https" === t.protocol || "wss" === t.protocol, e.port = t.port, t.query && (e.query = t.query)) : e.host && (e.hostname = p(e.host).host), this.secure = null != e.secure ? e.secure : "undefined" != typeof location && "https:" === location.protocol, e.hostname && !e.port && (e.port = this.secure ? "443" : "80"), this.agent = e.agent || !1, this.hostname = e.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = e.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = e.query || {}, "string" == typeof this.query && (this.query = h.decode(this.query)), this.upgrade = !1 !== e.upgrade, this.path = (e.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!e.forceJSONP, this.jsonp = !1 !== e.jsonp, this.forceBase64 = !!e.forceBase64, this.enablesXDR = !!e.enablesXDR, this.timestampParam = e.timestampParam || "t", this.timestampRequests = e.timestampRequests, this.transports = e.transports || ["polling", "websocket"], this.transportOptions = e.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = e.policyPort || 843, this.rememberUpgrade = e.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = e.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== e.perMessageDeflate && (e.perMessageDeflate || {}), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = e.pfx || null, this.key = e.key || null, this.passphrase = e.passphrase || null, this.cert = e.cert || null, this.ca = e.ca || null, this.ciphers = e.ciphers || null, this.rejectUnauthorized = void 0 === e.rejectUnauthorized || e.rejectUnauthorized, this.forceNode = !!e.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (e.extraHeaders && Object.keys(e.extraHeaders).length > 0 && (this.extraHeaders = e.extraHeaders), e.localAddress && (this.localAddress = e.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, void this.open()) : new n(t, e);}function o(t) {var e = {};for (var r in t) {t.hasOwnProperty(r) && (e[r] = t[r]);}return e;}var i = r(12),s = r(5),a = (r(3)("engine.io-client:socket"), r(32)),c = r(18),p = r(2),h = r(26);t.exports = n, n.priorWebsocketSuccess = !1, s(n.prototype), n.protocol = c.protocol, n.Socket = n, n.Transport = r(17), n.transports = r(12), n.parser = r(18), n.prototype.createTransport = function (t) {var e = o(this.query);e.EIO = c.protocol, e.transport = t;var r = this.transportOptions[t] || {};this.id && (e.sid = this.id);var n = new i[t]({ query: e, socket: this, agent: r.agent || this.agent, hostname: r.hostname || this.hostname, port: r.port || this.port, secure: r.secure || this.secure, path: r.path || this.path, forceJSONP: r.forceJSONP || this.forceJSONP, jsonp: r.jsonp || this.jsonp, forceBase64: r.forceBase64 || this.forceBase64, enablesXDR: r.enablesXDR || this.enablesXDR, timestampRequests: r.timestampRequests || this.timestampRequests, timestampParam: r.timestampParam || this.timestampParam, policyPort: r.policyPort || this.policyPort, pfx: r.pfx || this.pfx, key: r.key || this.key, passphrase: r.passphrase || this.passphrase, cert: r.cert || this.cert, ca: r.ca || this.ca, ciphers: r.ciphers || this.ciphers, rejectUnauthorized: r.rejectUnauthorized || this.rejectUnauthorized, perMessageDeflate: r.perMessageDeflate || this.perMessageDeflate, extraHeaders: r.extraHeaders || this.extraHeaders, forceNode: r.forceNode || this.forceNode, localAddress: r.localAddress || this.localAddress, requestTimeout: r.requestTimeout || this.requestTimeout, protocols: r.protocols || void 0, isReactNative: this.isReactNative });return n;}, n.prototype.open = function () {var t;if (this.rememberUpgrade && n.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) t = "websocket";else {if (0 === this.transports.length) {var e = this;return void setTimeout(function () {e.emit("error", "No transports available");}, 0);}t = this.transports[0];}this.readyState = "opening";try {t = this.createTransport(t);} catch (t) {return this.transports.shift(), void this.open();}t.open(), this.setTransport(t);}, n.prototype.setTransport = function (t) {var e = this;this.transport && this.transport.removeAllListeners(), this.transport = t, t.on("drain", function () {e.onDrain();}).on("packet", function (t) {e.onPacket(t);}).on("error", function (t) {e.onError(t);}).on("close", function () {e.onClose("transport close");});}, n.prototype.probe = function (t) {function e() {if (u.onlyBinaryUpgrades) {var t = !this.supportsBinary && u.transport.supportsBinary;h = h || t;}h || (p.send([{ type: "ping", data: "probe" }]), p.once("packet", function (t) {if (!h) if ("pong" === t.type && "probe" === t.data) {if (u.upgrading = !0, u.emit("upgrading", p), !p) return;n.priorWebsocketSuccess = "websocket" === p.name, u.transport.pause(function () {h || "closed" !== u.readyState && (c(), u.setTransport(p), p.send([{ type: "upgrade" }]), u.emit("upgrade", p), p = null, u.upgrading = !1, u.flush());});} else {var e = new Error("probe error");e.transport = p.name, u.emit("upgradeError", e);}}));}function r() {h || (h = !0, c(), p.close(), p = null);}function o(t) {var e = new Error("probe error: " + t);e.transport = p.name, r(), u.emit("upgradeError", e);}function i() {o("transport closed");}function s() {o("socket closed");}function a(t) {p && t.name !== p.name && r();}function c() {p.removeListener("open", e), p.removeListener("error", o), p.removeListener("close", i), u.removeListener("close", s), u.removeListener("upgrading", a);}var p = this.createTransport(t, { probe: 1 }),h = !1,u = this;n.priorWebsocketSuccess = !1, p.once("open", e), p.once("error", o), p.once("close", i), this.once("close", s), this.once("upgrading", a), p.open();}, n.prototype.onOpen = function () {if (this.readyState = "open", n.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause) for (var t = 0, e = this.upgrades.length; t < e; t++) {this.probe(this.upgrades[t]);}}, n.prototype.onPacket = function (t) {if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (this.emit("packet", t), this.emit("heartbeat"), t.type) {case "open":this.onHandshake(JSON.parse(t.data));break;case "pong":this.setPing(), this.emit("pong");break;case "error":var e = new Error("server error");e.code = t.data, this.onError(e);break;case "message":this.emit("data", t.data), this.emit("message", t.data);}}, n.prototype.onHandshake = function (t) {this.emit("handshake", t), this.id = t.sid, this.transport.query.sid = t.sid, this.upgrades = this.filterUpgrades(t.upgrades), this.pingInterval = t.pingInterval, this.pingTimeout = t.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));}, n.prototype.onHeartbeat = function (t) {clearTimeout(this.pingTimeoutTimer);var e = this;e.pingTimeoutTimer = setTimeout(function () {"closed" !== e.readyState && e.onClose("ping timeout");}, t || e.pingInterval + e.pingTimeout);}, n.prototype.setPing = function () {var t = this;clearTimeout(t.pingIntervalTimer), t.pingIntervalTimer = setTimeout(function () {t.ping(), t.onHeartbeat(t.pingTimeout);}, t.pingInterval);}, n.prototype.ping = function () {var t = this;this.sendPacket("ping", function () {t.emit("ping");});}, n.prototype.onDrain = function () {this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush();}, n.prototype.flush = function () {"closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));}, n.prototype.write = n.prototype.send = function (t, e, r) {return this.sendPacket("message", t, e, r), this;}, n.prototype.sendPacket = function (t, e, r, n) {if ("function" == typeof e && (n = e, e = void 0), "function" == typeof r && (n = r, r = null), "closing" !== this.readyState && "closed" !== this.readyState) {r = r || {}, r.compress = !1 !== r.compress;var o = { type: t, data: e, options: r };this.emit("packetCreate", o), this.writeBuffer.push(o), n && this.once("flush", n), this.flush();}}, n.prototype.close = function () {function t() {n.onClose("forced close"), n.transport.close();}function e() {n.removeListener("upgrade", e), n.removeListener("upgradeError", e), t();}function r() {n.once("upgrade", e), n.once("upgradeError", e);}if ("opening" === this.readyState || "open" === this.readyState) {this.readyState = "closing";var n = this;this.writeBuffer.length ? this.once("drain", function () {this.upgrading ? r() : t();}) : this.upgrading ? r() : t();}return this;}, n.prototype.onError = function (t) {n.priorWebsocketSuccess = !1, this.emit("error", t), this.onClose("transport error", t);}, n.prototype.onClose = function (t, e) {if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {var r = this;clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", t, e), r.writeBuffer = [], r.prevBufferLen = 0;}}, n.prototype.filterUpgrades = function (t) {for (var e = [], r = 0, n = t.length; r < n; r++) {~a(this.transports, t[r]) && e.push(t[r]);}return e;};}, function (t, e, r) {function n(t) {var e,r = !1,n = !1,a = !1 !== t.jsonp;if ("undefined" != typeof location) {var c = "https:" === location.protocol,p = location.port;p || (p = c ? 443 : 80), r = t.hostname !== location.hostname || p !== t.port, n = t.secure !== c;}if (t.xdomain = r, t.xscheme = n, e = new o(t), "open" in e && !t.forceJSONP) return new i(t);if (!a) throw new Error("JSONP disabled");return new s(t);}var o = r(13),i = r(15),s = r(29),a = r(30);e.polling = n, e.websocket = a;}, function (t, e, r) {var n = r(14);t.exports = function (t) {var e = t.xdomain,r = t.xscheme,o = t.enablesXDR;try {if ("undefined" != typeof XMLHttpRequest && (!e || n)) return new XMLHttpRequest();} catch (t) {}try {if ("undefined" != typeof XDomainRequest && !r && o) return new XDomainRequest();} catch (t) {}if (!e) try {return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");} catch (t) {}};}, function (t, e) {try {t.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();} catch (e) {t.exports = !1;}}, function (t, e, r) {function n() {}function o(t) {if (c.call(this, t), this.requestTimeout = t.requestTimeout, this.extraHeaders = t.extraHeaders, "undefined" != typeof location) {var e = "https:" === location.protocol,r = location.port;r || (r = e ? 443 : 80), this.xd = "undefined" != typeof location && t.hostname !== location.hostname || r !== t.port, this.xs = t.secure !== e;}}function i(t) {this.method = t.method || "GET", this.uri = t.uri, this.xd = !!t.xd, this.xs = !!t.xs, this.async = !1 !== t.async, this.data = void 0 !== t.data ? t.data : null, this.agent = t.agent, this.isBinary = t.isBinary, this.supportsBinary = t.supportsBinary, this.enablesXDR = t.enablesXDR, this.requestTimeout = t.requestTimeout, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.extraHeaders = t.extraHeaders, this.create();}function s() {for (var t in i.requests) {i.requests.hasOwnProperty(t) && i.requests[t].abort();}}var a = r(13),c = r(16),p = r(5),h = r(27);r(3)("engine.io-client:polling-xhr");if (t.exports = o, t.exports.Request = i, h(o, c), o.prototype.supportsBinary = !0, o.prototype.request = function (t) {return t = t || {}, t.uri = this.uri(), t.xd = this.xd, t.xs = this.xs, t.agent = this.agent || !1, t.supportsBinary = this.supportsBinary, t.enablesXDR = this.enablesXDR, t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized, t.requestTimeout = this.requestTimeout, t.extraHeaders = this.extraHeaders, new i(t);}, o.prototype.doWrite = function (t, e) {var r = "string" != typeof t && void 0 !== t,n = this.request({ method: "POST", data: t, isBinary: r }),o = this;n.on("success", e), n.on("error", function (t) {o.onError("xhr post error", t);}), this.sendXhr = n;}, o.prototype.doPoll = function () {var t = this.request(),e = this;t.on("data", function (t) {e.onData(t);}), t.on("error", function (t) {e.onError("xhr poll error", t);}), this.pollXhr = t;}, p(i.prototype), i.prototype.create = function () {var t = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized;var e = this.xhr = new a(t),r = this;try {e.open(this.method, this.uri, this.async);try {if (this.extraHeaders) {e.setDisableHeaderCheck && e.setDisableHeaderCheck(!0);for (var n in this.extraHeaders) {this.extraHeaders.hasOwnProperty(n) && e.setRequestHeader(n, this.extraHeaders[n]);}}} catch (t) {}if ("POST" === this.method) try {this.isBinary ? e.setRequestHeader("Content-type", "application/octet-stream") : e.setRequestHeader("Content-type", "text/plain;charset=UTF-8");} catch (t) {}try {e.setRequestHeader("Accept", "*/*");} catch (t) {}"withCredentials" in e && (e.withCredentials = !0), this.requestTimeout && (e.timeout = this.requestTimeout), this.hasXDR() ? (e.onload = function () {r.onLoad();}, e.onerror = function () {r.onError(e.responseText);}) : e.onreadystatechange = function () {if (2 === e.readyState) try {var t = e.getResponseHeader("Content-Type");r.supportsBinary && "application/octet-stream" === t && (e.responseType = "arraybuffer");} catch (t) {}4 === e.readyState && (200 === e.status || 1223 === e.status ? r.onLoad() : setTimeout(function () {r.onError(e.status);}, 0));}, e.send(this.data);} catch (t) {return void setTimeout(function () {r.onError(t);}, 0);}"undefined" != typeof document && (this.index = i.requestsCount++, i.requests[this.index] = this);}, i.prototype.onSuccess = function () {this.emit("success"), this.cleanup();}, i.prototype.onData = function (t) {this.emit("data", t), this.onSuccess();}, i.prototype.onError = function (t) {this.emit("error", t), this.cleanup(!0);}, i.prototype.cleanup = function (t) {if ("undefined" != typeof this.xhr && null !== this.xhr) {if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = n : this.xhr.onreadystatechange = n, t) try {this.xhr.abort();} catch (t) {}"undefined" != typeof document && delete i.requests[this.index], this.xhr = null;}}, i.prototype.onLoad = function () {var t;try {var e;try {e = this.xhr.getResponseHeader("Content-Type");} catch (t) {}t = "application/octet-stream" === e ? this.xhr.response || this.xhr.responseText : this.xhr.responseText;} catch (t) {this.onError(t);}null != t && this.onData(t);}, i.prototype.hasXDR = function () {return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR;}, i.prototype.abort = function () {this.cleanup();}, i.requestsCount = 0, i.requests = {}, "undefined" != typeof document) if ("function" == typeof attachEvent) attachEvent("onunload", s);else if ("function" == typeof addEventListener) {var u = "onpagehide" in self ? "pagehide" : "unload";addEventListener(u, s, !1);}}, function (t, e, r) {function n(t) {var e = t && t.forceBase64;p && !e || (this.supportsBinary = !1), o.call(this, t);}var o = r(17),i = r(26),s = r(18),a = r(27),c = r(28);r(3)("engine.io-client:polling");t.exports = n;var p = function () {var t = r(13),e = new t({ xdomain: !1 });return null != e.responseType;}();a(n, o), n.prototype.name = "polling", n.prototype.doOpen = function () {this.poll();}, n.prototype.pause = function (t) {function e() {r.readyState = "paused", t();}var r = this;if (this.readyState = "pausing", this.polling || !this.writable) {var n = 0;this.polling && (n++, this.once("pollComplete", function () {--n || e();})), this.writable || (n++, this.once("drain", function () {--n || e();}));} else e();}, n.prototype.poll = function () {this.polling = !0, this.doPoll(), this.emit("poll");}, n.prototype.onData = function (t) {var e = this,r = function r(t, _r, n) {return "opening" === e.readyState && e.onOpen(), "close" === t.type ? (e.onClose(), !1) : void e.onPacket(t);};s.decodePayload(t, this.socket.binaryType, r), "closed" !== this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" === this.readyState && this.poll());}, n.prototype.doClose = function () {function t() {e.write([{ type: "close" }]);}var e = this;"open" === this.readyState ? t() : this.once("open", t);}, n.prototype.write = function (t) {var e = this;this.writable = !1;var r = function r() {e.writable = !0, e.emit("drain");};s.encodePayload(t, this.supportsBinary, function (t) {e.doWrite(t, r);});}, n.prototype.uri = function () {var t = this.query || {},e = this.secure ? "https" : "http",r = "";!1 !== this.timestampRequests && (t[this.timestampParam] = c()), this.supportsBinary || t.sid || (t.b64 = 1), t = i.encode(t), this.port && ("https" === e && 443 !== Number(this.port) || "http" === e && 80 !== Number(this.port)) && (r = ":" + this.port), t.length && (t = "?" + t);var n = this.hostname.indexOf(":") !== -1;return e + "://" + (n ? "[" + this.hostname + "]" : this.hostname) + r + this.path + t;};}, function (t, e, r) {function n(t) {this.path = t.path, this.hostname = t.hostname, this.port = t.port, this.secure = t.secure, this.query = t.query, this.timestampParam = t.timestampParam, this.timestampRequests = t.timestampRequests, this.readyState = "", this.agent = t.agent || !1, this.socket = t.socket, this.enablesXDR = t.enablesXDR, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.forceNode = t.forceNode, this.isReactNative = t.isReactNative, this.extraHeaders = t.extraHeaders, this.localAddress = t.localAddress;}var o = r(18),i = r(5);t.exports = n, i(n.prototype), n.prototype.onError = function (t, e) {var r = new Error(t);return r.type = "TransportError", r.description = e, this.emit("error", r), this;}, n.prototype.open = function () {return "closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this;}, n.prototype.close = function () {return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this;}, n.prototype.send = function (t) {if ("open" !== this.readyState) throw new Error("Transport not open");this.write(t);}, n.prototype.onOpen = function () {this.readyState = "open", this.writable = !0, this.emit("open");}, n.prototype.onData = function (t) {var e = o.decodePacket(t, this.socket.binaryType);this.onPacket(e);}, n.prototype.onPacket = function (t) {this.emit("packet", t);}, n.prototype.onClose = function () {this.readyState = "closed", this.emit("close");
    };}, function (t, e, r) {function n(t, r) {var n = "b" + e.packets[t.type] + t.data.data;return r(n);}function o(t, r, n) {if (!r) return e.encodeBase64Packet(t, n);var o = t.data,i = new Uint8Array(o),s = new Uint8Array(1 + o.byteLength);s[0] = v[t.type];for (var a = 0; a < i.length; a++) {s[a + 1] = i[a];}return n(s.buffer);}function i(t, r, n) {if (!r) return e.encodeBase64Packet(t, n);var o = new FileReader();return o.onload = function () {e.encodePacket({ type: t.type, data: o.result }, r, !0, n);}, o.readAsArrayBuffer(t.data);}function s(t, r, n) {if (!r) return e.encodeBase64Packet(t, n);if (g) return i(t, r, n);var o = new Uint8Array(1);o[0] = v[t.type];var s = new w([o.buffer, t.data]);return n(s);}function a(t) {try {t = d.decode(t, { strict: !1 });} catch (t) {return !1;}return t;}function c(t, e, r) {for (var n = new Array(t.length), o = l(t.length, r), i = function i(t, r, o) {e(r, function (e, r) {n[t] = r, o(e, n);});}, s = 0; s < t.length; s++) {i(s, t[s], o);}}var p,h = r(19),u = r(20),f = r(21),l = r(22),d = r(23);"undefined" != typeof ArrayBuffer && (p = r(24));var y = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent),m = "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent),g = y || m;e.protocol = 3;var v = e.packets = { open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6 },b = h(v),k = { type: "error", data: "parser error" },w = r(25);e.encodePacket = function (t, e, r, i) {"function" == typeof e && (i = e, e = !1), "function" == typeof r && (i = r, r = null);var a = void 0 === t.data ? void 0 : t.data.buffer || t.data;if ("undefined" != typeof ArrayBuffer && a instanceof ArrayBuffer) return o(t, e, i);if ("undefined" != typeof w && a instanceof w) return s(t, e, i);if (a && a.base64) return n(t, i);var c = v[t.type];return void 0 !== t.data && (c += r ? d.encode(String(t.data), { strict: !1 }) : String(t.data)), i("" + c);}, e.encodeBase64Packet = function (t, r) {var n = "b" + e.packets[t.type];if ("undefined" != typeof w && t.data instanceof w) {var o = new FileReader();return o.onload = function () {var t = o.result.split(",")[1];r(n + t);}, o.readAsDataURL(t.data);}var i;try {i = String.fromCharCode.apply(null, new Uint8Array(t.data));} catch (e) {for (var s = new Uint8Array(t.data), a = new Array(s.length), c = 0; c < s.length; c++) {a[c] = s[c];}i = String.fromCharCode.apply(null, a);}return n += btoa(i), r(n);}, e.decodePacket = function (t, r, n) {if (void 0 === t) return k;if ("string" == typeof t) {if ("b" === t.charAt(0)) return e.decodeBase64Packet(t.substr(1), r);if (n && (t = a(t), t === !1)) return k;var o = t.charAt(0);return Number(o) == o && b[o] ? t.length > 1 ? { type: b[o], data: t.substring(1) } : { type: b[o] } : k;}var i = new Uint8Array(t),o = i[0],s = f(t, 1);return w && "blob" === r && (s = new w([s])), { type: b[o], data: s };}, e.decodeBase64Packet = function (t, e) {var r = b[t.charAt(0)];if (!p) return { type: r, data: { base64: !0, data: t.substr(1) } };var n = p.decode(t.substr(1));return "blob" === e && w && (n = new w([n])), { type: r, data: n };}, e.encodePayload = function (t, r, n) {function o(t) {return t.length + ":" + t;}function i(t, n) {e.encodePacket(t, !!s && r, !1, function (t) {n(null, o(t));});}"function" == typeof r && (n = r, r = null);var s = u(t);return r && s ? w && !g ? e.encodePayloadAsBlob(t, n) : e.encodePayloadAsArrayBuffer(t, n) : t.length ? void c(t, i, function (t, e) {return n(e.join(""));}) : n("0:");}, e.decodePayload = function (t, r, n) {if ("string" != typeof t) return e.decodePayloadAsBinary(t, r, n);"function" == typeof r && (n = r, r = null);var o;if ("" === t) return n(k, 0, 1);for (var i, s, a = "", c = 0, p = t.length; c < p; c++) {var h = t.charAt(c);if (":" === h) {if ("" === a || a != (i = Number(a))) return n(k, 0, 1);if (s = t.substr(c + 1, i), a != s.length) return n(k, 0, 1);if (s.length) {if (o = e.decodePacket(s, r, !1), k.type === o.type && k.data === o.data) return n(k, 0, 1);var u = n(o, c + i, p);if (!1 === u) return;}c += i, a = "";} else a += h;}return "" !== a ? n(k, 0, 1) : void 0;}, e.encodePayloadAsArrayBuffer = function (t, r) {function n(t, r) {e.encodePacket(t, !0, !0, function (t) {return r(null, t);});}return t.length ? void c(t, n, function (t, e) {var n = e.reduce(function (t, e) {var r;return r = "string" == typeof e ? e.length : e.byteLength, t + r.toString().length + r + 2;}, 0),o = new Uint8Array(n),i = 0;return e.forEach(function (t) {var e = "string" == typeof t,r = t;if (e) {for (var n = new Uint8Array(t.length), s = 0; s < t.length; s++) {n[s] = t.charCodeAt(s);}r = n.buffer;}e ? o[i++] = 0 : o[i++] = 1;for (var a = r.byteLength.toString(), s = 0; s < a.length; s++) {o[i++] = parseInt(a[s]);}o[i++] = 255;for (var n = new Uint8Array(r), s = 0; s < n.length; s++) {o[i++] = n[s];}}), r(o.buffer);}) : r(new ArrayBuffer(0));}, e.encodePayloadAsBlob = function (t, r) {function n(t, r) {e.encodePacket(t, !0, !0, function (t) {var e = new Uint8Array(1);if (e[0] = 1, "string" == typeof t) {for (var n = new Uint8Array(t.length), o = 0; o < t.length; o++) {n[o] = t.charCodeAt(o);}t = n.buffer, e[0] = 0;}for (var i = t instanceof ArrayBuffer ? t.byteLength : t.size, s = i.toString(), a = new Uint8Array(s.length + 1), o = 0; o < s.length; o++) {a[o] = parseInt(s[o]);}if (a[s.length] = 255, w) {var c = new w([e.buffer, a.buffer, t]);r(null, c);}});}c(t, n, function (t, e) {return r(new w(e));});}, e.decodePayloadAsBinary = function (t, r, n) {"function" == typeof r && (n = r, r = null);for (var o = t, i = []; o.byteLength > 0;) {for (var s = new Uint8Array(o), a = 0 === s[0], c = "", p = 1; 255 !== s[p]; p++) {if (c.length > 310) return n(k, 0, 1);c += s[p];}o = f(o, 2 + c.length), c = parseInt(c);var h = f(o, 0, c);if (a) try {h = String.fromCharCode.apply(null, new Uint8Array(h));} catch (t) {var u = new Uint8Array(h);h = "";for (var p = 0; p < u.length; p++) {h += String.fromCharCode(u[p]);}}i.push(h), o = f(o, c);}var l = i.length;i.forEach(function (t, o) {n(e.decodePacket(t, r, !0), o, l);});};}, function (t, e) {t.exports = Object.keys || function (t) {var e = [],r = Object.prototype.hasOwnProperty;for (var n in t) {r.call(t, n) && e.push(n);}return e;};}, function (t, e, r) {function n(t) {if (!t || "object" != typeof t) return !1;if (o(t)) {for (var e = 0, r = t.length; e < r; e++) {if (n(t[e])) return !0;}return !1;}if ("function" == typeof Buffer && Buffer.isBuffer && Buffer.isBuffer(t) || "function" == typeof ArrayBuffer && t instanceof ArrayBuffer || s && t instanceof Blob || a && t instanceof File) return !0;if (t.toJSON && "function" == typeof t.toJSON && 1 === arguments.length) return n(t.toJSON(), !0);for (var i in t) {if (Object.prototype.hasOwnProperty.call(t, i) && n(t[i])) return !0;}return !1;}var o = r(7),i = Object.prototype.toString,s = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob),a = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === i.call(File);t.exports = n;}, function (t, e) {t.exports = function (t, e, r) {var n = t.byteLength;if (e = e || 0, r = r || n, t.slice) return t.slice(e, r);if (e < 0 && (e += n), r < 0 && (r += n), r > n && (r = n), e >= n || e >= r || 0 === n) return new ArrayBuffer(0);for (var o = new Uint8Array(t), i = new Uint8Array(r - e), s = e, a = 0; s < r; s++, a++) {i[a] = o[s];}return i.buffer;};}, function (t, e) {function r(t, e, r) {function o(t, n) {if (o.count <= 0) throw new Error("after called too many times");--o.count, t ? (i = !0, e(t), e = r) : 0 !== o.count || i || e(null, n);}var i = !1;return r = r || n, o.count = t, 0 === t ? e() : o;}function n() {}t.exports = r;}, function (t, e) {function r(t) {for (var e, r, n = [], o = 0, i = t.length; o < i;) {e = t.charCodeAt(o++), e >= 55296 && e <= 56319 && o < i ? (r = t.charCodeAt(o++), 56320 == (64512 & r) ? n.push(((1023 & e) << 10) + (1023 & r) + 65536) : (n.push(e), o--)) : n.push(e);}return n;}function n(t) {for (var e, r = t.length, n = -1, o = ""; ++n < r;) {e = t[n], e > 65535 && (e -= 65536, o += d(e >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), o += d(e);}return o;}function o(t, e) {if (t >= 55296 && t <= 57343) {if (e) throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value");return !1;}return !0;}function i(t, e) {return d(t >> e & 63 | 128);}function s(t, e) {if (0 == (4294967168 & t)) return d(t);var r = "";return 0 == (4294965248 & t) ? r = d(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (o(t, e) || (t = 65533), r = d(t >> 12 & 15 | 224), r += i(t, 6)) : 0 == (4292870144 & t) && (r = d(t >> 18 & 7 | 240), r += i(t, 12), r += i(t, 6)), r += d(63 & t | 128);}function a(t, e) {e = e || {};for (var n, o = !1 !== e.strict, i = r(t), a = i.length, c = -1, p = ""; ++c < a;) {n = i[c], p += s(n, o);}return p;}function c() {if (l >= f) throw Error("Invalid byte index");var t = 255 & u[l];if (l++, 128 == (192 & t)) return 63 & t;throw Error("Invalid continuation byte");}function p(t) {var e, r, n, i, s;if (l > f) throw Error("Invalid byte index");if (l == f) return !1;if (e = 255 & u[l], l++, 0 == (128 & e)) return e;if (192 == (224 & e)) {if (r = c(), s = (31 & e) << 6 | r, s >= 128) return s;throw Error("Invalid continuation byte");}if (224 == (240 & e)) {if (r = c(), n = c(), s = (15 & e) << 12 | r << 6 | n, s >= 2048) return o(s, t) ? s : 65533;throw Error("Invalid continuation byte");}if (240 == (248 & e) && (r = c(), n = c(), i = c(), s = (7 & e) << 18 | r << 12 | n << 6 | i, s >= 65536 && s <= 1114111)) return s;throw Error("Invalid UTF-8 detected");}function h(t, e) {e = e || {};var o = !1 !== e.strict;u = r(t), f = u.length, l = 0;for (var i, s = []; (i = p(o)) !== !1;) {s.push(i);}return n(s);} /*! https://mths.be/utf8js v2.1.2 by @mathias */
    var u,f,l,d = String.fromCharCode;t.exports = { version: "2.1.2", encode: a, decode: h };}, function (t, e) {!function () {"use strict";for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = new Uint8Array(256), n = 0; n < t.length; n++) {r[t.charCodeAt(n)] = n;}e.encode = function (e) {var r,n = new Uint8Array(e),o = n.length,i = "";for (r = 0; r < o; r += 3) {i += t[n[r] >> 2], i += t[(3 & n[r]) << 4 | n[r + 1] >> 4], i += t[(15 & n[r + 1]) << 2 | n[r + 2] >> 6], i += t[63 & n[r + 2]];}return o % 3 === 2 ? i = i.substring(0, i.length - 1) + "=" : o % 3 === 1 && (i = i.substring(0, i.length - 2) + "=="), i;}, e.decode = function (t) {var e,n,o,i,s,a = .75 * t.length,c = t.length,p = 0;"=" === t[t.length - 1] && (a--, "=" === t[t.length - 2] && a--);var h = new ArrayBuffer(a),u = new Uint8Array(h);for (e = 0; e < c; e += 4) {n = r[t.charCodeAt(e)], o = r[t.charCodeAt(e + 1)], i = r[t.charCodeAt(e + 2)], s = r[t.charCodeAt(e + 3)], u[p++] = n << 2 | o >> 4, u[p++] = (15 & o) << 4 | i >> 2, u[p++] = (3 & i) << 6 | 63 & s;}return h;};}();}, function (t, e) {function r(t) {return t.map(function (t) {if (t.buffer instanceof ArrayBuffer) {var e = t.buffer;if (t.byteLength !== e.byteLength) {var r = new Uint8Array(t.byteLength);r.set(new Uint8Array(e, t.byteOffset, t.byteLength)), e = r.buffer;}return e;}return t;});}function n(t, e) {e = e || {};var n = new i();return r(t).forEach(function (t) {n.append(t);}), e.type ? n.getBlob(e.type) : n.getBlob();}function o(t, e) {return new Blob(r(t), e || {});}var i = "undefined" != typeof i ? i : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder,s = function () {try {var t = new Blob(["hi"]);return 2 === t.size;} catch (t) {return !1;}}(),a = s && function () {try {var t = new Blob([new Uint8Array([1, 2])]);return 2 === t.size;} catch (t) {return !1;}}(),c = i && i.prototype.append && i.prototype.getBlob;"undefined" != typeof Blob && (n.prototype = Blob.prototype, o.prototype = Blob.prototype), t.exports = function () {return s ? a ? Blob : o : c ? n : void 0;}();}, function (t, e) {e.encode = function (t) {var e = "";for (var r in t) {t.hasOwnProperty(r) && (e.length && (e += "&"), e += encodeURIComponent(r) + "=" + encodeURIComponent(t[r]));}return e;}, e.decode = function (t) {for (var e = {}, r = t.split("&"), n = 0, o = r.length; n < o; n++) {var i = r[n].split("=");e[decodeURIComponent(i[0])] = decodeURIComponent(i[1]);}return e;};}, function (t, e) {t.exports = function (t, e) {var r = function r() {};r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;};}, function (t, e) {"use strict";function r(t) {var e = "";do {e = s[t % a] + e, t = Math.floor(t / a);} while (t > 0);return e;}function n(t) {var e = 0;for (h = 0; h < t.length; h++) {e = e * a + c[t.charAt(h)];}return e;}function o() {var t = r(+new Date());return t !== i ? (p = 0, i = t) : t + "." + r(p++);}for (var i, s = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), a = 64, c = {}, p = 0, h = 0; h < a; h++) {c[s[h]] = h;}o.encode = r, o.decode = n, t.exports = o;}, function (t, e, r) {(function (e) {function n() {}function o() {return "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof e ? e : {};}function i(t) {if (s.call(this, t), this.query = this.query || {}, !c) {var e = o();c = e.___eio = e.___eio || [];}this.index = c.length;var r = this;c.push(function (t) {r.onData(t);}), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {r.script && (r.script.onerror = n);}, !1);}var s = r(16),a = r(27);t.exports = i;var c,p = /\n/g,h = /\\n/g;a(i, s), i.prototype.supportsBinary = !1, i.prototype.doClose = function () {this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), s.prototype.doClose.call(this);}, i.prototype.doPoll = function () {var t = this,e = document.createElement("script");this.script && (this.script.parentNode.removeChild(this.script), this.script = null), e.async = !0, e.src = this.uri(), e.onerror = function (e) {t.onError("jsonp poll error", e);};var r = document.getElementsByTagName("script")[0];r ? r.parentNode.insertBefore(e, r) : (document.head || document.body).appendChild(e), this.script = e;var n = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent);n && setTimeout(function () {var t = document.createElement("iframe");document.body.appendChild(t), document.body.removeChild(t);}, 100);}, i.prototype.doWrite = function (t, e) {function r() {n(), e();}function n() {if (o.iframe) try {o.form.removeChild(o.iframe);} catch (t) {o.onError("jsonp polling iframe removal error", t);}try {var t = '<iframe src="javascript:0" name="' + o.iframeId + '">';i = document.createElement(t);} catch (t) {i = document.createElement("iframe"), i.name = o.iframeId, i.src = "javascript:0";}i.id = o.iframeId, o.form.appendChild(i), o.iframe = i;}var o = this;if (!this.form) {var i,s = document.createElement("form"),a = document.createElement("textarea"),c = this.iframeId = "eio_iframe_" + this.index;s.className = "socketio", s.style.position = "absolute", s.style.top = "-1000px", s.style.left = "-1000px", s.target = c, s.method = "POST", s.setAttribute("accept-charset", "utf-8"), a.name = "d", s.appendChild(a), document.body.appendChild(s), this.form = s, this.area = a;}this.form.action = this.uri(), n(), t = t.replace(h, "\\\n"), this.area.value = t.replace(p, "\\n");try {this.form.submit();} catch (t) {}this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {"complete" === o.iframe.readyState && r();} : this.iframe.onload = r;};}).call(e, function () {return this;}());}, function (t, e, r) {function n(t) {var e = t && t.forceBase64;e && (this.supportsBinary = !1), this.perMessageDeflate = t.perMessageDeflate, this.usingBrowserWebSocket = o && !t.forceNode, this.protocols = t.protocols, this.usingBrowserWebSocket || (u = i), s.call(this, t);}var o,i,s = r(17),a = r(18),c = r(26),p = r(27),h = r(28);r(3)("engine.io-client:websocket");if ("undefined" == typeof self) try {i = r(31);} catch (t) {} else o = self.WebSocket || self.MozWebSocket;var u = o || i;t.exports = n, p(n, s), n.prototype.name = "websocket", n.prototype.supportsBinary = !0, n.prototype.doOpen = function () {if (this.check()) {var t = this.uri(),e = this.protocols,r = { agent: this.agent, perMessageDeflate: this.perMessageDeflate };r.pfx = this.pfx, r.key = this.key, r.passphrase = this.passphrase, r.cert = this.cert, r.ca = this.ca, r.ciphers = this.ciphers, r.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (r.headers = this.extraHeaders), this.localAddress && (r.localAddress = this.localAddress);try {this.ws = this.usingBrowserWebSocket && !this.isReactNative ? e ? new u(t, e) : new u(t) : new u(t, e, r);} catch (t) {return this.emit("error", t);}void 0 === this.ws.binaryType && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners();}}, n.prototype.addEventListeners = function () {var t = this;this.ws.onopen = function () {t.onOpen();}, this.ws.onclose = function () {t.onClose();}, this.ws.onmessage = function (e) {t.onData(e.data);}, this.ws.onerror = function (e) {t.onError("websocket error", e);};}, n.prototype.write = function (t) {function e() {r.emit("flush"), setTimeout(function () {r.writable = !0, r.emit("drain");}, 0);}var r = this;this.writable = !1;for (var n = t.length, o = 0, i = n; o < i; o++) {!function (t) {a.encodePacket(t, r.supportsBinary, function (o) {if (!r.usingBrowserWebSocket) {var i = {};if (t.options && (i.compress = t.options.compress), r.perMessageDeflate) {var s = "string" == typeof o ? Buffer.byteLength(o) : o.length;s < r.perMessageDeflate.threshold && (i.compress = !1);}}try {r.usingBrowserWebSocket ? r.ws.send(o) : r.ws.send(o, i);} catch (t) {}--n || e();});}(t[o]);}}, n.prototype.onClose = function () {s.prototype.onClose.call(this);}, n.prototype.doClose = function () {"undefined" != typeof this.ws && this.ws.close();}, n.prototype.uri = function () {var t = this.query || {},e = this.secure ? "wss" : "ws",r = "";this.port && ("wss" === e && 443 !== Number(this.port) || "ws" === e && 80 !== Number(this.port)) && (r = ":" + this.port), this.timestampRequests && (t[this.timestampParam] = h()), this.supportsBinary || (t.b64 = 1), t = c.encode(t), t.length && (t = "?" + t);var n = this.hostname.indexOf(":") !== -1;return e + "://" + (n ? "[" + this.hostname + "]" : this.hostname) + r + this.path + t;}, n.prototype.check = function () {return !(!u || "__initialize" in u && this.name === n.prototype.name);};}, function (t, e) {}, function (t, e) {var r = [].indexOf;t.exports = function (t, e) {if (r) return t.indexOf(e);for (var n = 0; n < t.length; ++n) {if (t[n] === e) return n;}return -1;};}, function (t, e, r) {"use strict";function n(t, e, r) {this.io = t, this.nsp = e, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.flags = {}, r && r.query && (this.query = r.query), this.io.autoConnect && this.open();}var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {return typeof t;} : function (t) {return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;},i = r(4),s = r(5),a = r(34),c = r(35),p = r(36),h = (r(3)("socket.io-client:socket"), r(26)),u = r(20);t.exports = e = n;var f = { connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1 },l = s.prototype.emit;s(n.prototype), n.prototype.subEvents = function () {if (!this.subs) {var t = this.io;this.subs = [c(t, "open", p(this, "onopen")), c(t, "packet", p(this, "onpacket")), c(t, "close", p(this, "onclose"))];}}, n.prototype.open = n.prototype.connect = function () {return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);}, n.prototype.send = function () {var t = a(arguments);return t.unshift("message"), this.emit.apply(this, t), this;}, n.prototype.emit = function (t) {if (f.hasOwnProperty(t)) return l.apply(this, arguments), this;var e = a(arguments),r = { type: (void 0 !== this.flags.binary ? this.flags.binary : u(e)) ? i.BINARY_EVENT : i.EVENT, data: e };return r.options = {}, r.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof e[e.length - 1] && (this.acks[this.ids] = e.pop(), r.id = this.ids++), this.connected ? this.packet(r) : this.sendBuffer.push(r), this.flags = {}, this;}, n.prototype.packet = function (t) {t.nsp = this.nsp, this.io.packet(t);}, n.prototype.onopen = function () {if ("/" !== this.nsp) if (this.query) {var t = "object" === o(this.query) ? h.encode(this.query) : this.query;this.packet({ type: i.CONNECT, query: t });} else this.packet({ type: i.CONNECT });}, n.prototype.onclose = function (t) {this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", t);}, n.prototype.onpacket = function (t) {var e = t.nsp === this.nsp,r = t.type === i.ERROR && "/" === t.nsp;if (e || r) switch (t.type) {case i.CONNECT:this.onconnect();break;case i.EVENT:this.onevent(t);break;case i.BINARY_EVENT:this.onevent(t);break;case i.ACK:this.onack(t);break;case i.BINARY_ACK:this.onack(t);break;case i.DISCONNECT:this.ondisconnect();break;case i.ERROR:this.emit("error", t.data);}}, n.prototype.onevent = function (t) {var e = t.data || [];null != t.id && e.push(this.ack(t.id)), this.connected ? l.apply(this, e) : this.receiveBuffer.push(e);}, n.prototype.ack = function (t) {var e = this,r = !1;return function () {if (!r) {r = !0;var n = a(arguments);e.packet({ type: u(n) ? i.BINARY_ACK : i.ACK, id: t, data: n });}};}, n.prototype.onack = function (t) {var e = this.acks[t.id];"function" == typeof e && (e.apply(this, t.data), delete this.acks[t.id]);}, n.prototype.onconnect = function () {this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered();}, n.prototype.emitBuffered = function () {var t;for (t = 0; t < this.receiveBuffer.length; t++) {l.apply(this, this.receiveBuffer[t]);}for (this.receiveBuffer = [], t = 0; t < this.sendBuffer.length; t++) {this.packet(this.sendBuffer[t]);}this.sendBuffer = [];}, n.prototype.ondisconnect = function () {this.destroy(), this.onclose("io server disconnect");}, n.prototype.destroy = function () {if (this.subs) {for (var t = 0; t < this.subs.length; t++) {this.subs[t].destroy();}this.subs = null;}this.io.destroy(this);}, n.prototype.close = n.prototype.disconnect = function () {return this.connected && this.packet({ type: i.DISCONNECT }), this.destroy(), this.connected && this.onclose("io client disconnect"), this;}, n.prototype.compress = function (t) {return this.flags.compress = t, this;}, n.prototype.binary = function (t) {return this.flags.binary = t, this;};}, function (t, e) {function r(t, e) {var r = [];e = e || 0;for (var n = e || 0; n < t.length; n++) {r[n - e] = t[n];}return r;}t.exports = r;}, function (t, e) {"use strict";function r(t, e, r) {return t.on(e, r), { destroy: function destroy() {t.removeListener(e, r);} };}t.exports = r;}, function (t, e) {var r = [].slice;t.exports = function (t, e) {if ("string" == typeof e && (e = t[e]), "function" != typeof e) throw new Error("bind() requires a function");var n = r.call(arguments, 2);return function () {return e.apply(t, n.concat(r.call(arguments)));};};}, function (t, e) {function r(t) {t = t || {}, this.ms = t.min || 100, this.max = t.max || 1e4, this.factor = t.factor || 2, this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0, this.attempts = 0;}t.exports = r, r.prototype.duration = function () {var t = this.ms * Math.pow(this.factor, this.attempts++);if (this.jitter) {var e = Math.random(),r = Math.floor(e * this.jitter * t);t = 0 == (1 & Math.floor(10 * e)) ? t - r : t + r;}return 0 | Math.min(t, this.max);}, r.prototype.reset = function () {this.attempts = 0;}, r.prototype.setMin = function (t) {this.ms = t;}, r.prototype.setMax = function (t) {this.max = t;}, r.prototype.setJitter = function (t) {this.jitter = t;};}]);});
});
define('static/js/socket.io-client/lib/index.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";
/**
               * Module dependencies.
               */

var url = require('./url');
var parser = require('socket.io-parser');
var Manager = require('./manager');
var debug = require('debug')('socket.io-client');

/**
                                                   * Module exports.
                                                   */

module.exports = exports = lookup;

/**
                                    * Managers cache.
                                    */

var cache = exports.managers = {};

/**
                                    * Looks up an existing `Manager` for multiplexing.
                                    * If the user summons:
                                    *
                                    *   `io('http://localhost/a');`
                                    *   `io('http://localhost/b');`
                                    *
                                    * We reuse the existing instance based on same scheme/port/host,
                                    * and we initialize sockets for each namespace.
                                    *
                                    * @api public
                                    */

function lookup(uri, opts) {
  if (typeof uri === 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
  false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.query;
  }
  return io.socket(parsed.path, opts);
}

/**
   * Protocol version.
   *
   * @api public
   */

exports.protocol = parser.protocol;

/**
                                     * `connect`.
                                     *
                                     * @param {String} uri
                                     * @api public
                                     */

exports.connect = lookup;

/**
                           * Expose constructors for standalone build.
                           *
                           * @api public
                           */

exports.Manager = require('./manager');
exports.Socket = require('./socket');
});
define('static/js/socket.io-client/lib/manager.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";
/**
               * Module dependencies.
               */

var eio = require('engine.io-client');
var Socket = require('./socket');
var Emitter = require('component-emitter');
var parser = require('socket.io-parser');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:manager');
var indexOf = require('indexof');
var Backoff = require('backo2');

/**
                                  * IE6+ hasOwnProperty
                                  */

var has = Object.prototype.hasOwnProperty;

/**
                                            * Module exports
                                            */

module.exports = Manager;

/**
                           * `Manager` constructor.
                           *
                           * @param {String} engine instance or engine uri/opts
                           * @param {Object} options
                           * @api public
                           */

function Manager(uri, opts) {
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && 'object' === typeof uri) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor() });

  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  var _parser = opts.parser || parser;
  this.encoder = new _parser.Encoder();
  this.decoder = new _parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
   * Propagate given event to sockets and emit on `this`
   *
   * @api private
   */

Manager.prototype.emitAll = function () {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
    * Update `socket.id` of all sockets
    *
    * @api private
    */

Manager.prototype.updateSocketIds = function () {
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.generateId(nsp);
    }
  }
};

/**
    * generate `socket.id` for the given `nsp`
    *
    * @param {String} nsp
    * @return {String}
    * @api private
    */

Manager.prototype.generateId = function (nsp) {
  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;
};

/**
    * Mix in `Emitter`.
    */

Emitter(Manager.prototype);

/**
                             * Sets the `reconnection` config.
                             *
                             * @param {Boolean} true/false if it should automatically reconnect
                             * @return {Manager} self or value
                             * @api public
                             */

Manager.prototype.reconnection = function (v) {
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
    * Sets the reconnection attempts config.
    *
    * @param {Number} max reconnection attempts before giving up
    * @return {Manager} self or value
    * @api public
    */

Manager.prototype.reconnectionAttempts = function (v) {
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
    * Sets the delay between reconnections.
    *
    * @param {Number} delay
    * @return {Manager} self or value
    * @api public
    */

Manager.prototype.reconnectionDelay = function (v) {
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function (v) {
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
    * Sets the maximum delay between reconnections.
    *
    * @param {Number} delay
    * @return {Manager} self or value
    * @api public
    */

Manager.prototype.reconnectionDelayMax = function (v) {
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
    * Sets the connection timeout. `false` to disable
    *
    * @return {Manager} self or value
    * @api public
    */

Manager.prototype.timeout = function (v) {
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
    * Starts trying to reconnect if reconnection is enabled and we have not
    * started reconnecting yet
    *
    * @api private
    */

Manager.prototype.maybeReconnectOnOpen = function () {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};

/**
    * Sets the current transport `socket`.
    *
    * @param {Function} optional, callback
    * @return {Manager} self
    * @api public
    */

Manager.prototype.open =
Manager.prototype.connect = function (fn, opts) {
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function () {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function (data) {
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    // set timer
    var timer = setTimeout(function () {
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function destroy() {
        clearTimeout(timer);
      } });

  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
    * Called upon transport open.
    *
    * @api private
    */

Manager.prototype.onopen = function () {
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
    * Called upon a ping.
    *
    * @api private
    */

Manager.prototype.onping = function () {
  this.lastPing = new Date();
  this.emitAll('ping');
};

/**
    * Called upon a packet.
    *
    * @api private
    */

Manager.prototype.onpong = function () {
  this.emitAll('pong', new Date() - this.lastPing);
};

/**
    * Called with data.
    *
    * @api private
    */

Manager.prototype.ondata = function (data) {
  this.decoder.add(data);
};

/**
    * Called when parser fully decodes a packet.
    *
    * @api private
    */

Manager.prototype.ondecoded = function (packet) {
  this.emit('packet', packet);
};

/**
    * Called upon socket error.
    *
    * @api private
    */

Manager.prototype.onerror = function (err) {
  debug('error', err);
  this.emitAll('error', err);
};

/**
    * Creates a new socket for the given `nsp`.
    *
    * @return {Socket}
    * @api public
    */

Manager.prototype.socket = function (nsp, opts) {
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp, opts);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function () {
      socket.id = self.generateId(nsp);
    });

    if (this.autoConnect) {
      // manually call here since connecting event is fired before listening
      onConnecting();
    }
  }

  function onConnecting() {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
    * Called upon a socket close.
    *
    * @param {Socket} socket
    */

Manager.prototype.destroy = function (socket) {
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
    * Writes a packet.
    *
    * @param {Object} packet
    * @api private
    */

Manager.prototype.packet = function (packet) {
  debug('writing packet %j', packet);
  var self = this;
  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function (encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else {// add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
    * If packet buffer is non-empty, begins encoding the
    * next packet in line.
    *
    * @api private
    */

Manager.prototype.processPacketQueue = function () {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
    * Clean up transport subscriptions and packet buffer.
    *
    * @api private
    */

Manager.prototype.cleanup = function () {
  debug('cleanup');

  var subsLength = this.subs.length;
  for (var i = 0; i < subsLength; i++) {
    var sub = this.subs.shift();
    sub.destroy();
  }

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
    * Close the current socket.
    *
    * @api private
    */

Manager.prototype.close =
Manager.prototype.disconnect = function () {
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' === this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
    * Called upon engine close.
    *
    * @api private
    */

Manager.prototype.onclose = function (reason) {
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
    * Attempt a reconnection.
    *
    * @api private
    */

Manager.prototype.reconnect = function () {
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function () {
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function (err) {
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function destroy() {
        clearTimeout(timer);
      } });

  }
};

/**
    * Called upon successful reconnect.
    *
    * @api private
    */

Manager.prototype.onreconnect = function () {
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};
});
define('static/js/socket.io-client/lib/on.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";
/**
               * Module exports.
               */

module.exports = on;

/**
                      * Helper for subscriptions.
                      *
                      * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
                      * @param {String} event name
                      * @param {Function} callback
                      * @api public
                      */

function on(obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function destroy() {
      obj.removeListener(ev, fn);
    } };

}
});
define('static/js/socket.io-client/lib/socket.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";
/**
               * Module dependencies.
               */

var parser = require('socket.io-parser');
var Emitter = require('component-emitter');
var toArray = require('to-array');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:socket');
var parseqs = require('parseqs');
var hasBin = require('has-binary2');

/**
                                      * Module exports.
                                      */

module.exports = exports = Socket;

/**
                                    * Internal events (blacklisted).
                                    * These events can't be emitted by the user.
                                    *
                                    * @api private
                                    */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1 };


/**
              * Shortcut to `Emitter#emit`.
              */

var emit = Emitter.prototype.emit;

/**
                                    * `Socket` constructor.
                                    *
                                    * @api public
                                    */

function Socket(io, nsp, opts) {
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  this.flags = {};
  if (opts && opts.query) {
    this.query = opts.query;
  }
  if (this.io.autoConnect) this.open();
}

/**
   * Mix in `Emitter`.
   */

Emitter(Socket.prototype);

/**
                            * Subscribe to open, close and packet events
                            *
                            * @api private
                            */

Socket.prototype.subEvents = function () {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
  on(io, 'open', bind(this, 'onopen')),
  on(io, 'packet', bind(this, 'onpacket')),
  on(io, 'close', bind(this, 'onclose'))];

};

/**
    * "Opens" the socket.
    *
    * @api public
    */

Socket.prototype.open =
Socket.prototype.connect = function () {
  if (this.connected) return this;

  this.subEvents();
  this.io.open(); // ensure open
  if ('open' === this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
    * Sends a `message` event.
    *
    * @return {Socket} self
    * @api public
    */

Socket.prototype.send = function () {
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
    * Override `emit`.
    * If the event is in `events`, it's emitted normally.
    *
    * @param {String} event name
    * @return {Socket} self
    * @api public
    */

Socket.prototype.emit = function (ev) {
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var packet = {
    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
    data: args };


  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' === typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  this.flags = {};

  return this;
};

/**
    * Sends a packet.
    *
    * @param {Object} packet
    * @api private
    */

Socket.prototype.packet = function (packet) {
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
    * Called upon engine `open`.
    *
    * @api private
    */

Socket.prototype.onopen = function () {
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' !== this.nsp) {
    if (this.query) {
      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
      debug('sending connect packet with query %s', query);
      this.packet({ type: parser.CONNECT, query: query });
    } else {
      this.packet({ type: parser.CONNECT });
    }
  }
};

/**
    * Called upon engine `close`.
    *
    * @param {String} reason
    * @api private
    */

Socket.prototype.onclose = function (reason) {
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
    * Called with socket packet.
    *
    * @param {Object} packet
    * @api private
    */

Socket.prototype.onpacket = function (packet) {
  var sameNamespace = packet.nsp === this.nsp;
  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

  if (!sameNamespace && !rootNamespaceError) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;}

};

/**
    * Called upon a server event.
    *
    * @param {Object} packet
    * @api private
    */

Socket.prototype.onevent = function (packet) {
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
    * Produces an ack callback to emit with an event.
    *
    * @api private
    */

Socket.prototype.ack = function (id) {
  var self = this;
  var sent = false;
  return function () {
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    self.packet({
      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
      id: id,
      data: args });

  };
};

/**
    * Called upon a server acknowlegement.
    *
    * @param {Object} packet
    * @api private
    */

Socket.prototype.onack = function (packet) {
  var ack = this.acks[packet.id];
  if ('function' === typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
    * Called upon server connect.
    *
    * @api private
    */

Socket.prototype.onconnect = function () {
  this.connected = true;
  this.disconnected = false;
  this.emit('connect');
  this.emitBuffered();
};

/**
    * Emit buffered events (received and emitted).
    *
    * @api private
    */

Socket.prototype.emitBuffered = function () {
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
    * Called upon server disconnect.
    *
    * @api private
    */

Socket.prototype.ondisconnect = function () {
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
    * Called upon forced client/server side disconnections,
    * this method ensures the manager stops tracking us and
    * that reconnections don't get triggered for this.
    *
    * @api private.
    */

Socket.prototype.destroy = function () {
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
    * Disconnects the socket manually.
    *
    * @return {Socket} self
    * @api public
    */

Socket.prototype.close =
Socket.prototype.disconnect = function () {
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
    * Sets the compress flag.
    *
    * @param {Boolean} if `true`, compresses the sending data
    * @return {Socket} self
    * @api public
    */

Socket.prototype.compress = function (compress) {
  this.flags.compress = compress;
  return this;
};

/**
    * Sets the binary flag
    *
    * @param {Boolean} whether the emitted data contains binary
    * @return {Socket} self
    * @api public
    */

Socket.prototype.binary = function (binary) {
  this.flags.binary = binary;
  return this;
};
});
define('static/js/socket.io-client/lib/url.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";
/**
               * Module dependencies.
               */

var parseuri = require('parseuri');
var debug = require('debug')('socket.io-client:url');

/**
                                                       * Module exports.
                                                       */

module.exports = url;

/**
                       * URL parser.
                       *
                       * @param {String} url
                       * @param {Object} An object meant to mimic window.location.
                       *                 Defaults to window.location.
                       * @api public
                       */

function url(uri, loc) {
  var obj = uri;

  // default to window.location
  loc = loc || typeof location !== 'undefined' && location;
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' === typeof uri) {
    if ('/' === uri.charAt(0)) {
      if ('/' === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' !== typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);

  return obj;
}
});
define('static/js/socket.io-client/node_modules/debug/karma.conf.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; // Karma configuration
// Generated on Fri Dec 16 2016 13:09:51 GMT+0000 (UTC)

module.exports = function (config) {
  config.set({

    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: '',


    // frameworks to use
    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
    frameworks: ['mocha', 'chai', 'sinon'],


    // list of files / patterns to load in the browser
    files: [
    'dist/debug.js',
    'test/*spec.js'],



    // list of files to exclude
    exclude: [
    'src/node.js'],



    // preprocess matching files before serving them to the browser
    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
    preprocessors: {},


    // test results reporter to use
    // possible values: 'dots', 'progress'
    // available reporters: https://npmjs.org/browse/keyword/karma-reporter
    reporters: ['progress'],


    // web server port
    port: 9876,


    // enable / disable colors in the output (reporters and logs)
    colors: true,


    // level of logging
    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
    logLevel: config.LOG_INFO,


    // enable / disable watching file and executing tests whenever any file changes
    autoWatch: true,


    // start these browsers
    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
    browsers: ['PhantomJS'],


    // Continuous Integration mode
    // if true, Karma captures browsers, runs the tests and exits
    singleRun: false,

    // Concurrency level
    // how many browser should be started simultaneous
    concurrency: Infinity });

};
});
define('static/js/socket.io-client/node_modules/debug/node.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";module.exports = require('./src/node');
});
define('static/js/socket.io-client/node_modules/debug/src/browser.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /**
               * This is the web browser implementation of `debug()`.
               *
               * Expose `debug()` as the module.
               */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome &&
'undefined' != typeof chrome.storage ?
chrome.storage.local :
localstorage();

/**
                 * Colors.
                 */

exports.colors = [
'#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
'#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
'#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
'#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
'#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
'#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
'#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
'#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
'#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
'#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
'#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];


/**
                                                                    * Currently only WebKit-based Web Inspectors, Firefox >= v31,
                                                                    * and the Firebug extension (any Firefox version) are known
                                                                    * to support "%c" CSS customizations.
                                                                    *
                                                                    * TODO: add a `localStorage` variable to explicitly enable/disable colors
                                                                    */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||
  // is firebug? http://stackoverflow.com/a/398120/376773
  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||
  // is firefox >= v31?
  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||
  // double check webkit in userAgent just in case we are in a worker
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}

/**
   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
   */

exports.formatters.j = function (v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
    * Colorize log arguments if enabled.
    *
    * @api public
    */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '') +
  this.namespace + (
  useColors ? ' %c' : ' ') +
  args[0] + (
  useColors ? '%c ' : ' ') +
  '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit');

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
   * Invokes `console.log()` when available.
   * No-op when `console.log` is not a "function".
   *
   * @api public
   */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console &&
  console.log &&
  Function.prototype.apply.call(console.log, console, arguments);
}

/**
   * Save `namespaces`.
   *
   * @param {String} namespaces
   * @api private
   */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch (e) {}
}

/**
   * Load `namespaces`.
   *
   * @return {String} returns the previously persisted debug modes
   * @api private
   */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch (e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
   * Enable namespaces listed in `localStorage.debug` initially.
   */

exports.enable(load());

/**
                         * Localstorage attempts to return the localstorage.
                         *
                         * This is necessary because safari throws
                         * when a user disables cookies/localstorage
                         * and you attempt to access it.
                         *
                         * @return {LocalStorage}
                         * @api private
                         */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}
});
define('static/js/socket.io-client/node_modules/debug/src/debug.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";
/**
               * This is the common logic for both the Node.js and web browser
               * implementations of `debug()`.
               *
               * Expose `debug()` as the module.
               */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
                                   * Active `debug` instances.
                                   */
exports.instances = [];

/**
                         * The currently active debug mode names, and names to skip.
                         */

exports.names = [];
exports.skips = [];

/**
                     * Map of special "%n" handling functions, for the debug "format" argument.
                     *
                     * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
                     */

exports.formatters = {};

/**
                          * Select a color.
                          * @param {String} namespace
                          * @return {Number}
                          * @api private
                          */

function selectColor(namespace) {
  var hash = 0,i;

  for (i in namespace) {
    hash = (hash << 5) - hash + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
   * Create a debugger with the given `namespace`.
   *
   * @param {String} namespace
   * @return {Function}
   * @api public
   */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy() {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
   * Enables a debug mode by namespaces. This can include modes
   * separated by a colon and wildcards.
   *
   * @param {String} namespaces
   * @api public
   */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
   * Disable debug output.
   *
   * @api public
   */

function disable() {
  exports.enable('');
}

/**
   * Returns true if the given mode name is enabled, false otherwise.
   *
   * @param {String} name
   * @return {Boolean}
   * @api public
   */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
   * Coerce `val`.
   *
   * @param {Mixed} val
   * @return {Mixed}
   * @api private
   */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}
});
define('static/js/socket.io-client/node_modules/debug/src/index.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /**
               * Detect Electron renderer process, which is node, but we should
               * treat as a browser.
               */

if (typeof process === 'undefined' || process.type === 'renderer') {
  module.exports = require('./browser.js');
} else {
  module.exports = require('./node.js');
}
});
define('static/js/socket.io-client/node_modules/debug/src/node.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /**
               * Module dependencies.
               */

var tty = require('tty');
var util = require('util');

/**
                             * This is the Node.js implementation of `debug()`.
                             *
                             * Expose `debug()` as the module.
                             */

exports = module.exports = require('./debug');
exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;

/**
                                * Colors.
                                */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
  var supportsColor = require('supports-color');
  if (supportsColor && supportsColor.level >= 2) {
    exports.colors = [
    20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,
    69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,
    135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
    172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,
    205, 206, 207, 208, 209, 214, 215, 220, 221];

  }
} catch (err) {

} // swallow - we only care if `supports-color` is available; it doesn't have to be.

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // camel-case
  var prop = key.
  substring(6).
  toLowerCase().
  replace(/_([a-z])/g, function (_, k) {return k.toUpperCase();});

  // coerce string value into JS value
  var val = process.env[key];
  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;else
  if (/^(no|off|false|disabled)$/i.test(val)) val = false;else
  if (val === 'null') val = null;else
  val = Number(val);

  obj[prop] = val;
  return obj;
}, {});

/**
         * Is stdout a TTY? Colored output is enabled when `true`.
         */

function useColors() {
  return 'colors' in exports.inspectOpts ?
  Boolean(exports.inspectOpts.colors) :
  tty.isatty(process.stderr.fd);
}

/**
   * Map %o to `util.inspect()`, all on a single line.
   */

exports.formatters.o = function (v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts).
  split('\n').map(function (str) {
    return str.trim();
  }).join(' ');
};

/**
    * Map %o to `util.inspect()`, allowing multiple lines if needed.
    */

exports.formatters.O = function (v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/**
    * Adds ANSI color escape codes if enabled.
    *
    * @api public
    */

function formatArgs(args) {
  var name = this.namespace;
  var useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var colorCode = "\x1B[3" + (c < 8 ? c : '8;5;' + c);
    var prefix = '  ' + colorCode + ';1m' + name + ' ' + "\x1B[0m";

    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push(colorCode + 'm+' + exports.humanize(this.diff) + "\x1B[0m");
  } else {
    args[0] = getDate() + name + ' ' + args[0];
  }
}

function getDate() {
  if (exports.inspectOpts.hideDate) {
    return '';
  } else {
    return new Date().toISOString() + ' ';
  }
}

/**
   * Invokes `util.format()` with the specified arguments and writes to stderr.
   */

function log() {
  return process.stderr.write(util.format.apply(util, arguments) + '\n');
}

/**
   * Save `namespaces`.
   *
   * @param {String} namespaces
   * @api private
   */

function save(namespaces) {
  if (null == namespaces) {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  } else {
    process.env.DEBUG = namespaces;
  }
}

/**
   * Load `namespaces`.
   *
   * @return {String} returns the previously persisted debug modes
   * @api private
   */

function load() {
  return process.env.DEBUG;
}

/**
   * Init logic for `debug` instances.
   *
   * Create a new `inspectOpts` object in case `useColors` is set
   * differently for a particular `debug` instance.
   */

function init(debug) {
  debug.inspectOpts = {};

  var keys = Object.keys(exports.inspectOpts);
  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

/**
   * Enable namespaces listed in `process.env.DEBUG` initially.
   */

exports.enable(load());
});
define('static/js/vue-socketio.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";function _toArray(arr) {return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}!function (t, e) {"object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.VueSocketIO = e() : t.VueSocketIO = e();}("undefined" != typeof self ? self : void 0, function () {return function (t) {var e = {};function r(n) {if (e[n]) return e[n].exports;var o = e[n] = { i: n, l: !1, exports: {} };return t[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;}return r.m = t, r.c = e, r.d = function (t, e, n) {r.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n });}, r.r = function (t) {"undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 });}, r.t = function (t, e) {if (1 & e && (t = r(t)), 8 & e) return t;if (4 & e && "object" == typeof t && t && t.__esModule) return t;var n = Object.create(null);if (r.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t) for (var o in t) {r.d(n, o, function (e) {return t[e];}.bind(null, o));}return n;}, r.n = function (t) {var e = t && t.__esModule ? function () {return t.default;} : function () {return t;};return r.d(e, "a", e), e;}, r.o = function (t, e) {return Object.prototype.hasOwnProperty.call(t, e);}, r.p = "", r(r.s = 23);}([function (t, e, r) {(function (n) {function o() {var t;try {t = e.storage.debug;} catch (t) {}return !t && void 0 !== n && "env" in n && (t = n.env.DEBUG), t;}(e = t.exports = r(26)).log = function () {return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);}, e.formatArgs = function (t) {var r = this.useColors;if (t[0] = (r ? "%c" : "") + this.namespace + (r ? " %c" : " ") + t[0] + (r ? "%c " : " ") + "+" + e.humanize(this.diff), !r) return;var n = "color: " + this.color;t.splice(1, 0, n, "color: inherit");var o = 0,i = 0;t[0].replace(/%[a-zA-Z%]/g, function (t) {"%%" !== t && (o++, "%c" === t && (i = o));}), t.splice(i, 0, n);}, e.save = function (t) {try {null == t ? e.storage.removeItem("debug") : e.storage.debug = t;} catch (t) {}}, e.load = o, e.useColors = function () {if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return !0;if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);}, e.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : function () {try {return window.localStorage;} catch (t) {}}(), e.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.formatters.j = function (t) {try {return JSON.stringify(t);} catch (t) {return "[UnexpectedJSONParseError]: " + t.message;}}, e.enable(o());}).call(this, r(25));}, function (t, e, r) {function n(t) {if (t) return function (t) {for (var e in n.prototype) {t[e] = n.prototype[e];}return t;}(t);}t.exports = n, n.prototype.on = n.prototype.addEventListener = function (t, e) {return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this;}, n.prototype.once = function (t, e) {function r() {this.off(t, r), e.apply(this, arguments);}return r.fn = e, this.on(t, r), this;}, n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function (t, e) {if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;var r,n = this._callbacks["$" + t];if (!n) return this;if (1 == arguments.length) return delete this._callbacks["$" + t], this;for (var o = 0; o < n.length; o++) {if ((r = n[o]) === e || r.fn === e) {n.splice(o, 1);break;}}return this;}, n.prototype.emit = function (t) {this._callbacks = this._callbacks || {};var e = [].slice.call(arguments, 1),r = this._callbacks["$" + t];if (r) for (var n = 0, o = (r = r.slice(0)).length; n < o; ++n) {r[n].apply(this, e);}return this;}, n.prototype.listeners = function (t) {return this._callbacks = this._callbacks || {}, this._callbacks["$" + t] || [];}, n.prototype.hasListeners = function (t) {return !!this.listeners(t).length;};}, function (t, e, r) {var n,o = r(36),i = r(16),s = r(37),a = r(38),c = r(39);"undefined" != typeof ArrayBuffer && (n = r(40));var u = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent),h = "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent),f = u || h;e.protocol = 3;var p = e.packets = { open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6 },l = o(p),d = { type: "error", data: "parser error" },y = r(41);function g(t, e, r) {for (var n = new Array(t.length), o = a(t.length, r), i = function i(t, r, o) {e(r, function (e, r) {n[t] = r, o(e, n);});}, s = 0; s < t.length; s++) {i(s, t[s], o);}}e.encodePacket = function (t, r, n, o) {"function" == typeof r && (o = r, r = !1), "function" == typeof n && (o = n, n = null);var i = void 0 === t.data ? void 0 : t.data.buffer || t.data;if ("undefined" != typeof ArrayBuffer && i instanceof ArrayBuffer) return function (t, r, n) {if (!r) return e.encodeBase64Packet(t, n);var o = t.data,i = new Uint8Array(o),s = new Uint8Array(1 + o.byteLength);s[0] = p[t.type];for (var a = 0; a < i.length; a++) {s[a + 1] = i[a];}return n(s.buffer);}(t, r, o);if (void 0 !== y && i instanceof y) return function (t, r, n) {if (!r) return e.encodeBase64Packet(t, n);if (f) return function (t, r, n) {if (!r) return e.encodeBase64Packet(t, n);var o = new FileReader();return o.onload = function () {e.encodePacket({ type: t.type, data: o.result }, r, !0, n);}, o.readAsArrayBuffer(t.data);}(t, r, n);var o = new Uint8Array(1);o[0] = p[t.type];var i = new y([o.buffer, t.data]);return n(i);}(t, r, o);if (i && i.base64) return function (t, r) {var n = "b" + e.packets[t.type] + t.data.data;return r(n);}(t, o);var s = p[t.type];return void 0 !== t.data && (s += n ? c.encode(String(t.data), { strict: !1 }) : String(t.data)), o("" + s);}, e.encodeBase64Packet = function (t, r) {var n,o = "b" + e.packets[t.type];if (void 0 !== y && t.data instanceof y) {var i = new FileReader();return i.onload = function () {var t = i.result.split(",")[1];r(o + t);}, i.readAsDataURL(t.data);}try {n = String.fromCharCode.apply(null, new Uint8Array(t.data));} catch (e) {for (var s = new Uint8Array(t.data), a = new Array(s.length), c = 0; c < s.length; c++) {a[c] = s[c];}n = String.fromCharCode.apply(null, a);}return o += btoa(n), r(o);}, e.decodePacket = function (t, r, n) {if (void 0 === t) return d;if ("string" == typeof t) {if ("b" === t.charAt(0)) return e.decodeBase64Packet(t.substr(1), r);if (n && !1 === (t = function (t) {try {t = c.decode(t, { strict: !1 });} catch (t) {return !1;}return t;}(t))) return d;var o = t.charAt(0);return Number(o) == o && l[o] ? t.length > 1 ? { type: l[o], data: t.substring(1) } : { type: l[o] } : d;}o = new Uint8Array(t)[0];var i = s(t, 1);return y && "blob" === r && (i = new y([i])), { type: l[o], data: i };}, e.decodeBase64Packet = function (t, e) {var r = l[t.charAt(0)];if (!n) return { type: r, data: { base64: !0, data: t.substr(1) } };var o = n.decode(t.substr(1));return "blob" === e && y && (o = new y([o])), { type: r, data: o };}, e.encodePayload = function (t, r, n) {"function" == typeof r && (n = r, r = null);var o = i(t);if (r && o) return y && !f ? e.encodePayloadAsBlob(t, n) : e.encodePayloadAsArrayBuffer(t, n);if (!t.length) return n("0:");g(t, function (t, n) {e.encodePacket(t, !!o && r, !1, function (t) {n(null, function (t) {return t.length + ":" + t;}(t));});}, function (t, e) {return n(e.join(""));});}, e.decodePayload = function (t, r, n) {if ("string" != typeof t) return e.decodePayloadAsBinary(t, r, n);var o;if ("function" == typeof r && (n = r, r = null), "" === t) return n(d, 0, 1);for (var i, s, a = "", c = 0, u = t.length; c < u; c++) {var h = t.charAt(c);if (":" === h) {if ("" === a || a != (i = Number(a))) return n(d, 0, 1);if (a != (s = t.substr(c + 1, i)).length) return n(d, 0, 1);if (s.length) {if (o = e.decodePacket(s, r, !1), d.type === o.type && d.data === o.data) return n(d, 0, 1);if (!1 === n(o, c + i, u)) return;}c += i, a = "";} else a += h;}return "" !== a ? n(d, 0, 1) : void 0;}, e.encodePayloadAsArrayBuffer = function (t, r) {if (!t.length) return r(new ArrayBuffer(0));g(t, function (t, r) {e.encodePacket(t, !0, !0, function (t) {return r(null, t);});}, function (t, e) {var n = e.reduce(function (t, e) {var r;return t + (r = "string" == typeof e ? e.length : e.byteLength).toString().length + r + 2;}, 0),o = new Uint8Array(n),i = 0;return e.forEach(function (t) {var e = "string" == typeof t,r = t;if (e) {for (var n = new Uint8Array(t.length), s = 0; s < t.length; s++) {n[s] = t.charCodeAt(s);}r = n.buffer;}o[i++] = e ? 0 : 1;var a = r.byteLength.toString();for (s = 0; s < a.length; s++) {o[i++] = parseInt(a[s]);}o[i++] = 255;for (n = new Uint8Array(r), s = 0; s < n.length; s++) {o[i++] = n[s];}}), r(o.buffer);});}, e.encodePayloadAsBlob = function (t, r) {g(t, function (t, r) {e.encodePacket(t, !0, !0, function (t) {var e = new Uint8Array(1);if (e[0] = 1, "string" == typeof t) {for (var n = new Uint8Array(t.length), o = 0; o < t.length; o++) {n[o] = t.charCodeAt(o);}t = n.buffer, e[0] = 0;}var i = (t instanceof ArrayBuffer ? t.byteLength : t.size).toString(),s = new Uint8Array(i.length + 1);for (o = 0; o < i.length; o++) {s[o] = parseInt(i[o]);}if (s[i.length] = 255, y) {var a = new y([e.buffer, s.buffer, t]);r(null, a);}});}, function (t, e) {return r(new y(e));});}, e.decodePayloadAsBinary = function (t, r, n) {"function" == typeof r && (n = r, r = null);for (var o = t, i = []; o.byteLength > 0;) {for (var a = new Uint8Array(o), c = 0 === a[0], u = "", h = 1; 255 !== a[h]; h++) {if (u.length > 310) return n(d, 0, 1);u += a[h];}o = s(o, 2 + u.length), u = parseInt(u);var f = s(o, 0, u);if (c) try {f = String.fromCharCode.apply(null, new Uint8Array(f));} catch (t) {var p = new Uint8Array(f);f = "";for (h = 0; h < p.length; h++) {f += String.fromCharCode(p[h]);}}i.push(f), o = s(o, u);}var l = i.length;i.forEach(function (t, o) {n(e.decodePacket(t, r, !0), o, l);});};}, function (t, e) {e.encode = function (t) {var e = "";for (var r in t) {t.hasOwnProperty(r) && (e.length && (e += "&"), e += encodeURIComponent(r) + "=" + encodeURIComponent(t[r]));}return e;}, e.decode = function (t) {for (var e = {}, r = t.split("&"), n = 0, o = r.length; n < o; n++) {var i = r[n].split("=");e[decodeURIComponent(i[0])] = decodeURIComponent(i[1]);}return e;};}, function (t, e) {t.exports = function (t, e) {var r = function r() {};r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;};}, function (t, e, r) {var n = r(0)("socket.io-parser"),o = r(1),i = r(28),s = r(6),a = r(11);function c() {}e.protocol = 4, e.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], e.CONNECT = 0, e.DISCONNECT = 1, e.EVENT = 2, e.ACK = 3, e.ERROR = 4, e.BINARY_EVENT = 5, e.BINARY_ACK = 6, e.Encoder = c, e.Decoder = f;var u = e.ERROR + '"encode error"';function h(t) {var r = "" + t.type;if (e.BINARY_EVENT !== t.type && e.BINARY_ACK !== t.type || (r += t.attachments + "-"), t.nsp && "/" !== t.nsp && (r += t.nsp + ","), null != t.id && (r += t.id), null != t.data) {var o = function (t) {try {return JSON.stringify(t);} catch (t) {return !1;}}(t.data);if (!1 === o) return u;r += o;}return n("encoded %j as %s", t, r), r;}function f() {this.reconstructor = null;}function p(t) {this.reconPack = t, this.buffers = [];}function l(t) {return { type: e.ERROR, data: "parser error: " + t };}c.prototype.encode = function (t, r) {(n("encoding packet %j", t), e.BINARY_EVENT === t.type || e.BINARY_ACK === t.type) ? function (t, e) {i.removeBlobs(t, function (t) {var r = i.deconstructPacket(t),n = h(r.packet),o = r.buffers;o.unshift(n), e(o);});}(t, r) : r([h(t)]);}, o(f.prototype), f.prototype.add = function (t) {var r;if ("string" == typeof t) r = function (t) {var r = 0,o = { type: Number(t.charAt(0)) };if (null == e.types[o.type]) return l("unknown packet type " + o.type);if (e.BINARY_EVENT === o.type || e.BINARY_ACK === o.type) {for (var i = ""; "-" !== t.charAt(++r) && (i += t.charAt(r), r != t.length);) {;}if (i != Number(i) || "-" !== t.charAt(r)) throw new Error("Illegal attachments");o.attachments = Number(i);}if ("/" === t.charAt(r + 1)) for (o.nsp = ""; ++r;) {var a = t.charAt(r);if ("," === a) break;if (o.nsp += a, r === t.length) break;} else o.nsp = "/";var c = t.charAt(r + 1);if ("" !== c && Number(c) == c) {for (o.id = ""; ++r;) {var a = t.charAt(r);if (null == a || Number(a) != a) {--r;break;}if (o.id += t.charAt(r), r === t.length) break;}o.id = Number(o.id);}if (t.charAt(++r)) {var u = function (t) {try {return JSON.parse(t);} catch (t) {return !1;}}(t.substr(r)),h = !1 !== u && (o.type === e.ERROR || s(u));if (!h) return l("invalid payload");o.data = u;}return n("decoded %s as %j", t, o), o;}(t), e.BINARY_EVENT === r.type || e.BINARY_ACK === r.type ? (this.reconstructor = new p(r), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", r)) : this.emit("decoded", r);else {if (!a(t) && !t.base64) throw new Error("Unknown type: " + t);if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");(r = this.reconstructor.takeBinaryData(t)) && (this.reconstructor = null, this.emit("decoded", r));}}, f.prototype.destroy = function () {this.reconstructor && this.reconstructor.finishedReconstruction();}, p.prototype.takeBinaryData = function (t) {if (this.buffers.push(t), this.buffers.length === this.reconPack.attachments) {var e = i.reconstructPacket(this.reconPack, this.buffers);return this.finishedReconstruction(), e;}return null;}, p.prototype.finishedReconstruction = function () {this.reconPack = null, this.buffers = [];};}, function (t, e) {var r = {}.toString;t.exports = Array.isArray || function (t) {return "[object Array]" == r.call(t);};}, function (t, e, r) {"use strict";(function (t) {
      /*!
he buffer module from node.js, for the browser.

author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
license  MIT

      var n = r(29),o = r(30),i = r(31);function s() {return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;}function a(t, e) {if (s() < e) throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e)).__proto__ = c.prototype : (null === t && (t = new c(e)), t.length = e), t;}function c(t, e, r) {if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c)) return new c(t, e, r);if ("number" == typeof t) {if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string");return f(this, t);}return u(this, t, e, r);}function u(t, e, r, n) {if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? function (t, e, r, n) {if (e.byteLength, r < 0 || e.byteLength < r) throw new RangeError("'offset' is out of bounds");if (e.byteLength < r + (n || 0)) throw new RangeError("'length' is out of bounds");e = void 0 === r && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, r) : new Uint8Array(e, r, n);c.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = c.prototype : t = p(t, e);return t;}(t, e, r, n) : "string" == typeof e ? function (t, e, r) {"string" == typeof r && "" !== r || (r = "utf8");if (!c.isEncoding(r)) throw new TypeError('"encoding" must be a valid string encoding');var n = 0 | d(e, r),o = (t = a(t, n)).write(e, r);o !== n && (t = t.slice(0, o));return t;}(t, e, r) : function (t, e) {if (c.isBuffer(e)) {var r = 0 | l(e.length);return 0 === (t = a(t, r)).length ? t : (e.copy(t, 0, 0, r), t);}if (e) {if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || (n = e.length) != n ? a(t, 0) : p(t, e);if ("Buffer" === e.type && i(e.data)) return p(t, e.data);}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");}(t, e);}function h(t) {if ("number" != typeof t) throw new TypeError('"size" argument must be a number');if (t < 0) throw new RangeError('"size" argument must not be negative');}function f(t, e) {if (h(e), t = a(t, e < 0 ? 0 : 0 | l(e)), !c.TYPED_ARRAY_SUPPORT) for (var r = 0; r < e; ++r) {t[r] = 0;}return t;}function p(t, e) {var r = e.length < 0 ? 0 : 0 | l(e.length);t = a(t, r);for (var n = 0; n < r; n += 1) {t[n] = 255 & e[n];}return t;}function l(t) {if (t >= s()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s().toString(16) + " bytes");return 0 | t;}function d(t, e) {if (c.isBuffer(t)) return t.length;if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;"string" != typeof t && (t = "" + t);var r = t.length;if (0 === r) return 0;for (var n = !1;;) {switch (e) {case "ascii":case "latin1":case "binary":return r;case "utf8":case "utf-8":case void 0:return M(t).length;case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return 2 * r;case "hex":return r >>> 1;case "base64":return q(t).length;default:if (n) return M(t).length;e = ("" + e).toLowerCase(), n = !0;}}}function y(t, e, r) {var n = t[e];t[e] = t[r], t[r] = n;}function g(t, e, r, n, o) {if (0 === t.length) return -1;if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = o ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {if (o) return -1;r = t.length - 1;} else if (r < 0) {if (!o) return -1;r = 0;}if ("string" == typeof e && (e = c.from(e, n)), c.isBuffer(e)) return 0 === e.length ? -1 : m(t, e, r, n, o);if ("number" == typeof e) return e &= 255, c.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : m(t, [e], r, n, o);throw new TypeError("val must be string, number or Buffer");}function m(t, e, r, n, o) {var i,s = 1,a = t.length,c = e.length;if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {if (t.length < 2 || e.length < 2) return -1;s = 2, a /= 2, c /= 2, r /= 2;}function u(t, e) {return 1 === s ? t[e] : t.readUInt16BE(e * s);}if (o) {var h = -1;for (i = r; i < a; i++) {if (u(t, i) === u(e, -1 === h ? 0 : i - h)) {if (-1 === h && (h = i), i - h + 1 === c) return h * s;} else -1 !== h && (i -= i - h), h = -1;}} else for (r + c > a && (r = a - c), i = r; i >= 0; i--) {for (var f = !0, p = 0; p < c; p++) {if (u(t, i + p) !== u(e, p)) {f = !1;break;}}if (f) return i;}return -1;}function v(t, e, r, n) {r = Number(r) || 0;var o = t.length - r;n ? (n = Number(n)) > o && (n = o) : n = o;var i = e.length;if (i % 2 != 0) throw new TypeError("Invalid hex string");n > i / 2 && (n = i / 2);for (var s = 0; s < n; ++s) {var a = parseInt(e.substr(2 * s, 2), 16);if (isNaN(a)) return s;t[r + s] = a;}return s;}function b(t, e, r, n) {return Y(M(e, t.length - r), t, r, n);}function w(t, e, r, n) {return Y(function (t) {for (var e = [], r = 0; r < t.length; ++r) {e.push(255 & t.charCodeAt(r));}return e;}(e), t, r, n);}function k(t, e, r, n) {return w(t, e, r, n);}function A(t, e, r, n) {return Y(q(e), t, r, n);}function C(t, e, r, n) {return Y(function (t, e) {for (var r, n, o, i = [], s = 0; s < t.length && !((e -= 2) < 0); ++s) {r = t.charCodeAt(s), n = r >> 8, o = r % 256, i.push(o), i.push(n);}return i;}(e, t.length - r), t, r, n);}function E(t, e, r) {return 0 === e && r === t.length ? n.fromByteArray(t) : n.fromByteArray(t.slice(e, r));}function B(t, e, r) {r = Math.min(t.length, r);for (var n = [], o = e; o < r;) {var i,s,a,c,u = t[o],h = null,f = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1;if (o + f <= r) switch (f) {case 1:u < 128 && (h = u);break;case 2:128 == (192 & (i = t[o + 1])) && (c = (31 & u) << 6 | 63 & i) > 127 && (h = c);break;case 3:i = t[o + 1], s = t[o + 2], 128 == (192 & i) && 128 == (192 & s) && (c = (15 & u) << 12 | (63 & i) << 6 | 63 & s) > 2047 && (c < 55296 || c > 57343) && (h = c);break;case 4:i = t[o + 1], s = t[o + 2], a = t[o + 3], 128 == (192 & i) && 128 == (192 & s) && 128 == (192 & a) && (c = (15 & u) << 18 | (63 & i) << 12 | (63 & s) << 6 | 63 & a) > 65535 && c < 1114112 && (h = c);}null === h ? (h = 65533, f = 1) : h > 65535 && (h -= 65536, n.push(h >>> 10 & 1023 | 55296), h = 56320 | 1023 & h), n.push(h), o += f;}return function (t) {var e = t.length;if (e <= x) return String.fromCharCode.apply(String, t);var r = "",n = 0;for (; n < e;) {r += String.fromCharCode.apply(String, t.slice(n, n += x));}return r;}(n);}e.Buffer = c, e.SlowBuffer = function (t) {+t != t && (t = 0);return c.alloc(+t);}, e.INSPECT_MAX_BYTES = 50, c.TYPED_ARRAY_SUPPORT = void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : function () {try {var t = new Uint8Array(1);return t.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {return 42;} }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength;} catch (t) {return !1;}}(), e.kMaxLength = s(), c.poolSize = 8192, c._augment = function (t) {return t.__proto__ = c.prototype, t;}, c.from = function (t, e, r) {return u(null, t, e, r);}, c.TYPED_ARRAY_SUPPORT && (c.prototype.__proto__ = Uint8Array.prototype, c.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, { value: null, configurable: !0 })), c.alloc = function (t, e, r) {return function (t, e, r, n) {return h(e), e <= 0 ? a(t, e) : void 0 !== r ? "string" == typeof n ? a(t, e).fill(r, n) : a(t, e).fill(r) : a(t, e);}(null, t, e, r);}, c.allocUnsafe = function (t) {return f(null, t);}, c.allocUnsafeSlow = function (t) {return f(null, t);}, c.isBuffer = function (t) {return !(null == t || !t._isBuffer);}, c.compare = function (t, e) {if (!c.isBuffer(t) || !c.isBuffer(e)) throw new TypeError("Arguments must be Buffers");if (t === e) return 0;for (var r = t.length, n = e.length, o = 0, i = Math.min(r, n); o < i; ++o) {if (t[o] !== e[o]) {r = t[o], n = e[o];break;}}return r < n ? -1 : n < r ? 1 : 0;}, c.isEncoding = function (t) {switch (String(t).toLowerCase()) {case "hex":case "utf8":case "utf-8":case "ascii":case "latin1":case "binary":case "base64":case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return !0;default:return !1;}}, c.concat = function (t, e) {if (!i(t)) throw new TypeError('"list" argument must be an Array of Buffers');if (0 === t.length) return c.alloc(0);var r;if (void 0 === e) for (e = 0, r = 0; r < t.length; ++r) {e += t[r].length;}var n = c.allocUnsafe(e),o = 0;for (r = 0; r < t.length; ++r) {var s = t[r];if (!c.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');s.copy(n, o), o += s.length;}return n;}, c.byteLength = d, c.prototype._isBuffer = !0, c.prototype.swap16 = function () {var t = this.length;if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");for (var e = 0; e < t; e += 2) {y(this, e, e + 1);}return this;}, c.prototype.swap32 = function () {var t = this.length;if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");for (var e = 0; e < t; e += 4) {y(this, e, e + 3), y(this, e + 1, e + 2);}return this;}, c.prototype.swap64 = function () {var t = this.length;if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");for (var e = 0; e < t; e += 8) {y(this, e, e + 7), y(this, e + 1, e + 6), y(this, e + 2, e + 5), y(this, e + 3, e + 4);}return this;}, c.prototype.toString = function () {var t = 0 | this.length;return 0 === t ? "" : 0 === arguments.length ? B(this, 0, t) : function (t, e, r) {var n = !1;if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";if ((r >>>= 0) <= (e >>>= 0)) return "";for (t || (t = "utf8");;) {switch (t) {case "hex":return T(this, e, r);case "utf8":case "utf-8":return B(this, e, r);case "ascii":return R(this, e, r);case "latin1":case "binary":return S(this, e, r);case "base64":return E(this, e, r);case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return P(this, e, r);default:if (n) throw new TypeError("Unknown encoding: " + t);t = (t + "").toLowerCase(), n = !0;}}}.apply(this, arguments);}, c.prototype.equals = function (t) {if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");return this === t || 0 === c.compare(this, t);}, c.prototype.inspect = function () {var t = "",r = e.INSPECT_MAX_BYTES;return this.length > 0 && (t = this.toString("hex", 0, r).match(/.{2}/g).join(" "), this.length > r && (t += " ... ")), "<Buffer " + t + ">";}, c.prototype.compare = function (t, e, r, n, o) {if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === n && (n = 0), void 0 === o && (o = this.length), e < 0 || r > t.length || n < 0 || o > this.length) throw new RangeError("out of range index");if (n >= o && e >= r) return 0;if (n >= o) return -1;if (e >= r) return 1;if (this === t) return 0;for (var i = (o >>>= 0) - (n >>>= 0), s = (r >>>= 0) - (e >>>= 0), a = Math.min(i, s), u = this.slice(n, o), h = t.slice(e, r), f = 0; f < a; ++f) {if (u[f] !== h[f]) {i = u[f], s = h[f];break;}}return i < s ? -1 : s < i ? 1 : 0;}, c.prototype.includes = function (t, e, r) {return -1 !== this.indexOf(t, e, r);}, c.prototype.indexOf = function (t, e, r) {return g(this, t, e, r, !0);}, c.prototype.lastIndexOf = function (t, e, r) {return g(this, t, e, r, !1);}, c.prototype.write = function (t, e, r, n) {if (void 0 === e) n = "utf8", r = this.length, e = 0;else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;else {if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);}var o = this.length - e;if ((void 0 === r || r > o) && (r = o), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");n || (n = "utf8");for (var i = !1;;) {switch (n) {case "hex":return v(this, t, e, r);case "utf8":case "utf-8":return b(this, t, e, r);case "ascii":return w(this, t, e, r);case "latin1":case "binary":return k(this, t, e, r);case "base64":return A(this, t, e, r);case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return C(this, t, e, r);default:if (i) throw new TypeError("Unknown encoding: " + n);n = ("" + n).toLowerCase(), i = !0;}}}, c.prototype.toJSON = function () {return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };};var x = 4096;function R(t, e, r) {var n = "";r = Math.min(t.length, r);for (var o = e; o < r; ++o) {n += String.fromCharCode(127 & t[o]);}return n;}function S(t, e, r) {var n = "";r = Math.min(t.length, r);for (var o = e; o < r; ++o) {n += String.fromCharCode(t[o]);}return n;}function T(t, e, r) {var n = t.length;(!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);for (var o = "", i = e; i < r; ++i) {o += j(t[i]);}return o;}function P(t, e, r) {for (var n = t.slice(e, r), o = "", i = 0; i < n.length; i += 2) {o += String.fromCharCode(n[i] + 256 * n[i + 1]);}return o;}function _(t, e, r) {if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");if (t + e > r) throw new RangeError("Trying to access beyond buffer length");}function O(t, e, r, n, o, i) {if (!c.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');if (e > o || e < i) throw new RangeError('"value" argument is out of bounds');if (r + n > t.length) throw new RangeError("Index out of range");}function U(t, e, r, n) {e < 0 && (e = 65535 + e + 1);for (var o = 0, i = Math.min(t.length - r, 2); o < i; ++o) {t[r + o] = (e & 255 << 8 * (n ? o : 1 - o)) >>> 8 * (n ? o : 1 - o);}}function N(t, e, r, n) {e < 0 && (e = 4294967295 + e + 1);for (var o = 0, i = Math.min(t.length - r, 4); o < i; ++o) {t[r + o] = e >>> 8 * (n ? o : 3 - o) & 255;}}function D(t, e, r, n, o, i) {if (r + n > t.length) throw new RangeError("Index out of range");if (r < 0) throw new RangeError("Index out of range");}function I(t, e, r, n, i) {return i || D(t, 0, r, 4), o.write(t, e, r, n, 23, 4), r + 4;}function F(t, e, r, n, i) {return i || D(t, 0, r, 8), o.write(t, e, r, n, 52, 8), r + 8;}c.prototype.slice = function (t, e) {var r,n = this.length;if ((t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), (e = void 0 === e ? n : ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), e < t && (e = t), c.TYPED_ARRAY_SUPPORT) (r = this.subarray(t, e)).__proto__ = c.prototype;else {var o = e - t;r = new c(o, void 0);for (var i = 0; i < o; ++i) {r[i] = this[i + t];}}return r;}, c.prototype.readUIntLE = function (t, e, r) {t |= 0, e |= 0, r || _(t, e, this.length);for (var n = this[t], o = 1, i = 0; ++i < e && (o *= 256);) {n += this[t + i] * o;}return n;}, c.prototype.readUIntBE = function (t, e, r) {t |= 0, e |= 0, r || _(t, e, this.length);for (var n = this[t + --e], o = 1; e > 0 && (o *= 256);) {n += this[t + --e] * o;}return n;}, c.prototype.readUInt8 = function (t, e) {return e || _(t, 1, this.length), this[t];}, c.prototype.readUInt16LE = function (t, e) {return e || _(t, 2, this.length), this[t] | this[t + 1] << 8;}, c.prototype.readUInt16BE = function (t, e) {return e || _(t, 2, this.length), this[t] << 8 | this[t + 1];}, c.prototype.readUInt32LE = function (t, e) {return e || _(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];}, c.prototype.readUInt32BE = function (t, e) {return e || _(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);}, c.prototype.readIntLE = function (t, e, r) {t |= 0, e |= 0, r || _(t, e, this.length);for (var n = this[t], o = 1, i = 0; ++i < e && (o *= 256);) {n += this[t + i] * o;}return n >= (o *= 128) && (n -= Math.pow(2, 8 * e)), n;}, c.prototype.readIntBE = function (t, e, r) {t |= 0, e |= 0, r || _(t, e, this.length);for (var n = e, o = 1, i = this[t + --n]; n > 0 && (o *= 256);) {i += this[t + --n] * o;}return i >= (o *= 128) && (i -= Math.pow(2, 8 * e)), i;}, c.prototype.readInt8 = function (t, e) {return e || _(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];}, c.prototype.readInt16LE = function (t, e) {e || _(t, 2, this.length);var r = this[t] | this[t + 1] << 8;return 32768 & r ? 4294901760 | r : r;}, c.prototype.readInt16BE = function (t, e) {e || _(t, 2, this.length);var r = this[t + 1] | this[t] << 8;return 32768 & r ? 4294901760 | r : r;}, c.prototype.readInt32LE = function (t, e) {return e || _(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;}, c.prototype.readInt32BE = function (t, e) {return e || _(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];}, c.prototype.readFloatLE = function (t, e) {return e || _(t, 4, this.length), o.read(this, t, !0, 23, 4);}, c.prototype.readFloatBE = function (t, e) {return e || _(t, 4, this.length), o.read(this, t, !1, 23, 4);}, c.prototype.readDoubleLE = function (t, e) {return e || _(t, 8, this.length), o.read(this, t, !0, 52, 8);}, c.prototype.readDoubleBE = function (t, e) {return e || _(t, 8, this.length), o.read(this, t, !1, 52, 8);}, c.prototype.writeUIntLE = function (t, e, r, n) {(t = +t, e |= 0, r |= 0, n) || O(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);var o = 1,i = 0;for (this[e] = 255 & t; ++i < r && (o *= 256);) {this[e + i] = t / o & 255;}return e + r;}, c.prototype.writeUIntBE = function (t, e, r, n) {(t = +t, e |= 0, r |= 0, n) || O(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);var o = r - 1,i = 1;for (this[e + o] = 255 & t; --o >= 0 && (i *= 256);) {this[e + o] = t / i & 255;}return e + r;}, c.prototype.writeUInt8 = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 1, 255, 0), c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[e] = 255 & t, e + 1;}, c.prototype.writeUInt16LE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : U(this, t, e, !0), e + 2;}, c.prototype.writeUInt16BE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : U(this, t, e, !1), e + 2;}, c.prototype.writeUInt32LE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t) : N(this, t, e, !0), e + 4;}, c.prototype.writeUInt32BE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : N(this, t, e, !1), e + 4;}, c.prototype.writeIntLE = function (t, e, r, n) {if (t = +t, e |= 0, !n) {var o = Math.pow(2, 8 * r - 1);O(this, t, e, r, o - 1, -o);}var i = 0,s = 1,a = 0;for (this[e] = 255 & t; ++i < r && (s *= 256);) {t < 0 && 0 === a && 0 !== this[e + i - 1] && (a = 1), this[e + i] = (t / s >> 0) - a & 255;}return e + r;}, c.prototype.writeIntBE = function (t, e, r, n) {if (t = +t, e |= 0, !n) {var o = Math.pow(2, 8 * r - 1);O(this, t, e, r, o - 1, -o);}var i = r - 1,s = 1,a = 0;for (this[e + i] = 255 & t; --i >= 0 && (s *= 256);) {t < 0 && 0 === a && 0 !== this[e + i + 1] && (a = 1), this[e + i] = (t / s >> 0) - a & 255;}return e + r;}, c.prototype.writeInt8 = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 1, 127, -128), c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;}, c.prototype.writeInt16LE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : U(this, t, e, !0), e + 2;}, c.prototype.writeInt16BE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : U(this, t, e, !1), e + 2;}, c.prototype.writeInt32LE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 4, 2147483647, -2147483648), c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24) : N(this, t, e, !0), e + 4;}, c.prototype.writeInt32BE = function (t, e, r) {return t = +t, e |= 0, r || O(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : N(this, t, e, !1), e + 4;}, c.prototype.writeFloatLE = function (t, e, r) {return I(this, t, e, !0, r);}, c.prototype.writeFloatBE = function (t, e, r) {return I(this, t, e, !1, r);}, c.prototype.writeDoubleLE = function (t, e, r) {return F(this, t, e, !0, r);}, c.prototype.writeDoubleBE = function (t, e, r) {return F(this, t, e, !1, r);}, c.prototype.copy = function (t, e, r, n) {if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;if (0 === t.length || 0 === this.length) return 0;if (e < 0) throw new RangeError("targetStart out of bounds");if (r < 0 || r >= this.length) throw new RangeError("sourceStart out of bounds");if (n < 0) throw new RangeError("sourceEnd out of bounds");n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);var o,i = n - r;if (this === t && r < e && e < n) for (o = i - 1; o >= 0; --o) {t[o + e] = this[o + r];} else if (i < 1e3 || !c.TYPED_ARRAY_SUPPORT) for (o = 0; o < i; ++o) {t[o + e] = this[o + r];} else Uint8Array.prototype.set.call(t, this.subarray(r, r + i), e);return i;}, c.prototype.fill = function (t, e, r, n) {if ("string" == typeof t) {if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), 1 === t.length) {var o = t.charCodeAt(0);o < 256 && (t = o);}if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");if ("string" == typeof n && !c.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);} else "number" == typeof t && (t &= 255);if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");if (r <= e) return this;var i;if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t) for (i = e; i < r; ++i) {this[i] = t;} else {var s = c.isBuffer(t) ? t : M(new c(t, n).toString()),a = s.length;for (i = 0; i < r - e; ++i) {this[i + e] = s[i % a];}}return this;};var L = /[^+\/0-9A-Za-z-_]/g;function j(t) {return t < 16 ? "0" + t.toString(16) : t.toString(16);}function M(t, e) {var r;e = e || 1 / 0;for (var n = t.length, o = null, i = [], s = 0; s < n; ++s) {if ((r = t.charCodeAt(s)) > 55295 && r < 57344) {if (!o) {if (r > 56319) {(e -= 3) > -1 && i.push(239, 191, 189);continue;}if (s + 1 === n) {(e -= 3) > -1 && i.push(239, 191, 189);continue;}o = r;continue;}if (r < 56320) {(e -= 3) > -1 && i.push(239, 191, 189), o = r;continue;}r = 65536 + (o - 55296 << 10 | r - 56320);} else o && (e -= 3) > -1 && i.push(239, 191, 189);if (o = null, r < 128) {if ((e -= 1) < 0) break;i.push(r);} else if (r < 2048) {if ((e -= 2) < 0) break;i.push(r >> 6 | 192, 63 & r | 128);} else if (r < 65536) {if ((e -= 3) < 0) break;i.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);} else {if (!(r < 1114112)) throw new Error("Invalid code point");if ((e -= 4) < 0) break;i.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);}}return i;}function q(t) {return n.toByteArray(function (t) {if ((t = function (t) {return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");}(t).replace(L, "")).length < 2) return "";for (; t.length % 4 != 0;) {t += "=";}return t;}(t));}function Y(t, e, r, n) {for (var o = 0; o < n && !(o + r >= e.length || o >= t.length); ++o) {e[o + r] = t[o];}return o;}}).call(this, r(12));}, function (t, e, r) {var n = r(34);t.exports = function (t) {var e = t.xdomain,r = t.xscheme,o = t.enablesXDR;try {if ("undefined" != typeof XMLHttpRequest && (!e || n)) return new XMLHttpRequest();} catch (t) {}try {if ("undefined" != typeof XDomainRequest && !r && o) return new XDomainRequest();} catch (t) {}if (!e) try {return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");} catch (t) {}};}, function (t, e, r) {var n = r(2),o = r(1);function i(t) {this.path = t.path, this.hostname = t.hostname, this.port = t.port, this.secure = t.secure, this.query = t.query, this.timestampParam = t.timestampParam, this.timestampRequests = t.timestampRequests, this.readyState = "", this.agent = t.agent || !1, this.socket = t.socket, this.enablesXDR = t.enablesXDR, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.forceNode = t.forceNode, this.isReactNative = t.isReactNative, this.extraHeaders = t.extraHeaders, this.localAddress = t.localAddress;}t.exports = i, o(i.prototype), i.prototype.onError = function (t, e) {var r = new Error(t);return r.type = "TransportError", r.description = e, this.emit("error", r), this;}, i.prototype.open = function () {return "closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this;}, i.prototype.close = function () {return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this;}, i.prototype.send = function (t) {if ("open" !== this.readyState) throw new Error("Transport not open");this.write(t);}, i.prototype.onOpen = function () {this.readyState = "open", this.writable = !0, this.emit("open");}, i.prototype.onData = function (t) {var e = n.decodePacket(t, this.socket.binaryType);this.onPacket(e);}, i.prototype.onPacket = function (t) {this.emit("packet", t);}, i.prototype.onClose = function () {this.readyState = "closed", this.emit("close");};}, function (t, e) {var r = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,n = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];t.exports = function (t) {var e = t,o = t.indexOf("["),i = t.indexOf("]");-1 != o && -1 != i && (t = t.substring(0, o) + t.substring(o, i).replace(/:/g, ";") + t.substring(i, t.length));for (var s = r.exec(t || ""), a = {}, c = 14; c--;) {a[n[c]] = s[c] || "";}return -1 != o && -1 != i && (a.source = e, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = !0), a;};}, function (t, e, r) {(function (e) {t.exports = function (t) {return r && e.isBuffer(t) || n && (t instanceof ArrayBuffer || o(t));};var r = "function" == typeof e && "function" == typeof e.isBuffer,n = "function" == typeof ArrayBuffer,o = function o(t) {return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t.buffer instanceof ArrayBuffer;};}).call(this, r(7).Buffer);}, function (t, e) {var r;r = function () {return this;}();try {r = r || new Function("return this")();} catch (t) {"object" == typeof window && (r = window);}t.exports = r;}, function (t, e, r) {var n = r(32),o = r(19),i = r(1),s = r(5),a = r(20),c = r(21),u = r(0)("socket.io-client:manager"),h = r(18),f = r(46),p = Object.prototype.hasOwnProperty;function l(t, e) {if (!(this instanceof l)) return new l(t, e);t && "object" == typeof t && (e = t, t = void 0), (e = e || {}).path = e.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = e, this.reconnection(!1 !== e.reconnection), this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0), this.reconnectionDelay(e.reconnectionDelay || 1e3), this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3), this.randomizationFactor(e.randomizationFactor || .5), this.backoff = new f({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }), this.timeout(null == e.timeout ? 2e4 : e.timeout), this.readyState = "closed", this.uri = t, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = [];var r = e.parser || s;this.encoder = new r.Encoder(), this.decoder = new r.Decoder(), this.autoConnect = !1 !== e.autoConnect, this.autoConnect && this.open();}t.exports = l, l.prototype.emitAll = function () {for (var t in this.emit.apply(this, arguments), this.nsps) {p.call(this.nsps, t) && this.nsps[t].emit.apply(this.nsps[t], arguments);}}, l.prototype.updateSocketIds = function () {for (var t in this.nsps) {p.call(this.nsps, t) && (this.nsps[t].id = this.generateId(t));}}, l.prototype.generateId = function (t) {return ("/" === t ? "" : t + "#") + this.engine.id;}, i(l.prototype), l.prototype.reconnection = function (t) {return arguments.length ? (this._reconnection = !!t, this) : this._reconnection;}, l.prototype.reconnectionAttempts = function (t) {return arguments.length ? (this._reconnectionAttempts = t, this) : this._reconnectionAttempts;}, l.prototype.reconnectionDelay = function (t) {return arguments.length ? (this._reconnectionDelay = t, this.backoff && this.backoff.setMin(t), this) : this._reconnectionDelay;}, l.prototype.randomizationFactor = function (t) {return arguments.length ? (this._randomizationFactor = t, this.backoff && this.backoff.setJitter(t), this) : this._randomizationFactor;}, l.prototype.reconnectionDelayMax = function (t) {return arguments.length ? (this._reconnectionDelayMax = t, this.backoff && this.backoff.setMax(t), this) : this._reconnectionDelayMax;}, l.prototype.timeout = function (t) {return arguments.length ? (this._timeout = t, this) : this._timeout;}, l.prototype.maybeReconnectOnOpen = function () {!this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();}, l.prototype.open = l.prototype.connect = function (t, e) {if (u("readyState %s", this.readyState), ~this.readyState.indexOf("open")) return this;u("opening %s", this.uri), this.engine = n(this.uri, this.opts);var r = this.engine,o = this;this.readyState = "opening", this.skipReconnect = !1;var i = a(r, "open", function () {o.onopen(), t && t();}),s = a(r, "error", function (e) {if (u("connect_error"), o.cleanup(), o.readyState = "closed", o.emitAll("connect_error", e), t) {var r = new Error("Connection error");r.data = e, t(r);} else o.maybeReconnectOnOpen();});if (!1 !== this._timeout) {var c = this._timeout;u("connect attempt will timeout after %d", c);var h = setTimeout(function () {u("connect attempt timed out after %d", c), i.destroy(), r.close(), r.emit("error", "timeout"), o.emitAll("connect_timeout", c);}, c);this.subs.push({ destroy: function destroy() {clearTimeout(h);} });}return this.subs.push(i), this.subs.push(s), this;}, l.prototype.onopen = function () {u("open"), this.cleanup(), this.readyState = "open", this.emit("open");var t = this.engine;this.subs.push(a(t, "data", c(this, "ondata"))), this.subs.push(a(t, "ping", c(this, "onping"))), this.subs.push(a(t, "pong", c(this, "onpong"))), this.subs.push(a(t, "error", c(this, "onerror"))), this.subs.push(a(t, "close", c(this, "onclose"))), this.subs.push(a(this.decoder, "decoded", c(this, "ondecoded")));}, l.prototype.onping = function () {this.lastPing = new Date(), this.emitAll("ping");}, l.prototype.onpong = function () {this.emitAll("pong", new Date() - this.lastPing);}, l.prototype.ondata = function (t) {this.decoder.add(t);}, l.prototype.ondecoded = function (t) {this.emit("packet", t);}, l.prototype.onerror = function (t) {u("error", t), this.emitAll("error", t);}, l.prototype.socket = function (t, e) {var r = this.nsps[t];if (!r) {r = new o(this, t, e), this.nsps[t] = r;var n = this;r.on("connecting", i), r.on("connect", function () {r.id = n.generateId(t);}), this.autoConnect && i();}function i() {~h(n.connecting, r) || n.connecting.push(r);}return r;}, l.prototype.destroy = function (t) {var e = h(this.connecting, t);~e && this.connecting.splice(e, 1), this.connecting.length || this.close();}, l.prototype.packet = function (t) {u("writing packet %j", t);var e = this;t.query && 0 === t.type && (t.nsp += "?" + t.query), e.encoding ? e.packetBuffer.push(t) : (e.encoding = !0, this.encoder.encode(t, function (r) {for (var n = 0; n < r.length; n++) {e.engine.write(r[n], t.options);}e.encoding = !1, e.processPacketQueue();}));}, l.prototype.processPacketQueue = function () {if (this.packetBuffer.length > 0 && !this.encoding) {var t = this.packetBuffer.shift();this.packet(t);}}, l.prototype.cleanup = function () {u("cleanup");for (var t = this.subs.length, e = 0; e < t; e++) {this.subs.shift().destroy();}this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy();}, l.prototype.close = l.prototype.disconnect = function () {u("disconnect"), this.skipReconnect = !0, this.reconnecting = !1, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close();}, l.prototype.onclose = function (t) {u("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", t), this._reconnection && !this.skipReconnect && this.reconnect();}, l.prototype.reconnect = function () {if (this.reconnecting || this.skipReconnect) return this;var t = this;if (this.backoff.attempts >= this._reconnectionAttempts) u("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1;else {var e = this.backoff.duration();u("will wait %dms before reconnect attempt", e), this.reconnecting = !0;var r = setTimeout(function () {t.skipReconnect || (u("attempting reconnect"), t.emitAll("reconnect_attempt", t.backoff.attempts), t.emitAll("reconnecting", t.backoff.attempts), t.skipReconnect || t.open(function (e) {e ? (u("reconnect attempt error"), t.reconnecting = !1, t.reconnect(), t.emitAll("reconnect_error", e.data)) : (u("reconnect success"), t.onreconnect());}));}, e);this.subs.push({ destroy: function destroy() {clearTimeout(r);} });}}, l.prototype.onreconnect = function () {var t = this.backoff.attempts;this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", t);};}, function (t, e, r) {var n = r(8),o = r(35),i = r(42),s = r(43);e.polling = function (t) {var e = !1,r = !1,s = !1 !== t.jsonp;if ("undefined" != typeof location) {var a = "https:" === location.protocol,c = location.port;c || (c = a ? 443 : 80), e = t.hostname !== location.hostname || c !== t.port, r = t.secure !== a;}if (t.xdomain = e, t.xscheme = r, "open" in new n(t) && !t.forceJSONP) return new o(t);if (!s) throw new Error("JSONP disabled");return new i(t);}, e.websocket = s;}, function (t, e, r) {var n = r(9),o = r(3),i = r(2),s = r(4),a = r(17),c = r(0)("engine.io-client:polling");t.exports = h;var u = null != new (r(8))({ xdomain: !1 }).responseType;function h(t) {var e = t && t.forceBase64;u && !e || (this.supportsBinary = !1), n.call(this, t);}s(h, n), h.prototype.name = "polling", h.prototype.doOpen = function () {this.poll();}, h.prototype.pause = function (t) {var e = this;function r() {c("paused"), e.readyState = "paused", t();}if (this.readyState = "pausing", this.polling || !this.writable) {var n = 0;this.polling && (c("we are currently polling - waiting to pause"), n++, this.once("pollComplete", function () {c("pre-pause polling complete"), --n || r();})), this.writable || (c("we are currently writing - waiting to pause"), n++, this.once("drain", function () {c("pre-pause writing complete"), --n || r();}));} else r();}, h.prototype.poll = function () {c("polling"), this.polling = !0, this.doPoll(), this.emit("poll");}, h.prototype.onData = function (t) {var e = this;c("polling got data %s", t);i.decodePayload(t, this.socket.binaryType, function (t, r, n) {if ("opening" === e.readyState && e.onOpen(), "close" === t.type) return e.onClose(), !1;e.onPacket(t);}), "closed" !== this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" === this.readyState ? this.poll() : c('ignoring poll - transport state "%s"', this.readyState));}, h.prototype.doClose = function () {var t = this;function e() {c("writing close packet"), t.write([{ type: "close" }]);}"open" === this.readyState ? (c("transport open - closing"), e()) : (c("transport not open - deferring close"), this.once("open", e));}, h.prototype.write = function (t) {var e = this;this.writable = !1;var r = function r() {e.writable = !0, e.emit("drain");};i.encodePayload(t, this.supportsBinary, function (t) {e.doWrite(t, r);});}, h.prototype.uri = function () {var t = this.query || {},e = this.secure ? "https" : "http",r = "";return !1 !== this.timestampRequests && (t[this.timestampParam] = a()), this.supportsBinary || t.sid || (t.b64 = 1), t = o.encode(t), this.port && ("https" === e && 443 !== Number(this.port) || "http" === e && 80 !== Number(this.port)) && (r = ":" + this.port), t.length && (t = "?" + t), e + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + r + this.path + t;};}, function (t, e, r) {(function (e) {var n = r(6),o = Object.prototype.toString,i = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === o.call(Blob),s = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === o.call(File);t.exports = function t(r) {if (!r || "object" != typeof r) return !1;if (n(r)) {for (var o = 0, a = r.length; o < a; o++) {if (t(r[o])) return !0;}return !1;}if ("function" == typeof e && e.isBuffer && e.isBuffer(r) || "function" == typeof ArrayBuffer && r instanceof ArrayBuffer || i && r instanceof Blob || s && r instanceof File) return !0;if (r.toJSON && "function" == typeof r.toJSON && 1 === arguments.length) return t(r.toJSON(), !0);for (var c in r) {if (Object.prototype.hasOwnProperty.call(r, c) && t(r[c])) return !0;}return !1;};}).call(this, r(7).Buffer);}, function (t, e, r) {"use strict";var n,o = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),i = 64,s = {},a = 0,c = 0;function u(t) {var e = "";do {e = o[t % i] + e, t = Math.floor(t / i);} while (t > 0);return e;}function h() {var t = u(+new Date());return t !== n ? (a = 0, n = t) : t + "." + u(a++);}for (; c < i; c++) {s[o[c]] = c;}h.encode = u, h.decode = function (t) {var e = 0;for (c = 0; c < t.length; c++) {e = e * i + s[t.charAt(c)];}return e;}, t.exports = h;}, function (t, e) {var r = [].indexOf;t.exports = function (t, e) {if (r) return t.indexOf(e);for (var n = 0; n < t.length; ++n) {if (t[n] === e) return n;}return -1;};}, function (t, e, r) {var n = r(5),o = r(1),i = r(45),s = r(20),a = r(21),c = r(0)("socket.io-client:socket"),u = r(3),h = r(16);t.exports = l;var f = { connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1 },p = o.prototype.emit;function l(t, e, r) {this.io = t, this.nsp = e, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.flags = {}, r && r.query && (this.query = r.query), this.io.autoConnect && this.open();}o(l.prototype), l.prototype.subEvents = function () {if (!this.subs) {var t = this.io;this.subs = [s(t, "open", a(this, "onopen")), s(t, "packet", a(this, "onpacket")), s(t, "close", a(this, "onclose"))];}}, l.prototype.open = l.prototype.connect = function () {return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);}, l.prototype.send = function () {var t = i(arguments);return t.unshift("message"), this.emit.apply(this, t), this;}, l.prototype.emit = function (t) {if (f.hasOwnProperty(t)) return p.apply(this, arguments), this;var e = i(arguments),r = { type: (void 0 !== this.flags.binary ? this.flags.binary : h(e)) ? n.BINARY_EVENT : n.EVENT, data: e, options: {} };return r.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof e[e.length - 1] && (c("emitting packet with ack id %d", this.ids), this.acks[this.ids] = e.pop(), r.id = this.ids++), this.connected ? this.packet(r) : this.sendBuffer.push(r), this.flags = {}, this;}, l.prototype.packet = function (t) {t.nsp = this.nsp, this.io.packet(t);}, l.prototype.onopen = function () {if (c("transport is open - connecting"), "/" !== this.nsp) if (this.query) {var t = "object" == typeof this.query ? u.encode(this.query) : this.query;c("sending connect packet with query %s", t), this.packet({ type: n.CONNECT, query: t });} else this.packet({ type: n.CONNECT });}, l.prototype.onclose = function (t) {c("close (%s)", t), this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", t);}, l.prototype.onpacket = function (t) {var e = t.nsp === this.nsp,r = t.type === n.ERROR && "/" === t.nsp;if (e || r) switch (t.type) {case n.CONNECT:this.onconnect();break;case n.EVENT:case n.BINARY_EVENT:this.onevent(t);break;case n.ACK:case n.BINARY_ACK:this.onack(t);break;case n.DISCONNECT:this.ondisconnect();break;case n.ERROR:this.emit("error", t.data);}}, l.prototype.onevent = function (t) {var e = t.data || [];c("emitting event %j", e), null != t.id && (c("attaching ack callback to event"), e.push(this.ack(t.id))), this.connected ? p.apply(this, e) : this.receiveBuffer.push(e);}, l.prototype.ack = function (t) {var e = this,r = !1;return function () {if (!r) {r = !0;var o = i(arguments);c("sending ack %j", o), e.packet({ type: h(o) ? n.BINARY_ACK : n.ACK, id: t, data: o });}};}, l.prototype.onack = function (t) {var e = this.acks[t.id];"function" == typeof e ? (c("calling ack %s with %j", t.id, t.data), e.apply(this, t.data), delete this.acks[t.id]) : c("bad ack %s", t.id);}, l.prototype.onconnect = function () {this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered();}, l.prototype.emitBuffered = function () {var t;for (t = 0; t < this.receiveBuffer.length; t++) {p.apply(this, this.receiveBuffer[t]);}for (this.receiveBuffer = [], t = 0; t < this.sendBuffer.length; t++) {this.packet(this.sendBuffer[t]);}this.sendBuffer = [];}, l.prototype.ondisconnect = function () {c("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect");}, l.prototype.destroy = function () {if (this.subs) {for (var t = 0; t < this.subs.length; t++) {this.subs[t].destroy();}this.subs = null;}this.io.destroy(this);}, l.prototype.close = l.prototype.disconnect = function () {return this.connected && (c("performing disconnect (%s)", this.nsp), this.packet({ type: n.DISCONNECT })), this.destroy(), this.connected && this.onclose("io client disconnect"), this;}, l.prototype.compress = function (t) {return this.flags.compress = t, this;}, l.prototype.binary = function (t) {return this.flags.binary = t, this;};}, function (t, e) {t.exports = function (t, e, r) {return t.on(e, r), { destroy: function destroy() {t.removeListener(e, r);} };};}, function (t, e) {var r = [].slice;t.exports = function (t, e) {if ("string" == typeof e && (e = t[e]), "function" != typeof e) throw new Error("bind() requires a function");var n = r.call(arguments, 2);return function () {return e.apply(t, n.concat(r.call(arguments)));};};}, function (t, e, r) {var n = r(24),o = r(5),i = r(13),s = r(0)("socket.io-client");t.exports = e = c;var a = e.managers = {};function c(t, e) {"object" == typeof t && (e = t, t = void 0), e = e || {};var r,o = n(t),c = o.source,u = o.id,h = o.path,f = a[u] && h in a[u].nsps;return e.forceNew || e["force new connection"] || !1 === e.multiplex || f ? (s("ignoring socket cache for %s", c), r = i(c, e)) : (a[u] || (s("new io instance for %s", c), a[u] = i(c, e)), r = a[u]), o.query && !e.query && (e.query = o.query), r.socket(o.path, e);}e.protocol = o.protocol, e.connect = c, e.Manager = r(13), e.Socket = r(19);}, function (t, e, r) {t.exports = r(47);}, function (t, e, r) {var n = r(10),o = r(0)("socket.io-client:url");t.exports = function (t, e) {var r = t;e = e || "undefined" != typeof location && location, null == t && (t = e.protocol + "//" + e.host);"string" == typeof t && ("/" === t.charAt(0) && (t = "/" === t.charAt(1) ? e.protocol + t : e.host + t), /^(https?|wss?):\/\//.test(t) || (o("protocol-less url %s", t), t = void 0 !== e ? e.protocol + "//" + t : "https://" + t), o("parse %s", t), r = n(t));r.port || (/^(http|ws)$/.test(r.protocol) ? r.port = "80" : /^(http|ws)s$/.test(r.protocol) && (r.port = "443"));r.path = r.path || "/";var i = -1 !== r.host.indexOf(":") ? "[" + r.host + "]" : r.host;return r.id = r.protocol + "://" + i + ":" + r.port, r.href = r.protocol + "://" + i + (e && e.port === r.port ? "" : ":" + r.port), r;};}, function (t, e) {var r,n,o = t.exports = {};function i() {throw new Error("setTimeout has not been defined");}function s() {throw new Error("clearTimeout has not been defined");}function a(t) {if (r === setTimeout) return setTimeout(t, 0);if ((r === i || !r) && setTimeout) return r = setTimeout, setTimeout(t, 0);try {return r(t, 0);} catch (e) {try {return r.call(null, t, 0);} catch (e) {return r.call(this, t, 0);}}}!function () {try {r = "function" == typeof setTimeout ? setTimeout : i;} catch (t) {r = i;}try {n = "function" == typeof clearTimeout ? clearTimeout : s;} catch (t) {n = s;}}();var c,u = [],h = !1,f = -1;function p() {h && c && (h = !1, c.length ? u = c.concat(u) : f = -1, u.length && l());}function l() {if (!h) {var t = a(p);h = !0;for (var e = u.length; e;) {for (c = u, u = []; ++f < e;) {c && c[f].run();}f = -1, e = u.length;}c = null, h = !1, function (t) {if (n === clearTimeout) return clearTimeout(t);if ((n === s || !n) && clearTimeout) return n = clearTimeout, clearTimeout(t);try {n(t);} catch (e) {try {return n.call(null, t);} catch (e) {return n.call(this, t);}}}(t);}}function d(t, e) {this.fun = t, this.array = e;}function y() {}o.nextTick = function (t) {var e = new Array(arguments.length - 1);if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) {e[r - 1] = arguments[r];}u.push(new d(t, e)), 1 !== u.length || h || a(l);}, d.prototype.run = function () {this.fun.apply(null, this.array);}, o.title = "browser", o.browser = !0, o.env = {}, o.argv = [], o.version = "", o.versions = {}, o.on = y, o.addListener = y, o.once = y, o.off = y, o.removeListener = y, o.removeAllListeners = y, o.emit = y, o.prependListener = y, o.prependOnceListener = y, o.listeners = function (t) {return [];}, o.binding = function (t) {throw new Error("process.binding is not supported");}, o.cwd = function () {return "/";}, o.chdir = function (t) {throw new Error("process.chdir is not supported");}, o.umask = function () {return 0;};}, function (t, e, r) {function n(t) {var r;function n() {if (n.enabled) {var t = n,o = +new Date(),i = o - (r || o);t.diff = i, t.prev = r, t.curr = o, r = o;for (var s = new Array(arguments.length), a = 0; a < s.length; a++) {s[a] = arguments[a];}s[0] = e.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");var c = 0;s[0] = s[0].replace(/%([a-zA-Z%])/g, function (r, n) {if ("%%" === r) return r;c++;var o = e.formatters[n];if ("function" == typeof o) {var i = s[c];r = o.call(t, i), s.splice(c, 1), c--;}return r;}), e.formatArgs.call(t, s), (n.log || e.log || console.log.bind(console)).apply(t, s);}}return n.namespace = t, n.enabled = e.enabled(t), n.useColors = e.useColors(), n.color = function (t) {var r,n = 0;for (r in t) {n = (n << 5) - n + t.charCodeAt(r), n |= 0;}return e.colors[Math.abs(n) % e.colors.length];}(t), n.destroy = o, "function" == typeof e.init && e.init(n), e.instances.push(n), n;}function o() {var t = e.instances.indexOf(this);return -1 !== t && (e.instances.splice(t, 1), !0);}(e = t.exports = n.debug = n.default = n).coerce = function (t) {return t instanceof Error ? t.stack || t.message : t;}, e.disable = function () {e.enable("");}, e.enable = function (t) {var r;e.save(t), e.names = [], e.skips = [];var n = ("string" == typeof t ? t : "").split(/[\s,]+/),o = n.length;for (r = 0; r < o; r++) {n[r] && ("-" === (t = n[r].replace(/\*/g, ".*?"))[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")));}for (r = 0; r < e.instances.length; r++) {var i = e.instances[r];i.enabled = e.enabled(i.namespace);}}, e.enabled = function (t) {if ("*" === t[t.length - 1]) return !0;var r, n;for (r = 0, n = e.skips.length; r < n; r++) {if (e.skips[r].test(t)) return !1;}for (r = 0, n = e.names.length; r < n; r++) {if (e.names[r].test(t)) return !0;}return !1;}, e.humanize = r(27), e.instances = [], e.names = [], e.skips = [], e.formatters = {};}, function (t, e) {var r = 1e3,n = 60 * r,o = 60 * n,i = 24 * o,s = 365.25 * i;function a(t, e, r) {if (!(t < e)) return t < 1.5 * e ? Math.floor(t / e) + " " + r : Math.ceil(t / e) + " " + r + "s";}t.exports = function (t, e) {e = e || {};var c,u = typeof t;if ("string" === u && t.length > 0) return function (t) {if ((t = String(t)).length > 100) return;var e = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);if (!e) return;var a = parseFloat(e[1]);switch ((e[2] || "ms").toLowerCase()) {case "years":case "year":case "yrs":case "yr":case "y":return a * s;case "days":case "day":case "d":return a * i;case "hours":case "hour":case "hrs":case "hr":case "h":return a * o;case "minutes":case "minute":case "mins":case "min":case "m":return a * n;case "seconds":case "second":case "secs":case "sec":case "s":return a * r;case "milliseconds":case "millisecond":case "msecs":case "msec":case "ms":return a;default:return;}}(t);if ("number" === u && !1 === isNaN(t)) return e.long ? a(c = t, i, "day") || a(c, o, "hour") || a(c, n, "minute") || a(c, r, "second") || c + " ms" : function (t) {if (t >= i) return Math.round(t / i) + "d";if (t >= o) return Math.round(t / o) + "h";if (t >= n) return Math.round(t / n) + "m";if (t >= r) return Math.round(t / r) + "s";return t + "ms";}(t);throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t));};}, function (t, e, r) {var n = r(6),o = r(11),i = Object.prototype.toString,s = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob),a = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === i.call(File);e.deconstructPacket = function (t) {var e = [],r = t.data,i = t;return i.data = function t(e, r) {if (!e) return e;if (o(e)) {var i = { _placeholder: !0, num: r.length };return r.push(e), i;}if (n(e)) {for (var s = new Array(e.length), a = 0; a < e.length; a++) {s[a] = t(e[a], r);}return s;}if ("object" == typeof e && !(e instanceof Date)) {var s = {};for (var c in e) {s[c] = t(e[c], r);}return s;}return e;}(r, e), i.attachments = e.length, { packet: i, buffers: e };}, e.reconstructPacket = function (t, e) {return t.data = function t(e, r) {if (!e) return e;if (e && e._placeholder) return r[e.num];if (n(e)) for (var o = 0; o < e.length; o++) {e[o] = t(e[o], r);} else if ("object" == typeof e) for (var i in e) {e[i] = t(e[i], r);}return e;}(t.data, e), t.attachments = void 0, t;}, e.removeBlobs = function (t, e) {var r = 0,i = t;!function t(c, u, h) {if (!c) return c;if (s && c instanceof Blob || a && c instanceof File) {r++;var f = new FileReader();f.onload = function () {h ? h[u] = this.result : i = this.result, --r || e(i);}, f.readAsArrayBuffer(c);} else if (n(c)) for (var p = 0; p < c.length; p++) {t(c[p], p, c);} else if ("object" == typeof c && !o(c)) for (var l in c) {t(c[l], l, c);}}(i), r || e(i);};}, function (t, e, r) {"use strict";e.byteLength = function (t) {var e = u(t),r = e[0],n = e[1];return 3 * (r + n) / 4 - n;}, e.toByteArray = function (t) {for (var e, r = u(t), n = r[0], s = r[1], a = new i(function (t, e, r) {return 3 * (e + r) / 4 - r;}(0, n, s)), c = 0, h = s > 0 ? n - 4 : n, f = 0; f < h; f += 4) {e = o[t.charCodeAt(f)] << 18 | o[t.charCodeAt(f + 1)] << 12 | o[t.charCodeAt(f + 2)] << 6 | o[t.charCodeAt(f + 3)], a[c++] = e >> 16 & 255, a[c++] = e >> 8 & 255, a[c++] = 255 & e;}2 === s && (e = o[t.charCodeAt(f)] << 2 | o[t.charCodeAt(f + 1)] >> 4, a[c++] = 255 & e);1 === s && (e = o[t.charCodeAt(f)] << 10 | o[t.charCodeAt(f + 1)] << 4 | o[t.charCodeAt(f + 2)] >> 2, a[c++] = e >> 8 & 255, a[c++] = 255 & e);return a;}, e.fromByteArray = function (t) {for (var e, r = t.length, o = r % 3, i = [], s = 0, a = r - o; s < a; s += 16383) {i.push(h(t, s, s + 16383 > a ? a : s + 16383));}1 === o ? (e = t[r - 1], i.push(n[e >> 2] + n[e << 4 & 63] + "==")) : 2 === o && (e = (t[r - 2] << 8) + t[r - 1], i.push(n[e >> 10] + n[e >> 4 & 63] + n[e << 2 & 63] + "="));return i.join("");};for (var n = [], o = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, c = s.length; a < c; ++a) {n[a] = s[a], o[s.charCodeAt(a)] = a;}function u(t) {var e = t.length;if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");var r = t.indexOf("=");return -1 === r && (r = e), [r, r === e ? 0 : 4 - r % 4];}function h(t, e, r) {for (var o, i, s = [], a = e; a < r; a += 3) {o = (t[a] << 16 & 16711680) + (t[a + 1] << 8 & 65280) + (255 & t[a + 2]), s.push(n[(i = o) >> 18 & 63] + n[i >> 12 & 63] + n[i >> 6 & 63] + n[63 & i]);}return s.join("");}o["-".charCodeAt(0)] = 62, o["_".charCodeAt(0)] = 63;}, function (t, e) {e.read = function (t, e, r, n, o) {var i,s,a = 8 * o - n - 1,c = (1 << a) - 1,u = c >> 1,h = -7,f = r ? o - 1 : 0,p = r ? -1 : 1,l = t[e + f];for (f += p, i = l & (1 << -h) - 1, l >>= -h, h += a; h > 0; i = 256 * i + t[e + f], f += p, h -= 8) {;}for (s = i & (1 << -h) - 1, i >>= -h, h += n; h > 0; s = 256 * s + t[e + f], f += p, h -= 8) {;}if (0 === i) i = 1 - u;else {if (i === c) return s ? NaN : 1 / 0 * (l ? -1 : 1);s += Math.pow(2, n), i -= u;}return (l ? -1 : 1) * s * Math.pow(2, i - n);}, e.write = function (t, e, r, n, o, i) {var s,a,c,u = 8 * i - o - 1,h = (1 << u) - 1,f = h >> 1,p = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0,l = n ? 0 : i - 1,d = n ? 1 : -1,y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = h) : (s = Math.floor(Math.log(e) / Math.LN2), e * (c = Math.pow(2, -s)) < 1 && (s--, c *= 2), (e += s + f >= 1 ? p / c : p * Math.pow(2, 1 - f)) * c >= 2 && (s++, c /= 2), s + f >= h ? (a = 0, s = h) : s + f >= 1 ? (a = (e * c - 1) * Math.pow(2, o), s += f) : (a = e * Math.pow(2, f - 1) * Math.pow(2, o), s = 0)); o >= 8; t[r + l] = 255 & a, l += d, a /= 256, o -= 8) {;}for (s = s << o | a, u += o; u > 0; t[r + l] = 255 & s, l += d, s /= 256, u -= 8) {;}t[r + l - d] |= 128 * y;};}, function (t, e) {var r = {}.toString;t.exports = Array.isArray || function (t) {return "[object Array]" == r.call(t);};}, function (t, e, r) {t.exports = r(33), t.exports.parser = r(2);}, function (t, e, r) {var n = r(14),o = r(1),i = r(0)("engine.io-client:socket"),s = r(18),a = r(2),c = r(10),u = r(3);function h(t, e) {if (!(this instanceof h)) return new h(t, e);e = e || {}, t && "object" == typeof t && (e = t, t = null), t ? (t = c(t), e.hostname = t.host, e.secure = "https" === t.protocol || "wss" === t.protocol, e.port = t.port, t.query && (e.query = t.query)) : e.host && (e.hostname = c(e.host).host), this.secure = null != e.secure ? e.secure : "undefined" != typeof location && "https:" === location.protocol, e.hostname && !e.port && (e.port = this.secure ? "443" : "80"), this.agent = e.agent || !1, this.hostname = e.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = e.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = e.query || {}, "string" == typeof this.query && (this.query = u.decode(this.query)), this.upgrade = !1 !== e.upgrade, this.path = (e.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!e.forceJSONP, this.jsonp = !1 !== e.jsonp, this.forceBase64 = !!e.forceBase64, this.enablesXDR = !!e.enablesXDR, this.timestampParam = e.timestampParam || "t", this.timestampRequests = e.timestampRequests, this.transports = e.transports || ["polling", "websocket"], this.transportOptions = e.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = e.policyPort || 843, this.rememberUpgrade = e.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = e.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== e.perMessageDeflate && (e.perMessageDeflate || {}), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = e.pfx || null, this.key = e.key || null, this.passphrase = e.passphrase || null, this.cert = e.cert || null, this.ca = e.ca || null, this.ciphers = e.ciphers || null, this.rejectUnauthorized = void 0 === e.rejectUnauthorized || e.rejectUnauthorized, this.forceNode = !!e.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (e.extraHeaders && Object.keys(e.extraHeaders).length > 0 && (this.extraHeaders = e.extraHeaders), e.localAddress && (this.localAddress = e.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, this.open();}t.exports = h, h.priorWebsocketSuccess = !1, o(h.prototype), h.protocol = a.protocol, h.Socket = h, h.Transport = r(9), h.transports = r(14), h.parser = r(2), h.prototype.createTransport = function (t) {i('creating transport "%s"', t);var e = function (t) {var e = {};for (var r in t) {t.hasOwnProperty(r) && (e[r] = t[r]);}return e;}(this.query);e.EIO = a.protocol, e.transport = t;var r = this.transportOptions[t] || {};return this.id && (e.sid = this.id), new n[t]({ query: e, socket: this, agent: r.agent || this.agent, hostname: r.hostname || this.hostname, port: r.port || this.port, secure: r.secure || this.secure, path: r.path || this.path, forceJSONP: r.forceJSONP || this.forceJSONP, jsonp: r.jsonp || this.jsonp, forceBase64: r.forceBase64 || this.forceBase64, enablesXDR: r.enablesXDR || this.enablesXDR, timestampRequests: r.timestampRequests || this.timestampRequests, timestampParam: r.timestampParam || this.timestampParam, policyPort: r.policyPort || this.policyPort, pfx: r.pfx || this.pfx, key: r.key || this.key, passphrase: r.passphrase || this.passphrase, cert: r.cert || this.cert, ca: r.ca || this.ca, ciphers: r.ciphers || this.ciphers, rejectUnauthorized: r.rejectUnauthorized || this.rejectUnauthorized, perMessageDeflate: r.perMessageDeflate || this.perMessageDeflate, extraHeaders: r.extraHeaders || this.extraHeaders, forceNode: r.forceNode || this.forceNode, localAddress: r.localAddress || this.localAddress, requestTimeout: r.requestTimeout || this.requestTimeout, protocols: r.protocols || void 0, isReactNative: this.isReactNative });}, h.prototype.open = function () {var t;if (this.rememberUpgrade && h.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket")) t = "websocket";else {if (0 === this.transports.length) {var e = this;return void setTimeout(function () {e.emit("error", "No transports available");}, 0);}t = this.transports[0];}this.readyState = "opening";try {t = this.createTransport(t);} catch (t) {return this.transports.shift(), void this.open();}t.open(), this.setTransport(t);}, h.prototype.setTransport = function (t) {i("setting transport %s", t.name);var e = this;this.transport && (i("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = t, t.on("drain", function () {e.onDrain();}).on("packet", function (t) {e.onPacket(t);}).on("error", function (t) {e.onError(t);}).on("close", function () {e.onClose("transport close");});}, h.prototype.probe = function (t) {i('probing transport "%s"', t);var e = this.createTransport(t, { probe: 1 }),r = !1,n = this;function o() {if (n.onlyBinaryUpgrades) {var o = !this.supportsBinary && n.transport.supportsBinary;r = r || o;}r || (i('probe transport "%s" opened', t), e.send([{ type: "ping", data: "probe" }]), e.once("packet", function (o) {if (!r) if ("pong" === o.type && "probe" === o.data) {if (i('probe transport "%s" pong', t), n.upgrading = !0, n.emit("upgrading", e), !e) return;h.priorWebsocketSuccess = "websocket" === e.name, i('pausing current transport "%s"', n.transport.name), n.transport.pause(function () {r || "closed" !== n.readyState && (i("changing transport and sending upgrade packet"), p(), n.setTransport(e), e.send([{ type: "upgrade" }]), n.emit("upgrade", e), e = null, n.upgrading = !1, n.flush());});} else {i('probe transport "%s" failed', t);var s = new Error("probe error");s.transport = e.name, n.emit("upgradeError", s);}}));}function s() {r || (r = !0, p(), e.close(), e = null);}function a(r) {var o = new Error("probe error: " + r);o.transport = e.name, s(), i('probe transport "%s" failed because of error: %s', t, r), n.emit("upgradeError", o);}function c() {a("transport closed");}function u() {a("socket closed");}function f(t) {e && t.name !== e.name && (i('"%s" works - aborting "%s"', t.name, e.name), s());}function p() {e.removeListener("open", o), e.removeListener("error", a), e.removeListener("close", c), n.removeListener("close", u), n.removeListener("upgrading", f);}h.priorWebsocketSuccess = !1, e.once("open", o), e.once("error", a), e.once("close", c), this.once("close", u), this.once("upgrading", f), e.open();}, h.prototype.onOpen = function () {if (i("socket open"), this.readyState = "open", h.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause) {i("starting upgrade probes");for (var t = 0, e = this.upgrades.length; t < e; t++) {this.probe(this.upgrades[t]);}}}, h.prototype.onPacket = function (t) {if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (i('socket receive: type "%s", data "%s"', t.type, t.data), this.emit("packet", t), this.emit("heartbeat"), t.type) {case "open":this.onHandshake(JSON.parse(t.data));break;case "pong":this.setPing(), this.emit("pong");break;case "error":var e = new Error("server error");e.code = t.data, this.onError(e);break;case "message":this.emit("data", t.data), this.emit("message", t.data);} else i('packet received with socket readyState "%s"', this.readyState);}, h.prototype.onHandshake = function (t) {this.emit("handshake", t), this.id = t.sid, this.transport.query.sid = t.sid, this.upgrades = this.filterUpgrades(t.upgrades), this.pingInterval = t.pingInterval, this.pingTimeout = t.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));}, h.prototype.onHeartbeat = function (t) {clearTimeout(this.pingTimeoutTimer);var e = this;e.pingTimeoutTimer = setTimeout(function () {"closed" !== e.readyState && e.onClose("ping timeout");}, t || e.pingInterval + e.pingTimeout);}, h.prototype.setPing = function () {var t = this;clearTimeout(t.pingIntervalTimer), t.pingIntervalTimer = setTimeout(function () {i("writing ping packet - expecting pong within %sms", t.pingTimeout), t.ping(), t.onHeartbeat(t.pingTimeout);}, t.pingInterval);}, h.prototype.ping = function () {var t = this;this.sendPacket("ping", function () {t.emit("ping");});}, h.prototype.onDrain = function () {this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush();}, h.prototype.flush = function () {"closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (i("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));}, h.prototype.write = h.prototype.send = function (t, e, r) {return this.sendPacket("message", t, e, r), this;}, h.prototype.sendPacket = function (t, e, r, n) {if ("function" == typeof e && (n = e, e = void 0), "function" == typeof r && (n = r, r = null), "closing" !== this.readyState && "closed" !== this.readyState) {(r = r || {}).compress = !1 !== r.compress;var o = { type: t, data: e, options: r };this.emit("packetCreate", o), this.writeBuffer.push(o), n && this.once("flush", n), this.flush();}}, h.prototype.close = function () {if ("opening" === this.readyState || "open" === this.readyState) {this.readyState = "closing";var t = this;this.writeBuffer.length ? this.once("drain", function () {this.upgrading ? n() : e();}) : this.upgrading ? n() : e();}function e() {t.onClose("forced close"), i("socket closing - telling transport to close"), t.transport.close();}function r() {t.removeListener("upgrade", r), t.removeListener("upgradeError", r), e();}function n() {t.once("upgrade", r), t.once("upgradeError", r);}return this;}, h.prototype.onError = function (t) {i("socket error %j", t), h.priorWebsocketSuccess = !1, this.emit("error", t), this.onClose("transport error", t);}, h.prototype.onClose = function (t, e) {if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {i('socket close with reason: "%s"', t);clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", t, e), this.writeBuffer = [], this.prevBufferLen = 0;}}, h.prototype.filterUpgrades = function (t) {for (var e = [], r = 0, n = t.length; r < n; r++) {~s(this.transports, t[r]) && e.push(t[r]);}return e;};}, function (t, e) {try {t.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();} catch (e) {t.exports = !1;}}, function (t, e, r) {var n = r(8),o = r(15),i = r(1),s = r(4),a = r(0)("engine.io-client:polling-xhr");function c() {}function u(t) {if (o.call(this, t), this.requestTimeout = t.requestTimeout, this.extraHeaders = t.extraHeaders, "undefined" != typeof location) {var e = "https:" === location.protocol,r = location.port;r || (r = e ? 443 : 80), this.xd = "undefined" != typeof location && t.hostname !== location.hostname || r !== t.port, this.xs = t.secure !== e;}}function h(t) {this.method = t.method || "GET", this.uri = t.uri, this.xd = !!t.xd, this.xs = !!t.xs, this.async = !1 !== t.async, this.data = void 0 !== t.data ? t.data : null, this.agent = t.agent, this.isBinary = t.isBinary, this.supportsBinary = t.supportsBinary, this.enablesXDR = t.enablesXDR, this.requestTimeout = t.requestTimeout, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.extraHeaders = t.extraHeaders, this.create();}if (t.exports = u, t.exports.Request = h, s(u, o), u.prototype.supportsBinary = !0, u.prototype.request = function (t) {return (t = t || {}).uri = this.uri(), t.xd = this.xd, t.xs = this.xs, t.agent = this.agent || !1, t.supportsBinary = this.supportsBinary, t.enablesXDR = this.enablesXDR, t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized, t.requestTimeout = this.requestTimeout, t.extraHeaders = this.extraHeaders, new h(t);}, u.prototype.doWrite = function (t, e) {var r = "string" != typeof t && void 0 !== t,n = this.request({ method: "POST", data: t, isBinary: r }),o = this;n.on("success", e), n.on("error", function (t) {o.onError("xhr post error", t);}), this.sendXhr = n;}, u.prototype.doPoll = function () {a("xhr poll");var t = this.request(),e = this;t.on("data", function (t) {e.onData(t);}), t.on("error", function (t) {e.onError("xhr poll error", t);}), this.pollXhr = t;}, i(h.prototype), h.prototype.create = function () {var t = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized;var e = this.xhr = new n(t),r = this;try {a("xhr open %s: %s", this.method, this.uri), e.open(this.method, this.uri, this.async);try {if (this.extraHeaders) for (var o in e.setDisableHeaderCheck && e.setDisableHeaderCheck(!0), this.extraHeaders) {this.extraHeaders.hasOwnProperty(o) && e.setRequestHeader(o, this.extraHeaders[o]);}} catch (t) {}if ("POST" === this.method) try {this.isBinary ? e.setRequestHeader("Content-type", "application/octet-stream") : e.setRequestHeader("Content-type", "text/plain;charset=UTF-8");} catch (t) {}try {e.setRequestHeader("Accept", "*/*");} catch (t) {}"withCredentials" in e && (e.withCredentials = !0), this.requestTimeout && (e.timeout = this.requestTimeout), this.hasXDR() ? (e.onload = function () {r.onLoad();}, e.onerror = function () {r.onError(e.responseText);}) : e.onreadystatechange = function () {if (2 === e.readyState) try {var t = e.getResponseHeader("Content-Type");r.supportsBinary && "application/octet-stream" === t && (e.responseType = "arraybuffer");} catch (t) {}4 === e.readyState && (200 === e.status || 1223 === e.status ? r.onLoad() : setTimeout(function () {r.onError(e.status);}, 0));}, a("xhr data %s", this.data), e.send(this.data);} catch (t) {return void setTimeout(function () {r.onError(t);}, 0);}"undefined" != typeof document && (this.index = h.requestsCount++, h.requests[this.index] = this);}, h.prototype.onSuccess = function () {this.emit("success"), this.cleanup();}, h.prototype.onData = function (t) {this.emit("data", t), this.onSuccess();}, h.prototype.onError = function (t) {this.emit("error", t), this.cleanup(!0);}, h.prototype.cleanup = function (t) {if (void 0 !== this.xhr && null !== this.xhr) {if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = c : this.xhr.onreadystatechange = c, t) try {this.xhr.abort();} catch (t) {}"undefined" != typeof document && delete h.requests[this.index], this.xhr = null;}}, h.prototype.onLoad = function () {var t;try {var e;try {e = this.xhr.getResponseHeader("Content-Type");} catch (t) {}t = "application/octet-stream" === e && this.xhr.response || this.xhr.responseText;} catch (t) {this.onError(t);}null != t && this.onData(t);}, h.prototype.hasXDR = function () {return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR;}, h.prototype.abort = function () {this.cleanup();}, h.requestsCount = 0, h.requests = {}, "undefined" != typeof document) if ("function" == typeof attachEvent) attachEvent("onunload", p);else if ("function" == typeof addEventListener) {var f = "onpagehide" in self ? "pagehide" : "unload";addEventListener(f, p, !1);}function p() {for (var t in h.requests) {h.requests.hasOwnProperty(t) && h.requests[t].abort();}}}, function (t, e) {t.exports = Object.keys || function (t) {var e = [],r = Object.prototype.hasOwnProperty;for (var n in t) {r.call(t, n) && e.push(n);}return e;};}, function (t, e) {t.exports = function (t, e, r) {var n = t.byteLength;if (e = e || 0, r = r || n, t.slice) return t.slice(e, r);if (e < 0 && (e += n), r < 0 && (r += n), r > n && (r = n), e >= n || e >= r || 0 === n) return new ArrayBuffer(0);for (var o = new Uint8Array(t), i = new Uint8Array(r - e), s = e, a = 0; s < r; s++, a++) {i[a] = o[s];}return i.buffer;};}, function (t, e) {function r() {}t.exports = function (t, e, n) {var o = !1;return n = n || r, i.count = t, 0 === t ? e() : i;function i(t, r) {if (i.count <= 0) throw new Error("after called too many times");--i.count, t ? (o = !0, e(t), e = n) : 0 !== i.count || o || e(null, r);}};}, function (t, e) {
    /*! https://mths.be/utf8js v2.1.2 by @mathias */
    var r,n,o,i = String.fromCharCode;function s(t) {for (var e, r, n = [], o = 0, i = t.length; o < i;) {(e = t.charCodeAt(o++)) >= 55296 && e <= 56319 && o < i ? 56320 == (64512 & (r = t.charCodeAt(o++))) ? n.push(((1023 & e) << 10) + (1023 & r) + 65536) : (n.push(e), o--) : n.push(e);}return n;}function a(t, e) {if (t >= 55296 && t <= 57343) {if (e) throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value");return !1;}return !0;}function c(t, e) {return i(t >> e & 63 | 128);}function u(t, e) {if (0 == (4294967168 & t)) return i(t);var r = "";return 0 == (4294965248 & t) ? r = i(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (a(t, e) || (t = 65533), r = i(t >> 12 & 15 | 224), r += c(t, 6)) : 0 == (4292870144 & t) && (r = i(t >> 18 & 7 | 240), r += c(t, 12), r += c(t, 6)), r += i(63 & t | 128);}function h() {if (o >= n) throw Error("Invalid byte index");var t = 255 & r[o];if (o++, 128 == (192 & t)) return 63 & t;throw Error("Invalid continuation byte");}function f(t) {var e, i;if (o > n) throw Error("Invalid byte index");if (o == n) return !1;if (e = 255 & r[o], o++, 0 == (128 & e)) return e;if (192 == (224 & e)) {if ((i = (31 & e) << 6 | h()) >= 128) return i;throw Error("Invalid continuation byte");}if (224 == (240 & e)) {if ((i = (15 & e) << 12 | h() << 6 | h()) >= 2048) return a(i, t) ? i : 65533;throw Error("Invalid continuation byte");}if (240 == (248 & e) && (i = (7 & e) << 18 | h() << 12 | h() << 6 | h()) >= 65536 && i <= 1114111) return i;throw Error("Invalid UTF-8 detected");}t.exports = { version: "2.1.2", encode: function encode(t, e) {for (var r = !1 !== (e = e || {}).strict, n = s(t), o = n.length, i = -1, a = ""; ++i < o;) {a += u(n[i], r);}return a;}, decode: function decode(t, e) {var a = !1 !== (e = e || {}).strict;r = s(t), n = r.length, o = 0;for (var c, u = []; !1 !== (c = f(a));) {u.push(c);}return function (t) {for (var e, r = t.length, n = -1, o = ""; ++n < r;) {(e = t[n]) > 65535 && (o += i((e -= 65536) >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), o += i(e);}return o;}(u);} };}, function (t, e) {!function () {"use strict";for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = new Uint8Array(256), n = 0; n < t.length; n++) {r[t.charCodeAt(n)] = n;}e.encode = function (e) {var r,n = new Uint8Array(e),o = n.length,i = "";for (r = 0; r < o; r += 3) {i += t[n[r] >> 2], i += t[(3 & n[r]) << 4 | n[r + 1] >> 4], i += t[(15 & n[r + 1]) << 2 | n[r + 2] >> 6], i += t[63 & n[r + 2]];}return o % 3 == 2 ? i = i.substring(0, i.length - 1) + "=" : o % 3 == 1 && (i = i.substring(0, i.length - 2) + "=="), i;}, e.decode = function (t) {var e,n,o,i,s,a = .75 * t.length,c = t.length,u = 0;"=" === t[t.length - 1] && (a--, "=" === t[t.length - 2] && a--);var h = new ArrayBuffer(a),f = new Uint8Array(h);for (e = 0; e < c; e += 4) {n = r[t.charCodeAt(e)], o = r[t.charCodeAt(e + 1)], i = r[t.charCodeAt(e + 2)], s = r[t.charCodeAt(e + 3)], f[u++] = n << 2 | o >> 4, f[u++] = (15 & o) << 4 | i >> 2, f[u++] = (3 & i) << 6 | 63 & s;}return h;};}();}, function (t, e) {var r = void 0 !== r ? r : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder,n = function () {try {return 2 === new Blob(["hi"]).size;} catch (t) {return !1;}}(),o = n && function () {try {return 2 === new Blob([new Uint8Array([1, 2])]).size;} catch (t) {return !1;}}(),i = r && r.prototype.append && r.prototype.getBlob;function s(t) {return t.map(function (t) {if (t.buffer instanceof ArrayBuffer) {var e = t.buffer;if (t.byteLength !== e.byteLength) {var r = new Uint8Array(t.byteLength);r.set(new Uint8Array(e, t.byteOffset, t.byteLength)), e = r.buffer;}return e;}return t;});}function a(t, e) {e = e || {};var n = new r();return s(t).forEach(function (t) {n.append(t);}), e.type ? n.getBlob(e.type) : n.getBlob();}function c(t, e) {return new Blob(s(t), e || {});}"undefined" != typeof Blob && (a.prototype = Blob.prototype, c.prototype = Blob.prototype), t.exports = n ? o ? Blob : c : i ? a : void 0;}, function (t, e, r) {(function (e) {var n = r(15),o = r(4);t.exports = h;var i,s = /\n/g,a = /\\n/g;function c() {}function u() {return "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== e ? e : {};}function h(t) {if (n.call(this, t), this.query = this.query || {}, !i) {var e = u();i = e.___eio = e.___eio || [];}this.index = i.length;var r = this;i.push(function (t) {r.onData(t);}), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {r.script && (r.script.onerror = c);}, !1);}o(h, n), h.prototype.supportsBinary = !1, h.prototype.doClose = function () {this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), n.prototype.doClose.call(this);}, h.prototype.doPoll = function () {var t = this,e = document.createElement("script");this.script && (this.script.parentNode.removeChild(this.script), this.script = null), e.async = !0, e.src = this.uri(), e.onerror = function (e) {t.onError("jsonp poll error", e);};var r = document.getElementsByTagName("script")[0];r ? r.parentNode.insertBefore(e, r) : (document.head || document.body).appendChild(e), this.script = e, "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent) && setTimeout(function () {var t = document.createElement("iframe");document.body.appendChild(t), document.body.removeChild(t);}, 100);}, h.prototype.doWrite = function (t, e) {var r = this;if (!this.form) {var n,o = document.createElement("form"),i = document.createElement("textarea"),c = this.iframeId = "eio_iframe_" + this.index;o.className = "socketio", o.style.position = "absolute", o.style.top = "-1000px", o.style.left = "-1000px", o.target = c, o.method = "POST", o.setAttribute("accept-charset", "utf-8"), i.name = "d", o.appendChild(i), document.body.appendChild(o), this.form = o, this.area = i;}function u() {h(), e();}function h() {if (r.iframe) try {r.form.removeChild(r.iframe);} catch (t) {r.onError("jsonp polling iframe removal error", t);}try {var t = '<iframe src="javascript:0" name="' + r.iframeId + '">';n = document.createElement(t);} catch (t) {(n = document.createElement("iframe")).name = r.iframeId, n.src = "javascript:0";}n.id = r.iframeId, r.form.appendChild(n), r.iframe = n;}this.form.action = this.uri(), h(), t = t.replace(a, "\\\n"), this.area.value = t.replace(s, "\\n");try {this.form.submit();} catch (t) {}this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {"complete" === r.iframe.readyState && u();} : this.iframe.onload = u;};}).call(this, r(12));}, function (t, e, r) {(function (e) {var n,o,i = r(9),s = r(2),a = r(3),c = r(4),u = r(17),h = r(0)("engine.io-client:websocket");if ("undefined" != typeof WebSocket) n = WebSocket;else if ("undefined" != typeof self) n = self.WebSocket || self.MozWebSocket;else try {o = r(44);} catch (t) {}var f = n || o;function p(t) {t && t.forceBase64 && (this.supportsBinary = !1), this.perMessageDeflate = t.perMessageDeflate, this.usingBrowserWebSocket = n && !t.forceNode, this.protocols = t.protocols, this.usingBrowserWebSocket || (f = o), i.call(this, t);}t.exports = p, c(p, i), p.prototype.name = "websocket", p.prototype.supportsBinary = !0, p.prototype.doOpen = function () {if (this.check()) {var t = this.uri(),e = this.protocols,r = { agent: this.agent, perMessageDeflate: this.perMessageDeflate };r.pfx = this.pfx, r.key = this.key, r.passphrase = this.passphrase, r.cert = this.cert, r.ca = this.ca, r.ciphers = this.ciphers, r.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (r.headers = this.extraHeaders), this.localAddress && (r.localAddress = this.localAddress);try {this.ws = this.usingBrowserWebSocket && !this.isReactNative ? e ? new f(t, e) : new f(t) : new f(t, e, r);} catch (t) {return this.emit("error", t);}void 0 === this.ws.binaryType && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners();}}, p.prototype.addEventListeners = function () {var t = this;this.ws.onopen = function () {t.onOpen();}, this.ws.onclose = function () {t.onClose();}, this.ws.onmessage = function (e) {t.onData(e.data);}, this.ws.onerror = function (e) {t.onError("websocket error", e);};}, p.prototype.write = function (t) {var r = this;this.writable = !1;for (var n = t.length, o = 0, i = n; o < i; o++) {!function (t) {s.encodePacket(t, r.supportsBinary, function (o) {if (!r.usingBrowserWebSocket) {var i = {};if (t.options && (i.compress = t.options.compress), r.perMessageDeflate) ("string" == typeof o ? e.byteLength(o) : o.length) < r.perMessageDeflate.threshold && (i.compress = !1);}try {r.usingBrowserWebSocket ? r.ws.send(o) : r.ws.send(o, i);} catch (t) {h("websocket closed before onclose event");}--n || a();});}(t[o]);}function a() {r.emit("flush"), setTimeout(function () {r.writable = !0, r.emit("drain");}, 0);}}, p.prototype.onClose = function () {i.prototype.onClose.call(this);}, p.prototype.doClose = function () {void 0 !== this.ws && this.ws.close();}, p.prototype.uri = function () {var t = this.query || {},e = this.secure ? "wss" : "ws",r = "";return this.port && ("wss" === e && 443 !== Number(this.port) || "ws" === e && 80 !== Number(this.port)) && (r = ":" + this.port), this.timestampRequests && (t[this.timestampParam] = u()), this.supportsBinary || (t.b64 = 1), (t = a.encode(t)).length && (t = "?" + t), e + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + r + this.path + t;}, p.prototype.check = function () {return !(!f || "__initialize" in f && this.name === p.prototype.name);};}).call(this, r(7).Buffer);}, function (t, e) {}, function (t, e) {t.exports = function (t, e) {for (var r = [], n = (e = e || 0) || 0; n < t.length; n++) {r[n - e] = t[n];}return r;};}, function (t, e) {function r(t) {t = t || {}, this.ms = t.min || 100, this.max = t.max || 1e4, this.factor = t.factor || 2, this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0, this.attempts = 0;}t.exports = r, r.prototype.duration = function () {var t = this.ms * Math.pow(this.factor, this.attempts++);if (this.jitter) {var e = Math.random(),r = Math.floor(e * this.jitter * t);t = 0 == (1 & Math.floor(10 * e)) ? t - r : t + r;}return 0 | Math.min(t, this.max);}, r.prototype.reset = function () {this.attempts = 0;}, r.prototype.setMin = function (t) {this.ms = t;}, r.prototype.setMax = function (t) {this.max = t;}, r.prototype.setJitter = function (t) {this.jitter = t;};}, function (t, e, r) {"use strict";r.r(e);var n = { beforeCreate: function beforeCreate() {var _this = this;this.sockets || (this.sockets = {}), this.sockets.subscribe = function (t, e) {_this.$vueSocketIo.emitter.addListener(t, e, _this);}, this.sockets.unsubscribe = function (t) {_this.$vueSocketIo.emitter.removeListener(t, _this);};}, mounted: function mounted() {var _this2 = this;this.$options.sockets && Object.keys(this.$options.sockets).forEach(function (t) {"subscribe" !== t && "unsubscribe" !== t && _this2.$vueSocketIo.emitter.addListener(t, _this2.$options.sockets[t], _this2);});}, beforeDestroy: function beforeDestroy() {var _this3 = this;this.$options.sockets && Object.keys(this.$options.sockets).forEach(function (t) {_this3.$vueSocketIo.emitter.removeListener(t, _this3);});} };function o(t, e) {for (var r = 0; r < e.length; r++) {var n = e[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);}}var i = new (function () {function t() {!function (t, e) {if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");}(this, t), this.debug = !1, this.prefix = "%cVue-Socket.io: ";}var e, r, n;return e = t, (r = [{ key: "info", value: function value(t) {var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";this.debug && window.console.info(this.prefix + "%c".concat(t), "color: blue; font-weight: 600", "color: #333333", e);} }, { key: "error", value: function value() {var _window$console;this.debug && (_window$console = window.console).error.apply(_window$console, [this.prefix].concat(Array.prototype.slice.call(arguments)));} }, { key: "warn", value: function value() {var _window$console2;this.debug && (_window$console2 = window.console).warn.apply(_window$console2, [this.prefix].concat(Array.prototype.slice.call(arguments)));} }, { key: "event", value: function value(t) {var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";this.debug && window.console.info(this.prefix + "%c".concat(t), "color: blue; font-weight: 600", "color: #333333", e);} }]) && o(e.prototype, r), n && o(e, n), t;}())();function s(t, e) {for (var r = 0; r < e.length; r++) {var n = e[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);}}var a = function () {function t(e, r) {!function (t, e) {if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");}(this, t), this.io = e, this.register(), this.emitter = r;}var e, r, n;return e = t, (r = [{ key: "register", value: function value() {var _this4 = this;this.io.onevent = function (t) {var _t$data = _toArray(t.data),e = _t$data[0],r = _t$data.slice(1);1 === r.length && (r = r[0]), _this4.onEvent(e, r);}, t.staticEvents.forEach(function (t) {return _this4.io.on(t, function (e) {return _this4.onEvent(t, e);});});} }, { key: "onEvent", value: function value(t, e) {this.emitter.emit(t, e);} }]) && s(e.prototype, r), n && s(e, n), t;}();var c, u, h;function f(t, e) {for (var r = 0; r < e.length; r++) {var n = e[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);}}h = ["connect", "error", "disconnect", "reconnect", "reconnect_attempt", "reconnecting", "reconnect_error", "reconnect_failed", "connect_error", "connect_timeout", "connecting", "ping", "pong"], (u = "staticEvents") in (c = a) ? Object.defineProperty(c, u, { value: h, enumerable: !0, configurable: !0, writable: !0 }) : c[u] = h;var p = function () {function t() {var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};!function (t, e) {if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");}(this, t), i.info(e ? "Vuex adapter enabled" : "Vuex adapter disabled"), i.info(e.mutationPrefix ? "Vuex socket mutations enabled" : "Vuex socket mutations disabled"), i.info(e ? "Vuex socket actions enabled" : "Vuex socket actions disabled"), this.store = e.store, this.actionPrefix = e.actionPrefix ? e.actionPrefix : "SOCKET_", this.mutationPrefix = e.mutationPrefix, this.listeners = new Map();}var e, r, n;return e = t, (r = [{ key: "addListener", value: function value(t, e, r) {if ("function" != typeof e) throw new Error("callback must be a function");this.listeners.has(t) || this.listeners.set(t, []), this.listeners.get(t).push({ callback: e, component: r }), i.info("#".concat(t, " subscribe, component: ").concat(r.$options.name));} }, { key: "removeListener", value: function value(t, e) {if (this.listeners.has(t)) {var _r = this.listeners.get(t).filter(function (t) {return t.component !== e;});_r.length > 0 ? this.listeners.set(t, _r) : this.listeners.delete(t), i.info("#".concat(t, " unsubscribe, component: ").concat(e.$options.name));}} }, { key: "emit", value: function value(t, e) {this.listeners.has(t) && (i.info("Broadcasting: #".concat(t, ", Data:"), e), this.listeners.get(t).forEach(function (t) {t.callback.call(t.component, e);})), "ping" !== t && "pong" !== t && this.dispatchStore(t, e);} }, { key: "dispatchStore", value: function value(t, e) {if (this.store && this.store._actions) {var _r2 = this.actionPrefix + t;for (var _t in this.store._actions) {_t.split("/").pop() === _r2 && (i.info("Dispatching Action: ".concat(_t, ", Data:"), e), this.store.dispatch(_t, e));}if (this.mutationPrefix) {var _r3 = this.mutationPrefix + t;for (var _t2 in this.store._mutations) {_t2.split("/").pop() === _r3 && (i.info("Commiting Mutation: ".concat(_t2, ", Data:"), e), this.store.commit(_t2, e));}}}} }]) && f(e.prototype, r), n && f(e, n), t;}();var l = r(22),d = r.n(l);function y(t, e) {for (var r = 0; r < e.length; r++) {var n = e[r];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);}}r.d(e, "default", function () {return g;});var g = function () {function t(_ref) {var e = _ref.connection,r = _ref.vuex,n = _ref.debug,o = _ref.options;!function (t, e) {if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");}(this, t), i.debug = n, this.io = this.connect(e, o), this.emitter = new p(r), this.listener = new a(this.io, this.emitter);}var e, r, o;return e = t, (r = [{ key: "install", value: function value(t) {t.prototype.$socket = this.io, t.prototype.$vueSocketIo = this, t.mixin(n), i.info("Vue-Socket.io plugin enabled");} }, { key: "connect", value: function value(t, e) {if (t && "object" == typeof t) return i.info("Received socket.io-client instance"), t;if ("string" == typeof t) return i.info("Received connection string"), this.io = d()(t, e);throw new Error("Unsupported connection type");} }]) && y(e.prototype, r), o && y(e, o), t;}();}]).default;});
});

define('app.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){

require('./common/runtime.js')
require('./common/vendor.js')
require('./common/main.js')
});
require('app.js');

__wxRoute = 'components/HM-messages/HM-messages';__wxRouteBegin = true;__wxAppCurrentFile__ = 'components/HM-messages/HM-messages.js';

define('components/HM-messages/HM-messages.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["components/HM-messages/HM-messages"], {

  /***/"./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=script&lang=js&":
  /*!***************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
                                                                                                                                                                                                                                                                                                                                   !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/components/HM-messages/HM-messages.vue?vue&type=script&lang=js& ***!

  /*! no static exports found */
  /***/function node_modulesBabelLoaderLibIndexJsNode_modulesDcloudioVueCliPluginUniPackagesWebpackPreprocessLoaderIndexJsNode_modulesDcloudioWebpackUniMpLoaderLibScriptJsNode_modulesVueLoaderLibIndexJsFAppComponentsHMMessagesHMMessagesVueVueTypeScriptLangJs(module, exports, __webpack_require__) {

    "use strict";
    /* WEBPACK VAR INJECTION */(function (uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      //
      var _default =
      {
        name: "HM-messages",
        data: function data() {
          return {
            isTransparent: false,
            isTransparentH5: false,
            isStatus: false,
            isShow: false,
            content: '',
            icon: 'none',
            background: '',
            closeButton: false,
            closeButtonColor: '',
            fontColor: '',
            iconColor: '',
            textAlign: '',
            data: null };

        },
        mounted: function mounted() {
          this.$emit('complete');
        },
        methods: {
          clickMessage: function clickMessage() {
            this.$emit('clickMessage', this.data);
          },
          Timer: function Timer() {},
          show: function show(content, Setting) {var _this = this;
            if (!content || typeof content != "string") {
              console.log('HM-messages: 组件方法调用错误,请检查方法参数', " at components\\HM-messages\\HM-messages.vue:43");
              return;
            }
            this.checkTitleNView(function () {
              _this.Timer && clearTimeout(_this.Timer); //清除计时器
              var iconColorArray = {
                'remind': '#5a89ff',
                'error': '#ef6160',
                'danger': '#ff0000',
                'success': '#0ec469',
                'disable': '#8c56a0',
                'help': '#5fb5f5' };

              var defaultSetting = {
                icon: 'remind',
                content: content,
                duration: 2000,
                background: 'rgba(238,238,238,0.8)',
                closeButton: false,
                closeButtonColor: "#555555",
                iconColor: iconColorArray['remind'],
                fontColor: "#555555",
                textAlign: "flex-start",
                data: null };

              if (Setting && !Setting.hasOwnProperty('iconColor') && Setting.hasOwnProperty('icon')) {
                Setting.iconColor = iconColorArray[Setting.icon];
              }
              Setting = Setting ? _this.extend(defaultSetting, Setting) : defaultSetting;
              if (_this.isShow) {
                _this.close();
                setTimeout(function () {
                  _this.setSetting(Setting);
                }, 150);

              } else {
                _this.setSetting(Setting);
              }
            });

          },
          checkTitleNView: function checkTitleNView(fun) {var _this2 = this;

            var titleNView = plus.webview.getTopWebview().getStyle().titleNView;
            if (!titleNView.type)
            {
              this.isStatus = true;
              fun();
            } else
            if (titleNView.type == 'transparent')
            {
              this.isStatus = true;
              uni.createSelectorQuery().selectViewport().scrollOffset(function (res) {
                if (res.scrollTop > 0)
                {
                  _this2.isTransparent = true;
                } else
                {
                  _this2.isStatus = true;
                  _this2.isTransparent = false;
                }
                fun();
              }).exec();
            } else
            {
              fun();
            }



























          },
          setSetting: function setSetting(Setting) {var _this3 = this;
            this.content = Setting.content;
            this.icon = Setting.icon;
            this.background = Setting.background;
            this.closeButton = Setting.closeButton;
            this.closeButtonColor = Setting.closeButtonColor;
            this.fontColor = Setting.fontColor;
            this.iconColor = Setting.iconColor;
            this.textAlign = Setting.textAlign;
            this.data = Setting.data;
            this.isShow = true;
            if (Setting.duration > 0) {
              this.Timer = setTimeout(function () {
                _this3.close();
              }, Setting.duration);
            }
          },
          close: function close() {
            this.isShow = false;
            this.Timer && clearTimeout(this.Timer); //清除计时器
          },
          extend: function extend(destination, source) {
            for (var property in source) {
              destination[property] = source[property];
            }
            return destination;
          } } };exports.default = _default;
      /* WEBPACK VAR INJECTION */}).call(this, __webpack_require__( /*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */"./node_modules/@dcloudio/uni-app-plus/dist/index.js")["default"]);

    /***/},

  /***/"./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=style&index=0&lang=css&":
  /*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
                                                                                                                                                                                                                                                                                                                                                                                                                                     !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/components/HM-messages/HM-messages.vue?vue&type=style&index=0&lang=css& ***!
                                                                                                                                                                                                                                                                                                                                                                                                                                     \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
  /*! no static exports found */
  /***/function node_modulesMiniCssExtractPluginDistLoaderJsNode_modulesDcloudioVueCliPluginUniPackagesWebpackPreprocessLoaderIndexJsNode_modulesCssLoaderIndexJsNode_modulesVueLoaderLibLoadersStylePostLoaderJsNode_modulesPostcssLoaderSrcIndexJsNode_modulesVueLoaderLibIndexJsFAppComponentsHMMessagesHMMessagesVueVueTypeStyleIndex0LangCss(module, exports, __webpack_require__) {

    // extracted by mini-css-extract-plugin

    /***/},

  /***/"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages&":
  /*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
                                                                                                                                                                                                                                                                                                                                                                            !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/components/HM-messages/HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages& ***!

  /*! exports provided: render, staticRenderFns */
  /***/function node_modulesVueLoaderLibLoadersTemplateLoaderJsNode_modulesDcloudioVueCliPluginUniPackagesWebpackPreprocessLoaderIndexJsNode_modulesDcloudioWebpackUniMpLoaderLibTemplateJsNode_modulesVueLoaderLibIndexJsFAppComponentsHMMessagesHMMessagesVueVueTypeTemplateId5330a5f4NameHMMessages(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "render", function () {return render;});
    /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "staticRenderFns", function () {return staticRenderFns;});
    var render = function render() {
      var _vm = this;
      var _h = _vm.$createElement;
      var _c = _vm._self._c || _h;
    };
    var staticRenderFns = [];
    render._withStripped = true;



    /***/},

  /***/"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue":
  /*!*********************************************************!*\
                                                                   !*** F:/app/物联网/components/HM-messages/HM-messages.vue ***!
                                                                   \*********************************************************/
  /*! no static exports found */
  /***/function FAppComponentsHMMessagesHMMessagesVue(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    __webpack_require__.r(__webpack_exports__);
    /* harmony import */var _HM_messages_vue_vue_type_template_id_5330a5f4_name_HM_messages___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages& */"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages&");
    /* harmony import */var _HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./HM-messages.vue?vue&type=script&lang=js& */"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=script&lang=js&");
    /* harmony reexport (unknown) */for (var __WEBPACK_IMPORT_KEY__ in _HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) {if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {__webpack_require__.d(__webpack_exports__, key, function () {return _HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key];});})(__WEBPACK_IMPORT_KEY__);}
    /* harmony import */var _HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./HM-messages.vue?vue&type=style&index=0&lang=css& */"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=style&index=0&lang=css&");
    /* harmony import */var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */"./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






    /* normalize component */

    var component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
    _HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
    _HM_messages_vue_vue_type_template_id_5330a5f4_name_HM_messages___WEBPACK_IMPORTED_MODULE_0__["render"],
    _HM_messages_vue_vue_type_template_id_5330a5f4_name_HM_messages___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
    false,
    null,
    null,
    null);



    /* hot reload */
    if (false) {var api;}
    component.options.__file = "F:/app/物联网/components/HM-messages/HM-messages.vue";
    /* harmony default export */__webpack_exports__["default"] = component.exports;

    /***/},

  /***/"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=script&lang=js&":
  /*!**********************************************************************************!*\
                                                                                            !*** F:/app/物联网/components/HM-messages/HM-messages.vue?vue&type=script&lang=js& ***!
                                                                                            \**********************************************************************************/
  /*! no static exports found */
  /***/function FAppComponentsHMMessagesHMMessagesVueVueTypeScriptLangJs(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    __webpack_require__.r(__webpack_exports__);
    /* harmony import */var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./HM-messages.vue?vue&type=script&lang=js& */"./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=script&lang=js&");
    /* harmony import */var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
    /* harmony reexport (unknown) */for (var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) {if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {__webpack_require__.d(__webpack_exports__, key, function () {return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key];});})(__WEBPACK_IMPORT_KEY__);}
    /* harmony default export */__webpack_exports__["default"] = _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a;

    /***/},

  /***/"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=style&index=0&lang=css&":
  /*!******************************************************************************************!*\
                                                                                                    !*** F:/app/物联网/components/HM-messages/HM-messages.vue?vue&type=style&index=0&lang=css& ***!
                                                                                                    \******************************************************************************************/
  /*! no static exports found */
  /***/function FAppComponentsHMMessagesHMMessagesVueVueTypeStyleIndex0LangCss(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    __webpack_require__.r(__webpack_exports__);
    /* harmony import */var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./HM-messages.vue?vue&type=style&index=0&lang=css& */"./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=style&index=0&lang=css&");
    /* harmony import */var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
    /* harmony reexport (unknown) */for (var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) {if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {__webpack_require__.d(__webpack_exports__, key, function () {return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key];});})(__WEBPACK_IMPORT_KEY__);}
    /* harmony default export */__webpack_exports__["default"] = _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a;

    /***/},

  /***/"F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages&":
  /*!*********************************************************************************************************!*\
                                                                                                                   !*** F:/app/物联网/components/HM-messages/HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages& ***!
                                                                                                                   \*********************************************************************************************************/
  /*! exports provided: render, staticRenderFns */
  /***/function FAppComponentsHMMessagesHMMessagesVueVueTypeTemplateId5330a5f4NameHMMessages(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    __webpack_require__.r(__webpack_exports__);
    /* harmony import */var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_template_id_5330a5f4_name_HM_messages___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages& */"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue?vue&type=template&id=5330a5f4&name=HM-messages&");
    /* harmony reexport (safe) */__webpack_require__.d(__webpack_exports__, "render", function () {return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_template_id_5330a5f4_name_HM_messages___WEBPACK_IMPORTED_MODULE_0__["render"];});

    /* harmony reexport (safe) */__webpack_require__.d(__webpack_exports__, "staticRenderFns", function () {return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_HM_messages_vue_vue_type_template_id_5330a5f4_name_HM_messages___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"];});



    /***/} }]);


;(global["webpackJsonp"] = global["webpackJsonp"] || []).push([
'components/HM-messages/HM-messages-create-component',
{
  'components/HM-messages/HM-messages-create-component': function componentsHMMessagesHMMessagesCreateComponent(module, exports, __webpack_require__) {
    __webpack_require__('./node_modules/@dcloudio/uni-app-plus/dist/index.js')['createComponent'](__webpack_require__("F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue"));
  } },

[['components/HM-messages/HM-messages-create-component']]]);
});
require('components/HM-messages/HM-messages.js');

__wxRoute = 'pages/index/index';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/index/index.js';

define('pages/index/index.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/index/index"],{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\pages\\index\\index.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/pages/index/index.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;



























var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ "./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var HMmessages = function HMmessages() {return __webpack_require__.e(/*! import() | components/HM-messages/HM-messages */ "components/HM-messages/HM-messages").then(__webpack_require__.bind(null, /*! @/components/HM-messages/HM-messages.vue */ "F:\\app\\物联网\\components\\HM-messages\\HM-messages.vue"));};var _default = { components: { HMmessages: HMmessages }, data: function data() {return { user: '', pwd: '', key: '', message: '', middle: false };}, created: function created() {}, onLoad: function onLoad() {var _this = this;this.$socket.emit('key', '');this.sockets.subscribe('key', function (data) {_this.key = data;});this.sockets.subscribe('message', function (data) {_this.msg(data);});this.sockets.subscribe('msg', function (data) {console.log(data, " at pages\\index\\index.vue:54");data = JSON.parse(data);_this.msg(data.msg, data.type);
    });
  },
  methods: {
    onKeyUser: function onKeyUser(e) {
      this.user = e.detail.value;
    },
    onKeyPwd: function onKeyPwd(e) {
      this.pwd = e.detail.value;
    },
    login: function login() {
      if (this.user == '' || this.pwd == '') {
        return this.msg('账号密码不能为空', 'error');
      }
      var that = this;
      var encryptor = new JSEncrypt(); // 新建JSEncrypt对象
      var publicKey = this.key;
      console.log(that.$crypto.MD5(that.pwd).toString(), " at pages\\index\\index.vue:73");
      encryptor.setPublicKey(publicKey); // 设置公钥
      var rsaPwd = encryptor.encrypt(that.$crypto.MD5(that.pwd).toString()); // 对需要加密的数据进行加密
      // var rsaPwd = this.$rsaCrypto(publicKey,that.pwd)
      this.$socket.emit('login', { pwd: rsaPwd, user: this.user });
    },
    msg: function msg(data, type) {
      switch (type) {
        case 'remind':
          this.HMmessages.show(data, { data: { test: 'test' } });
          break;
        case 'error':
          this.HMmessages.show(data, { icon: type });
          break;
        case 'danger':
          this.HMmessages.show(data, { icon: type });
          break;
        case 'success':
          this.HMmessages.show(data, { icon: type });
          break;
        case 'disable':
          this.HMmessages.show(data, { icon: type });
          break;
        case 'help':
          this.HMmessages.show(data, { icon: type });
          break;
        case 'fontColor':
          this.HMmessages.show(data, { icon: 'success', fontColor: "#ff0000" });
          break;
        case 'iconColor':
          this.HMmessages.show(data, { icon: 'success', iconColor: "#7c2491" });
          break;
        case 'background':
          this.HMmessages.show(data, { icon: 'success', background: "rgba(255,255,225,.8)" });
          break;
        case 'closeButtonColor':
          this.HMmessages.show(data, { icon: 'success', closeButton: true, closeButtonColor: "#3388ff", duration: 0 });
          break;
        case 'noIcon':
          this.HMmessages.show(data, { icon: 'none' });
          break;
        case 'closeButton':
          this.HMmessages.show(data, { icon: 'success', closeButton: true, duration: 0 });
          break;
        case 'forever':
          this.HMmessages.show(data, { icon: 'success', duration: 0 });
          break;
        case 'close':
          this.HMmessages.close();
          break;
        case 'center':
          this.HMmessages.show(data, { icon: 'none', textAlign: 'center' });
          break;}

    },
    clickMessage: function clickMessage() {
      this.HMmessages.close();
    } } };exports.default = _default;

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\pages\\index\\index.vue?vue&type=style&index=0&lang=css&":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/pages/index/index.vue?vue&type=style&index=0&lang=css& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\pages\\index\\index.vue?vue&type=template&id=00dea234&":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!F:/app/物联网/pages/index/index.vue?vue&type=template&id=00dea234& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  if (!_vm._isMounted) {
    _vm.e0 = function($event) {
      _vm.HMmessages = _vm.$refs.HMmessages
    }
  }
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "F:\\app\\物联网\\pages\\index\\index.vue":
/*!****************************************!*\
  !*** F:/app/物联网/pages/index/index.vue ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_00dea234___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=00dea234& */ "F:\\app\\物联网\\pages\\index\\index.vue?vue&type=template&id=00dea234&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "F:\\app\\物联网\\pages\\index\\index.vue?vue&type=script&lang=js&");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.vue?vue&type=style&index=0&lang=css& */ "F:\\app\\物联网\\pages\\index\\index.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_00dea234___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_00dea234___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "F:/app/物联网/pages/index/index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "F:\\app\\物联网\\pages\\index\\index.vue?vue&type=script&lang=js&":
/*!*****************************************************************!*\
  !*** F:/app/物联网/pages/index/index.vue?vue&type=script&lang=js& ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\pages\\index\\index.vue?vue&type=script&lang=js&");
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "F:\\app\\物联网\\pages\\index\\index.vue?vue&type=style&index=0&lang=css&":
/*!*************************************************************************!*\
  !*** F:/app/物联网/pages/index/index.vue?vue&type=style&index=0&lang=css& ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css& */ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\pages\\index\\index.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "F:\\app\\物联网\\pages\\index\\index.vue?vue&type=template&id=00dea234&":
/*!***********************************************************************!*\
  !*** F:/app/物联网/pages/index/index.vue?vue&type=template&id=00dea234& ***!
  \***********************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_00dea234___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=00dea234& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib/index.js?!F:\\app\\物联网\\pages\\index\\index.vue?vue&type=template&id=00dea234&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_00dea234___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_00dea234___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

},[["F:\\app\\物联网\\main.js?{\"page\":\"pages%2Findex%2Findex\"}","common/runtime","common/vendor"]]]);
});
require('pages/index/index.js');
;(function(global) {
    __uni_launch_ready(function() {
        var entryPagePath = __wxConfig.entryPagePath.replace('.html', '')
        if (entryPagePath.indexOf('/') !== 0) {
            entryPagePath = '/' + entryPagePath
        }
        wx.navigateTo({
            url: entryPagePath,
            query: {},
            openType: 'appLaunch',
            webviewId: 1
        })
        __wxConfig.__ready__ = true
    })
})(this);

